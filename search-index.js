var searchIndex = JSON.parse('{\
"api":{"doc":"","t":"DLLLLLLLLLLALLLLCAMLLLALLLLLALNDNENDNDNGNDLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMDLLLLFFLMMLLFLLLLLLLLLLOOLLLLLLLLLLFFLFFFFFFFLLLLLLLLLLFLLLLLLLLLFFFLADDDDDDDDDDDDDDDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMAMMMLMMMAMMLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDNNDEDDDDDNNDDNDNDDDDDNNNNNDNNRDDDDDDNNNNNDNNDEDDDDNDDDDDDDDDDEDNDNNNNNNNNNNDDNNNNDDAMMMALLLAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAMMMMMMLLLMMLMMLLMMMMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAALLLMMMMAAMMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMLMAMMMMMMMLMMLLLMMMAAMAMMMAAMMMMMMMMMMMMMMMLLLMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLDMMLLLLLMMMLMMMMLLMMLLLMMMMMMMLLLMMMMMMMMMLLLLMMMMLNELLLLLLLLLLLLLLLLLLLFNNNNENLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLMLLLLLLLLLLLLLLIDLMLLLLLLLLLLLKKMLLLLLLMLMLLLLLMLLLLLLNNNNENNLLLLLLLLLLLLLLLLLLLNELLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLIDLMLLLLLLLLLLLKMLLLLLLMLMLLLLLMLLLLLLDDDMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLDDDDDDDDDDDNDNEDDNDDENNDDDDNDDDNNRDDDDDDDDDEDDDDEDDDDDDDDDDDMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMALLLMMLLLMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMAAMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMAAAMMMMMMLMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLMMMMLLLLLLLLLLLLLLMAAMALMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLMLLLLLLLLLLLLLLLIDLMKLLLLLLLLLLLMLLLLLLMLMLLLLKLMLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLLIDLMLLLLLLLLLLLMLLLLLLMLMLLLLLMKLLLLLLDLLLLLLLLLLLMLLLLLLLLLLLLLLIDQLMKLLLLLLLLLLLKMLLLLLLMLMLLLLLMLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLLLIDLMLLLLLLLLLLLMLLLLLKLMLMLLLLLMLLLLKLLNELLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIDLMKKKLLLLLLLKKLLLLMLLLLLLMLMLLLLKKLMLLLLLLNNNENLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLIDLMLLLLLLLLLLLKMLLLLLLMLMLLLLLMLLLLLLNENLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMAMMMMMMMMMMMAAMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLIDLMLLLLLLLLLLLKMLLLLLLMLMLLLLLMLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNELLLLLLLLLLLLLLLLLLL","n":["DecodeError","as_error_source","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","from","from_ref","greptime_proto","helper","inner","into","into_request","into_request","prom_store","to_owned","to_string","try_from","try_into","type_id","v1","vzip","ConvertColumnDefaultConstraint","ConvertColumnDefaultConstraintSnafu","Err","Error","IntoColumnDataType","IntoColumnDataTypeSnafu","InvalidColumnDefaultConstraint","InvalidColumnDefaultConstraintSnafu","Ok","Result","UnknownColumnDataType","UnknownColumnDataTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","column","column","datatype","debug_fmt","description","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","next","source","status_code","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","column","column","datatype","error","from","location","location","location","location","source","source","ColumnDataTypeWrapper","binary_datatype","boolean_datatype","borrow","borrow_mut","convert_i128_to_interval","convert_to_pb_decimal128","datatype","datatype","datatype_ext","date_datatype","datetime_datatype","ddl_request_type","decimal128_datatype","duration_microsecond_datatype","duration_millisecond_datatype","duration_nanosecond_datatype","duration_second_datatype","eq","float32_datatype","float64_datatype","fmt","from","impl_column_type_functions","impl_column_type_functions_with_snake","int16_datatype","int32_datatype","int64_datatype","int8_datatype","interval_day_time_datatype","interval_month_day_nano_datatype","interval_year_month_datatype","into","into_request","into_request","is_column_type_value_eq","is_semantic_type_eq","new","pb_value_to_value_ref","pb_values_to_values","pb_values_to_vector_ref","proto_value_type","push_vals","query_request_type","request_type","string_datatype","time_microsecond_datatype","time_millisecond_datatype","time_nanosecond_datatype","time_second_datatype","timestamp_microsecond_datatype","timestamp_millisecond_datatype","timestamp_nanosecond_datatype","timestamp_second_datatype","to_parts","to_proto_value","try_from","try_from","try_into","try_new","type_id","uint16_datatype","uint32_datatype","uint64_datatype","uint8_datatype","value_to_grpc_value","values_with_capacity","vectors_to_rows","vzip","remote","Chunk","ChunkedReadResponse","ChunkedSeries","Exemplar","Label","LabelMatcher","Labels","MetricMetadata","Query","QueryResult","ReadHints","ReadRequest","ReadResponse","Sample","TimeSeries","WriteRequest","accepted_response_types","accepted_response_types","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","chunk","chunked_series","chunks","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end_ms","end_timestamp_ms","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exemplars","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","func","grouping","help","hints","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","label_matcher","labels","labels","labels","labels","matchers","max_time_ms","metadata","metric_family_name","metric_metadata","min_time_ms","name","name","push_accepted_response_types","queries","query_index","range_ms","read_request","results","samples","set_type","set_type","set_type","start_ms","start_timestamp_ms","step_ms","timeseries","timeseries","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","value","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Encoding","Unknown","Xor","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","Eq","Neq","Nre","Re","Type","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","Counter","Gauge","Gaugehistogram","Histogram","Info","MetricType","Stateset","Summary","Unknown","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","ResponseType","Samples","StreamedXorChunks","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","AddColumn","AddColumnLocation","AddColumns","AffectedRows","AlterExpr","AuthHeader","Basic","Binary","Boolean","Column","ColumnDataType","ColumnDataTypeExtension","ColumnDef","ColumnSchema","CreateDatabaseExpr","CreateTableExpr","Date","Datetime","DdlRequest","Decimal128","Decimal128","DecimalTypeExtension","Delete","DeleteRequest","DeleteRequests","DropColumn","DropColumns","DropTableExpr","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Field","FlightMetadata","Float32","Float64","GREPTIME_GRPC_DESC","GreptimeRequest","GreptimeResponse","HealthCheckRequest","HealthCheckResponse","InsertRequest","InsertRequests","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalMonthDayNano","IntervalYearMonth","Mutation","OpType","PromInstantQuery","PromRangeQuery","PromqlRequest","PromqlResponse","Put","QueryRequest","RenameTable","RequestHeader","ResponseHeader","Row","RowDeleteRequest","RowDeleteRequests","RowInsertRequest","RowInsertRequests","Rows","SemanticType","Status","String","TableId","Tag","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","Timestamp","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","Token","TruncateTableExpr","Uint16","Uint32","Uint64","Uint8","Value","WalEntry","add_column_location","add_columns","affected_rows","after_column_name","alter_expr","as_str_name","as_str_name","as_str_name","auth_header","auth_scheme","authorization","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_name","catalog_name","catalog_name","catalog_name","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column","column_data_type_extension","column_def","column_def","column_defs","column_name","column_name","columns","comment","compare","compare","compare","create_if_not_exists","create_if_not_exists","data_type","data_type","database_name","datatype","datatype","datatype","datatype","datatype_extension","datatype_extension","datatype_extension","days","dbname","ddl_request","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_constraint","deletes","deletes","desc","deserialize","drop_columns","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_msg","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","greptime_database_client","greptime_database_server","greptime_request","greptime_response","hash","hash","hash","header","header","header","header","health_check_client","health_check_server","hi","id","index","inserts","inserts","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_nullable","is_valid","is_valid","is_valid","key_columns","kind","lo","location","location_type","location_type","meta","months","mutations","name","name","nanoseconds","new_table_name","null_mask","op_type","op_type","options","partial_cmp","partial_cmp","partial_cmp","password","precision","primary_keys","prometheus_gateway_client","prometheus_gateway_server","promql","promql_request","query","query","query","query_request","region","request","response","row_count","row_count","rows","rows","rows","rows","scale","schema","schema","schema_name","schema_name","schema_name","schema_name","semantic_type","semantic_type","semantic_type","semantic_type","semantic_type","semantic_type","sequence","serialize","set_data_type","set_datatype","set_datatype","set_location_type","set_op_type","set_semantic_type","set_semantic_type","set_semantic_type","start","status","status_code","step","table_id","table_id","table_id","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_options","time","time_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","tracing_context","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_ext","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","value","value","value_data","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","After","First","LocationType","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","AddColumns","DropColumns","Kind","RenameTable","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AuthScheme","Basic","Token","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Values","binary_values","bool_values","borrow","borrow_mut","clear","clone","clone_into","date_values","datetime_values","decimal128_values","default","duration_microsecond_values","duration_millisecond_values","duration_nanosecond_values","duration_second_values","encoded_len","eq","f32_values","f64_values","fmt","from","from_ref","i16_values","i32_values","i64_values","i8_values","interval_day_time_values","interval_month_day_nano_values","interval_year_month_values","into","into_request","into_request","string_values","time_microsecond_values","time_millisecond_values","time_nanosecond_values","time_second_values","timestamp_microsecond_values","timestamp_millisecond_values","timestamp_nanosecond_values","timestamp_second_values","to_owned","try_from","try_into","type_id","u16_values","u32_values","u64_values","u8_values","vzip","DecimalType","TypeExt","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","try_as_column_schema","Alter","CreateDatabase","CreateTable","DropTable","Expr","TruncateTable","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","GreptimeDatabaseClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","handle_requests","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GreptimeDatabase","GreptimeDatabaseServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","handle_requests","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","Ddl","Deletes","Inserts","Query","Request","RowDeletes","RowInserts","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AffectedRows","Response","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","HealthCheckClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","health_check","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","HealthCheck","HealthCheckServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","health_check","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","InvertedIndexMeta","InvertedIndexMetas","InvertedIndexStats","base_offset","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","distinct_count","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","fst_size","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","inverted_index_size","max_value","metas","min_value","name","null_bitmap_size","null_count","relative_fst_offset","relative_null_bitmap_offset","segment_row_count","stats","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AlterTableTask","AskLeaderRequest","AskLeaderResponse","BatchDeleteRequest","BatchDeleteResponse","BatchGetRequest","BatchGetResponse","BatchPutRequest","BatchPutResponse","CompareAndPutRequest","CompareAndPutResponse","Create","CreateTableTask","Datanode","DdlTaskType","DeleteRangeRequest","DeleteRangeResponse","Drop","DropTableTask","Error","ErrorCode","Follower","Frontend","GrantedRegion","HeartbeatRequest","HeartbeatResponse","KeyValue","Leader","LockRequest","LockResponse","MailboxMessage","NotEnoughAvailableDatanodes","NotLeader","PROTOCOL_VERSION","Partition","Peer","PeerDict","PutRequest","PutResponse","RangeRequest","RangeResponse","Region","RegionLease","RegionRole","RegionRoute","RegionStat","RequestHeader","ResponseHeader","Role","SubmitDdlTaskRequest","SubmitDdlTaskResponse","Table","TableId","TableName","TableRoute","TableRouteValue","TimeInterval","TruncateTableTask","UnlockRequest","UnlockResponse","addr","alter_table","approximate_bytes","approximate_rows","as_str_name","as_str_name","as_str_name","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_client","cluster_id","cluster_id","cluster_server","cmp","cmp","cmp","code","column_list","compare","compare","compare","create_table","ddl_task_client","ddl_task_server","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deleted","drop_table","duration_since_epoch","duration_since_epoch","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end_timestamp_millis","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_msg","error","expect","expire_secs","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follower_peer_indexes","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","get_hash","get_or_insert","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","heartbeat_client","heartbeat_server","id","id","id","id","id","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_peers","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_not_leader","is_not_leader","is_not_leader","is_valid","is_valid","is_valid","json_message","key","key","key","key","key","key","key","key","keys","keys","keys_only","kvs","kvs","kvs","leader","leader_peer_index","lease_seconds","limit","lock_client","lock_server","mailbox_message","mailbox_message","mailbox_message","member_id","more","name","name","new","node_epoch","not_enough_available_datanodes","partial_cmp","partial_cmp","partial_cmp","partition","partitions","payload","peer","peers","peers","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kvs","prev_kvs","prev_kvs","protocol_version","protocol_version","range_end","range_end","rcus","region","region_id","region_id","region_lease","region_routes","region_stats","regions","report_interval","role","role","role","role","role","role","schema_name","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_role","set_role","set_role","start_timestamp_millis","store_client","store_server","subject","submit_ddl_task_request","success","success","table","table_id","table_info","table_name","table_name","table_route","table_schema","task","timestamp_millis","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tracing_context","truncate_table","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value_list","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wcus","ClusterClient","accept_compressed","batch_get","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","range","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Cluster","ClusterServer","accept_compressed","accept_compression_encodings","batch_get","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","range","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DdlTaskClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","submit_ddl_task","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","DdlTask","DdlTaskServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","submit_ddl_task","to_owned","try_from","try_into","type_id","vzip","with_interceptor","HeartbeatClient","accept_compressed","ask_leader","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","heartbeat","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Heartbeat","HeartbeatServer","HeartbeatStream","accept_compressed","accept_compression_encodings","ask_leader","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","heartbeat","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","LockClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","into_request","lock","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","unlock","vzip","with_interceptor","with_origin","Lock","LockServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","lock","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","unlock","vzip","with_interceptor","Json","Payload","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","StoreClient","accept_compressed","batch_delete","batch_get","batch_put","borrow","borrow_mut","clone","clone_into","compare_and_put","connect","delete_range","fmt","from","from_ref","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","put","range","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Store","StoreServer","accept_compressed","accept_compression_encodings","batch_delete","batch_get","batch_put","borrow","borrow_mut","call","call","call","clone","clone_into","compare_and_put","delete_range","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","put","range","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AlterTableTask","CreateTableTask","DropTableTask","Task","TruncateTableTask","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","PrometheusGatewayClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","PrometheusGateway","PrometheusGatewayServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","InstantQuery","Promql","RangeQuery","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","LogicalPlan","PromRangeQuery","Query","Sql","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AddColumn","AddColumns","AlterRequest","CloseRequest","CompactRequest","CreateRequest","DeleteRequest","DeleteRequests","DropColumn","DropColumns","DropRequest","FlushRequest","InsertRequest","InsertRequests","OpenRequest","QueryRequest","RegionColumnDef","RegionRequest","RegionRequestHeader","RegionResponse","TruncateRequest","add_columns","affected_rows","alter_request","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_def","column_def","column_defs","column_id","dbname","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","drop_columns","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","engine","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","header","header","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","location","name","options","options","path","path","plan","primary_key","region_client","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_request","region_server","requests","requests","rows","rows","schema_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tracing_context","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddColumns","DropColumns","Kind","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","RegionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","inner","into","into_request","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Alter","Body","Close","Compact","Create","Deletes","Drop","Flush","Inserts","Open","Truncate","as_ref","as_uncased","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Region","RegionServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","inner","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BinaryValue","BoolValue","DateValue","DatetimeValue","Decimal128Value","DurationMicrosecondValue","DurationMillisecondValue","DurationNanosecondValue","DurationSecondValue","F32Value","F64Value","I16Value","I32Value","I64Value","I8Value","IntervalDayTimeValues","IntervalMonthDayNanoValues","IntervalYearMonthValues","StringValue","TimeMicrosecondValue","TimeMillisecondValue","TimeNanosecondValue","TimeSecondValue","TimestampMicrosecondValue","TimestampMillisecondValue","TimestampNanosecondValue","TimestampSecondValue","U16Value","U32Value","U64Value","U8Value","ValueData","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","into_request","merge","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"api"],[30,"api::error"],[134,"api::error::Error"],[145,"api::helper"],[214,"api::prom_store"],[215,"api::prom_store::remote"],[590,"api::prom_store::remote::chunk"],[624,"api::prom_store::remote::label_matcher"],[660,"api::prom_store::remote::metric_metadata"],[700,"api::prom_store::remote::read_request"],[734,"api::v1"],[2019,"api::v1::add_column_location"],[2053,"api::v1::alter_expr"],[2076,"api::v1::auth_header"],[2098,"api::v1::column"],[2149,"api::v1::column_data_type_extension"],[2170,"api::v1::column_def"],[2171,"api::v1::ddl_request"],[2196,"api::v1::greptime_database_client"],[2223,"api::v1::greptime_database_server"],[2262,"api::v1::greptime_request"],[2288,"api::v1::greptime_response"],[2309,"api::v1::health_check_client"],[2335,"api::v1::health_check_server"],[2373,"api::v1::index"],[2447,"api::v1::meta"],[3682,"api::v1::meta::cluster_client"],[3709,"api::v1::meta::cluster_server"],[3748,"api::v1::meta::ddl_task_client"],[3774,"api::v1::meta::ddl_task_server"],[3812,"api::v1::meta::heartbeat_client"],[3839,"api::v1::meta::heartbeat_server"],[3879,"api::v1::meta::lock_client"],[3906,"api::v1::meta::lock_server"],[3945,"api::v1::meta::mailbox_message"],[3966,"api::v1::meta::store_client"],[3998,"api::v1::meta::store_server"],[4042,"api::v1::meta::submit_ddl_task_request"],[4066,"api::v1::prometheus_gateway_client"],[4092,"api::v1::prometheus_gateway_server"],[4130,"api::v1::promql_request"],[4152,"api::v1::query_request"],[4175,"api::v1::region"],[4639,"api::v1::region::alter_request"],[4661,"api::v1::region::region_client"],[4687,"api::v1::region::region_request"],[4719,"api::v1::region::region_server"],[4757,"api::v1::value"],[4808,"core::error"],[4809,"core::fmt"],[4810,"core::fmt"],[4811,"tonic::request"],[4812,"tonic::request"],[4813,"core::any"],[4814,"core::any"],[4815,"core::option"],[4816,"datatypes::data_type"],[4817,"core::convert"],[4818,"core::clone"],[4819,"alloc::vec"],[4820,"core::fmt"],[4821,"common_error::status_code"],[4822,"common_decimal::decimal128"],[4823,"datatypes::value"],[4824,"datatypes::value"],[4825,"core::iter::traits::iterator"],[4826,"core::slice::iter"],[4827,"core::iter::adapters::cloned"],[4828,"core::iter::adapters::filter_map"],[4829,"core::cmp"],[4830,"core::hash"],[4831,"core::marker"],[4832,"core::hash"],[4833,"serde::ser"],[4834,"bytes::buf::buf_mut"],[4835,"prost::encoding"],[4836,"prost::encoding"],[4837,"datatypes::schema::column_schema"],[4838,"tonic::codec::compression"],[4839,"bytes::bytes"],[4840,"tonic::status"],[4841,"http_body::combinators::box_body"],[4842,"tonic::client::service"],[4843,"tonic::transport::channel"],[4844,"tonic::transport::error"],[4845,"tonic::transport::channel::endpoint"],[4846,"core::convert"],[4847,"tonic::request"],[4848,"http::request"],[4849,"tower_service"],[4850,"tonic::service::interceptor"],[4851,"http_body"],[4852,"core::marker"],[4853,"alloc::sync"],[4854,"core::future::future"],[4855,"alloc::boxed"],[4856,"core::pin"],[4857,"tonic::codec::decode"],[4858,"axum::routing::into_make_service"],[4859,"axum::extract::connect_info"],[4860,"core::task::wake"],[4861,"core::task::poll"],[4862,"serde_json::error"],[4863,"serde::ser"],[4864,"std::collections::hash::map"]],"d":["A Protobuf message decoding error.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","SNAFU context selector for the …","Contains the error value","","","SNAFU context selector for the <code>Error::IntoColumnDataType</code> …","","SNAFU context selector for the …","Contains the success value","","","SNAFU context selector for the <code>Error::UnknownColumnDataType</code>…","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ColumnDataTypeWrapper is a wrapper of ColumnDataType and …","","","","","Converts an i128 value to google protobuf type […","Convert common decimal128 to grpc decimal128 without …","Get the ColumnDataType.","","","","","Returns the type name of the DdlRequest.","","","","","","","","","","Returns the argument unchanged.","This macro is used to generate datatype functions with …","This macro is used to generate datatype functions with …","","","","","","","","Calls <code>U::from(self)</code>.","","","Returns true if the pb type value is valid.","Returns true if the pb semantic type is valid.","Create a ColumnDataTypeWrapper from ColumnDataType and …","","","","Returns the ColumnDataTypeWrapper of the value.","","Returns the type name of the QueryRequest.","Returns the type name of the Request.","","","","","","","","","","Get a tuple of ColumnDataType and ColumnDataTypeExtension.","Convert value into proto’s value.","","","","Try to create a ColumnDataTypeWrapper from …","","","","","","","","","","","Chunk represents a TSDB chunk. Time range [min, max] is …","ChunkedReadResponse is a response when response_type …","ChunkedSeries represents single, encoded time series.","","","Matcher specifies a rule, which can match or set of labels …","","","","","","ReadRequest represents a remote read request.","ReadResponse is a response when response_type equals …","","TimeSeries represents samples and labels for a single time …","","Returns an iterator which yields the valid enum values …","accepted_response_types allows negotiating the content …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate whether it is without or by.","Nested message and enum types in <code>Chunk</code>.","","Chunks will be in start time order and may overlap.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","End time in milliseconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","String representation of surrounding function or …","List of label names used in aggregation.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>LabelMatcher</code>.","Optional, can be empty.","For a timeseries to be valid, and for the samples and …","","Labels should be sorted.","","","","","Nested message and enum types in <code>MetricMetadata</code>.","","","","Appends the provided enum value to <code>accepted_response_types</code>.","","query_index represents an index of the query from …","Range vector selector range in milliseconds.","Nested message and enum types in <code>ReadRequest</code>.","In same order as the request’s queries.","","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Start time in milliseconds.","","Query step size in milliseconds.","","Samples within a time series must be ordered by time.","timestamp is in ms format, see …","timestamp is in ms format, see …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Represents the metric type, these match the set from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We require this to match chunkenc.Encoding.","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Encoding</code>, or <code>None</code> if <code>value</code> is not a …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Encoding</code>.","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MetricType</code>, or <code>None</code> if <code>value</code> is not a …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if <code>value</code> is a variant of <code>MetricType</code>.","","","","","","","","","Server will return a single ReadResponse message with …","Server will stream a delimited ChunkedReadResponse message …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>ResponseType</code>, or <code>None</code> if <code>value</code> is not …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if <code>value</code> is a variant of <code>ResponseType</code>.","","","","","","","","","","","","","","","","","","","Type extension for some complex types","","","","","","","“Data Definition Language” requests, that create, …","(hi: high 64 bits, lo: low 64 bits) are used to keep the …","","","Delete rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutation contains updates to a set of rows.","Type of operation to rows.","","","","","Put rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A WAL entry contains a list of mutations for a region to …","Nested message and enum types in <code>AddColumnLocation</code>.","","","","Nested message and enum types in <code>AlterExpr</code>.","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","Nested message and enum types in <code>AuthHeader</code>.","","The <code>authorization</code> header, much like http’s authorization …","absolutely same format as Prometheus in JSON","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>catalog</code> that is selected to be used in this request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Column</code>.","Nested message and enum types in <code>ColumnDataTypeExtension</code>.","","","","","","Data is represented here.","","","","","","","Returns the enum value of <code>data_type</code>, or the default if the …","","","Returns the enum value of <code>datatype</code>, or the default if the …","Returns the enum value of <code>datatype</code>, or the default if the …","Helpful in creating vector from column.","","Extension for ColumnDataType.","Extension for ColumnDataType.","Extension for ColumnDataType.","","The <code>dbname</code> for the request","Nested message and enum types in <code>DdlRequest</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>SemanticType</code>, or <code>None</code> if <code>value</code> is not …","Converts an <code>i32</code> to a <code>ColumnDataType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>OpType</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>GreptimeRequest</code>.","Nested message and enum types in <code>GreptimeResponse</code>.","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>SemanticType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ColumnDataType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OpType</code>.","The data to delete, indexed by key columns.","","","","Returns the enum value of <code>location_type</code>, or the default if …","","","","List of mutations for a region.","","","","","Mask maps the positions of null values. If a bit in …","Returns the enum value of <code>op_type</code>, or the default if the …","Type of this mutation.","","","","","","","","Generated client implementations.","Generated server implementations.","","Nested message and enum types in <code>PromqlRequest</code>.","","","","Nested message and enum types in <code>QueryRequest</code>.","","","","The row_count of all columns, which include null and …","The row count of all columns above.","","Data is represented here.","The data to delete.","Row updates to write to the WAL.","","The <code>schema</code> that is selected to be used in this request.","","","","","","Returns the enum value of <code>semantic_type</code>, or the default if …","Returns the enum value of <code>semantic_type</code>, or the default if …","Returns the enum value of <code>semantic_type</code>, or the default if …","","","","Start WAL sequence of this mutation.","","Sets <code>data_type</code> to the provided enum value.","Sets <code>datatype</code> to the provided enum value.","Sets <code>datatype</code> to the provided enum value.","Sets <code>location_type</code> to the provided enum value.","Sets <code>op_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","","","Corresponding to the <code>StatusCode</code> definition of GreptimeDB","","","","","","","","","","The table name to delete from. Catalog name and schema …","","The table name to delete from. Catalog name and schema …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded trace_id &amp; span_id, follow the w3c Trace Context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Value</code>.","","","The array of non-null values in this column.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>LocationType</code>, or <code>None</code> if <code>value</code> is not …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if <code>value</code> is a variant of <code>LocationType</code>.","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","InvertedIndexMeta contains the metadata for a specific tag…","InvertedIndexMetas defines the metadata for an inverted …","InvertedIndexStats provides statistical data on a tag’s …","The base byte offset for this tag’s inverted index data …","","","","","","","","","","","","","","","","","","","The number of distinct values within the tag’s column.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The size in bytes of the FST data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The total size in bytes of this tag’s inverted index …","The maximum value found within the tag’s column, encoded …","A map of tag names to their respective metadata …","The minimum value found within the tag’s column, encoded …","Name of the tag associated with the inverted index.","The size in bytes of the null bitmap.","The count of null entries within the tag’s column.","The byte offset of the Finite State Transducer (FST) data …","The byte offset relative to the <code>base_offset</code> where the null …","The number of rows per group for bitmap indexing which …","Statistical information about the tag’s inverted index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Readonly region.","","","","","","Writable region(mito2), Readonly region(file).","","","","","","","PARTITION <code>region_name</code> VALUES LESS THAN (value_list)","","","","","","","","","","","","","","","","","","","","","This message is only for saving into store. TODO(weny): …","","","","","","","Approximate bytes of this region","Approximate number of rows in this region","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …enerated client implementations.","cluster_id is the ID of the cluster which be sent to.","cluster_id is the ID of the cluster which sent the …","Generated server implementations.","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deleted is the number of keys deleted by the delete range …","","The duration since the heartbeat task’s epoch in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unix timestamp in millis of the end of this period.","engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","expect is the previous value, in bytes","If the expiration time is exceeded and currently holds the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiple follower nodes for read task","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts an <code>i32</code> to a <code>Role</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>RegionRole</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>DdlTaskType</code>, or <code>None</code> if <code>value</code> is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","The id is used to associate request and response.","","TODO(LFC): Maybe use message RegionNumber?","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Role</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>RegionRole</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>DdlTaskType</code>.","","key is the key in bytes. An empty key is not allowed.","Key is the identifier for the ddl task.","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range.","Key will exist as long as lock is held by the caller.","key is the lock ownership key granted by Lock.","","","keys_only when set returns only the keys and not the …","kvs is the list of key-value pairs matched by the range …","","","","single leader node for write task","","limit is a limit on the number of keys returned for the …","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>MailboxMessage</code>.","Mailbox send message to Metasrv","","member_id is the ID of the sender server.","more indicates if there are more keys to return in the …","","Name is the identifier for the distributed shared lock to …","","The node’s epoch","","","","","","","The message body.","Self peer","","","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set, gets the previous key-value pairs …","","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set in the request, the previous key-value …","","","range_end is the upper bound on the requested range [key, …","range_end is the key following the last key to delete for …","The read capacity units during this period","","","","","","Region stats on this node","","Actually reported time interval","Returns the enum value of <code>role</code>, or the default if the …","Returns the enum value of <code>role</code>, or the default if the …","Returns the enum value of <code>role</code>, or the default if the …","","Region role","","","","","","","","","","","","","","Sets <code>role</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","The unix timestamp in millis of the start of this period.","Generated client implementations.","Generated server implementations.","The following information plays a bigger role in making …","Nested message and enum types in <code>SubmitDdlTaskRequest</code>.","","","","Returns if table created.","","","","","","","The unix timestamp in milliseconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoded trace_id &amp; span_id, follow the w3c Trace Context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value is the value held by the key, in bytes.","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The write capacity units during this period","Cluster service is used for communication between meta …","Enable decompressing responses.","Batch get kvs by input keys from leader’s in_memory kv …","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Range get the kvs from leader’s in_memory kv store.","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","Cluster service is used for communication between meta …","Enable decompressing requests with the given encoding.","","Batch get kvs by input keys from leader’s in_memory kv …","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Range get the kvs from leader’s in_memory kv store.","Compress responses with the given encoding, if the client …","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","Submits a DDL task to meta.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","Submits a DDL task to meta.","","","","","","","","Enable decompressing responses.","Ask leader’s endpoint.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Heartbeat, there may be many contents of the heartbeat, …","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Server streaming response type for the Heartbeat method.","Enable decompressing requests with the given encoding.","","Ask leader’s endpoint.","","","","","","","","","Returns the argument unchanged.","","","Heartbeat, there may be many contents of the heartbeat, …","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Lock acquires a distributed shared lock on a given named …","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","Unlock takes a key returned by Lock and releases the hold …","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Lock acquires a distributed shared lock on a given named …","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","Unlock takes a key returned by Lock and releases the hold …","","","","The message body.","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","BatchDelete atomically deletes the given keys and its …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","CompareAndPut atomically puts the value to the given …","Attempt to create a new client by connecting to a given …","DeleteRange deletes the given range from the key-value …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","BatchDelete atomically deletes the given keys and its …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","","","","CompareAndPut atomically puts the value to the given …","DeleteRange deletes the given range from the key-value …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","PrometheusGateway behaves absolutely the same as …","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","PrometheusGateway behaves absolutely the same as …","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","The column definition of a region. Unlike the message …","","","","","","","Nested message and enum types in <code>AlterRequest</code>.","query request is handled in flight services.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Columns in this region.","","DB Name of request, tracking only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Region engine name","Region engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options of the created region.","Options of the opened region.","Region storage path","Region storage path","substrait plan to query","Column Id of primary keys.","Generated client implementations.","","","","","","","","","","","","Nested message and enum types in <code>RegionRequest</code>.","Generated server implementations.","","","","","The version of the schema before applying the alteration.","","","","","","","","","","","","","","","","","","","","","","Encoded trace_id &amp; span_id, follow the w3c Trace Context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","query request is handled in flight services.","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,0,2,2,2,2,0,2,2,2,2,2,0,2,12,0,48,0,12,0,12,0,48,0,12,0,12,12,12,19,16,21,22,12,19,16,21,22,12,16,12,19,16,21,22,19,16,21,22,21,22,19,12,12,16,19,16,21,22,12,12,19,16,21,22,12,16,19,16,21,22,19,16,21,22,12,19,16,21,22,19,19,16,16,21,21,22,22,12,12,12,12,12,19,16,21,22,12,19,16,21,22,12,19,16,21,22,12,19,16,21,22,12,19,16,21,22,12,282,283,284,284,285,284,285,282,283,282,283,0,31,31,31,31,0,0,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,0,0,31,31,31,31,31,31,31,31,31,31,0,0,31,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,62,0,69,64,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,63,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,62,67,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,58,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,62,62,55,67,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,55,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,65,65,51,51,66,66,67,67,68,68,69,69,0,57,58,60,64,67,63,65,55,0,63,59,61,51,51,69,62,0,66,58,55,61,63,62,67,62,65,68,56,57,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,61,63,55,61,63,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,55,56,57,59,61,55,56,57,58,59,60,61,62,63,64,65,51,66,67,68,69,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,71,71,71,71,71,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,0,36,36,0,0,0,0,0,0,0,36,36,0,0,36,0,80,0,0,0,0,0,36,36,36,36,39,0,36,36,0,0,0,0,0,0,0,36,36,36,36,36,0,36,36,0,0,0,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,0,36,0,39,36,36,36,36,39,36,36,36,36,0,0,36,36,36,36,0,0,0,95,88,102,0,39,36,80,0,84,81,106,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,81,90,91,92,94,81,82,83,84,85,86,87,88,33,35,38,89,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,39,36,80,0,0,0,98,90,45,104,112,101,39,36,80,90,93,101,101,93,45,104,45,104,101,45,104,33,81,0,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,101,113,117,90,39,96,81,82,83,84,85,86,87,88,33,35,38,89,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,108,90,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,39,39,39,39,36,36,36,36,80,80,80,80,83,37,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,39,36,80,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,39,36,80,39,36,80,0,0,0,0,39,36,80,105,106,109,110,0,0,35,100,0,111,115,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,33,33,35,35,38,38,89,89,39,39,36,36,37,37,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,45,45,103,103,104,104,49,49,40,40,105,105,106,106,107,107,108,108,109,109,110,110,46,46,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,80,80,101,39,36,80,114,91,35,98,102,102,0,33,122,99,101,33,97,45,121,121,93,39,36,80,85,89,90,0,0,105,0,107,108,46,0,0,109,110,112,114,103,116,118,121,89,81,103,90,91,92,94,101,45,104,101,45,104,121,39,101,45,104,102,121,101,45,104,108,82,83,108,90,92,94,90,91,92,94,112,114,116,118,90,107,90,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,86,81,81,82,83,84,85,86,87,88,33,35,38,89,39,39,36,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,80,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,38,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,85,0,87,40,45,49,81,82,83,84,85,86,87,88,33,35,38,89,39,36,37,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,49,40,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,119,120,121,122,80,125,125,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,127,127,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,134,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,136,136,136,136,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,0,155,155,155,155,155,155,155,155,155,155,155,155,155,156,156,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,47,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,169,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,171,171,171,171,171,171,171,171,171,171,171,171,171,172,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,0,0,174,173,174,175,173,174,175,173,174,175,173,174,175,173,174,175,173,174,175,175,173,174,175,173,174,175,173,174,175,173,174,175,173,174,175,174,173,174,175,173,173,174,174,175,175,174,175,173,175,174,174,175,174,174,174,174,173,174,175,173,174,175,173,174,175,173,174,175,173,174,175,0,0,0,0,0,0,0,0,0,0,0,178,0,176,0,0,0,178,0,0,0,177,176,0,0,0,0,177,0,0,0,225,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,182,203,188,188,176,177,178,198,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,184,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,0,179,180,0,176,177,178,181,199,176,177,178,201,0,0,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,220,202,187,191,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,185,188,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,182,182,182,182,176,176,176,176,177,177,177,177,178,178,178,178,225,225,225,225,181,180,217,221,180,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,196,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,194,176,177,178,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,176,177,178,182,176,177,178,226,182,176,177,178,187,189,192,193,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,0,0,182,183,194,197,198,226,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,226,179,179,180,180,181,181,182,182,183,183,184,184,185,185,186,186,176,176,187,187,188,188,189,189,190,190,191,191,192,192,193,193,194,194,177,177,195,195,196,196,197,197,198,198,199,199,200,200,201,201,202,202,203,203,204,204,205,205,206,206,178,178,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,226,226,225,225,180,181,189,176,177,178,194,186,206,207,209,217,219,222,223,211,215,207,208,212,213,193,196,191,207,0,0,0,187,189,179,208,198,221,179,187,181,176,177,178,198,201,194,187,200,226,209,210,213,215,218,219,214,216,220,179,180,207,219,188,196,188,190,189,195,187,191,187,179,188,190,179,188,190,184,187,205,207,209,211,213,215,217,219,221,223,179,188,190,185,0,0,194,0,180,218,195,206,201,184,197,200,197,205,194,194,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,194,179,204,179,180,181,182,183,184,185,186,176,176,187,188,189,190,191,192,193,194,177,177,195,196,197,198,199,200,201,202,203,204,205,206,178,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,186,209,217,199,179,180,181,182,183,184,185,186,176,187,188,189,190,191,192,193,194,177,195,196,197,198,199,200,201,202,203,204,205,206,178,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,225,188,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,0,234,234,235,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,234,234,234,234,234,234,234,234,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,237,237,237,237,237,237,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,241,240,240,241,240,240,240,240,240,240,240,240,240,240,240,241,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,0,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,0,0,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,243,243,245,0,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,0,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,0,0,247,247,248,248,248,247,247,247,247,247,247,247,248,248,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,247,247,247,247,247,247,247,247,249,249,249,0,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,0,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,0,0,251,251,251,251,251,251,251,251,251,251,251,251,251,252,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,253,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,268,257,0,256,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,270,275,263,275,255,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,269,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,263,265,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,256,257,262,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,267,270,271,263,265,263,265,262,263,0,260,261,262,263,264,265,266,267,272,273,274,0,0,258,259,260,261,267,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,276,0,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,0,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,0,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,0,0,280,280,280,280,280,280,280,280,280,280,280,280,280,281,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124],"f":[0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[2,2],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[2,5],[[7,[3,6]]]],[[2,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,-2,[],[]],[-1,10,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[12,13],[-1,1,[]],[12,[[15,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]]],12,[[18,[17]]]],[12,[[15,[1]]]],[[[19,[-1]]],[[19,[-1]]],20],[[[16,[-1]]],[[16,[-1]]],20],[[[21,[-1]]],[[21,[-1]]],20],[[[22,[-1]]],[[22,[-1]]],20],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,[[12,23,[24,[10]]],3],[12,25],[[[16,[-1]]],[[7,[-2,12]]],[[18,[17]]],[]],[[[19,[-1]],5],26,27],[[[16,[-1]],5],26,27],[[[21,[-1]],5],26,27],[[[22,[-1]],5],26,27],[[12,5],26],[[12,5],26],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],12,[[18,[28]]]],[[[16,[-1]]],12,[[18,[17]]]],[[[21,[-1]]],12,[[18,[10]]]],[[[22,[-1]]],12,[[18,[10]]]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[12,[[15,[29]]]],[12,[[15,[1]]]],[12,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[32,33],[34,35],[31,36],0,0,[[],31],[[],31],[37,25],[[28,28],31],[[],31],[[],31],[[],31],[[],31],[[31,31],4],[[],31],[[],31],[[31,5],26],[-1,-1,[]],0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[28,[15,[38]],17],4],[[28,39],4],[[36,[15,[38]]],31],[[40,[15,[38]]],41],[[17,42],[[24,[43]]]],[[17,42],44],[40,[[15,[36]]]],[[45,23,44],3],[46,25],[47,25],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[31,[[3,[36,[15,[38]]]]]],[43,[[15,[40]]]],[17,[[48,[31]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[28,[15,[38]]],[[48,[31]]]],[-1,11,[]],[[],31],[[],31],[[],31],[[],31],[43,40],[[36,23],42],[[-1,23],[[24,[49]]],50],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,[[54,[[53,[[52,[28]]]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[55,3],[56,3],[57,3],[58,3],[59,3],[60,3],[61,3],[62,3],[63,3],[64,3],[65,3],[51,3],[66,3],[67,3],[68,3],[69,3],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[51,51],[66,66],[67,67],[68,68],[69,69],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],62],[[],63],[[],64],[[],65],[[],51],[[],66],[[],67],[[],68],[[],69],[55,23],[56,23],[57,23],[58,23],[59,23],[60,23],[61,23],[62,23],[63,23],[64,23],[65,23],[51,23],[66,23],[67,23],[68,23],[69,23],0,0,[[55,55],4],[[56,56],4],[[57,57],4],[[58,58],4],[[59,59],4],[[60,60],4],[[61,61],4],[[62,62],4],[[63,63],4],[[64,64],4],[[65,65],4],[[51,51],4],[[66,66],4],[[67,67],4],[[68,68],4],[[69,69],4],0,[[55,5],[[7,[3,6]]]],[[56,5],[[7,[3,6]]]],[[57,5],[[7,[3,6]]]],[[58,5],[[7,[3,6]]]],[[59,5],[[7,[3,6]]]],[[60,5],[[7,[3,6]]]],[[61,5],[[7,[3,6]]]],[[62,5],[[7,[3,6]]]],[[63,5],[[7,[3,6]]]],[[64,5],[[7,[3,6]]]],[[65,5],[[7,[3,6]]]],[[51,5],[[7,[3,6]]]],[[66,5],[[7,[3,6]]]],[[67,5],[[7,[3,6]]]],[[68,5],[[7,[3,6]]]],[[69,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[51,70],3],0,0,0,0,0,0,[[55,71],3],[[61,72],3],[[63,73],3],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[55,71],[61,72],[63,73],0,0,0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[73,25],[-1,-2,[],[]],[-1,-2,[],[]],[73,73],[[-1,-2],3,[],[]],[[73,73],74],[[-1,-2],74,[],[]],[[],73],[[73,73],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[73,5],[[7,[3,6]]]],[-1,-1,[]],[28,[[15,[73]]]],[-1,-1,[]],[25,[[15,[73]]]],[[-1,-2],75,[76,77],78],[[73,-1],3,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[28,4],[[73,73],[[15,[74]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[73,2]]]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,[72,25],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[[-1,-2],3,[],[]],[[72,72],74],[[-1,-2],74,[],[]],[[],72],[[72,72],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[72,5],[[7,[3,6]]]],[-1,-1,[]],[28,[[15,[72]]]],[-1,-1,[]],[25,[[15,[72]]]],[[-1,-2],75,[76,77],78],[[72,-1],3,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[28,4],[[72,72],[[15,[74]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[72,2]]]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[71,25],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],3,[],[]],[[71,71],74],[[-1,-2],74,[],[]],[[],71],[[71,71],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[71,5],[[7,[3,6]]]],[-1,-1,[]],[28,[[15,[71]]]],[-1,-1,[]],[25,[[15,[71]]]],[[-1,-2],75,[76,77],78],[[71,-1],3,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[28,4],[[71,71],[[15,[74]]]],[-1,-2,[],[]],[28,[[7,[71,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,[70,25],[-1,-2,[],[]],[-1,-2,[],[]],[70,70],[[-1,-2],3,[],[]],[[70,70],74],[[-1,-2],74,[],[]],[[],70],[[70,70],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[70,5],[[7,[3,6]]]],[-1,-1,[]],[28,[[15,[70]]]],[-1,-1,[]],[25,[[15,[70]]]],[[-1,-2],75,[76,77],78],[[70,-1],3,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[28,4],[[70,70],[[15,[74]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[70,2]]]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[39,25],[36,25],[80,25],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[81,3],[82,3],[83,3],[84,3],[85,3],[86,3],[87,3],[88,3],[33,3],[35,3],[38,3],[89,3],[37,3],[90,3],[91,3],[92,3],[93,3],[94,3],[95,3],[96,3],[97,3],[98,3],[99,3],[100,3],[101,3],[102,3],[45,3],[103,3],[104,3],[49,3],[40,3],[105,3],[106,3],[107,3],[108,3],[109,3],[110,3],[46,3],[111,3],[112,3],[113,3],[114,3],[115,3],[116,3],[117,3],[118,3],[119,3],[120,3],[121,3],[122,3],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[33,33],[35,35],[38,38],[89,89],[39,39],[36,36],[37,37],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[45,45],[103,103],[104,104],[49,49],[40,40],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[46,46],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[80,80],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[39,39],74],[[36,36],74],[[80,80],74],0,0,0,0,0,0,0,0,0,[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],0,0,[101,36],0,0,[45,36],[104,36],0,0,0,0,0,0,0,0,[[],81],[[],82],[[],83],[[],84],[[],85],[[],86],[[],87],[[],88],[[],33],[[],35],[[],38],[[],89],[[],39],[[],36],[[],37],[[],90],[[],91],[[],92],[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],102],[[],45],[[],103],[[],104],[[],49],[[],40],[[],105],[[],106],[[],107],[[],108],[[],109],[[],110],[[],46],[[],111],[[],112],[[],113],[[],114],[[],115],[[],116],[[],117],[[],118],[[],119],[[],120],[[],121],[[],122],[[],80],0,0,0,0,[-1,[[7,[39]]],123],0,[81,23],[82,23],[83,23],[84,23],[85,23],[86,23],[87,23],[88,23],[33,23],[35,23],[38,23],[89,23],[37,23],[90,23],[91,23],[92,23],[93,23],[94,23],[95,23],[96,23],[97,23],[98,23],[99,23],[100,23],[101,23],[102,23],[45,23],[103,23],[104,23],[49,23],[40,23],[105,23],[106,23],[107,23],[108,23],[109,23],[110,23],[46,23],[111,23],[112,23],[113,23],[114,23],[115,23],[116,23],[117,23],[118,23],[119,23],[120,23],[121,23],[122,23],0,0,[[81,81],4],[[82,82],4],[[83,83],4],[[84,84],4],[[85,85],4],[[86,86],4],[[87,87],4],[[88,88],4],[[33,33],4],[[35,35],4],[[38,38],4],[[89,89],4],[[39,39],4],[[36,36],4],[[37,37],4],[[90,90],4],[[91,91],4],[[92,92],4],[[93,93],4],[[94,94],4],[[95,95],4],[[96,96],4],[[97,97],4],[[98,98],4],[[99,99],4],[[100,100],4],[[101,101],4],[[102,102],4],[[45,45],4],[[103,103],4],[[104,104],4],[[49,49],4],[[40,40],4],[[105,105],4],[[106,106],4],[[107,107],4],[[108,108],4],[[109,109],4],[[110,110],4],[[46,46],4],[[111,111],4],[[112,112],4],[[113,113],4],[[114,114],4],[[115,115],4],[[116,116],4],[[117,117],4],[[118,118],4],[[119,119],4],[[120,120],4],[[121,121],4],[[122,122],4],[[80,80],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[[81,5],[[7,[3,6]]]],[[82,5],[[7,[3,6]]]],[[83,5],[[7,[3,6]]]],[[84,5],[[7,[3,6]]]],[[85,5],[[7,[3,6]]]],[[86,5],[[7,[3,6]]]],[[87,5],[[7,[3,6]]]],[[88,5],[[7,[3,6]]]],[[33,5],[[7,[3,6]]]],[[35,5],[[7,[3,6]]]],[[38,5],[[7,[3,6]]]],[[89,5],[[7,[3,6]]]],[[39,5],[[7,[3,6]]]],[[36,5],[[7,[3,6]]]],[[37,5],[[7,[3,6]]]],[[90,5],[[7,[3,6]]]],[[91,5],[[7,[3,6]]]],[[92,5],[[7,[3,6]]]],[[93,5],[[7,[3,6]]]],[[94,5],[[7,[3,6]]]],[[95,5],[[7,[3,6]]]],[[96,5],[[7,[3,6]]]],[[97,5],[[7,[3,6]]]],[[98,5],[[7,[3,6]]]],[[99,5],[[7,[3,6]]]],[[100,5],[[7,[3,6]]]],[[101,5],[[7,[3,6]]]],[[102,5],[[7,[3,6]]]],[[45,5],[[7,[3,6]]]],[[103,5],[[7,[3,6]]]],[[104,5],[[7,[3,6]]]],[[49,5],[[7,[3,6]]]],[[40,5],[[7,[3,6]]]],[[105,5],[[7,[3,6]]]],[[106,5],[[7,[3,6]]]],[[107,5],[[7,[3,6]]]],[[108,5],[[7,[3,6]]]],[[109,5],[[7,[3,6]]]],[[110,5],[[7,[3,6]]]],[[46,5],[[7,[3,6]]]],[[111,5],[[7,[3,6]]]],[[112,5],[[7,[3,6]]]],[[113,5],[[7,[3,6]]]],[[114,5],[[7,[3,6]]]],[[115,5],[[7,[3,6]]]],[[116,5],[[7,[3,6]]]],[[117,5],[[7,[3,6]]]],[[118,5],[[7,[3,6]]]],[[119,5],[[7,[3,6]]]],[[120,5],[[7,[3,6]]]],[[121,5],[[7,[3,6]]]],[[122,5],[[7,[3,6]]]],[[80,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[124,40],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,[[15,[39]]]],[28,[[15,[36]]]],[28,[[15,[80]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,[[15,[39]]]],[25,[[15,[36]]]],[25,[[15,[80]]]],[[-1,-2],75,[76,77],78],[[-1,-2],75,[76,77],78],[[-1,-2],75,[76,77],78],0,0,0,0,[[39,-1],3,79],[[36,-1],3,79],[[80,-1],3,79],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[28,4],[28,4],[28,4],0,0,0,0,[102,125],0,0,0,0,0,0,0,0,0,[121,80],0,0,[[39,39],[[15,[74]]]],[[36,36],[[15,[74]]]],[[80,80],[[15,[74]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[101,39],[45,39],[104,39],0,0,0,0,[[39,-1],7,126],[[101,36],3],[[45,36],3],[[104,36],3],[[102,125],3],[[121,80],3],[[101,39],3],[[45,39],3],[[104,39],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[39,2]]]],[-1,[[7,[-2]]],[],[]],[28,[[7,[36,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[80,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[125,25],[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[[-1,-2],3,[],[]],[[125,125],74],[[-1,-2],74,[],[]],[[],125],[[125,125],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[125,5],[[7,[3,6]]]],[-1,-1,[]],[28,[[15,[125]]]],[-1,-1,[]],[25,[[15,[125]]]],[[-1,-2],75,[76,77],78],[[125,-1],3,79],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[28,4],[[125,125],[[15,[74]]]],[-1,-2,[],[]],[28,[[7,[125,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[127,127],[[-1,-2],3,[],[]],[[127,-1],3,128],[127,23],[[127,127],4],[[127,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[127]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[133,133],[[-1,-2],3,[],[]],[[133,-1],3,128],[133,23],[[133,133],4],[[133,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[133]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[42,3],[42,42],[[-1,-2],3,[],[]],0,0,0,[[],42],0,0,0,0,[42,23],[[42,42],4],0,0,[[42,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],0,0,0,0,[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[[-1,-2],3,[],[]],[[134,-1],3,128],[134,23],[[134,134],4],[[134,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[134]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[101,[[48,[135]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[136,136],[[-1,-2],3,[],[]],[[136,-1],3,128],[136,23],[[136,136],4],[[136,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[136]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[[137,[-1]],138],[[137,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[137,[-1]]],[[137,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[137,[143]],144]]],[[146,[145]]]],[[[137,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],[[[137,[-1]],-2],[[7,[[147,[110]],140]]],[[142,[[141,[139,140]]]]],[[148,[109]]]],[[[137,[-1]],-2],[[7,[[147,[110]],140]]],[[142,[[141,[139,140]]]]],149],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[137,[-1]],23],[[137,[-1]]],[[142,[[141,[139,140]]]]]],[[[137,[-1]],23],[[137,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[137,[-1]]],[[142,[[141,[139,140]]]]]],[[[137,[-1]],138],[[137,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[137,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[137,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[155,[-1]],138],[[155,[-1]]],156],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[155,[-1]],[151,[-2]]],[],156,[157,158]],[[[155,[-1]]],[[155,[-1]]],156],[[-1,-2],3,[],[]],[[[155,[-1]],5],[[7,[3,6]]],[27,156]],[-1,-1,[]],[[[160,[-1,159]]],[[155,[-1]]],156],[-1,-1,[]],[[-1,[8,[109]]],[[163,[[162,[161,159]]]]],[]],[[-1,[8,[[164,[109]]]]],[[163,[[162,[161,159]]]]],[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[155,[-1]],23],[[155,[-1]]],156],0,[[[155,[-1]],23],[[155,[-1]]],156],0,[-1,[[155,[-1]]],156],[[[155,[-1]],167],[[168,[[7,[3]]]]],156],[[-1,167],[[168,[[7,[3]]]]],[]],[[-1,167],[[168,[[7,[3]]]]],[]],[[[155,[-1]],138],[[155,[-1]]],156],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[155,[-1]],-2]]],156,153],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[-1,-2],3,[],[]],[[47,-1],3,128],[47,23],[[47,47],4],[[47,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[47]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[169,169],[[-1,-2],3,[],[]],[[169,-1],3,128],[169,23],[[169,169],4],[[169,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[169]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[[170,[-1]],138],[[170,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[170,[-1]]],[[170,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[170,[143]],144]]],[[146,[145]]]],[[[170,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],[[[170,[-1]],-2],[[7,[[147,[120]],140]]],[[142,[[141,[139,140]]]]],[[148,[119]]]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[170,[-1]],23],[[170,[-1]]],[[142,[[141,[139,140]]]]]],[[[170,[-1]],23],[[170,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[170,[-1]]],[[142,[[141,[139,140]]]]]],[[[170,[-1]],138],[[170,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[170,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[170,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[171,[-1]],138],[[171,[-1]]],172],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[151,[-2]]],[],[],[]],[[[171,[-1]],[151,[-2]]],[],172,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[[171,[-1]]],[[171,[-1]]],172],[[-1,-2],3,[],[]],[[[171,[-1]],5],[[7,[3,6]]],[27,172]],[-1,-1,[]],[[[160,[-1,159]]],[[171,[-1]]],172],[-1,-1,[]],[[-1,[8,[119]]],[[163,[[162,[161,159]]]]],[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[171,[-1]],23],[[171,[-1]]],172],0,[[[171,[-1]],23],[[171,[-1]]],172],0,[-1,[[171,[-1]]],172],[[[171,[-1]],167],[[168,[[7,[3]]]]],172],[[-1,167],[[168,[[7,[3]]]]],[]],[[-1,167],[[168,[[7,[3]]]]],[]],[[[171,[-1]],138],[[171,[-1]]],172],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[171,[-1]],-2]]],172,153],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,3],[174,3],[175,3],[173,173],[174,174],[175,175],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],173],[[],174],[[],175],0,[173,23],[174,23],[175,23],[[173,173],4],[[174,174],4],[[175,175],4],[[173,5],[[7,[3,6]]]],[[174,5],[[7,[3,6]]]],[[175,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[176,25],[177,25],[178,25],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[179,3],[180,3],[181,3],[182,3],[183,3],[184,3],[185,3],[186,3],[187,3],[188,3],[189,3],[190,3],[191,3],[192,3],[193,3],[194,3],[195,3],[196,3],[197,3],[198,3],[199,3],[200,3],[201,3],[202,3],[203,3],[204,3],[205,3],[206,3],[207,3],[208,3],[209,3],[210,3],[211,3],[212,3],[213,3],[214,3],[215,3],[216,3],[217,3],[218,3],[219,3],[220,3],[221,3],[222,3],[223,3],[224,3],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[176,176],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[177,177],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[178,178],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,[[176,176],74],[[177,177],74],[[178,178],74],0,0,[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],[[-1,-2],74,[],[]],0,0,0,[[],179],[[],180],[[],181],[[],182],[[],183],[[],184],[[],185],[[],186],[[],176],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[[],194],[[],177],[[],195],[[],196],[[],197],[[],198],[[],199],[[],200],[[],201],[[],202],[[],203],[[],204],[[],205],[[],206],[[],178],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],[[],216],[[],217],[[],218],[[],219],[[],220],[[],221],[[],222],[[],223],[[],224],[[],226],0,0,0,0,[179,23],[180,23],[181,23],[182,23],[183,23],[184,23],[185,23],[186,23],[187,23],[188,23],[189,23],[190,23],[191,23],[192,23],[193,23],[194,23],[195,23],[196,23],[197,23],[198,23],[199,23],[200,23],[201,23],[202,23],[203,23],[204,23],[205,23],[206,23],[207,23],[208,23],[209,23],[210,23],[211,23],[212,23],[213,23],[214,23],[215,23],[216,23],[217,23],[218,23],[219,23],[220,23],[221,23],[222,23],[223,23],[224,23],0,0,[[179,179],4],[[180,180],4],[[181,181],4],[[182,182],4],[[183,183],4],[[184,184],4],[[185,185],4],[[186,186],4],[[176,176],4],[[187,187],4],[[188,188],4],[[189,189],4],[[190,190],4],[[191,191],4],[[192,192],4],[[193,193],4],[[194,194],4],[[177,177],4],[[195,195],4],[[196,196],4],[[197,197],4],[[198,198],4],[[199,199],4],[[200,200],4],[[201,201],4],[[202,202],4],[[203,203],4],[[204,204],4],[[205,205],4],[[206,206],4],[[178,178],4],[[207,207],4],[[208,208],4],[[209,209],4],[[210,210],4],[[211,211],4],[[212,212],4],[[213,213],4],[[214,214],4],[[215,215],4],[[216,216],4],[[217,217],4],[[218,218],4],[[219,219],4],[[220,220],4],[[221,221],4],[[222,222],4],[[223,223],4],[[224,224],4],[[225,225],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,0,[[75,181],180],[[179,5],[[7,[3,6]]]],[[180,5],[[7,[3,6]]]],[[181,5],[[7,[3,6]]]],[[182,5],[[7,[3,6]]]],[[183,5],[[7,[3,6]]]],[[184,5],[[7,[3,6]]]],[[185,5],[[7,[3,6]]]],[[186,5],[[7,[3,6]]]],[[176,5],[[7,[3,6]]]],[[187,5],[[7,[3,6]]]],[[188,5],[[7,[3,6]]]],[[189,5],[[7,[3,6]]]],[[190,5],[[7,[3,6]]]],[[191,5],[[7,[3,6]]]],[[192,5],[[7,[3,6]]]],[[193,5],[[7,[3,6]]]],[[194,5],[[7,[3,6]]]],[[194,5],[[7,[3,6]]]],[[177,5],[[7,[3,6]]]],[[195,5],[[7,[3,6]]]],[[196,5],[[7,[3,6]]]],[[197,5],[[7,[3,6]]]],[[198,5],[[7,[3,6]]]],[[199,5],[[7,[3,6]]]],[[200,5],[[7,[3,6]]]],[[201,5],[[7,[3,6]]]],[[202,5],[[7,[3,6]]]],[[203,5],[[7,[3,6]]]],[[204,5],[[7,[3,6]]]],[[205,5],[[7,[3,6]]]],[[206,5],[[7,[3,6]]]],[[178,5],[[7,[3,6]]]],[[207,5],[[7,[3,6]]]],[[208,5],[[7,[3,6]]]],[[209,5],[[7,[3,6]]]],[[210,5],[[7,[3,6]]]],[[211,5],[[7,[3,6]]]],[[212,5],[[7,[3,6]]]],[[213,5],[[7,[3,6]]]],[[214,5],[[7,[3,6]]]],[[215,5],[[7,[3,6]]]],[[216,5],[[7,[3,6]]]],[[217,5],[[7,[3,6]]]],[[218,5],[[7,[3,6]]]],[[219,5],[[7,[3,6]]]],[[220,5],[[7,[3,6]]]],[[221,5],[[7,[3,6]]]],[[222,5],[[7,[3,6]]]],[[223,5],[[7,[3,6]]]],[[224,5],[[7,[3,6]]]],[[225,5],[[7,[3,6]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[28,[[15,[176]]]],[28,[[15,[177]]]],[28,[[15,[178]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,[[15,[176]]]],[25,[[15,[177]]]],[25,[[15,[178]]]],[[-1,-2],75,[76,77],78],[[-1,-2],75,[76,77],78],[[-1,-2],75,[76,77],78],[[-1,-2],75,[76,77],78],[[226,182],23],[[182,-1],3,79],[[176,-1],3,79],[[177,-1],3,79],[[178,-1],3,79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[226,[[24,[182,159]]]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[180,4],[[],181],[189,4],[28,4],[28,4],[28,4],[[25,25,25,227,-1],[[7,[194,228]]],[229,230,77]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[75,75]],176,[232,[10,10,231]]],179],0,[[23,23],181],[[176,176],[[15,[74]]]],[[177,177],[[15,[74]]]],[[178,178],[[15,[74]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[179,176],[188,177],[190,177],0,0,0,0,[[187,[3,[75,75]],176,[232,[10,10,231]]],3],[[205,[3,[75,75]],176,[232,[10,10,231]]],3],[[207,[3,[75,75]],176,[232,[10,10,231]]],3],[[209,[3,[75,75]],176,[232,[10,10,231]]],3],[[211,[3,[75,75]],176,[232,[10,10,231]]],3],[[213,[3,[75,75]],176,[232,[10,10,231]]],3],[[215,[3,[75,75]],176,[232,[10,10,231]]],3],[[217,[3,[75,75]],176,[232,[10,10,231]]],3],[[219,[3,[75,75]],176,[232,[10,10,231]]],3],[[221,[3,[75,75]],176,[232,[10,10,231]]],3],[[223,[3,[75,75]],176,[232,[10,10,231]]],3],[[179,176],3],[[188,177],3],[[190,177],3],0,0,0,0,0,[75,180],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,10,[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[176,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[177,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[28,[[7,[178,2]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[233,[-1]],138],[[233,[-1]]],[[142,[[141,[139,140]]]]]],[[[233,[-1]],-2],[[7,[[147,[212]],140]]],[[142,[[141,[139,140]]]]],[[148,[211]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[233,[-1]]],[[233,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[233,[143]],144]]],[[146,[145]]]],[[[233,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[233,[-1]],23],[[233,[-1]]],[[142,[[141,[139,140]]]]]],[[[233,[-1]],23],[[233,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[233,[-1]]],[[142,[[141,[139,140]]]]]],[[[233,[-1]],-2],[[7,[[147,[208]],140]]],[[142,[[141,[139,140]]]]],[[148,[207]]]],[[[233,[-1]],138],[[233,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[233,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[233,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[234,[-1]],138],[[234,[-1]]],235],0,[[-1,[8,[211]]],[[163,[[162,[161,159]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[234,[-1]],[151,[-2]]],[],235,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[234,[-1]]],[[234,[-1]]],235],[[-1,-2],3,[],[]],[[[234,[-1]],5],[[7,[3,6]]],[27,235]],[-1,-1,[]],[[[160,[-1,159]]],[[234,[-1]]],235],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[234,[-1]],23],[[234,[-1]]],235],0,[[[234,[-1]],23],[[234,[-1]]],235],0,[-1,[[234,[-1]]],235],[[-1,167],[[168,[[7,[3]]]]],[]],[[[234,[-1]],167],[[168,[[7,[3]]]]],235],[[-1,167],[[168,[[7,[3]]]]],[]],[[-1,[8,[207]]],[[163,[[162,[161,159]]]]],[]],[[[234,[-1]],138],[[234,[-1]]],235],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[234,[-1]],-2]]],235,153],0,[[[236,[-1]],138],[[236,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[236,[-1]]],[[236,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[236,[143]],144]]],[[146,[145]]]],[[[236,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[236,[-1]],23],[[236,[-1]]],[[142,[[141,[139,140]]]]]],[[[236,[-1]],23],[[236,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[236,[-1]]],[[142,[[141,[139,140]]]]]],[[[236,[-1]],138],[[236,[-1]]],[[142,[[141,[139,140]]]]]],[[[236,[-1]],-2],[[7,[[147,[206]],140]]],[[142,[[141,[139,140]]]]],[[148,[205]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[236,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[236,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[237,[-1]],138],[[237,[-1]]],238],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[237,[-1]],[151,[-2]]],[],238,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[237,[-1]]],[[237,[-1]]],238],[[-1,-2],3,[],[]],[[[237,[-1]],5],[[7,[3,6]]],[27,238]],[-1,-1,[]],[[[160,[-1,159]]],[[237,[-1]]],238],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[237,[-1]],23],[[237,[-1]]],238],0,[[[237,[-1]],23],[[237,[-1]]],238],0,[-1,[[237,[-1]]],238],[[-1,167],[[168,[[7,[3]]]]],[]],[[[237,[-1]],167],[[168,[[7,[3]]]]],238],[[-1,167],[[168,[[7,[3]]]]],[]],[[[237,[-1]],138],[[237,[-1]]],238],0,[[-1,[8,[205]]],[[163,[[162,[161,159]]]]],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[237,[-1]],-2]]],238,153],0,[[[239,[-1]],138],[[239,[-1]]],[[142,[[141,[139,140]]]]]],[[[239,[-1]],-2],[[7,[[147,[193]],140]]],[[142,[[141,[139,140]]]]],[[148,[192]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[239,[-1]]],[[239,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[239,[143]],144]]],[[146,[145]]]],[[[239,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],[[[239,[-1]],-2],[[7,[[147,[[164,[189]]]],140]]],[[142,[[141,[139,140]]]]],149],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[239,[-1]],23],[[239,[-1]]],[[142,[[141,[139,140]]]]]],[[[239,[-1]],23],[[239,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[239,[-1]]],[[142,[[141,[139,140]]]]]],[[[239,[-1]],138],[[239,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[239,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[239,[-1]]],[[142,[[141,[139,140]]]]]],0,0,0,[[[240,[-1]],138],[[240,[-1]]],241],0,[[-1,[8,[192]]],[[163,[[162,[161,159]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[240,[-1]],[151,[-2]]],[],241,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[240,[-1]]],[[240,[-1]]],241],[[-1,-2],3,[],[]],[[[240,[-1]],5],[[7,[3,6]]],[27,241]],[-1,-1,[]],[[[160,[-1,159]]],[[240,[-1]]],241],[-1,-1,[]],[[-1,[8,[[164,[187]]]]],[[163,[[162,[161,159]]]]],[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[240,[-1]],23],[[240,[-1]]],241],0,[[[240,[-1]],23],[[240,[-1]]],241],0,[-1,[[240,[-1]]],241],[[[240,[-1]],167],[[168,[[7,[3]]]]],241],[[-1,167],[[168,[[7,[3]]]]],[]],[[-1,167],[[168,[[7,[3]]]]],[]],[[[240,[-1]],138],[[240,[-1]]],241],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[240,[-1]],-2]]],241,153],0,[[[242,[-1]],138],[[242,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[242,[-1]]],[[242,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[242,[143]],144]]],[[146,[145]]]],[[[242,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[242,[-1]],-2],[[7,[[147,[222]],140]]],[[142,[[141,[139,140]]]]],[[148,[221]]]],[[[242,[-1]],23],[[242,[-1]]],[[142,[[141,[139,140]]]]]],[[[242,[-1]],23],[[242,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[242,[-1]]],[[142,[[141,[139,140]]]]]],[[[242,[-1]],138],[[242,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[[242,[-1]],-2],[[7,[[147,[224]],140]]],[[142,[[141,[139,140]]]]],[[148,[223]]]],[-1,-2,[],[]],[[-1,-2],[[242,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[242,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[243,[-1]],138],[[243,[-1]]],244],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[243,[-1]],[151,[-2]]],[],244,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[243,[-1]]],[[243,[-1]]],244],[[-1,-2],3,[],[]],[[[243,[-1]],5],[[7,[3,6]]],[27,244]],[-1,-1,[]],[[[160,[-1,159]]],[[243,[-1]]],244],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[-1,[8,[221]]],[[163,[[162,[161,159]]]]],[]],[[[243,[-1]],23],[[243,[-1]]],244],0,[[[243,[-1]],23],[[243,[-1]]],244],0,[-1,[[243,[-1]]],244],[[-1,167],[[168,[[7,[3]]]]],[]],[[[243,[-1]],167],[[168,[[7,[3]]]]],244],[[-1,167],[[168,[[7,[3]]]]],[]],[[[243,[-1]],138],[[243,[-1]]],244],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[[-1,[8,[223]]],[[163,[[162,[161,159]]]]],[]],[-1,-2,[],[]],[[-1,-2],[[150,[[243,[-1]],-2]]],244,153],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[245,245],[[-1,-2],3,[],[]],[[245,-1],3,128],[245,23],[[245,245],4],[[245,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[245]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[[246,[-1]],138],[[246,[-1]]],[[142,[[141,[139,140]]]]]],[[[246,[-1]],-2],[[7,[[147,[216]],140]]],[[142,[[141,[139,140]]]]],[[148,[215]]]],[[[246,[-1]],-2],[[7,[[147,[212]],140]]],[[142,[[141,[139,140]]]]],[[148,[211]]]],[[[246,[-1]],-2],[[7,[[147,[214]],140]]],[[142,[[141,[139,140]]]]],[[148,[213]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[246,[-1]]],[[246,[-1]]],20],[[-1,-2],3,[],[]],[[[246,[-1]],-2],[[7,[[147,[218]],140]]],[[142,[[141,[139,140]]]]],[[148,[217]]]],[-1,[[7,[[246,[143]],144]]],[[146,[145]]]],[[[246,[-1]],-2],[[7,[[147,[220]],140]]],[[142,[[141,[139,140]]]]],[[148,[219]]]],[[[246,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[246,[-1]],23],[[246,[-1]]],[[142,[[141,[139,140]]]]]],[[[246,[-1]],23],[[246,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[246,[-1]]],[[142,[[141,[139,140]]]]]],[[[246,[-1]],-2],[[7,[[147,[210]],140]]],[[142,[[141,[139,140]]]]],[[148,[209]]]],[[[246,[-1]],-2],[[7,[[147,[208]],140]]],[[142,[[141,[139,140]]]]],[[148,[207]]]],[[[246,[-1]],138],[[246,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[246,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[246,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[247,[-1]],138],[[247,[-1]]],248],0,[[-1,[8,[215]]],[[163,[[162,[161,159]]]]],[]],[[-1,[8,[211]]],[[163,[[162,[161,159]]]]],[]],[[-1,[8,[213]]],[[163,[[162,[161,159]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[247,[-1]],[151,[-2]]],[],248,[157,158]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[247,[-1]]],[[247,[-1]]],248],[[-1,-2],3,[],[]],[[-1,[8,[217]]],[[163,[[162,[161,159]]]]],[]],[[-1,[8,[219]]],[[163,[[162,[161,159]]]]],[]],[[[247,[-1]],5],[[7,[3,6]]],[27,248]],[-1,-1,[]],[[[160,[-1,159]]],[[247,[-1]]],248],[-1,-1,[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[247,[-1]],23],[[247,[-1]]],248],0,[[[247,[-1]],23],[[247,[-1]]],248],0,[-1,[[247,[-1]]],248],[[-1,167],[[168,[[7,[3]]]]],[]],[[-1,167],[[168,[[7,[3]]]]],[]],[[[247,[-1]],167],[[168,[[7,[3]]]]],248],[[-1,[8,[209]]],[[163,[[162,[161,159]]]]],[]],[[-1,[8,[207]]],[[163,[[162,[161,159]]]]],[]],[[[247,[-1]],138],[[247,[-1]]],248],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[247,[-1]],-2]]],248,153],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[249,249],[[-1,-2],3,[],[]],[[249,-1],3,128],[249,23],[[249,249],4],[[249,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[249]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[[250,[-1]],138],[[250,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[250,[-1]]],[[250,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[250,[143]],144]]],[[146,[145]]]],[[[250,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],[[[250,[-1]],-2],[[7,[[147,[106]],140]]],[[142,[[141,[139,140]]]]],[[148,[105]]]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[250,[-1]],23],[[250,[-1]]],[[142,[[141,[139,140]]]]]],[[[250,[-1]],23],[[250,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[250,[-1]]],[[142,[[141,[139,140]]]]]],[[[250,[-1]],138],[[250,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[250,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[250,[-1]]],[[142,[[141,[139,140]]]]]],0,0,[[[251,[-1]],138],[[251,[-1]]],252],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[251,[-1]],[151,[-2]]],[],252,[157,158]],[[[251,[-1]]],[[251,[-1]]],252],[[-1,-2],3,[],[]],[[[251,[-1]],5],[[7,[3,6]]],[27,252]],[-1,-1,[]],[[[160,[-1,159]]],[[251,[-1]]],252],[-1,-1,[]],[[-1,[8,[105]]],[[163,[[162,[161,159]]]]],[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[251,[-1]],23],[[251,[-1]]],252],0,[[[251,[-1]],23],[[251,[-1]]],252],0,[-1,[[251,[-1]]],252],[[-1,167],[[168,[[7,[3]]]]],[]],[[[251,[-1]],167],[[168,[[7,[3]]]]],252],[[-1,167],[[168,[[7,[3]]]]],[]],[[[251,[-1]],138],[[251,[-1]]],252],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[251,[-1]],-2]]],252,153],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[253,253],[[-1,-2],3,[],[]],[[253,-1],3,128],[253,23],[[253,253],4],[[253,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[253]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[254,254],[[-1,-2],3,[],[]],[[254,-1],3,128],[254,23],[[254,254],4],[[254,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[15,[254]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[255,3],[256,3],[257,3],[258,3],[259,3],[260,3],[261,3],[262,3],[263,3],[264,3],[265,3],[266,3],[267,3],[268,3],[269,3],[270,3],[271,3],[272,3],[273,3],[274,3],[275,3],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[266,266],[267,267],[268,268],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,0,[[],255],[[],256],[[],257],[[],258],[[],259],[[],260],[[],261],[[],262],[[],263],[[],264],[[],265],[[],266],[[],267],[[],268],[[],269],[[],270],[[],271],[[],272],[[],273],[[],274],[[],275],0,[255,23],[256,23],[257,23],[258,23],[259,23],[260,23],[261,23],[262,23],[263,23],[264,23],[265,23],[266,23],[267,23],[268,23],[269,23],[270,23],[271,23],[272,23],[273,23],[274,23],[275,23],0,0,[[255,255],4],[[256,256],4],[[257,257],4],[[258,258],4],[[259,259],4],[[260,260],4],[[261,261],4],[[262,262],4],[[263,263],4],[[264,264],4],[[265,265],4],[[266,266],4],[[267,267],4],[[268,268],4],[[269,269],4],[[270,270],4],[[271,271],4],[[272,272],4],[[273,273],4],[[274,274],4],[[275,275],4],[[255,5],[[7,[3,6]]]],[[256,5],[[7,[3,6]]]],[[257,5],[[7,[3,6]]]],[[258,5],[[7,[3,6]]]],[[259,5],[[7,[3,6]]]],[[260,5],[[7,[3,6]]]],[[261,5],[[7,[3,6]]]],[[262,5],[[7,[3,6]]]],[[263,5],[[7,[3,6]]]],[[264,5],[[7,[3,6]]]],[[265,5],[[7,[3,6]]]],[[266,5],[[7,[3,6]]]],[[267,5],[[7,[3,6]]]],[[268,5],[[7,[3,6]]]],[[269,5],[[7,[3,6]]]],[[270,5],[[7,[3,6]]]],[[271,5],[[7,[3,6]]]],[[272,5],[[7,[3,6]]]],[[273,5],[[7,[3,6]]]],[[274,5],[[7,[3,6]]]],[[275,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[276,276],[[-1,-2],3,[],[]],[[276,-1],3,128],[276,23],[[276,276],4],[[276,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[276]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[[277,[-1]],138],[[277,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[277,[-1]]],[[277,[-1]]],20],[[-1,-2],3,[],[]],[-1,[[7,[[277,[143]],144]]],[[146,[145]]]],[[[277,[-1]],5],[[7,[3,6]]],27],[-1,-1,[]],[-1,-1,[]],[[[277,[-1]],-2],[[7,[[147,[257]],140]]],[[142,[[141,[139,140]]]]],[[148,[256]]]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[277,[-1]],23],[[277,[-1]]],[[142,[[141,[139,140]]]]]],[[[277,[-1]],23],[[277,[-1]]],[[142,[[141,[139,140]]]]]],[-1,[[277,[-1]]],[[142,[[141,[139,140]]]]]],[[[277,[-1]],138],[[277,[-1]]],[[142,[[141,[139,140]]]]]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[277,[[150,[-1,-2]]]]],[[152,[[151,[[141,[139,140]]]]]],[142,[[141,[139,140]]]]],153],[[-1,154],[[277,[-1]]],[[142,[[141,[139,140]]]]]],0,0,0,0,0,0,0,0,0,0,0,[278,25],[-1,279,[]],[-1,-2,[],[]],[-1,-2,[],[]],[278,278],[[-1,-2],3,[],[]],[[278,-1],3,128],[278,23],[[278,278],4],[[278,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[278]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[[[280,[-1]],138],[[280,[-1]]],281],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[151,[-2]]],[],[],[]],[[-1,[151,[-2]]],[],[],[]],[[[280,[-1]],[151,[-2]]],[],281,[157,158]],[[[280,[-1]]],[[280,[-1]]],281],[[-1,-2],3,[],[]],[[[280,[-1]],5],[[7,[3,6]]],[27,281]],[-1,-1,[]],[[[160,[-1,159]]],[[280,[-1]]],281],[-1,-1,[]],[[-1,[8,[256]]],[[163,[[162,[161,159]]]]],[]],0,[-1,-2,[],[]],[-1,[[165,[-2]]],[],[]],[-1,[[166,[-2,-3]]],[],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[280,[-1]],23],[[280,[-1]]],281],0,[[[280,[-1]],23],[[280,[-1]]],281],0,[-1,[[280,[-1]]],281],[[-1,167],[[168,[[7,[3]]]]],[]],[[[280,[-1]],167],[[168,[[7,[3]]]]],281],[[-1,167],[[168,[[7,[3]]]]],[]],[[[280,[-1]],138],[[280,[-1]]],281],0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-2],[[150,[[280,[-1]],-2]]],281,153],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[[-1,-2],3,[],[]],[[124,-1],3,128],[124,23],[[124,124],4],[[124,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[15,[124]],129,130,-1,131],[[7,[3,2]]],132],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]]],"c":[608,644,684,718,1418,1419,1420,2037,3060,3061,3062],"p":[[8,"Error",4808],[3,"DecodeError",0],[15,"tuple"],[15,"bool"],[3,"Formatter",4809],[3,"Error",4809],[4,"Result",4810],[3,"Request",4811],[3,"Request",4811],[3,"String",4812],[3,"TypeId",4813],[4,"Error",30],[8,"Any",4813],[3,"Backtrace",4814],[4,"Option",4815],[3,"IntoColumnDataTypeSnafu",30],[4,"ConcreteDataType",4816],[8,"Into",4817],[3,"UnknownColumnDataTypeSnafu",30],[8,"Clone",4818],[3,"ConvertColumnDefaultConstraintSnafu",30],[3,"InvalidColumnDefaultConstraintSnafu",30],[15,"usize"],[3,"Vec",4819],[15,"str"],[6,"Result",4809],[8,"Debug",4809],[15,"i32"],[8,"StackError",4820],[4,"StatusCode",4821],[3,"ColumnDataTypeWrapper",145],[15,"i128"],[3,"IntervalMonthDayNano",734],[3,"Decimal128",4822],[3,"Decimal128",734],[4,"ColumnDataType",734],[3,"DdlRequest",734],[3,"ColumnDataTypeExtension",734],[4,"SemanticType",734],[3,"Value",734],[4,"ValueRef",4823],[3,"Values",2098],[4,"Value",4823],[6,"VectorRef",4824],[3,"Column",734],[3,"QueryRequest",734],[4,"Request",2262],[6,"Result",30],[3,"Row",734],[8,"Iterator",4825],[3,"ReadRequest",215],[3,"Iter",4826],[3,"Cloned",4827],[3,"FilterMap",4828],[3,"MetricMetadata",215],[3,"Sample",215],[3,"Exemplar",215],[3,"TimeSeries",215],[3,"Label",215],[3,"Labels",215],[3,"LabelMatcher",215],[3,"ReadHints",215],[3,"Chunk",215],[3,"ChunkedSeries",215],[3,"WriteRequest",215],[3,"ReadResponse",215],[3,"Query",215],[3,"QueryResult",215],[3,"ChunkedReadResponse",215],[4,"ResponseType",700],[4,"MetricType",660],[4,"Type",624],[4,"Encoding",590],[4,"Ordering",4829],[15,"u64"],[8,"Hash",4830],[8,"Sized",4831],[8,"BuildHasher",4830],[8,"Hasher",4830],[4,"OpType",734],[3,"RequestHeader",734],[3,"ResponseHeader",734],[3,"Status",734],[3,"AuthHeader",734],[3,"Basic",734],[3,"Token",734],[3,"AffectedRows",734],[3,"FlightMetadata",734],[3,"DecimalTypeExtension",734],[3,"CreateTableExpr",734],[3,"AlterExpr",734],[3,"DropTableExpr",734],[3,"CreateDatabaseExpr",734],[3,"TruncateTableExpr",734],[3,"AddColumns",734],[3,"DropColumns",734],[3,"RenameTable",734],[3,"AddColumn",734],[3,"DropColumn",734],[3,"TableId",734],[3,"ColumnDef",734],[3,"AddColumnLocation",734],[3,"Rows",734],[3,"ColumnSchema",734],[3,"PromqlRequest",734],[3,"PromqlResponse",734],[3,"PromInstantQuery",734],[3,"PromRangeQuery",734],[3,"GreptimeRequest",734],[3,"GreptimeResponse",734],[3,"InsertRequests",734],[3,"InsertRequest",734],[3,"DeleteRequests",734],[3,"DeleteRequest",734],[3,"RowInsertRequests",734],[3,"RowInsertRequest",734],[3,"RowDeleteRequests",734],[3,"RowDeleteRequest",734],[3,"HealthCheckRequest",734],[3,"HealthCheckResponse",734],[3,"Mutation",734],[3,"WalEntry",734],[8,"Deserializer",4832],[4,"ValueData",4757],[4,"LocationType",2019],[8,"Serializer",4833],[4,"Kind",2053],[8,"BufMut",4834],[15,"u32"],[4,"WireType",4835],[3,"DecodeContext",4835],[8,"Buf",4836],[4,"AuthScheme",2076],[4,"TypeExt",2149],[3,"ColumnSchema",4837],[4,"Expr",2171],[3,"GreptimeDatabaseClient",2196],[4,"CompressionEncoding",4838],[3,"Bytes",4839],[3,"Status",4840],[3,"UnsyncBoxBody",4841],[8,"GrpcService",4842],[3,"Channel",4843],[3,"Error",4844],[3,"Endpoint",4845],[8,"TryInto",4817],[3,"Response",4846],[8,"IntoRequest",4811],[8,"IntoStreamingRequest",4811],[3,"InterceptedService",4847],[3,"Request",4848],[8,"Service",4849],[8,"Interceptor",4847],[3,"Uri",4850],[3,"GreptimeDatabaseServer",2223],[8,"GreptimeDatabase",2223],[8,"Body",4851],[8,"Send",4831],[3,"Global",4852],[3,"Arc",4853],[8,"Future",4854],[3,"Box",4855],[3,"Pin",4856],[3,"Streaming",4857],[3,"IntoMakeService",4858],[3,"IntoMakeServiceWithConnectInfo",4859],[3,"Context",4860],[4,"Poll",4861],[4,"Response",2288],[3,"HealthCheckClient",2309],[3,"HealthCheckServer",2335],[8,"HealthCheck",2335],[3,"InvertedIndexMetas",2373],[3,"InvertedIndexMeta",2373],[3,"InvertedIndexStats",2373],[4,"Role",2447],[4,"RegionRole",2447],[4,"DdlTaskType",2447],[3,"RequestHeader",2447],[3,"ResponseHeader",2447],[3,"Error",2447],[3,"Peer",2447],[3,"TableId",2447],[3,"TableName",2447],[3,"TimeInterval",2447],[3,"KeyValue",2447],[3,"HeartbeatRequest",2447],[3,"RegionStat",2447],[3,"HeartbeatResponse",2447],[3,"GrantedRegion",2447],[3,"RegionLease",2447],[3,"AskLeaderRequest",2447],[3,"AskLeaderResponse",2447],[3,"MailboxMessage",2447],[3,"TableRoute",2447],[3,"RegionRoute",2447],[3,"Table",2447],[3,"Region",2447],[3,"Partition",2447],[3,"TableRouteValue",2447],[3,"CreateTableTask",2447],[3,"DropTableTask",2447],[3,"AlterTableTask",2447],[3,"TruncateTableTask",2447],[3,"SubmitDdlTaskRequest",2447],[3,"SubmitDdlTaskResponse",2447],[3,"RangeRequest",2447],[3,"RangeResponse",2447],[3,"PutRequest",2447],[3,"PutResponse",2447],[3,"BatchGetRequest",2447],[3,"BatchGetResponse",2447],[3,"BatchPutRequest",2447],[3,"BatchPutResponse",2447],[3,"BatchDeleteRequest",2447],[3,"BatchDeleteResponse",2447],[3,"CompareAndPutRequest",2447],[3,"CompareAndPutResponse",2447],[3,"DeleteRangeRequest",2447],[3,"DeleteRangeResponse",2447],[3,"LockRequest",2447],[3,"LockResponse",2447],[3,"UnlockRequest",2447],[3,"UnlockResponse",2447],[4,"ErrorCode",2447],[3,"PeerDict",2447],[15,"i64"],[3,"Error",4862],[8,"Serialize",4833],[8,"Display",4809],[3,"RandomState",4863],[3,"HashMap",4863],[3,"ClusterClient",3682],[3,"ClusterServer",3709],[8,"Cluster",3709],[3,"DdlTaskClient",3748],[3,"DdlTaskServer",3774],[8,"DdlTask",3774],[3,"HeartbeatClient",3812],[3,"HeartbeatServer",3839],[8,"Heartbeat",3839],[3,"LockClient",3879],[3,"LockServer",3906],[8,"Lock",3906],[4,"Payload",3945],[3,"StoreClient",3966],[3,"StoreServer",3998],[8,"Store",3998],[4,"Task",4042],[3,"PrometheusGatewayClient",4066],[3,"PrometheusGatewayServer",4092],[8,"PrometheusGateway",4092],[4,"Promql",4130],[4,"Query",4152],[3,"RegionRequestHeader",4175],[3,"RegionRequest",4175],[3,"RegionResponse",4175],[3,"InsertRequests",4175],[3,"DeleteRequests",4175],[3,"InsertRequest",4175],[3,"DeleteRequest",4175],[3,"QueryRequest",4175],[3,"CreateRequest",4175],[3,"DropRequest",4175],[3,"OpenRequest",4175],[3,"CloseRequest",4175],[3,"AlterRequest",4175],[3,"AddColumns",4175],[3,"DropColumns",4175],[3,"AddColumn",4175],[3,"DropColumn",4175],[3,"FlushRequest",4175],[3,"CompactRequest",4175],[3,"TruncateRequest",4175],[3,"RegionColumnDef",4175],[4,"Kind",4639],[3,"RegionClient",4661],[4,"Body",4687],[3,"UncasedStr",4864],[3,"RegionServer",4719],[8,"Region",4719],[13,"ConvertColumnDefaultConstraint",134],[13,"InvalidColumnDefaultConstraint",134],[13,"UnknownColumnDataType",134],[13,"IntoColumnDataType",134]],"b":[[12,"impl-Display-for-DecodeError"],[13,"impl-Debug-for-DecodeError"],[75,"impl-Debug-for-Error"],[76,"impl-Display-for-Error"],[2972,"impl-Display-for-MailboxMessage"],[2973,"impl-Debug-for-MailboxMessage"]]},\
"auth":{"doc":"","t":"NNGENNNNEIGEENNNNNNNNIGIGMMMKFKKKAAKAMMMMMMAAFFKRGGENENNGNGFLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLFFLLNDNDNENDNDNDNDNNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMNNNNNIEENNNNNLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIKLLLLLLLLLLLLLLLLLLLLLLKLMLLILLKKKARDLLLLLLLLLLLLLLLLLLLLLLLLML","n":["Allow","GrpcRequest","HashedPassword","Identity","LineProtocol","MysqlNativePassword","Opentsdb","Otlp","Password","PermissionChecker","PermissionCheckerRef","PermissionReq","PermissionResp","PgMD5","PlainText","PromQuery","PromStoreRead","PromStoreWrite","Reject","SqlStatement","UserId","UserInfo","UserInfoRef","UserProvider","UserProviderRef","alloc","alloc","alloc","as_any","auth_mysql","authenticate","authorize","check_permission","common","error","name","permission","phantom","phantom","phantom","ptr","ptr","ptr","user_info","user_provider","user_provider_from_option","userinfo_by_name","username","DEFAULT_USERNAME","HashedPassword","HostOrIp","Identity","MysqlNativePassword","Password","PgMD5","PlainText","Salt","UserId","Username","auth_mysql","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","double_sha1","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","sha1_one","sha1_two","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","user_provider_from_option","userinfo_by_name","vzip","vzip","AccessDenied","AccessDeniedSnafu","AuthBackend","AuthBackendSnafu","Err","Error","IllegalParam","IllegalParamSnafu","InternalState","InternalStateSnafu","InvalidConfig","InvalidConfigSnafu","Io","IoSnafu","Ok","PermissionDenied","PermissionDeniedSnafu","Result","UnsupportedPasswordType","UnsupportedPasswordTypeSnafu","UserNotFound","UserNotFoundSnafu","UserPasswordMismatch","UserPasswordMismatchSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","msg","msg","next","password_type","schema","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","username","username","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","error","location","location","location","msg","msg","msg","password_type","schema","source","username","username","username","value","Allow","GrpcRequest","LineProtocol","Opentsdb","Otlp","PermissionChecker","PermissionReq","PermissionResp","PromQuery","PromStoreRead","PromStoreWrite","Reject","SqlStatement","borrow","borrow","borrow_mut","borrow_mut","check_permission","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DefaultUserInfo","UserInfo","as_any","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","username","username","username","vzip","with_name","UserProvider","auth","auth","authenticate","authorize","name","static_user_provider","STATIC_USER_PROVIDER","StaticUserProvider","authenticate","authorize","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","name","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","users","vzip"],"q":[[0,"auth"],[48,"auth::common"],[112,"auth::error"],[465,"auth::error::Error"],[480,"auth::permission"],[542,"auth::user_info"],[572,"auth::user_provider"],[579,"auth::user_provider::static_user_provider"],[607,"core::any"],[608,"core::future::future"],[609,"alloc::boxed"],[610,"core::pin"],[611,"core::option"],[612,"alloc::string"],[613,"async_compat"],[614,"alloc::vec"],[615,"core::fmt"],[616,"core::fmt"],[617,"tonic::request"],[618,"core::any"],[619,"snafu::backtrace_inert"],[620,"core::convert"],[621,"core::clone"],[622,"core::fmt"],[623,"common_error::status_code"]],"d":["","","","","","","","","Authentication information sent by the client.","","","","","","","","","","","","","","pub type alias","","","","","","","","Checks whether a user is valid and allowed to access the …","Checks whether a connection request from a certain user to …","","","","","","","","","","","","","","","construct a <code>UserInfo</code> impl with name use default username …","","","","","","","Authentication information sent by the client.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","construct a <code>UserInfo</code> impl with name use default username …","","","","SNAFU context selector for the <code>Error::AccessDenied</code> variant","","SNAFU context selector for the <code>Error::AuthBackend</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::IllegalParam</code> variant","","SNAFU context selector for the <code>Error::InternalState</code> variant","","SNAFU context selector for the <code>Error::InvalidConfig</code> variant","","SNAFU context selector for the <code>Error::Io</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::PermissionDenied</code> …","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UserNotFound</code> variant","","SNAFU context selector for the <code>Error::UserPasswordMismatch</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Combination of authenticate() and authorize(). In most …","Combination of authenticate() and authorize(). In most …","Checks whether a user is valid and allowed to access the …","Checks whether a connection request from a certain user to …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[16,15,0,0,15,9,15,15,0,0,0,0,0,9,9,15,15,15,16,15,8,0,0,0,0,13,18,49,50,0,51,51,52,0,0,51,0,13,18,49,13,18,49,0,0,0,0,50,0,0,0,0,9,0,9,9,0,8,0,0,9,8,9,8,8,8,9,8,9,8,9,8,9,8,9,8,0,9,8,8,9,8,8,9,8,9,8,9,8,9,9,8,8,9,8,0,0,8,9,8,9,8,9,8,9,8,9,8,0,0,9,8,29,0,29,0,7,0,29,0,29,0,29,0,29,0,7,29,0,0,29,0,29,0,29,0,29,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,36,37,38,39,40,39,29,32,34,35,42,43,36,37,38,39,40,32,34,35,42,43,36,37,38,39,40,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,36,37,38,39,40,32,34,35,42,43,36,37,38,39,40,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,32,32,34,34,35,35,42,42,43,43,36,36,37,37,38,38,39,39,40,40,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,29,37,39,29,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,32,34,35,42,43,36,37,38,39,40,29,36,38,39,32,32,34,35,42,43,36,37,38,39,40,29,53,54,54,55,56,57,58,59,60,53,55,61,62,53,57,16,15,15,15,15,0,0,0,15,15,15,16,15,15,16,15,16,52,15,15,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,16,15,15,16,15,16,15,16,15,15,16,16,15,16,15,15,16,15,16,15,16,15,16,15,16,15,16,0,0,50,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,50,47,47,47,47,0,51,51,51,51,51,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[[2,[4,[3]],5,[4,[3]]],[[7,[6]]]],[[-1,8,9],[[12,[[11,[10]]]]],[]],[[-1,5,5,13],[[12,[[11,[10]]]]],[]],[[-1,[14,[13]],15],[[7,[16]]],[]],0,0,[-1,5,[]],0,0,0,0,0,0,0,0,0,[17,[[7,[18]]]],[[[14,[17]]],13],[-1,5,[]],0,0,0,0,0,0,0,0,0,0,0,[[2,[4,[3]],5,[4,[3]]],[[7,[6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],6,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[[[4,[3]]],[[21,[3]]]],[20,6],[20,6],[[8,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[[[4,[3]]],[[21,[3]]]],[[[4,[3]],[4,[3]]],[[21,[3]]]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[17,[[7,[18]]]],[[[14,[17]]],13],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,1],[-1,30,[]],[29,[[14,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[-1,-2]]],29,[[33,[17]]],[[33,[17]]]],[[[34,[-1]]],29,[[33,[17]]]],[[[35,[-1]]],29,[[33,[17]]]],[[[36,[-1]]],29,[[33,[17]]]],[[[37,[-1]]],29,[[33,[17]]]],[[[38,[-1]]],29,[[33,[17]]]],[[[39,[-1,-2,-3]]],29,[[33,[17]]],[[33,[17]]],[[33,[17]]]],[40,29],0,[29,[[14,[30]]]],[[[32,[-1,-2]]],[[32,[-1,-2]]],41,41],[[[34,[-1]]],[[34,[-1]]],41],[[[35,[-1]]],[[35,[-1]]],41],[42,42],[43,43],[[[36,[-1]]],[[36,[-1]]],41],[[[37,[-1]]],[[37,[-1]]],41],[[[38,[-1]]],[[38,[-1]]],41],[[[39,[-1,-2,-3]]],[[39,[-1,-2,-3]]],41,41,41],[40,40],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[29,20,[21,[17]]],6],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[29,5],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[20,6],[[[32,[-1,-2]]],[[27,[-3,29]]],[[33,[17]]],[[33,[17]]],[]],[[[34,[-1]]],[[27,[-2,29]]],[[33,[17]]],[]],[[[35,[-1]]],[[27,[-2,29]]],[[33,[17]]],[]],[[[36,[-1]]],[[27,[-2,29]]],[[33,[17]]],[]],[[[37,[-1]]],[[27,[-2,29]]],[[33,[17]]],[]],[[[38,[-1]]],[[27,[-2,29]]],[[33,[17]]],[]],[[[39,[-1,-2,-3]]],[[27,[-4,29]]],[[33,[17]]],[[33,[17]]],[[33,[17]]],[]],[40,[[27,[-1,29]]],[]],[[[32,[-1,-2]],22],23,44,44],[[[34,[-1]],22],23,44],[[[35,[-1]],22],23,44],[[42,22],23],[[43,22],23],[[[36,[-1]],22],23,44],[[[37,[-1]],22],23,44],[[[38,[-1]],22],23,44],[[[39,[-1,-2,-3]],22],23,44,44,44],[[40,22],23],[[29,22],23],[[29,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[-1,-2]]],29,[[33,[17]]],[[33,[17]]]],[[[34,[-1]]],29,[[33,[17]]]],[[[35,[-1]]],29,[[33,[17]]]],[42,29],[43,29],[[[36,[-1]]],29,[[33,[17]]]],[[[37,[-1]]],29,[[33,[17]]]],[[[38,[-1]]],29,[[33,[17]]]],[[[39,[-1,-2,-3]]],29,[[33,[17]]],[[33,[17]]],[[33,[17]]]],[40,29],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,0,[29,[[14,[45]]]],0,0,[29,[[14,[30]]]],[29,46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[14,[13]],15],[[7,[16]]],[]],[15,15],[[-1,-2],6,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,6],[20,6],[[15,22],23],[[16,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,1,[]],[47,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[20,-1,[]],[20,-1,[]],[20,6],[[47,22],23],[-1,-1,[]],[-1,-2,[],[]],[[],20],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,26,[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,5,[]],[47,5],0,[-1,-2,[],[]],[-1,13,[[33,[17]]]],0,[[-1,8,9,5,5],[[12,[[11,[10]]]]],[]],[[-1,8,9,5,5],[[12,[[11,[10]]]]],[]],[[-1,8,9],[[12,[[11,[10]]]]],[]],[[-1,5,5,13],[[12,[[11,[10]]]]],[]],[-1,5,[]],0,0,0,[[48,8,9],[[12,[[11,[10]]]]]],[[48,5,5,13],[[12,[[11,[10]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[20,-1,[]],[20,-1,[]],[20,6],[-1,-1,[]],[-1,-2,[],[]],[[],20],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,26,[]],[48,5],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[5,[[7,[48]]]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,[-1,-2,[],[]]],"c":[],"p":[[8,"Any",607],[6,"HashedPassword",48],[15,"u8"],[15,"slice"],[15,"str"],[15,"tuple"],[6,"Result",112],[4,"Identity",48],[4,"Password",48],[8,"Future",608],[3,"Box",609],[3,"Pin",610],[6,"UserInfoRef",0],[4,"Option",611],[4,"PermissionReq",480],[4,"PermissionResp",480],[3,"String",612],[6,"UserProviderRef",0],[3,"Compat",613],[15,"usize"],[3,"Vec",614],[3,"Formatter",615],[6,"Result",615],[3,"Request",616],[3,"Request",616],[15,"bool"],[4,"Result",617],[3,"TypeId",607],[4,"Error",112],[8,"Error",618],[3,"Backtrace",619],[3,"InvalidConfigSnafu",112],[8,"Into",620],[3,"IllegalParamSnafu",112],[3,"InternalStateSnafu",112],[3,"UserNotFoundSnafu",112],[3,"UnsupportedPasswordTypeSnafu",112],[3,"UserPasswordMismatchSnafu",112],[3,"AccessDeniedSnafu",112],[3,"PermissionDeniedSnafu",112],[8,"Clone",621],[3,"IoSnafu",112],[3,"AuthBackendSnafu",112],[8,"Debug",615],[8,"StackError",622],[4,"StatusCode",623],[3,"DefaultUserInfo",542],[3,"StaticUserProvider",579],[6,"PermissionCheckerRef",0],[8,"UserInfo",542],[8,"UserProvider",572],[8,"PermissionChecker",480],[13,"AccessDenied",465],[13,"Io",465],[13,"AuthBackend",465],[13,"PermissionDenied",465],[13,"InvalidConfig",465],[13,"IllegalParam",465],[13,"InternalState",465],[13,"UnsupportedPasswordType",465],[13,"UserNotFound",465],[13,"UserPasswordMismatch",465]],"b":[[277,"impl-Display-for-Error"],[278,"impl-Debug-for-Error"]]},\
"catalog":{"doc":"","t":"IGDDGDDDDMKLLLLLLLLLLLLMMMMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAMMMMMMMMMKKKMKMMMMMKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDGNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRDIDGRMLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLMKLKLAKLLLLLLLLLLLLLRRDDRRRRLLLLLLMMMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLDDLLLLLLMMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLMLMMLLLLLLLLLLLLLDDDMMAMMAMMMMRRRGDDMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMMLLLLLLLLLLLLLLLLLDDLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLMLLLLLLLLLLLLLLLLLCACDGLMLLLLLMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLDDDDDRMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLLMMLLMLLLLLLLLLLLMLLLLLL","n":["CatalogManager","CatalogManagerRef","DeregisterSchemaRequest","DeregisterTableRequest","OpenSystemTableHook","RegisterSchemaRequest","RegisterSystemTableRequest","RegisterTableRequest","RenameTableRequest","alloc","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","catalog","catalog","catalog","catalog_exists","catalog_names","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table_request","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","information_schema","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kvbackend","memory","metrics","new_table_name","open_hook","phantom","ptr","schema","schema","schema","schema","schema","schema_exists","schema_names","table","table","table_exists","table_id","table_id","table_name","table_name","table_name","table_names","table_source","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","CatalogNotFound","CatalogNotFoundSnafu","CompileScriptInternal","CompileScriptInternalSnafu","CreateRecordBatch","CreateRecordBatchSnafu","CreateSystemCatalog","CreateSystemCatalogSnafu","CreateTable","CreateTableSnafu","Datafusion","DatafusionSnafu","EmptyValue","EmptyValueSnafu","Err","Error","Generic","GenericSnafu","InsertCatalogRecord","InsertCatalogRecordSnafu","Internal","InternalSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidEntryType","InvalidEntryTypeSnafu","InvalidKey","InvalidKeySnafu","InvalidTableInfoInCatalog","InvalidTableInfoInCatalogSnafu","ListCatalogs","ListCatalogsSnafu","ListSchemas","ListSchemasSnafu","MetaSrv","MetaSrvSnafu","NotSupported","NotSupportedSnafu","Ok","OpenSystemCatalog","OpenSystemCatalogSnafu","OpenTable","OpenTableSnafu","ParallelOpenTable","ParallelOpenTableSnafu","QueryAccessDenied","QueryAccessDeniedSnafu","ReadSystemCatalog","ReadSystemCatalogSnafu","Result","SchemaExists","SchemaExistsSnafu","SchemaNotFound","SchemaNotFoundSnafu","SystemCatalog","SystemCatalogSnafu","SystemCatalogTableScan","SystemCatalogTableScanExec","SystemCatalogTableScanExecSnafu","SystemCatalogTableScanSnafu","SystemCatalogTypeMismatch","SystemCatalogTypeMismatchSnafu","TableEngineNotFound","TableEngineNotFoundSnafu","TableExists","TableExistsSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotExist","TableNotExistSnafu","TableNotFound","TableNotFoundSnafu","TableSchemaMismatch","TableSchemaMismatchSnafu","Unimplemented","UnimplementedSnafu","UpgradeWeakCatalogManagerRef","UpgradeWeakCatalogManagerRefSnafu","ValueDeserialize","ValueDeserializeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","catalog","catalog_name","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine_name","entry_type","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","msg","msg","next","op","operation","schema","schema","schema","source","status_code","table","table","table_id","table_info","table_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","catalog","catalog_name","data_type","engine_name","entry_type","error","error","error","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","operation","schema","schema","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table_id","table_info","table_info","COLUMNS","InformationSchemaProvider","InformationTable","InformationTableDataSource","InformationTableRef","TABLES","alloc","borrow","borrow","borrow_mut","borrow_mut","build","catalog_manager","catalog_name","columns","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_stream","information_table","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","phantom","ptr","schema","table","table","table_id","table_info","table_name","table_type","tables","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_project","type_id","type_id","vzip","vzip","COLUMN_NAME","DATA_TYPE","InformationSchemaColumns","InformationSchemaColumnsBuilder","SEMANTIC_TYPE","TABLE_CATALOG","TABLE_NAME","TABLE_SCHEMA","add_column","borrow","borrow","borrow_mut","borrow_mut","builder","catalog_manager","catalog_manager","catalog_name","catalog_name","catalog_names","column_names","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_types","deref","deref","deref_mut","deref_mut","drop","drop","execute","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","make_tables","new","new","schema","schema","schema","schema","schema","schema_names","semantic_types","table_id","table_name","table_names","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InformationSchemaTables","InformationSchemaTablesBuilder","add_table","borrow","borrow","borrow_mut","borrow_mut","builder","catalog_manager","catalog_manager","catalog_name","catalog_name","catalog_names","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","engines","execute","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","make_tables","new","new","schema","schema","schema","schema","schema","schema_names","table_id","table_ids","table_name","table_names","table_types","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CachedMetaKvBackend","KvBackendCatalogManager","MetaKvBackend","cache","cache_invalidator","client","client","kv_backend","manager","name","partition_manager","system_catalog","table_metadata_manager","CACHE_MAX_CAPACITY","CACHE_TTI_SECOND","CACHE_TTL_SECOND","CacheBackendRef","CachedMetaKvBackend","MetaKvBackend","alloc","as_any","as_any","batch_delete","batch_delete","batch_get","batch_get","batch_put","batch_put","borrow","borrow","borrow_mut","borrow_mut","cache","cache","client","compare_and_put","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_range","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_subset","from_subset","get","get","init","init","into","into","into_request","into_request","into_request","into_request","invalidate_key","invalidate_table_id","invalidate_table_name","is_in_subset","is_in_subset","kv_backend","name","name","name","new","phantom","ptr","put","put","range","range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wrap","KvBackendCatalogManager","SystemCatalog","as_any","borrow","borrow","borrow_mut","borrow_mut","cache_invalidator","catalog_exists","catalog_manager","catalog_names","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","invalidate_table_id","invalidate_table_name","is_in_subset","is_in_subset","new","partition_manager","partition_manager","schema_exist","schema_exists","schema_names","schema_names","system_catalog","table","table","table_exist","table_exists","table_metadata_manager","table_metadata_manager_ref","table_names","table_names","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MemoryCatalogManager","manager","new_memory_catalog_manager","MemoryCatalogManager","SchemaEntries","as_any","base","borrow","borrow_mut","catalog_exist_sync","catalog_exists","catalog_names","catalogs","clone","clone_into","compat","compat_mut","compat_ref","create_catalog_entry","deref","deref_mut","deregister_table_sync","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","new","new_memory_catalog_manager","register_catalog_sync","register_schema_sync","register_table_sync","schema_exist_sync","schema_exists","schema_names","table","table_exists","table_names","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_default_setup","METRIC_CATALOG_KV_GET","METRIC_CATALOG_KV_REMOTE_GET","METRIC_CATALOG_MANAGER_CATALOG_COUNT","METRIC_CATALOG_MANAGER_SCHEMA_COUNT","METRIC_CATALOG_MANAGER_TABLE_COUNT","METRIC_DB_LABEL","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","DfTableSourceProvider","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","default_catalog","default_schema","deref","deref_mut","disallow_cross_schema_query","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","new","resolve_table","resolve_table_ref","resolved_tables","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"catalog"],[196,"catalog::error"],[1387,"catalog::error::Error"],[1465,"catalog::information_schema"],[1534,"catalog::information_schema::columns"],[1609,"catalog::information_schema::tables"],[1678,"catalog::kvbackend"],[1691,"catalog::kvbackend::client"],[1773,"catalog::kvbackend::manager"],[1848,"catalog::memory"],[1851,"catalog::memory::manager"],[1898,"catalog::metrics"],[2019,"catalog::table_source"],[2049,"core::any"],[2050,"core::future::future"],[2051,"alloc::boxed"],[2052,"core::pin"],[2053,"async_compat"],[2054,"core::fmt"],[2055,"core::fmt"],[2056,"tonic::request"],[2057,"core::result"],[2058,"core::any"],[2059,"snafu::backtrace_inert"],[2060,"alloc::string"],[2061,"core::convert"],[2062,"datatypes::data_type"],[2063,"core::clone"],[2064,"alloc::vec"],[2065,"core::fmt"],[2066,"common_error::ext"],[2067,"common_error::status_code"],[2068,"alloc::sync"],[2069,"table::table"],[2070,"std::collections::hash::map"],[2071,"store_api::storage::requests"],[2072,"common_recordbatch"],[2073,"common_error::ext"],[2074,"store_api::storage::descriptors"],[2075,"table::metadata"],[2076,"datafusion_execution::stream"],[2077,"common_recordbatch::recordbatch"],[2078,"arrow_schema::schema"],[2079,"common_meta::rpc::store"],[2080,"common_meta::rpc::store"],[2081,"moka::future::cache"],[2082,"common_meta::rpc::store"],[2083,"alloc::alloc"],[2084,"common_meta::table_name"],[2085,"meta_client::client"],[2086,"common_meta::rpc::store"],[2087,"common_meta::cache_invalidator"],[2088,"common_meta::key"],[2089,"prometheus::gauge"],[2090,"prometheus::gauge"],[2091,"session::context"],[2092,"datafusion_common::table_reference"],[2093,"datafusion_expr::table_source"],[2094,"datafusion_common::table_reference"]],"d":["","","","","Hook called after system table opening.","","Register system table request:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the table by catalog, schema and table name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","","SNAFU context selector for the <code>Error::CompileScriptInternal</code>…","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::CreateSystemCatalog</code> …","","SNAFU context selector for the <code>Error::CreateTable</code> variant","","SNAFU context selector for the <code>Error::Datafusion</code> variant","","SNAFU context selector for the <code>Error::EmptyValue</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::Generic</code> variant","","SNAFU context selector for the <code>Error::InsertCatalogRecord</code> …","","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the <code>Error::InvalidEntryType</code> …","","SNAFU context selector for the <code>Error::InvalidKey</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ListCatalogs</code> variant","","SNAFU context selector for the <code>Error::ListSchemas</code> variant","","SNAFU context selector for the <code>Error::MetaSrv</code> variant","","SNAFU context selector for the <code>Error::NotSupported</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::OpenSystemCatalog</code> …","","SNAFU context selector for the <code>Error::OpenTable</code> variant","","SNAFU context selector for the <code>Error::ParallelOpenTable</code> …","","SNAFU context selector for the <code>Error::QueryAccessDenied</code> …","","SNAFU context selector for the <code>Error::ReadSystemCatalog</code> …","","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::SystemCatalog</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::TableEngineNotFound</code> …","","SNAFU context selector for the <code>Error::TableExists</code> variant","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotExist</code> variant","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableSchemaMismatch</code> …","","SNAFU context selector for the <code>Error::Unimplemented</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ValueDeserialize</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeuild a map of TableRef in information schema. Including …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct the <code>information_schema.tables</code> virtual table","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the <code>information_schema.TABLE</code> table row by row","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct the <code>information_schema.tables</code> virtual table","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access all existing catalog, schema and tables.","","","","","","","","","","A sub-CatalogManager that handles system tables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access all existing catalog, schema and tables.","Existing system tables:","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A sub-CatalogManager that handles system tables","","","","","","","","","","","","","","","","","","","","","","","","","","Simple in-memory list of catalogs","","","","","","","","","Collection of catalogs containing schemas and ultimately …","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Create a memory catalog list contains a numbers table for …","Registers a catalog if it does not exist and returns false …","Registers a schema if it does not exist. It returns an …","Registers a schema and returns an error if the catalog or …","","","","","","","","","","","","","","Creates a manager with some default setups (e.g. default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,129,73,135,6,7,8,9,10,135,6,7,8,9,10,6,7,8,9,10,73,73,6,7,8,9,10,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,0,6,7,8,9,10,135,6,7,8,9,10,6,7,8,9,10,135,6,7,8,9,10,0,135,6,7,8,9,10,135,6,7,8,9,10,135,135,6,6,7,7,8,8,9,9,10,10,135,6,7,8,9,10,0,0,0,7,135,129,129,6,7,8,9,10,73,73,73,6,73,6,7,6,7,8,73,0,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,22,0,22,0,22,0,22,0,22,0,22,0,22,0,88,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,88,22,0,22,0,22,0,22,0,22,0,0,22,0,22,0,22,0,22,22,0,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,0,22,22,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,25,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,46,35,43,34,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,28,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,53,30,25,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,45,45,46,46,48,48,49,49,50,50,51,51,25,25,28,28,30,30,32,32,33,33,52,52,53,53,34,34,35,35,36,36,37,37,38,38,39,39,40,40,54,54,55,55,41,41,56,56,57,57,58,58,59,59,60,60,42,42,61,61,62,62,63,63,64,64,43,43,65,65,66,66,44,44,67,67,22,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,32,25,44,22,40,39,35,38,43,22,22,36,37,54,51,41,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,45,46,48,49,50,51,25,28,30,32,33,52,53,34,35,36,37,38,39,40,54,55,41,56,57,58,59,60,42,61,62,63,64,43,65,66,44,67,22,136,137,138,139,140,141,142,143,144,145,146,147,136,148,149,150,151,152,140,142,146,153,143,141,139,137,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,145,171,172,173,152,172,158,157,137,156,138,147,136,148,149,150,151,141,159,161,162,163,164,165,167,168,169,170,171,173,154,155,159,151,160,0,0,0,0,0,0,174,81,77,81,77,81,81,81,0,81,77,81,77,81,77,81,77,81,77,81,77,81,77,81,77,77,81,81,77,81,77,81,81,77,77,81,77,81,77,174,174,82,81,77,82,81,82,82,0,82,81,77,81,77,81,77,81,77,77,81,77,81,77,0,0,0,0,0,0,0,0,90,91,90,91,90,91,91,90,91,90,90,90,91,90,91,90,91,90,90,91,90,91,90,91,90,91,90,91,90,91,90,91,90,91,90,91,91,90,90,91,90,90,91,90,91,91,91,91,90,90,90,91,91,90,91,91,90,91,90,91,90,91,90,91,90,91,90,0,0,96,98,96,98,96,98,98,96,98,96,96,98,96,98,96,98,96,98,96,98,96,98,96,96,98,96,98,96,98,96,98,96,98,96,98,98,96,96,98,96,96,98,96,98,98,98,98,96,96,98,96,98,96,96,98,98,96,98,96,98,96,98,96,98,96,98,96,0,0,0,99,115,0,100,99,0,99,115,115,115,0,0,0,0,0,0,175,99,100,99,100,99,100,99,100,99,100,99,100,99,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,100,99,100,99,100,99,100,99,100,99,100,99,99,100,100,99,99,99,99,100,99,99,100,99,99,175,175,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,100,99,0,0,115,115,116,115,116,115,115,116,115,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,115,116,116,115,115,115,116,115,115,115,116,115,115,116,115,115,116,116,115,115,115,115,116,115,116,115,116,115,116,115,116,115,116,115,116,115,116,0,0,0,0,0,120,176,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0,0,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,121,123,123,124,124,126,126,128,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,121,123,123,124,124,126,126,128,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131],"f":[0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,2],[[5,[[4,[3]]]]],[]],[-1,[[5,[[4,[3]]]]],[]],[6,6],[7,7],[8,8],[9,9],[10,10],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],0,[[6,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[10,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,2,2],[[5,[[4,[3]]]]],[]],[[-1,2],[[5,[[4,[3]]]]],[]],[[-1,2,2,2],[[5,[[4,[3]]]]],[]],0,[[-1,2,2,2],[[5,[[4,[3]]]]],[]],0,0,0,0,0,[[-1,2,2],[[5,[[4,[3]]]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,1],[-1,23,[]],[22,[[19,[24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1]]],22,[[27,[26]]]],[[[28,[-1]]],22,[[27,[29]]]],[[[30,[-1]]],22,[[27,[[19,[31]]]]]],[[[32,[-1]]],22,[[27,[[19,[26]]]]]],[33,22],[[[34,[-1]]],22,[[27,[26]]]],[[[35,[-1,-2]]],22,[[27,[26]]],[[27,[26]]]],[[[36,[-1]]],22,[[27,[26]]]],[[[37,[-1]]],22,[[27,[26]]]],[[[38,[-1]]],22,[[27,[26]]]],[[[39,[-1]]],22,[[27,[26]]]],[[[40,[-1]]],22,[[27,[26]]]],[[[41,[-1]]],22,[[27,[26]]]],[42,22],[[[43,[-1,-2]]],22,[[27,[26]]],[[27,[26]]]],[[[44,[-1]]],22,[[27,[26]]]],0,0,0,0,[22,[[19,[23]]]],[45,45],[[[46,[-1]]],[[46,[-1]]],47],[48,48],[49,49],[50,50],[[[51,[-1]]],[[51,[-1]]],47],[[[25,[-1]]],[[25,[-1]]],47],[[[28,[-1]]],[[28,[-1]]],47],[[[30,[-1]]],[[30,[-1]]],47],[[[32,[-1]]],[[32,[-1]]],47],[33,33],[52,52],[[[53,[-1]]],[[53,[-1]]],47],[[[34,[-1]]],[[34,[-1]]],47],[[[35,[-1,-2]]],[[35,[-1,-2]]],47,47],[[[36,[-1]]],[[36,[-1]]],47],[[[37,[-1]]],[[37,[-1]]],47],[[[38,[-1]]],[[38,[-1]]],47],[[[39,[-1]]],[[39,[-1]]],47],[[[40,[-1]]],[[40,[-1]]],47],[[[54,[-1]]],[[54,[-1]]],47],[55,55],[[[41,[-1]]],[[41,[-1]]],47],[56,56],[57,57],[58,58],[59,59],[60,60],[42,42],[61,61],[62,62],[63,63],[64,64],[[[43,[-1,-2]]],[[43,[-1,-2]]],47,47],[65,65],[66,66],[[[44,[-1]]],[[44,[-1]]],47],[67,67],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[[22,13,[68,[26]]],11],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[22,2],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],[13,11],0,0,[[[25,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[28,[-1]]],[[20,[-2,22]]],[[27,[29]]],[]],[[[30,[-1]]],[[20,[-2,22]]],[[27,[[19,[31]]]]],[]],[[[32,[-1]]],[[20,[-2,22]]],[[27,[[19,[26]]]]],[]],[33,[[20,[-1,22]]],[]],[[[34,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[35,[-1,-2]]],[[20,[-3,22]]],[[27,[26]]],[[27,[26]]],[]],[[[36,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[37,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[38,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[39,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[40,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[[41,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[42,[[20,[-1,22]]],[]],[[[43,[-1,-2]]],[[20,[-3,22]]],[[27,[26]]],[[27,[26]]],[]],[[[44,[-1]]],[[20,[-2,22]]],[[27,[26]]],[]],[[45,14],15],[[[46,[-1]],14],15,69],[[48,14],15],[[49,14],15],[[50,14],15],[[[51,[-1]],14],15,69],[[[25,[-1]],14],15,69],[[[28,[-1]],14],15,69],[[[30,[-1]],14],15,69],[[[32,[-1]],14],15,69],[[33,14],15],[[52,14],15],[[[53,[-1]],14],15,69],[[[34,[-1]],14],15,69],[[[35,[-1,-2]],14],15,69,69],[[[36,[-1]],14],15,69],[[[37,[-1]],14],15,69],[[[38,[-1]],14],15,69],[[[39,[-1]],14],15,69],[[[40,[-1]],14],15,69],[[[54,[-1]],14],15,69],[[55,14],15],[[[41,[-1]],14],15,69],[[56,14],15],[[57,14],15],[[58,14],15],[[59,14],15],[[60,14],15],[[42,14],15],[[61,14],15],[[62,14],15],[[63,14],15],[[64,14],15],[[[43,[-1,-2]],14],15,69,69],[[65,14],15],[[66,14],15],[[[44,[-1]],14],15,69],[[67,14],15],[[22,14],15],[[22,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,22],[[[46,[-1]]],22,[[27,[26]]]],[48,22],[49,22],[50,22],[[[51,[-1]]],22,[[27,[26]]]],[[[25,[-1]]],22,[[27,[26]]]],[[[28,[-1]]],22,[[27,[29]]]],[[[30,[-1]]],22,[[27,[[19,[31]]]]]],[[[32,[-1]]],22,[[27,[[19,[26]]]]]],[33,22],[52,22],[[[53,[-1]]],22,[[27,[26]]]],[[[34,[-1]]],22,[[27,[26]]]],[[[35,[-1,-2]]],22,[[27,[26]]],[[27,[26]]]],[[[36,[-1]]],22,[[27,[26]]]],[[[37,[-1]]],22,[[27,[26]]]],[[[38,[-1]]],22,[[27,[26]]]],[[[39,[-1]]],22,[[27,[26]]]],[[[40,[-1]]],22,[[27,[26]]]],[[[54,[-1]]],22,[[27,[70]]]],[55,22],[[[41,[-1]]],22,[[27,[26]]]],[56,22],[57,22],[58,22],[59,22],[60,22],[42,22],[61,22],[62,22],[63,22],[64,22],[[[43,[-1,-2]]],22,[[27,[26]]],[[27,[26]]]],[65,22],[66,22],[[[44,[-1]]],22,[[27,[26]]]],[67,22],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,[22,[[19,[71]]]],0,0,0,0,0,[22,[[19,[23]]]],[22,72],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,[74,[73]]],[[76,[26,75]]]],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[77,78],[[20,[79,80]]]],[[81,2],[[19,[[83,[82]]]]]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[26,[74,[73]]],81],[[[83,[82]]],77],0,0,[-1,84,[]],[[81,2],[[19,[75]]]],0,[-1,85,[]],[[26,[83,[82]]],86],[-1,2,[]],[-1,87,[]],0,[-1,[[88,[79]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[77,[89,[13]]],[[20,[84,80]]]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[90,2,2,2,2,2,2],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[91,90],0,0,0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[[91,[83,[92]]],93],[90,[[88,[94]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[90,[[88,[94]]]],[[26,[74,[73]]],91],[[84,26,[74,[73]]],90],[91,84],[91,95],[[],84],0,0,0,0,[91,85],[91,2],0,[91,[[88,[79]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[96,2,2,2,87,[19,[97]],[19,[2]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,96],0,0,0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],0,[[98,[83,[92]]],93],[96,[[88,[94]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[96,[[88,[94]]]],[[26,[74,[73]]],98],[[84,26,[74,[73]]],96],[98,95],[98,84],[[],84],0,0,0,[98,85],0,[98,2],0,0,[98,[[88,[79]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[99,1],[100,1],[[99,101],[[5,[[4,[3]]]]]],[[100,101],[[5,[[4,[3]]]]]],[[99,102],[[5,[[4,[3]]]]]],[[100,102],[[5,[[4,[3]]]]]],[[99,103],[[5,[[4,[3]]]]]],[[100,103],[[5,[[4,[3]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,[[83,[[105,[[68,[31]],104]]]]]],0,0,[[99,106],[[5,[[4,[3]]]]]],[[100,106],[[5,[[4,[3]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[99,107],[[5,[[4,[3]]]]]],[[100,107],[[5,[[4,[3]]]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[[100,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[99,[89,[31]]],[[5,[[4,[3]]]]]],[[100,[89,[31]]],[[5,[[4,[3]]]]]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[99,[89,[31]]],[[5,[[4,[3]]]]]],[[-1,108,97],[[5,[[4,[3,109]]]]],[]],[[-1,108,110],[[5,[[4,[3,109]]]]],[]],[-1,18,[]],[-1,18,[]],0,[99,2],[100,2],0,[[[83,[111]]],99],0,0,[[99,112],[[5,[[4,[3]]]]]],[[100,112],[[5,[[4,[3]]]]]],[[99,113],[[5,[[4,[3]]]]]],[[100,113],[[5,[[4,[3]]]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[114,99],0,0,[115,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[115,2],[[5,[[4,[3]]]]]],0,[115,[[5,[[4,[3]]]]]],[115,115],[116,116],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[115,108,70],[[5,[[4,[3]]]]]],[[115,108,110],[[5,[[4,[3]]]]]],[-1,18,[]],[-1,18,[]],[[114,117],[[83,[115]]]],[115,118],0,[[116,2],18],[[115,2,2],[[5,[[4,[3]]]]]],[[115,2],[[5,[[4,[3]]]]]],[116,[[68,[26]]]],0,[[115,2,2,2],[[5,[[4,[3]]]]]],[[116,2,2,2],[[19,[75]]]],[[116,2,2],18],[[115,2,2,2],[[5,[[4,[3]]]]]],0,[115,119],[[115,2,2],[[5,[[4,[3]]]]]],[[116,2],[[68,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[120,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[[120,2],[[88,[18]]]],[[120,2],[[5,[[4,[3]]]]]],[120,[[5,[[4,[3]]]]]],0,[120,120],[[-1,-2],11,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[83,[120]],26],[[76,[26,[76,[26,75]]]]]],[13,-1,[]],[13,-1,[]],[[120,8],[[88,[11]]]],[13,11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[[],[[83,[120]]]],[[],[[88,[[83,[120]]]]]],[[120,2],[[88,[18]]]],[[120,10],[[88,[18]]]],[[120,6],[[88,[18]]]],[[120,2,2],[[88,[18]]]],[[120,2,2],[[5,[[4,[3]]]]]],[[120,2],[[5,[[4,[3]]]]]],[[120,2,2,2],[[5,[[4,[3]]]]]],[[120,2,2,2],[[5,[[4,[3]]]]]],[[120,2,2],[[5,[[4,[3]]]]]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[],[[83,[120]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[121,122],[13,-1,[]],[13,-1,[]],[123,122],[13,-1,[]],[124,125],[126,127],[13,-1,[]],[13,-1,[]],[128,127],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,11],[13,11],[13,11],[13,11],[13,11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,0,[13,-1,[]],[13,-1,[]],0,[13,11],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,18,[]],[[129,18,130],131],[[131,132],[[88,[[83,[133]]]]]],[[131,132],[[88,[134]]]],0,[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"Any",2049],[15,"str"],[8,"Future",2050],[3,"Box",2051],[3,"Pin",2052],[3,"RegisterTableRequest",0],[3,"RenameTableRequest",0],[3,"DeregisterTableRequest",0],[3,"DeregisterSchemaRequest",0],[3,"RegisterSchemaRequest",0],[15,"tuple"],[3,"Compat",2053],[15,"usize"],[3,"Formatter",2054],[6,"Result",2054],[3,"Request",2055],[3,"Request",2055],[15,"bool"],[4,"Option",2056],[4,"Result",2057],[3,"TypeId",2049],[4,"Error",196],[8,"Error",2058],[3,"Backtrace",2059],[3,"SystemCatalogSnafu",196],[3,"String",2060],[8,"Into",2061],[3,"SystemCatalogTypeMismatchSnafu",196],[4,"ConcreteDataType",2062],[3,"InvalidEntryTypeSnafu",196],[15,"u8"],[3,"InvalidKeySnafu",196],[3,"EmptyValueSnafu",196],[3,"CatalogNotFoundSnafu",196],[3,"SchemaNotFoundSnafu",196],[3,"TableExistsSnafu",196],[3,"TableNotExistSnafu",196],[3,"SchemaExistsSnafu",196],[3,"UnimplementedSnafu",196],[3,"NotSupportedSnafu",196],[3,"TableNotFoundSnafu",196],[3,"UpgradeWeakCatalogManagerRefSnafu",196],[3,"QueryAccessDeniedSnafu",196],[3,"GenericSnafu",196],[3,"ListCatalogsSnafu",196],[3,"ListSchemasSnafu",196],[8,"Clone",2063],[3,"CompileScriptInternalSnafu",196],[3,"OpenSystemCatalogSnafu",196],[3,"CreateSystemCatalogSnafu",196],[3,"CreateTableSnafu",196],[3,"ValueDeserializeSnafu",196],[3,"TableEngineNotFoundSnafu",196],[3,"OpenTableSnafu",196],[3,"ParallelOpenTableSnafu",196],[3,"ReadSystemCatalogSnafu",196],[3,"CreateRecordBatchSnafu",196],[3,"InsertCatalogRecordSnafu",196],[3,"SystemCatalogTableScanSnafu",196],[3,"InternalSnafu",196],[3,"SystemCatalogTableScanExecSnafu",196],[3,"InvalidCatalogValueSnafu",196],[3,"MetaSrvSnafu",196],[3,"InvalidTableInfoInCatalogSnafu",196],[3,"DatafusionSnafu",196],[3,"TableSchemaMismatchSnafu",196],[3,"TableMetadataManagerSnafu",196],[3,"Vec",2064],[8,"Debug",2054],[6,"TableId",2065],[8,"StackError",2066],[4,"StatusCode",2067],[8,"CatalogManager",0],[3,"Weak",2068],[6,"TableRef",2069],[3,"HashMap",2070],[3,"InformationTableDataSource",1465],[3,"ScanRequest",2071],[6,"SendableRecordBatchStream",2072],[3,"BoxedError",2066],[3,"InformationSchemaProvider",1465],[8,"InformationTable",1465],[3,"Arc",2068],[6,"SchemaRef",2073],[6,"TableId",2074],[6,"TableInfoRef",2065],[4,"TableType",2065],[6,"Result",196],[15,"slice"],[3,"InformationSchemaColumnsBuilder",1534],[3,"InformationSchemaColumns",1534],[3,"TaskContext",2075],[6,"SendableRecordBatchStream",2076],[3,"RecordBatch",2077],[6,"SchemaRef",2078],[3,"InformationSchemaTablesBuilder",1609],[15,"u32"],[3,"InformationSchemaTables",1609],[3,"CachedMetaKvBackend",1691],[3,"MetaKvBackend",1691],[3,"BatchDeleteRequest",2079],[3,"BatchGetRequest",2079],[3,"BatchPutRequest",2079],[3,"KeyValue",2080],[3,"Cache",2081],[3,"CompareAndPutRequest",2079],[3,"DeleteRangeRequest",2079],[3,"Context",2082],[3,"Global",2083],[3,"TableName",2084],[3,"MetaClient",2085],[3,"PutRequest",2079],[3,"RangeRequest",2079],[6,"KvBackendRef",2086],[3,"KvBackendCatalogManager",1773],[3,"SystemCatalog",1773],[6,"CacheInvalidatorRef",2082],[6,"PartitionRuleManagerRef",2087],[6,"TableMetadataManagerRef",2088],[3,"MemoryCatalogManager",1851],[3,"METRIC_CATALOG_MANAGER_CATALOG_COUNT",1898],[6,"IntGauge",2089],[3,"METRIC_CATALOG_MANAGER_SCHEMA_COUNT",1898],[3,"METRIC_CATALOG_MANAGER_TABLE_COUNT",1898],[6,"IntGaugeVec",2089],[3,"METRIC_CATALOG_KV_REMOTE_GET",1898],[3,"Histogram",2090],[3,"METRIC_CATALOG_KV_GET",1898],[6,"CatalogManagerRef",0],[3,"QueryContext",2091],[3,"DfTableSourceProvider",2019],[4,"TableReference",2092],[8,"TableSource",2093],[3,"ResolvedTableReference",2092],[3,"RegisterSystemTableRequest",0],[13,"ListSchemas",1387],[13,"SchemaNotFound",1387],[13,"QueryAccessDenied",1387],[13,"CatalogNotFound",1387],[13,"SystemCatalogTypeMismatch",1387],[13,"TableEngineNotFound",1387],[13,"InvalidEntryType",1387],[13,"ValueDeserialize",1387],[13,"ParallelOpenTable",1387],[13,"Datafusion",1387],[13,"InvalidKey",1387],[13,"ListCatalogs",1387],[13,"CompileScriptInternal",1387],[13,"OpenSystemCatalog",1387],[13,"CreateSystemCatalog",1387],[13,"CreateTable",1387],[13,"SystemCatalog",1387],[13,"EmptyValue",1387],[13,"TableExists",1387],[13,"TableNotExist",1387],[13,"SchemaExists",1387],[13,"Unimplemented",1387],[13,"NotSupported",1387],[13,"OpenTable",1387],[13,"TableNotFound",1387],[13,"ReadSystemCatalog",1387],[13,"CreateRecordBatch",1387],[13,"InsertCatalogRecord",1387],[13,"SystemCatalogTableScan",1387],[13,"Internal",1387],[13,"UpgradeWeakCatalogManagerRef",1387],[13,"SystemCatalogTableScanExec",1387],[13,"InvalidCatalogValue",1387],[13,"MetaSrv",1387],[13,"InvalidTableInfoInCatalog",1387],[13,"TableSchemaMismatch",1387],[13,"Generic",1387],[13,"TableMetadataManager",1387],[6,"InformationTableRef",1465],[6,"CacheBackendRef",1691],[6,"SchemaEntries",1851]],"b":[[747,"impl-Debug-for-Error"],[748,"impl-Display-for-Error"],[1586,"impl-InformationTable-for-InformationSchemaColumns"],[1587,"impl-PartitionStream-for-InformationSchemaColumns"],[1588,"impl-InformationSchemaColumns"],[1654,"impl-PartitionStream-for-InformationSchemaTables"],[1655,"impl-InformationTable-for-InformationSchemaTables"],[1656,"impl-InformationSchemaTables"]]},\
"client":{"doc":"","t":"NDRRDCEDNCGNDCLMMLLLLMAMALLLLLLMAMMLLLLLLLLALLLLFLLLLMLLLLLLLLLLLMAALALMMMALLLLLLLLLLLLLLLLDDDDLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMMLLLLLLLLLLLLLLLLLLLLLLLLLDDLMLLLLLMMLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNENDNDNDNDNDNDNNDGNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMIEDNLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLMLLLLLLLLLLLLMLLMLLLLLLL","n":["AffectedRows","Client","DEFAULT_CATALOG_NAME","DEFAULT_SCHEMA_NAME","Database","Error","Output","RecordBatches","RecordBatches","Result","SendableRecordBatchStream","Stream","StreamInserter","api","as_stream","auth_header","batches","borrow","borrow","borrow_mut","borrow_mut","catalog","client","client","client_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ctx","database","dbname","dbname","deref","deref","deref_mut","deref_mut","drop","drop","empty","eq","error","fmt","fmt","from","from","from_grpc_response","from_subset","from_subset","init","init","inner","into","into","into_df_stream","into_iter","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","iter","join","load_balance","metrics","pretty_print","region","schema","schema","schema","sender","stream_insert","take","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_collect","try_from","try_from","try_from_columns","try_into","try_into","try_new","type_id","type_id","vzip","vzip","Client","DatabaseClient","FlightClient","Inner","addr","addr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_manager","client","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","find_channel","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_peer","health_check","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load_balance","make_database_client","make_flight_client","make_prometheus_gateway_client","max_grpc_recv_message_size","max_grpc_send_message_size","mut_inner","new","peers","raw_region_client","set_peers","start","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_manager","with_manager_and_urls","with_urls","DatanodeClients","borrow","borrow_mut","channel_manager","clients","compat","compat_mut","compat_ref","datanode","default","deref","deref_mut","drop","fmt","from","from_subset","get_client","init","insert_client","into","into_request","into_request","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Database","FlightContext","alter","auth_header","borrow","borrow","borrow_mut","borrow_mut","catalog","catalog","client","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create","ctx","dbname","dbname","default","default","delete","deref","deref","deref_mut","deref_mut","do_get","drop","drop","drop_table","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","handle","init","init","insert","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","logical_plan","new","new_with_dbname","prom_range_query","row_insert","schema","schema","set_auth","set_catalog","set_dbname","set_schema","sql","streaming_inserter","streaming_inserter_with_channel_size","to_owned","to_owned","to_rpc_request","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","truncate_table","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ClientStreaming","ClientStreamingSnafu","ColumnDataType","ColumnDataTypeSnafu","ConvertFlightData","ConvertFlightDataSnafu","CreateChannel","CreateChannelSnafu","Err","Error","FlightGet","FlightGetSnafu","HandleRequest","HandleRequestSnafu","IllegalDatabaseResponse","IllegalDatabaseResponseSnafu","IllegalFlightMessages","IllegalFlightMessagesSnafu","IllegalGrpcClientState","IllegalGrpcClientStateSnafu","MissingField","MissingFieldSnafu","Ok","RegionServer","RegionServerSnafu","Result","Server","ServerSnafu","addr","addr","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","next","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tonic_code","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","addr","code","code","err_msg","err_msg","err_msg","field","location","location","location","location","location","location","location","location","msg","reason","source","source","source","source","source","source","tonic_code","LoadBalance","Loadbalancer","Random","Random","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_subset","from_subset","get_peer","get_peer","get_peer","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_GRPC_ALTER","METRIC_GRPC_CREATE_TABLE","METRIC_GRPC_DELETE","METRIC_GRPC_DO_GET","METRIC_GRPC_DROP_TABLE","METRIC_GRPC_INSERT","METRIC_GRPC_LOGICAL_PLAN","METRIC_GRPC_PROMQL_RANGE_QUERY","METRIC_GRPC_SQL","METRIC_GRPC_TRUNCATE_TABLE","METRIC_REGION_REQUEST_GRPC","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RegionRequester","borrow","borrow_mut","check_response_header","client","compat","compat_mut","compat_ref","deref","deref_mut","do_get_inner","drop","fmt","from","from_subset","handle","handle","handle_inner","handle_query","init","into","into_request","into_request","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","StreamInserter","auth_header","borrow","borrow_mut","compat","compat_mut","compat_ref","dbname","deref","deref_mut","drop","finish","from","from_subset","init","insert","into","into_request","into_request","is_in_subset","join","new","row_insert","sender","to_rpc_request","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"client"],[91,"client::client"],[211,"client::client_manager"],[241,"client::database"],[327,"client::error"],[736,"client::error::Error"],[761,"client::load_balance"],[815,"client::metrics"],[1079,"client::region"],[1110,"client::stream_insert"],[1141,"common_recordbatch"],[1142,"alloc::alloc"],[1143,"alloc::boxed"],[1144,"core::pin"],[1145,"async_compat"],[1146,"core::fmt"],[1147,"core::fmt"],[1148,"greptime_proto::v1"],[1149,"datafusion_execution::stream"],[1150,"tonic::request"],[1151,"tonic::request"],[1152,"alloc::string"],[1153,"common_recordbatch::error"],[1154,"datatypes::schema"],[1155,"alloc::sync"],[1156,"common_recordbatch::recordbatch"],[1157,"alloc::vec"],[1158,"core::option"],[1159,"core::iter::traits::collect"],[1160,"core::any"],[1161,"tonic::transport::channel"],[1162,"core::fmt"],[1163,"arrow_flight::gen::flight_service_client"],[1164,"greptime_proto::v1::region::region_client"],[1165,"core::convert"],[1166,"common_grpc::channel_manager"],[1167,"common_meta::peer"],[1168,"core::future::future"],[1169,"common_grpc::channel_manager"],[1170,"greptime_proto::v1"],[1171,"greptime_proto::v1"],[1172,"snafu::backtrace_inert"],[1173,"common_error::status_code"],[1174,"core::clone"],[1175,"core::fmt"],[1176,"tonic::status"],[1177,"prometheus::histogram"],[1178,"prometheus::histogram"],[1179,"greptime_proto::v1::region"],[1180,"common_meta::datanode_manager"],[1181,"greptime_proto::v1::region"],[1182,"greptime_proto::v1"]],"d":["","","","","","","","","","","","","A structure that provides some methods for streaming data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create database service client using catalog and schema","Create database service client using dbname.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ClientStreaming</code> …","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ConvertFlightData</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::FlightGet</code> variant","","SNAFU context selector for the <code>Error::HandleRequest</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalFlightMessages</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingField</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::RegionServer</code> variant","","","SNAFU context selector for the <code>Error::Server</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A structure that provides some methods for streaming data …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[10,0,0,0,0,0,0,0,10,0,0,10,0,0,1,59,1,10,1,10,1,47,0,47,0,10,1,10,1,10,1,47,0,59,47,10,1,10,1,10,1,1,1,0,10,1,10,1,0,10,1,10,1,32,10,1,1,1,10,10,1,1,10,1,1,59,0,0,1,0,1,47,1,59,0,1,10,1,10,1,1,10,1,1,10,1,1,10,1,10,1,0,0,0,0,30,30,36,30,32,33,36,30,32,33,33,30,32,32,36,30,32,33,36,30,32,33,36,30,32,33,32,33,36,30,32,33,36,30,32,33,36,30,32,33,32,32,33,36,30,32,33,32,36,30,32,33,33,32,36,30,32,33,36,32,36,30,32,33,36,36,30,30,32,32,33,33,36,30,32,33,33,32,32,32,32,32,30,32,33,32,33,32,32,36,30,32,33,36,30,32,33,36,30,32,33,36,30,32,33,36,30,32,33,36,30,32,33,33,32,32,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,47,49,47,49,47,49,47,47,47,47,49,47,49,47,49,47,49,47,49,47,47,47,47,47,49,47,47,49,47,49,47,47,49,47,47,49,47,49,47,49,47,49,47,47,49,47,47,49,47,47,49,49,47,49,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,49,47,47,49,47,49,47,47,49,47,49,47,49,47,49,62,0,62,0,62,0,62,0,16,0,62,0,62,0,62,0,62,0,62,0,62,0,16,62,0,0,62,0,74,78,62,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,67,68,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,66,74,75,76,77,67,68,78,79,69,71,72,79,69,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,67,71,72,66,67,68,69,71,72,68,66,74,75,76,77,67,68,78,79,69,71,72,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,62,66,74,75,76,77,67,68,78,79,69,71,72,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,66,66,74,74,75,75,76,76,77,77,67,67,68,68,78,78,79,79,69,69,71,71,72,72,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,69,62,66,62,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,74,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,66,74,75,76,77,67,68,78,79,69,71,72,62,110,111,112,113,114,115,116,117,118,119,120,121,114,117,111,116,113,118,110,119,120,121,111,112,110,0,0,0,84,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,84,85,84,84,85,84,85,122,84,85,84,85,84,85,84,84,85,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,0,0,0,0,0,0,0,0,0,0,0,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,86,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,86,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,0,100,100,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[5,[[4,[2,3]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,8],[7,8],[[],1],[[1,1],9],0,[[10,11],[[13,[8,12]]]],[[1,11],[[13,[8,12]]]],[-1,-1,[]],[-1,-1,[]],[14,[[16,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,[[5,[[4,[17,3]]]]]],[1],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[1,[[0,[20]]]],0,0,0,[1,[[13,[21,22]]]],0,[1,[[24,[23,3]]]],0,0,0,0,[1,[[26,[25,3]]]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[[4,[2,3]]]]],[[13,[1,22]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[24,[23,3]],-1],[[13,[1,22]]],28],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[24,[23,3]],[26,[25,3]]],[[13,[1,22]]]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[30,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[32,32],[[-1,-2],8,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[],32],[[],33],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,8],[7,8],[7,8],[7,8],[32,[[16,[[8,[21,34]]]]]],[[32,11],35],[[33,11],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,[[27,[21]]]],[32,[[16,[8]]]],[[],7],[[],7],[[],7],[[],7],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[32,[[16,[36]]]],[32,[[16,[30]]]],[32,[[16,[[37,[34]]]]]],[32,7],[32,7],[30,[[38,[34]]]],[[],32],0,[32,[[16,[[39,[34]]]]]],[[33,[26,[21]]],8],[[32,-2],8,[[40,[31]]],[[40,[[41,[-1]]]]]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,33],[[42,-2],32,[[40,[31]]],[[40,[[41,[-1]]]]]],[-2,32,[[40,[31]]],[[40,[[41,[-1]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[43,44],[[5,[[4,[45]]]]]],[[],43],[7,-1,[]],[7,-1,[]],[7,8],[[43,11],35],[-1,-1,[]],[-1,-2,[],[]],[[43,44],32],[[],7],[[43,44,32],8],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,9,[]],[46,43],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,[[47,48],[[16,[10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,21],0,0,[47,47],[49,49],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[47,50],[[16,[10]]]],0,[47,21],0,[[],47],[[],49],[[47,51],[[16,[15]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[[47,52],[[16,[10]]]],[7,8],[7,8],[[47,53],[[16,[10]]]],[[47,11],35],[[49,11],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,52],[[16,[15]]]],[[],7],[[],7],[[47,54],[[16,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[47,[26,[55]]],[[16,[10]]]],[[-1,-2,32],47,[[56,[21]]],[[56,[21]]]],[[-1,32],47,[[56,[21]]]],[[47,31,31,31,31],[[16,[10]]]],[[47,57],[[16,[15]]]],[47,21],0,[[47,58],8],[[47,-1],8,[[56,[21]]]],[[47,-1],8,[[56,[21]]]],[[47,-1],8,[[56,[21]]]],[[47,-1],[[16,[10]]],[[40,[31]]]],[47,[[16,[59]]]],[[47,7],[[16,[59]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,52],60],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,61],[[16,[10]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[62,63],[-1,64,[]],[62,[[27,[65]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]]],62,[[56,[21]]]],[[[67,[-1]]],62,[[56,[21]]]],[[[68,[-1]]],62,[[56,[21]]]],[[[69,[-1,-2]]],62,[[56,[70]]],[[56,[21]]]],[[[71,[-1]]],62,[[56,[21]]]],[[[72,[-1]]],62,[[56,[21]]]],[62,[[27,[64]]]],[[[66,[-1]]],[[66,[-1]]],73],[[[74,[-1,-2]]],[[74,[-1,-2]]],73,73],[75,75],[76,76],[77,77],[[[67,[-1]]],[[67,[-1]]],73],[[[68,[-1]]],[[68,[-1]]],73],[[[78,[-1]]],[[78,[-1]]],73],[[[79,[-1]]],[[79,[-1]]],73],[[[69,[-1,-2]]],[[69,[-1,-2]]],73,73],[[[71,[-1]]],[[71,[-1]]],73],[[[72,[-1]]],[[72,[-1]]],73],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[62,7,[26,[21]]],8],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[62,31],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],0,0,0,[[[66,[-1]]],[[13,[-2,62]]],[[56,[21]]],[]],[[[67,[-1]]],[[13,[-2,62]]],[[56,[21]]],[]],[[[68,[-1]]],[[13,[-2,62]]],[[56,[21]]],[]],[[[69,[-1,-2]]],[[13,[-3,62]]],[[56,[70]]],[[56,[21]]],[]],[[[71,[-1]]],[[13,[-2,62]]],[[56,[21]]],[]],[[[72,[-1]]],[[13,[-2,62]]],[[56,[21]]],[]],0,[[[66,[-1]],11],35,80],[[[74,[-1,-2]],11],35,80,80],[[75,11],35],[[76,11],35],[[77,11],35],[[[67,[-1]],11],35,80],[[[68,[-1]],11],35,80],[[[78,[-1]],11],35,80],[[[79,[-1]],11],35,80],[[[69,[-1,-2]],11],35,80,80],[[[71,[-1]],11],35,80],[[[72,[-1]],11],35,80],[[62,11],35],[[62,11],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[81,62],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[66,[-1]]],62,[[56,[21]]]],[[[74,[-1,-2]]],62,[[56,[21]]],[[56,[82]]]],[75,62],[76,62],[77,62],[[[67,[-1]]],62,[[56,[21]]]],[[[68,[-1]]],62,[[56,[21]]]],[[[78,[-1]]],62,[[56,[21]]]],[[[79,[-1]]],62,[[56,[82]]]],[[[69,[-1,-2]]],62,[[56,[70]]],[[56,[21]]]],[[[71,[-1]]],62,[[56,[21]]]],[[[72,[-1]]],62,[[56,[21]]]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[62,[[27,[83]]]],0,[62,[[27,[64]]]],[62,70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,21,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[],84],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,8],[7,8],[[84,11],35],[[85,11],35],[85,84],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[41,[21]]],[[27,[21]]],[]],[[84,[41,[21]]],[[27,[21]]]],[[85,[41,[21]]],[[27,[21]]]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[84,[[13,[85]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[7,-1,[]],[86,87],[7,-1,[]],[88,87],[89,87],[7,-1,[]],[90,87],[7,-1,[]],[91,87],[7,-1,[]],[7,-1,[]],[92,87],[93,87],[7,-1,[]],[7,-1,[]],[94,87],[95,87],[7,-1,[]],[96,87],[7,-1,[]],[7,-1,[]],[97,98],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[7,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[99]]],[[16,[8]]]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[7,-1,[]],[7,-1,[]],[[100,101],[[16,[102]]]],[7,8],[[100,11],35],[-1,-1,[]],[-1,-2,[],[]],[[100,103],[[5,[[4,[45]]]]]],[[100,103],[[16,[104]]]],[[100,103],[[16,[104]]]],[[100,105],[[5,[[4,[45]]]]]],[[],7],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,9,[]],[32,100],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],0,[7,-1,[]],[7,-1,[]],[7,8],[59,[[16,[15]]]],[-1,-1,[]],[-1,-2,[],[]],[[],7],[[59,[26,[106]]],[[16,[8]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],0,[[[107,[34]],21,[27,[108]],7],59],[[59,[26,[109]]],[[16,[8]]]],0,[[59,52],60],[-1,[[27,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,29,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"RecordBatches",0],[8,"RecordBatchStream",1141],[3,"Global",1142],[3,"Box",1143],[3,"Pin",1144],[3,"Compat",1145],[15,"usize"],[15,"tuple"],[15,"bool"],[4,"Output",0],[3,"Formatter",1146],[3,"Error",1146],[4,"Result",1147],[3,"GreptimeResponse",1148],[15,"u32"],[6,"Result",327],[8,"RecordBatchStream",1149],[3,"Request",1150],[3,"Request",1150],[8,"Iterator",1151],[3,"String",1152],[4,"Error",1153],[3,"Schema",1154],[3,"Arc",1155],[3,"RecordBatch",1156],[3,"Vec",1157],[4,"Option",1158],[8,"IntoIterator",1159],[3,"TypeId",1160],[3,"FlightClient",91],[15,"str"],[3,"Client",91],[3,"Inner",91],[3,"Channel",1161],[6,"Result",1146],[3,"DatabaseClient",91],[3,"PrometheusGatewayClient",1162],[3,"FlightServiceClient",1163],[3,"RegionClient",1164],[8,"AsRef",1165],[15,"slice"],[3,"ChannelManager",1166],[3,"DatanodeClients",211],[3,"Peer",1167],[8,"Future",1168],[3,"ChannelConfig",1166],[3,"Database",241],[3,"AlterExpr",1148],[3,"FlightContext",241],[3,"CreateTableExpr",1148],[3,"DeleteRequests",1148],[4,"Request",1169],[3,"DropTableExpr",1148],[3,"InsertRequests",1148],[15,"u8"],[8,"Into",1165],[3,"RowInsertRequests",1148],[4,"AuthScheme",1170],[3,"StreamInserter",1110],[3,"GreptimeRequest",1148],[3,"TruncateTableExpr",1148],[4,"Error",327],[8,"Any",1160],[8,"Error",1171],[3,"Backtrace",1172],[3,"IllegalFlightMessagesSnafu",327],[3,"IllegalGrpcClientStateSnafu",327],[3,"MissingFieldSnafu",327],[3,"ServerSnafu",327],[4,"StatusCode",1173],[3,"IllegalDatabaseResponseSnafu",327],[3,"ClientStreamingSnafu",327],[8,"Clone",1174],[3,"FlightGetSnafu",327],[3,"HandleRequestSnafu",327],[3,"ConvertFlightDataSnafu",327],[3,"ColumnDataTypeSnafu",327],[3,"CreateChannelSnafu",327],[3,"RegionServerSnafu",327],[8,"Debug",1146],[3,"Status",1175],[4,"Code",1175],[8,"StackError",1176],[4,"Loadbalancer",761],[3,"Random",761],[3,"METRIC_GRPC_CREATE_TABLE",815],[3,"Histogram",1177],[3,"METRIC_GRPC_PROMQL_RANGE_QUERY",815],[3,"METRIC_GRPC_INSERT",815],[3,"METRIC_GRPC_DELETE",815],[3,"METRIC_GRPC_SQL",815],[3,"METRIC_GRPC_LOGICAL_PLAN",815],[3,"METRIC_GRPC_ALTER",815],[3,"METRIC_GRPC_DROP_TABLE",815],[3,"METRIC_GRPC_TRUNCATE_TABLE",815],[3,"METRIC_GRPC_DO_GET",815],[3,"METRIC_REGION_REQUEST_GRPC",815],[6,"HistogramVec",1177],[3,"ResponseHeader",1148],[3,"RegionRequester",1079],[3,"Ticket",1178],[6,"SendableRecordBatchStream",0],[3,"RegionRequest",1179],[6,"AffectedRows",1180],[3,"QueryRequest",1179],[3,"InsertRequest",1148],[3,"GreptimeDatabaseClient",1181],[3,"AuthHeader",1148],[3,"RowInsertRequest",1148],[13,"FlightGet",736],[13,"CreateChannel",736],[13,"RegionServer",736],[13,"Server",736],[13,"IllegalGrpcClientState",736],[13,"IllegalDatabaseResponse",736],[13,"ClientStreaming",736],[13,"MissingField",736],[13,"IllegalFlightMessages",736],[13,"HandleRequest",736],[13,"ConvertFlightData",736],[13,"ColumnDataType",736],[8,"LoadBalance",761]],"b":[[521,"impl-Display-for-Error"],[522,"impl-Debug-for-Error"],[1094,"impl-Datanode-for-RegionRequester"],[1095,"impl-RegionRequester"]]},\
"cmd":{"doc":"","t":"AAAAAAADNDNEDNEINNLLLLLLLLLLALLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLMLLLLLLLLMKLLLLALLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLDDLLLLFLLLLLLLLLLLLLMMFFLLLLLLLLMLLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNDDENGLMLLLLLMLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMLLLLFLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLDLLLLLLFMLLLLLLLLFLLLLLLLLLMMMLLLLLLLLLLLDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLALLDRDDRDRDDDLMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLDDNDELLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLNNRRNNDENDLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLMMMMMMMLLLLLLLLMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLM","n":["cli","datanode","error","frontend","metasrv","options","standalone","AttachCommand","Bench","Command","Export","Instance","Repl","Repl","SubCommand","Tool","Tool","Upgrade","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bench","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cmd","cmd","command","command","command","command_for_update","command_for_update","command_for_update","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","database","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_helper","do_work","drop","drop","drop","drop","export","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","group_id","group_id","grpc_addr","has_subcommand","helper","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","meta_addr","or","or","or","or","prompt","query_engine","repl","rl","sculpt","sculpt","sculpt","sculpt","start","stop","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","upgrade","vzip","vzip","vzip","vzip","BenchTableMetadata","BenchTableMetadataCommand","and","and","augment_args","augment_args_for_update","bench_self_recorded","borrow","borrow","borrow_mut","borrow_mut","build","command","command_for_update","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","count","count","create_region_routes","create_table_info","default","deref","deref","deref_mut","deref_mut","do_work","drop","drop","etcd_addr","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_subset","from_subset","group_id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","metadata","or","or","sculpt","sculpt","subset","subset","table_metadata_manager","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","TableMetadataBencher","and","bench_create","bench_delete","bench_get","bench_rename","borrow","borrow_mut","compat","compat_mut","compat_ref","count","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","subset","table_metadata_manager","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Exit","Help","ReplCommand","Sql","UseDatabase","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","fmt","from","from_subset","help","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","vzip","db_name","sql","CreateTable","Export","ExportCommand","ExportTarget","TableData","TableReference","__clone_box","addr","and","and","and","augment_args","augment_args_for_update","auth_basic","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","catalog","client","clone","clone_into","command","command_for_update","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","database","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_work","drop","drop","drop","export_create_table","export_jobs","export_table_data","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_subset","from_subset","from_subset","get_table_list","group_id","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","iter_db_names","lift_into","lift_into","lift_into","max_retry","or","or","or","output_dir","output_dir","parallelism","schema","sculpt","sculpt","sculpt","show_create_table","split_database","subset","subset","subset","target","target","to_owned","to_possible_value","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","RustylineHelper","and","borrow","borrow_mut","compat","compat_mut","compat_ref","complete","default","deref","deref_mut","drop","from","from_subset","highlight","highlight_candidate","highlight_char","highlight_hint","highlight_prompt","highlighter","hint","hinter","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate","vzip","Repl","and","borrow","borrow_mut","compat","compat_mut","compat_ref","create_query_engine","database","deref","deref_mut","do_execute_sql","drop","drop","execute_sql","from","from_subset","history_file","init","into","into_request","into_request","is_in_subset","lift_into","next_command","or","print_help","prompt","query_engine","rl","run","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","MigrateTableMetadata","PAGE_SIZE","UpgradeCommand","and","and","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build","command","command_for_update","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_datanode_table_keys","create_table_name_key","default","delete_migrated_keys","deref","deref","deref_mut","deref_mut","do_work","drop","drop","dryrun","dryrun","etcd_addr","etcd_store","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_subset","from_subset","group_id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","migrate_catalog_key","migrate_catalog_keys","migrate_schema_key","migrate_schema_keys","migrate_table_global_values","migrate_table_route_key","migrate_table_route_keys","or","or","sculpt","sculpt","skip_catalog_keys","skip_catalog_keys","skip_schema_keys","skip_schema_keys","skip_table_global_keys","skip_table_global_keys","skip_table_route_keys","skip_table_route_keys","split_table_global_value","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","v1_helper","vzip","vzip","CATALOG_KEY_PATTERN","CATALOG_KEY_PREFIX","CatalogKey","CatalogValue","NAME_PATTERN","SCHEMA_KEY_PATTERN","SCHEMA_KEY_PREFIX","SchemaKey","SchemaValue","TableGlobalValue","__clone_box","__private_field","__private_field","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","catalog_name","clone","clone_into","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","define_catalog_value","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","err","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","node_id","or","or","or","or","or","or","or","parse","parse","parse","regions_id_map","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","subset","subset","subset","subset","subset","subset","subset","table_id","table_info","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DeserializeCatalogEntryValue","DeserializeCatalogEntryValueSnafu","Error","InvalidCatalog","InvalidCatalogSnafu","__clone_box","__clone_box","and","and","and","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","or","or","or","raw","sculpt","sculpt","sculpt","source","subset","subset","subset","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","key","location","location","raw","source","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","command","command","command","command_for_update","command_for_update","command_for_update","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","data_home","datanode","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","group_id","group_id","has_subcommand","http_addr","http_timeout","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","metasrv_addr","node_id","or","or","or","or","rpc_addr","rpc_hostname","sculpt","sculpt","sculpt","sculpt","start","stop","subcmd","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","wal_dir","BuildMetaServer","BuildMetaServerSnafu","CollectRecordBatches","CollectRecordBatchesSnafu","ConnectEtcd","ConnectEtcdSnafu","ConnectServer","ConnectServerSnafu","CreateDir","CreateDirSnafu","EmptyResult","EmptyResultSnafu","Err","Error","FileIo","FileIoSnafu","IllegalConfig","IllegalConfigSnafu","InitDdlManager","InitDdlManagerSnafu","InitMetadata","InitMetadataSnafu","InvalidDatabaseName","InvalidDatabaseNameSnafu","InvalidReplCommand","InvalidReplCommandSnafu","IterStream","IterStreamSnafu","LoadLayeredConfig","LoadLayeredConfigSnafu","MissingConfig","MissingConfigSnafu","NotDataFromOutput","NotDataFromOutputSnafu","Ok","ParseSql","ParseSqlSnafu","PlanStatement","PlanStatementSnafu","PrettyPrintRecordBatches","PrettyPrintRecordBatchesSnafu","Readline","ReadlineSnafu","ReplCreation","ReplCreationSnafu","RequestDatabase","RequestDatabaseSnafu","Result","SerdeJson","SerdeJsonSnafu","ShutdownDatanode","ShutdownDatanodeSnafu","ShutdownFrontend","ShutdownFrontendSnafu","ShutdownMetaServer","ShutdownMetaServerSnafu","StartCatalogManager","StartCatalogManagerSnafu","StartDatanode","StartDatanodeSnafu","StartFrontend","StartFrontendSnafu","StartMetaClient","StartMetaClientSnafu","StartMetaServer","StartMetaServerSnafu","StartProcedureManager","StartProcedureManagerSnafu","StopProcedureManager","StopProcedureManagerSnafu","SubstraitEncodeLogicalPlan","SubstraitEncodeLogicalPlanSnafu","UnsupportedSelectorType","UnsupportedSelectorTypeSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","database","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","etcd_addr","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","reason","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector_type","source","sql","sql","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","database","dir","error","error","error","error","error","error","error","etcd_addr","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","reason","selector_type","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","sql","sql","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","command","command","command","command_for_update","command_for_update","command_for_update","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_dashboard","drop","drop","drop","drop","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","frontend","group_id","group_id","has_subcommand","http_addr","http_timeout","influxdb_enable","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","metasrv_addr","mysql_addr","opentsdb_addr","or","or","or","or","postgres_addr","rpc_addr","sculpt","sculpt","sculpt","sculpt","start","stop","subcmd","subset","subset","subset","subset","tls_cert_path","tls_key_path","tls_mode","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","user_provider","vzip","vzip","vzip","vzip","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bind_addr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","command","command","command","command_for_update","command_for_update","command_for_update","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","data_home","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enable_region_failover","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","group_id","group_id","has_subcommand","http_addr","http_timeout","init","init","init","init","instance","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","or","or","or","or","sculpt","sculpt","sculpt","sculpt","selector","server_addr","start","stop","store_addr","subcmd","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","use_memory_store","vzip","vzip","vzip","vzip","Cli","Datanode","ENV_LIST_SEP","ENV_VAR_SEP","Frontend","Metasrv","MixOptions","Options","Standalone","TopLevelOptions","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","data_home","datanode","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","erased_serialize","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","frontend","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","load_layered_options","log_dir","log_level","logging","logging_options","metadata_store","node_id","or","or","or","procedure","sculpt","sculpt","sculpt","serialize","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_toml","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Command","Instance","StandaloneOptions","Start","StartCommand","SubCommand","__clone_box","and","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone_into","command","command","command","command_for_update","command_for_update","command_for_update","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config_file","create_ddl_task_executor","create_table_metadata_manager","data_home","datanode","datanode_options","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","enable_telemetry","env_prefix","erased_serialize","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","frontend","frontend_options","group_id","group_id","grpc","has_subcommand","http","http_addr","influxdb","influxdb_enable","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","logging","metadata_store","mode","mysql","mysql_addr","opentsdb","opentsdb_addr","or","or","or","or","or","postgres","postgres_addr","procedure","procedure_manager","prom_store","region_engine","rpc_addr","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","start","stop","storage","subcmd","subset","subset","subset","subset","subset","tls_cert_path","tls_key_path","tls_mode","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","user_provider","user_provider","vzip","vzip","vzip","vzip","vzip","wal"],"q":[[0,"cmd"],[7,"cmd::cli"],[175,"cmd::cli::bench"],[252,"cmd::cli::bench::metadata"],[287,"cmd::cli::cmd"],[323,"cmd::cli::cmd::ReplCommand"],[325,"cmd::cli::export"],[453,"cmd::cli::helper"],[492,"cmd::cli::repl"],[533,"cmd::cli::upgrade"],[627,"cmd::cli::upgrade::v1_helper"],[869,"cmd::cli::upgrade::v1_helper::err"],[981,"cmd::cli::upgrade::v1_helper::err::Error"],[986,"cmd::datanode"],[1148,"cmd::error"],[2473,"cmd::error::Error"],[2545,"cmd::frontend"],[2712,"cmd::metasrv"],[2875,"cmd::options"],[2988,"cmd::standalone"],[3213,"tower_http::follow_redirect::policy::and"],[3214,"tower_http::follow_redirect::policy"],[3215,"clap_builder::builder::command"],[3216,"async_compat"],[3217,"core::future::future"],[3218,"alloc::boxed"],[3219,"core::pin"],[3220,"core::fmt"],[3221,"core::fmt"],[3222,"clap_builder"],[3223,"core::result"],[3224,"clap_builder::util::id"],[3225,"core::option"],[3226,"tonic::request"],[3227,"tonic::request"],[3228,"frunk_core::hlist"],[3229,"frunk_core::coproduct"],[3230,"core::any"],[3231,"core::ops::function"],[3232,"common_meta::rpc::router"],[3233,"alloc::vec"],[3234,"table::metadata"],[3235,"common_meta::table_name"],[3236,"table::metadata"],[3237,"dyn_clone::sealed"],[3238,"alloc::string"],[3239,"clap_builder::builder::possible_value"],[3240,"rustyline"],[3241,"rustyline"],[3242,"rustyline::config"],[3243,"rustyline::validate"],[3244,"rustyline::validate"],[3245,"std::path"],[3246,"greptime_proto::v1::meta"],[3247,"regex::regex::string"],[3248,"serde::de"],[3249,"erased_serde::ser"],[3250,"erased_serde::ser"],[3251,"core::convert"],[3252,"serde::ser"],[3253,"core::error"],[3254,"snafu::backtrace_inert"],[3255,"core::convert"],[3256,"core::fmt"],[3257,"core::any"],[3258,"common_error::status_code"],[3259,"frontend::frontend"],[3260,"meta_srv::metasrv"],[3261,"serde::ser"],[3262,"common_telemetry::logging"],[3263,"frontend::error"],[3264,"common_meta::kv_backend"],[3265,"common_procedure::procedure"],[3266,"common_meta::datanode_manager"],[3267,"common_meta::ddl"]],"d":["","","","","","","","","","","","","Captures the state of the repl, gathers commands and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client for interacting with GreptimeDB","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Current prompt","","","Rustyline editor for interacting with user on command line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Represents the parsed command from the user (which may be …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Corresponding to <code>SHOW CREATE TABLE</code>","","","","Corresponding to <code>EXPORT TABLE</code>","","","Server address to connect","","","","","","basic authentication for connecting to the server","","","","","","","","","","","","","","","","","","","","","","","The name of the catalog to export. Default to “greptime-*…","","","","","","","","","","","","","","Parallelism of the export.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Return a list of <code>TableReference</code> to be exported. Includes …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Iterate over all db names.","","","","Max retry times for each job.","","","","","Directory to put the exported data. E.g.: …","","","","","","","Split at <code>-</code>.","","","","","Things to export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Captures the state of the repl, gathers commands and …","","","","","","","","Client for interacting with GreptimeDB","","","","","","","Returns the argument unchanged.","","Return the location of the history file (defaults to $HOME/…","","Calls <code>U::from(self)</code>.","","","","","Parse the next command","","","Current prompt","","Rustyline editor for interacting with user on command line","Read Evaluate Print Loop (interactive command line) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pattern of a valid catalog, schema or table name.","","","","","Table global info contains necessary info for a datanode …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of datanode that created the global table info kv. only …","","","","","","","","","","","Allocation of region ids across all datanodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::InvalidCatalog</code> …","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildMetaServer</code> …","","SNAFU context selector for the <code>Error::CollectRecordBatches</code> …","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the <code>Error::ConnectServer</code> variant","","SNAFU context selector for the <code>Error::CreateDir</code> variant","","SNAFU context selector for the <code>Error::EmptyResult</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::FileIo</code> variant","","SNAFU context selector for the <code>Error::IllegalConfig</code> variant","","SNAFU context selector for the <code>Error::InitDdlManager</code> …","","SNAFU context selector for the <code>Error::InitMetadata</code> variant","","SNAFU context selector for the <code>Error::InvalidDatabaseName</code> …","","SNAFU context selector for the <code>Error::InvalidReplCommand</code> …","","SNAFU context selector for the <code>Error::IterStream</code> variant","","SNAFU context selector for the <code>Error::LoadLayeredConfig</code> …","","SNAFU context selector for the <code>Error::MissingConfig</code> variant","","SNAFU context selector for the <code>Error::NotDataFromOutput</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::Readline</code> variant","","SNAFU context selector for the <code>Error::ReplCreation</code> variant","","SNAFU context selector for the <code>Error::RequestDatabase</code> …","","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::ShutdownDatanode</code> …","","SNAFU context selector for the <code>Error::ShutdownFrontend</code> …","","SNAFU context selector for the <code>Error::ShutdownMetaServer</code> …","","SNAFU context selector for the <code>Error::StartCatalogManager</code> …","","SNAFU context selector for the <code>Error::StartDatanode</code> variant","","SNAFU context selector for the <code>Error::StartFrontend</code> variant","","SNAFU context selector for the <code>Error::StartMetaClient</code> …","","SNAFU context selector for the <code>Error::StartMetaServer</code> …","","SNAFU context selector for the <code>Error::StartProcedureManager</code>…","","SNAFU context selector for the <code>Error::StopProcedureManager</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working home directory of this metasrv instance.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options mixed up from datanode, frontend and metasrv.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Load the configuration from multiple sources and merge …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working home directory of this standalone instance.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for different store engines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,7,0,7,0,0,5,0,0,5,7,5,4,7,8,4,8,4,8,7,7,0,5,4,7,8,5,4,7,8,4,7,8,0,4,4,7,8,4,7,8,5,4,7,8,5,4,7,8,5,4,7,8,59,5,4,7,8,5,4,7,8,8,156,5,4,7,8,0,8,5,4,7,8,4,7,8,4,7,8,5,4,7,8,4,8,8,7,0,5,4,7,8,5,4,7,8,5,5,4,4,7,7,8,8,5,4,7,8,5,4,7,8,4,8,5,4,7,8,59,59,0,59,5,4,7,8,5,5,5,4,7,8,5,4,7,8,5,4,7,8,5,4,7,8,5,5,4,4,7,7,8,8,5,4,7,8,4,7,8,4,7,8,0,5,4,7,8,0,0,40,34,34,34,0,40,34,40,34,34,34,34,40,34,40,34,40,34,40,34,0,0,34,40,34,40,34,40,40,34,34,34,40,34,34,34,40,34,34,40,34,40,34,40,40,34,34,40,34,40,34,0,40,34,40,34,40,34,40,40,34,40,34,40,34,40,40,34,34,40,34,34,34,40,34,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,157,158,46,0,0,0,46,0,46,45,47,46,45,45,45,45,47,46,45,47,46,45,45,47,47,46,46,45,45,47,46,45,47,46,45,47,46,45,45,46,45,47,46,45,47,46,45,47,47,46,45,47,45,47,46,45,47,46,45,45,45,46,47,46,45,47,45,47,46,45,47,46,45,47,47,46,46,45,45,47,46,45,47,47,46,45,45,47,46,45,47,45,47,47,47,46,45,47,0,47,46,45,47,45,46,46,47,46,45,47,46,45,47,46,45,47,47,46,46,45,45,47,46,45,45,45,46,47,46,45,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,59,59,59,59,59,59,0,59,59,59,59,59,59,59,59,59,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,62,61,61,61,62,61,62,61,61,61,61,62,61,62,61,62,61,62,62,61,62,62,61,62,61,62,62,61,62,61,61,62,61,62,61,61,61,62,61,61,62,61,62,61,62,62,61,61,62,61,62,61,62,62,62,62,62,62,62,62,61,62,61,62,61,62,61,62,61,62,61,62,62,61,62,61,62,61,62,61,62,62,61,61,62,61,61,61,0,62,61,0,0,0,0,0,0,0,0,0,0,63,68,70,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,66,63,63,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,0,65,66,68,68,70,70,63,72,73,65,66,68,70,63,72,73,63,72,73,65,66,68,70,63,72,73,63,63,63,63,63,63,72,73,0,65,66,63,72,73,65,66,68,70,63,72,73,63,63,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,65,66,66,68,68,70,70,63,63,72,72,73,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,63,65,66,68,70,63,72,73,65,66,63,63,66,65,66,68,70,63,72,73,63,72,73,65,66,68,70,63,72,73,63,63,63,65,66,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,65,65,66,66,68,68,70,70,63,63,72,72,73,73,65,66,68,70,63,72,73,65,66,68,70,63,72,73,77,0,0,77,0,82,85,82,85,77,77,77,82,85,77,82,85,77,82,77,82,85,82,85,82,85,77,82,85,77,82,85,77,82,85,77,82,85,77,77,82,85,77,82,82,85,77,77,82,85,77,82,85,82,85,77,82,85,77,82,85,77,82,85,82,82,85,85,77,77,82,85,77,82,82,85,77,82,85,77,85,82,85,77,77,82,85,77,82,85,77,82,85,77,82,85,77,82,85,77,82,82,85,85,77,77,82,85,77,82,85,77,159,159,160,160,160,0,0,90,0,0,89,87,90,91,87,91,87,91,90,90,89,87,90,91,89,87,90,91,87,90,91,87,90,91,87,90,91,89,87,90,91,89,87,90,91,89,87,90,91,91,91,89,91,89,87,90,91,89,87,90,91,89,87,90,91,91,91,89,87,90,91,87,90,91,87,90,91,89,87,90,91,87,91,90,91,91,89,87,90,91,89,87,90,91,89,89,87,87,90,90,91,91,89,87,90,91,89,87,90,91,87,90,91,91,91,89,87,90,91,91,91,89,87,90,91,89,89,87,89,87,90,91,89,87,90,91,89,87,90,91,89,87,90,91,89,89,87,87,90,90,91,91,89,87,90,91,87,90,91,87,90,91,89,87,90,91,91,92,0,92,0,92,0,92,0,92,0,92,0,6,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,6,92,0,92,0,92,0,92,0,92,0,92,0,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,125,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,92,92,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,94,95,96,97,98,99,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,99,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,92,128,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,124,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,94,94,95,95,112,112,96,96,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,97,97,98,98,127,127,99,99,128,128,92,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,94,95,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,96,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,112,92,115,119,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,108,108,109,109,110,110,111,111,94,94,95,95,112,112,96,96,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,97,97,98,98,127,127,99,99,128,128,92,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,100,101,102,103,104,105,106,107,108,109,110,111,94,95,112,96,113,114,115,116,117,118,119,120,121,122,123,124,125,126,97,98,127,99,128,92,161,162,163,164,165,166,167,168,169,163,167,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,164,165,185,186,187,188,189,190,191,166,192,167,161,168,193,194,169,162,182,183,195,184,170,171,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,191,192,161,185,189,0,0,134,0,0,133,131,134,135,131,135,131,135,134,134,133,131,134,135,133,131,134,135,131,134,135,131,134,135,131,134,135,133,131,134,135,133,131,134,135,133,131,134,135,135,135,133,131,134,135,133,131,134,135,135,133,131,134,135,135,135,133,131,134,135,131,134,135,131,134,135,133,131,134,135,133,131,135,134,135,135,135,133,131,134,135,133,131,134,135,133,133,131,131,134,134,135,135,133,131,134,135,133,131,134,135,131,134,135,135,135,135,133,131,134,135,135,135,133,131,134,135,133,133,131,133,131,134,135,135,135,135,133,131,134,135,133,131,134,135,133,131,134,135,133,133,131,131,134,134,135,135,133,131,134,135,131,134,135,131,134,135,135,133,131,134,135,0,0,139,0,0,138,136,139,140,136,140,136,140,139,139,140,138,136,139,140,138,136,139,140,136,139,140,136,139,140,136,139,140,138,136,139,140,138,136,139,140,138,136,139,140,140,140,140,138,136,139,140,138,136,139,140,138,136,139,140,140,140,140,138,136,139,140,136,139,140,136,139,140,138,136,139,140,136,140,139,140,140,138,136,139,140,138,138,136,139,140,138,138,136,136,139,139,140,140,138,136,139,140,138,136,139,140,136,139,140,138,136,139,140,138,136,139,140,140,140,138,138,140,136,138,136,139,140,138,136,139,140,138,136,139,140,138,136,139,140,138,138,136,136,139,139,140,140,138,136,139,140,136,139,140,136,139,140,140,138,136,139,140,27,27,0,0,27,27,0,0,27,0,26,27,141,26,27,141,26,27,141,26,26,26,27,141,26,27,141,26,27,141,26,141,141,26,27,141,26,27,141,26,27,141,26,141,141,26,27,141,26,26,27,141,26,141,27,141,26,27,141,26,27,27,141,141,26,26,27,141,26,27,141,26,27,26,26,141,27,141,27,27,141,26,141,27,141,26,141,27,141,26,26,27,141,26,27,141,26,141,27,141,26,27,27,141,141,26,26,27,141,26,27,141,26,0,0,0,149,0,0,151,148,147,149,151,150,147,150,147,150,149,149,148,147,149,151,150,148,147,149,151,150,147,149,150,151,151,147,149,150,147,149,150,148,147,149,151,150,148,147,149,151,150,148,147,149,151,150,150,150,150,150,148,151,151,150,148,147,149,151,150,148,147,149,151,150,151,148,147,149,151,150,151,150,151,151,150,148,147,149,151,150,147,149,150,147,149,150,151,148,147,149,151,150,148,151,147,150,151,149,151,150,151,150,148,147,149,151,150,148,147,149,151,150,148,148,147,147,149,149,151,151,150,150,148,147,149,151,150,148,147,149,151,150,147,149,150,151,151,151,151,150,151,150,148,147,149,151,150,151,150,151,148,151,151,150,148,147,149,151,150,151,148,148,151,147,148,147,149,151,150,150,150,150,151,148,147,149,151,150,148,147,149,151,150,148,147,149,151,150,148,148,147,147,149,149,151,151,150,150,148,147,149,151,150,147,149,150,147,149,150,151,150,148,147,149,151,150,151],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[6,[5]]]],[7,[[6,[5]]]],[8,[[6,[5]]]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],0,[-1,[[13,[[12,[11]]]]],[]],[10,14],[10,14],[10,14],[10,14],0,[[8,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[4,18]]]],[17,[[19,[7,18]]]],[17,[[19,[8,18]]]],[17,[[19,[4,18]]]],[17,[[19,[7,18]]]],[17,[[19,[8,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[20]]]],[[],[[21,[20]]]],0,[22,23],0,[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,26],[[6,[27]]]],0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[5,[[6,[14]]]],[5,[[6,[14]]]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[4,17],[[19,[14,18]]]],[[7,17],[[19,[14,18]]]],[[8,17],[[19,[14,18]]]],[[4,17],[[19,[14,18]]]],[[7,17],[[19,[14,18]]]],[[8,17],[[19,[14,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[[22,-1,32],14,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,[[6,[5]]]],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,[[],[[36,[35]]]],[[37,38],39],[[],34],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[40,[[13,[[12,[11]]]]]],[10,14],[10,14],0,[[34,15],16],[-1,-1,[]],[-1,-1,[]],[17,[[19,[34,18]]]],[17,[[19,[34,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[20]]]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[34,17],[[19,[14,18]]]],[[34,17],[[19,[14,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[41,14],[41,14],[41,14],[41,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[10,-1,[]],[10,-1,[]],[10,14],[-1,-1,[]],[-1,-2,[],[]],[[],10],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[42,32],41],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[19,[30]]],[]],0,[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[10,-1,[]],[10,-1,[]],[10,14],[[43,43],23],[[43,15],16],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],10],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[22,[[6,[43]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,44],14,[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,[[6,[5]]]],0,0,[46,46],[[-1,-2],14,[],[]],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[[],46],[[],45],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[47,[[13,[[12,[11]]]]]],[10,14],[10,14],[10,14],[47,[[6,[14]]]],0,[47,[[6,[14]]]],[[46,15],16],[[45,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[45,18]]]],[17,[[19,[45,18]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,22,22],[[6,[[36,[[14,[48,48,48]]]]]]]],[[],[[21,[20]]]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[47,[[6,[[36,[[14,[48,48]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[[47,22,22,22],[[6,[48]]]],[22,[[6,[[14,[48,[21,[48]]]]]]]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,0,[-1,-2,[],[]],[46,[[21,[49]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[45,17],[[19,[14,18]]]],[[45,17],[[19,[14,18]]]],[[],[[50,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[51,22,10,52],[[53,[[14,[10,36]]]]]],[[],51],[10,-1,[]],[10,-1,[]],[10,14],[-1,-1,[]],[-1,-2,[],[]],[[51,22,10],[[54,[22]]]],[[51,22,55],[[54,[22]]]],[[51,22,10],23],[[51,22],[[54,[22]]]],[[51,22,23],[[54,[22]]]],0,[[51,22,10,52],21],0,[[],10],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[[51,56],[[53,[57]]]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[22,[[6,[58]]]],0,[10,-1,[]],[10,-1,[]],[[59,48],[[6,[14]]]],[10,14],[59,14],[[59,48],23],[-1,-1,[]],[-1,-2,[],[]],[[],60],[[],10],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[59,[[6,[43]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[59,14],0,0,0,[59,[[6,[14]]]],[-1,[[14,[29]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[8,[[6,[59]]]],[-1,31,[]],[-1,-2,[],[]],0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,[[6,[5]]]],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[62,63],14],[[62,63],14],[[],61],[[62,[36,[[36,[64]]]]],14],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[62,[[13,[[12,[11]]]]]],[10,14],[10,14],0,0,0,0,[[61,15],16],[-1,-1,[]],[-1,-1,[]],[17,[[19,[61,18]]]],[17,[[19,[61,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[20]]]],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,65],14],[62,[[6,[14]]]],[[62,66],[[6,[14]]]],[62,[[6,[14]]]],[62,[[6,[14]]]],[[62,67],[[6,[32]]]],[62,[[6,[14]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],0,0,0,0,0,0,0,0,[[62,22,63],14],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[61,17],[[19,[14,18]]]],[[61,17],[[19,[14,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,44],14,[]],0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[63,63],[[-1,-2],14,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[68,69],[70,69],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[19,[63]]],71],[-1,[[19,[72]]],71],[-1,[[19,[73]]],71],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[[63,63],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,74],[[19,[75,76]]],[]],[[-1,74],[[19,[75,76]]],[]],[[-1,74],[[19,[75,76]]],[]],0,[[65,15],16],[[66,15],16],[[63,15],16],[[72,15],16],[[73,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[19,[63,77]]],[[78,[[50,[64]]]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[19,[65,77]]],[[78,[22]]]],[-1,[[19,[66,77]]],[[78,[22]]]],[-1,[[19,[63,77]]],[[78,[22]]]],0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[[63,-1],19,79],[[72,-1],19,79],[[73,-1],19,79],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[63,37],0,[-1,-2,[],[]],[-1,48,[]],[-1,48,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,44],14,[]],[[-1,44],14,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,80,[]],[77,[[21,[81]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],77,[[83,[48]]]],[77,[[21,[80]]]],[[[82,[-1]]],[[82,[-1]]],84],[[[85,[-1]]],[[85,[-1]]],84],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[77,22],[10,14],[10,14],[10,14],[[[82,[-1]]],[[19,[-2,77]]],[[83,[48]]],[]],[[[82,[-1]],15],16,86],[[[85,[-1]],15],16,86],[[77,15],16],[[77,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[82,[-1]]],77,[[83,[48]]]],[[[85,[-1]]],77,[[83,[48]]]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[77,[[21,[80]]]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,48,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,88],[[6,[89]]]],[[90,88],[[6,[89]]]],[[91,88],[[6,[89]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,0,[[],91],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,14],[10,14],[10,14],[10,14],0,[[91,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[87,18]]]],[17,[[19,[90,18]]]],[17,[[19,[91,18]]]],[17,[[19,[87,18]]]],[17,[[19,[90,18]]]],[17,[[19,[91,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[20]]]],[[],[[21,[20]]]],[22,23],0,0,[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,26],[[6,[27]]]],[[90,26],[[6,[27]]]],[[91,26],[[6,[27]]]],0,0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[89,[[6,[14]]]],[89,[[6,[14]]]],0,[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[87,17],[[19,[14,18]]]],[[90,17],[[19,[14,18]]]],[[91,17],[[19,[14,18]]]],[[87,17],[[19,[14,18]]]],[[90,17],[[19,[14,18]]]],[[91,17],[[19,[14,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],[[-1,44],14,[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[92,93],[-1,80,[]],[92,[[21,[81]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1]]],92,[[83,[48]]]],[[[95,[-1]]],92,[[83,[48]]]],[[[96,[-1]]],92,[[83,[48]]]],[97,92],[98,92],[[[99,[-1]]],92,[[83,[48]]]],[92,[[21,[80]]]],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[[[94,[-1]]],[[94,[-1]]],84],[[[95,[-1]]],[[95,[-1]]],84],[[[112,[-1]]],[[112,[-1]]],84],[[[96,[-1]]],[[96,[-1]]],84],[113,113],[114,114],[[[115,[-1]]],[[115,[-1]]],84],[116,116],[117,117],[118,118],[[[119,[-1]]],[[119,[-1]]],84],[120,120],[121,121],[122,122],[123,123],[[[124,[-1]]],[[124,[-1]]],84],[[[125,[-1]]],[[125,[-1]]],84],[126,126],[97,97],[98,98],[127,127],[[[99,[-1]]],[[99,[-1]]],84],[[[128,[-1]]],[[128,[-1]]],84],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[[92,10,[36,[48]]],14],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[92,22],0,[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],[10,14],0,[[[94,[-1]]],[[19,[-2,92]]],[[83,[48]]],[]],[[[95,[-1]]],[[19,[-2,92]]],[[83,[48]]],[]],[[[96,[-1]]],[[19,[-2,92]]],[[83,[48]]],[]],[97,[[19,[-1,92]]],[]],[98,[[19,[-1,92]]],[]],[[[99,[-1]]],[[19,[-2,92]]],[[83,[48]]],[]],[[100,15],16],[[101,15],16],[[102,15],16],[[103,15],16],[[104,15],16],[[105,15],16],[[106,15],16],[[107,15],16],[[108,15],16],[[109,15],16],[[110,15],16],[[111,15],16],[[[94,[-1]],15],16,86],[[[95,[-1]],15],16,86],[[[112,[-1]],15],16,86],[[[96,[-1]],15],16,86],[[113,15],16],[[114,15],16],[[[115,[-1]],15],16,86],[[116,15],16],[[117,15],16],[[118,15],16],[[[119,[-1]],15],16,86],[[120,15],16],[[121,15],16],[[122,15],16],[[123,15],16],[[[124,[-1]],15],16,86],[[[125,[-1]],15],16,86],[[126,15],16],[[97,15],16],[[98,15],16],[[127,15],16],[[[99,[-1]],15],16,86],[[[128,[-1]],15],16,86],[[92,15],16],[[92,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,92],[101,92],[102,92],[103,92],[104,92],[105,92],[106,92],[107,92],[108,92],[109,92],[110,92],[111,92],[[[94,[-1]]],92,[[83,[48]]]],[[[95,[-1]]],92,[[83,[48]]]],[[[112,[-1]]],92,[[83,[48]]]],[[[96,[-1]]],92,[[83,[48]]]],[113,92],[114,92],[[[115,[-1]]],92,[[83,[48]]]],[116,92],[117,92],[118,92],[[[119,[-1]]],92,[[83,[48]]]],[120,92],[121,92],[122,92],[123,92],[[[124,[-1]]],92,[[83,[48]]]],[[[125,[-1]]],92,[[83,[48]]]],[126,92],[97,92],[98,92],[127,92],[[[99,[-1]]],92,[[83,[48]]]],[[[128,[-1]]],92,[[83,[48]]]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[92,[[21,[129]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],0,[92,[[21,[80]]]],0,0,[92,130],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,48,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[131,132],[[6,[133]]]],[[134,132],[[6,[133]]]],[[135,132],[[6,[133]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[[],135],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],0,[10,14],[10,14],[10,14],[10,14],0,[[135,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[131,18]]]],[17,[[19,[134,18]]]],[17,[[19,[135,18]]]],[17,[[19,[131,18]]]],[17,[[19,[134,18]]]],[17,[[19,[135,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[21,[20]]]],[[],[[21,[20]]]],[22,23],0,0,0,[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[131,26],[[6,[27]]]],[[134,26],[[6,[27]]]],[[135,26],[[6,[27]]]],0,0,0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[133,[[6,[14]]]],[133,[[6,[14]]]],0,[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,0,0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[131,17],[[19,[14,18]]]],[[134,17],[[19,[14,18]]]],[[135,17],[[19,[14,18]]]],[[131,17],[[19,[14,18]]]],[[134,17],[[19,[14,18]]]],[[135,17],[[19,[14,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,137],[[6,[138]]]],[[139,137],[[6,[138]]]],[[140,137],[[6,[138]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,[[],140],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,14],[10,14],[10,14],[10,14],0,0,[[140,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[136,18]]]],[17,[[19,[139,18]]]],[17,[[19,[140,18]]]],[17,[[19,[136,18]]]],[17,[[19,[139,18]]]],[17,[[19,[140,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[20]]]],[[],[[21,[20]]]],[22,23],0,0,[[],10],[[],10],[[],10],[[],10],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,26],[[6,[27]]]],[[139,26],[[6,[27]]]],[[140,26],[[6,[27]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],0,0,[138,[[6,[14]]]],[138,[[6,[14]]]],0,0,[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[136,17],[[19,[14,18]]]],[[139,17],[[19,[14,18]]]],[[140,17],[[19,[14,18]]]],[[136,17],[[19,[14,18]]]],[[139,17],[[19,[14,18]]]],[[140,17],[[19,[14,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,44],14,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],14,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,0,[[],26],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,14],[10,14],[10,14],[[-1,74],[[19,[75,76]]],[]],[[141,15],16],[[26,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[22]],22,[21,[[50,[22]]]]],[[6,[-1]]],[142,143,144]],0,0,0,[27,145],0,[27,[[21,[48]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[[141,-1],19,79],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,[[146,[48]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,44],14,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[147,141],[[6,[148]]]],[[149,141],[[6,[148]]]],[[150,141],[[6,[148]]]],[151,151],[[-1,-2],14,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[[152,153,154],[[6,[155]]]],[152,[[6,[42]]]],0,0,[151,88],[[],151],[[],150],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[19,[151]]],71],[10,14],[10,14],[10,14],[10,14],[10,14],0,0,[[-1,74],[[19,[75,76]]],[]],[[151,15],16],[[150,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[147,18]]]],[17,[[19,[149,18]]]],[17,[[19,[150,18]]]],[17,[[19,[147,18]]]],[17,[[19,[149,18]]]],[17,[[19,[150,18]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[151,132],[[],[[21,[20]]]],[[],[[21,[20]]]],0,[22,23],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[147,26],[[6,[27]]]],[[149,26],[[6,[27]]]],[[150,26],[[6,[27]]]],0,0,0,0,0,0,0,[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[28,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,0,0,0,[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[-1,[[14,[29]]],[]],[[151,-1],19,79],[148,[[6,[14]]]],[148,[[6,[14]]]],0,0,[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],[-1,[[19,[30]]],[]],0,0,0,[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[147,17],[[19,[14,18]]]],[[149,17],[[19,[14,18]]]],[[150,17],[[19,[14,18]]]],[[147,17],[[19,[14,18]]]],[[149,17],[[19,[14,18]]]],[[150,17],[[19,[14,18]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0],"c":[624,627,628,629,630,631,632,633,634,635,636,638,639,661,662,663,686,690,691,703,704,705,713,721,722,723,724,725,726,734,785,793,794,795,796,797,805,806,807,815,816,869,870,871,872,873,880,887,888,889,890,908,912,913,914,915,916,931,932,942,949,953,981,982,983,984,985],"p":[[3,"And",3213],[8,"Policy",3214],[3,"Command",3215],[3,"Command",7],[4,"Instance",7],[6,"Result",1148],[4,"SubCommand",7],[3,"AttachCommand",7],[3,"Compat",3216],[15,"usize"],[8,"Future",3217],[3,"Box",3218],[3,"Pin",3219],[15,"tuple"],[3,"Formatter",3220],[6,"Result",3220],[3,"ArgMatches",3221],[6,"Error",3222],[4,"Result",3223],[3,"Id",3224],[4,"Option",3225],[15,"str"],[15,"bool"],[3,"Request",3226],[3,"Request",3226],[3,"TopLevelOptions",2875],[4,"Options",2875],[3,"Or",3227],[3,"HNil",3228],[4,"CNil",3229],[3,"TypeId",3230],[15,"u32"],[8,"Fn",3231],[3,"BenchTableMetadataCommand",175],[3,"RegionRoute",3232],[3,"Vec",3233],[6,"TableId",3234],[3,"TableName",3235],[3,"RawTableInfo",3234],[3,"BenchTableMetadata",175],[3,"TableMetadataBencher",252],[6,"TableMetadataManagerRef",3236],[4,"ReplCommand",287],[3,"Private",3237],[3,"ExportCommand",325],[4,"ExportTarget",325],[3,"Export",325],[3,"String",3238],[3,"PossibleValue",3239],[15,"slice"],[3,"RustylineHelper",453],[3,"Context",3240],[6,"Result",3240],[4,"Cow",3241],[4,"CompletionType",3242],[3,"ValidationContext",3243],[4,"ValidationResult",3243],[3,"DatafusionQueryEngine",3244],[3,"Repl",492],[3,"PathBuf",3245],[3,"UpgradeCommand",533],[3,"MigrateTableMetadata",533],[3,"TableGlobalValue",627],[15,"u8"],[3,"CatalogKey",627],[3,"SchemaKey",627],[3,"TableRouteValue",3246],[3,"CATALOG_KEY_PATTERN",627],[3,"Regex",3247],[3,"SCHEMA_KEY_PATTERN",627],[8,"Deserializer",3248],[3,"CatalogValue",627],[3,"SchemaValue",627],[8,"Serializer",3249],[3,"Ok",3249],[3,"Error",3250],[4,"Error",869],[8,"AsRef",3251],[8,"Serializer",3252],[8,"Error",3253],[3,"Backtrace",3254],[3,"InvalidCatalogSnafu",869],[8,"Into",3251],[8,"Clone",3255],[3,"DeserializeCatalogEntryValueSnafu",869],[8,"Debug",3220],[3,"Command",986],[3,"DatanodeOptions",3256],[3,"Instance",986],[4,"SubCommand",986],[3,"StartCommand",986],[4,"Error",1148],[8,"Any",3230],[3,"MissingConfigSnafu",1148],[3,"IllegalConfigSnafu",1148],[3,"InvalidReplCommandSnafu",1148],[3,"NotDataFromOutputSnafu",1148],[3,"EmptyResultSnafu",1148],[3,"InvalidDatabaseNameSnafu",1148],[3,"InitMetadataSnafu",1148],[3,"IterStreamSnafu",1148],[3,"InitDdlManagerSnafu",1148],[3,"StartProcedureManagerSnafu",1148],[3,"StopProcedureManagerSnafu",1148],[3,"StartDatanodeSnafu",1148],[3,"ShutdownDatanodeSnafu",1148],[3,"StartFrontendSnafu",1148],[3,"ShutdownFrontendSnafu",1148],[3,"BuildMetaServerSnafu",1148],[3,"StartMetaServerSnafu",1148],[3,"ShutdownMetaServerSnafu",1148],[3,"UnsupportedSelectorTypeSnafu",1148],[3,"ReplCreationSnafu",1148],[3,"ReadlineSnafu",1148],[3,"RequestDatabaseSnafu",1148],[3,"CollectRecordBatchesSnafu",1148],[3,"PrettyPrintRecordBatchesSnafu",1148],[3,"StartMetaClientSnafu",1148],[3,"ParseSqlSnafu",1148],[3,"PlanStatementSnafu",1148],[3,"SubstraitEncodeLogicalPlanSnafu",1148],[3,"LoadLayeredConfigSnafu",1148],[3,"StartCatalogManagerSnafu",1148],[3,"ConnectEtcdSnafu",1148],[3,"ConnectServerSnafu",1148],[3,"SerdeJsonSnafu",1148],[3,"FileIoSnafu",1148],[3,"CreateDirSnafu",1148],[8,"StackError",3257],[4,"StatusCode",3258],[3,"Command",2545],[3,"FrontendOptions",3259],[3,"Instance",2545],[4,"SubCommand",2545],[3,"StartCommand",2545],[3,"Command",2712],[3,"MetaSrvOptions",3260],[3,"Instance",2712],[4,"SubCommand",2712],[3,"StartCommand",2712],[3,"MixOptions",2875],[8,"Serialize",3252],[8,"Deserialize",3248],[8,"Default",3261],[3,"LoggingOptions",3262],[6,"Result",3263],[3,"Command",2988],[3,"Instance",2988],[4,"SubCommand",2988],[3,"StartCommand",2988],[3,"StandaloneOptions",2988],[6,"KvBackendRef",3264],[6,"ProcedureManagerRef",3265],[6,"DatanodeManagerRef",3266],[6,"DdlTaskExecutorRef",3267],[8,"Tool",7],[13,"UseDatabase",323],[13,"Sql",323],[13,"InvalidCatalog",981],[13,"DeserializeCatalogEntryValue",981],[13,"ConnectServer",2473],[13,"InvalidDatabaseName",2473],[13,"CreateDir",2473],[13,"ReplCreation",2473],[13,"Readline",2473],[13,"LoadLayeredConfig",2473],[13,"ConnectEtcd",2473],[13,"SerdeJson",2473],[13,"FileIo",2473],[13,"InitMetadata",2473],[13,"IterStream",2473],[13,"InitDdlManager",2473],[13,"StartProcedureManager",2473],[13,"StopProcedureManager",2473],[13,"StartDatanode",2473],[13,"ShutdownDatanode",2473],[13,"StartFrontend",2473],[13,"ShutdownFrontend",2473],[13,"BuildMetaServer",2473],[13,"StartMetaServer",2473],[13,"ShutdownMetaServer",2473],[13,"MissingConfig",2473],[13,"IllegalConfig",2473],[13,"UnsupportedSelectorType",2473],[13,"RequestDatabase",2473],[13,"CollectRecordBatches",2473],[13,"PrettyPrintRecordBatches",2473],[13,"StartMetaClient",2473],[13,"ParseSql",2473],[13,"PlanStatement",2473],[13,"SubstraitEncodeLogicalPlan",2473],[13,"StartCatalogManager",2473],[13,"NotDataFromOutput",2473],[13,"EmptyResult",2473],[13,"InvalidReplCommand",2473]],"b":[[915,"impl-Debug-for-Error"],[916,"impl-Display-for-Error"],[1708,"impl-Display-for-Error"],[1709,"impl-Debug-for-Error"]]},\
"common_base":{"doc":"","t":"CDALLAALLLLLMLLLLLLLLALLLLGMMASSQQIIODDIDDDDIDSSSDDSSQDQQSSSIIIMMMMMMLLLLLLLLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLKLLLKLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLMOMMOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLKKLLLLLLLLLLIINDNENNDGNDKLLKLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLKLLLLLLLLMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRDRRLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitVec","Plugins","bit_vec","borrow","borrow_mut","buffer","bytes","clone","clone_into","default","from","get","inner","insert","into","is_empty","len","lock","map","map_mut","new","readable_size","to_owned","try_from","try_into","type_id","BitVec","bitspan","capacity","prelude","ALIAS_WIDTH","ALIGNED_TO_SIZE","Access","Alias","AsBits","AsMutBits","BitArr","BitArray","BitBox","BitOrder","BitPtr","BitPtrRange","BitRef","BitSlice","BitStore","BitVec","DANGLING","EMPTY","EMPTY","LocalBits","Lsb0","MAX_BITS","MAX_ELTS","Mem","Msb0","Store","Unalias","ZERO","ZERO","ZERO","_","_","_","_mem","_or","_ord","_ord","_ref","_typ","add","address","align_offset","align_to","align_to_mut","all","any","append","as_bitptr","as_bitptr","as_bitptr_range","as_bits","as_bitslice","as_bitslice","as_bitslice","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_bitptr","as_mut_bitptr","as_mut_bitptr_range","as_mut_bits","as_mut_bitslice","as_mut_bitslice","as_mut_bitslice","as_mut_ptr","as_mut_ptr","as_mut_ptr_range","as_mut_slice","as_mut_slice","as_ptr","as_ptr","as_ptr_range","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","at","at","at","bit","bit","bit_domain","bit_domain_mut","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitarr","bitbox","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitptr","bits","bitspan","bitspan","bitvec","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","cast","chunks","chunks_exact","chunks_exact_mut","chunks_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_bitslice","clone_from_slice","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commit","contains","contains","copy_from","copy_from_bitslice","copy_from_nonoverlapping","copy_from_slice","copy_to","copy_to_nonoverlapping","copy_within","copy_within_unchecked","count","count_ones","count_zeros","data","data","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","domain","domain_mut","drain","drop","drop","drop","drop_in_place","empty","empty_mut","end","end_bound","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend_from_bitslice","extend_from_raw_slice","extend_from_slice","extend_from_within","fill","fill_uninitialized","fill_with","first","first_mut","first_one","first_zero","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_align","force_align","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bitptr","from_bitslice","from_bitslice","from_boxed_slice","from_element","from_element","from_element_mut","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_mut","from_mut_slice","from_range","from_raw","from_raw_parts","from_ref","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_unchecked","from_slice_unchecked_mut","from_vec","get","get_bit","get_mut","get_unchecked","get_unchecked_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","into","into","into","into","into","into","into","into","into","into_bitarray","into_bitptr","into_bitvec","into_boxed_bitslice","into_boxed_slice","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_range","into_raw","into_raw_parts","into_vec","is_empty","is_empty","is_empty","is_empty","is_null","iter","iter_mut","iter_ones","iter_zeros","last","last","last_mut","last_one","last_zero","leading_ones","leading_zeros","leak","leak","len","len","len","len","load","load_be","load_be","load_be","load_be","load_be","load_be","load_le","load_le","load_le","load_le","load_le","load_le","load_value","mask","mask","mask","new","new","new","new","new_unchecked","next","next_back","not","not","not","not","not","not_all","not_any","nth","nth_back","offset","offset_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","pointer","pop","ptr","push","raw_parts","rchunks","rchunks_exact","rchunks_exact_mut","rchunks_mut","read","read","read","read_unaligned","read_volatile","remove","repeat","repeat","replace","replace","replace","replace_unchecked","reserve","reserve_exact","resize","resize_with","retain","reverse","rotate_left","rotate_right","rsplit","rsplit_mut","rsplitn","rsplitn_mut","select","select","select","set","set","set_aliased","set_aliased_unchecked","set_elements","set_len","set_unchecked","set_uninitialized","shift_left","shift_right","shrink_to_fit","size_hint","some","splice","split","split_at","split_at_mut","split_at_unchecked","split_at_unchecked_mut","split_first","split_first_mut","split_inclusive","split_inclusive_mut","split_last","split_last_mut","split_mut","split_off","splitn","splitn_mut","start","start_bound","starts_with","store","store_be","store_be","store_be","store_be","store_be","store_be","store_le","store_le","store_le","store_le","store_le","store_le","store_value","strip_prefix","strip_suffix","sub","swap","swap","swap","swap_remove","swap_unchecked","swap_with_bitslice","swap_with_slice","to_bitvec","to_const","to_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_parts","to_string","to_string","to_string","to_string","to_string","to_vec","trailing_ones","trailing_zeros","truncate","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_boxed_slice","try_from_slice","try_from_slice","try_from_slice_mut","try_from_vec","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_view_bits","try_view_bits_mut","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_bits","view_bits_mut","windows","with_capacity","wrapping_add","wrapping_offset","wrapping_sub","write","write","write","write_unaligned","write_volatile","Buffer","BufferMut","Eof","EofSnafu","Err","Error","Ok","Overflow","OverflowSnafu","Result","Underflow","UnderflowSnafu","advance_by","as_any","as_error_source","as_slice","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","debug_fmt","description","dst_len","fail","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","impl_buffer_for_bytes","impl_read_le","impl_write_le","into","into","into","into","into_error","into_error","into_error","is_empty","location_opt","next","peek_f32_le","peek_f64_le","peek_i16_le","peek_i32_le","peek_i64_le","peek_i8_le","peek_to_slice","peek_u16_le","peek_u32_le","peek_u64_le","peek_u8_le","read_f32_le","read_f64_le","read_i16_le","read_i32_le","read_i64_le","read_i8_le","read_to_slice","read_u16_le","read_u32_le","read_u64_le","read_u8_le","remaining_size","source","src_len","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_f32_le","write_f64_le","write_from_slice","write_i16_le","write_i32_le","write_i64_le","write_i8_le","write_u16_le","write_u32_le","write_u64_le","write_u8_le","dst_len","error","location","location","location","src_len","Bytes","StringBytes","as_utf8","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","is_empty","len","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","B","BINARY_DATA_MAGNITUDE","GIB","KIB","MIB","PIB","ReadableSize","TIB","UNIT","as_bytes","as_mb","borrow","borrow_mut","clone","clone_into","deserialize","div","div","eq","fmt","fmt","from","from_str","gb","into","kb","mb","mul","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"common_base"],[26,"common_base::bit_vec"],[30,"common_base::bit_vec::prelude"],[722,"common_base::buffer"],[835,"common_base::buffer::Error"],[841,"common_base::bytes"],[892,"common_base::readable_size"],[927,"core::option"],[928,"core::marker"],[929,"core::marker"],[930,"core::any"],[931,"anymap"],[932,"std::sync::mutex"],[933,"core::ops::function"],[934,"core::result"],[935,"core::any"],[936,"wyz::comu"],[937,"bitvec::index"],[938,"bitvec::index"],[939,"bitvec::domain"],[940,"bitvec::slice::iter"],[941,"bitvec::slice::iter"],[942,"wyz::range"],[943,"bitvec::domain"],[944,"core::ops::range"],[945,"core::ops::function"],[946,"core::fmt"],[947,"core::fmt"],[948,"alloc::alloc"],[949,"alloc::boxed"],[950,"alloc::vec"],[951,"bitvec::slice::api"],[952,"core::hash"],[953,"core::ops::range"],[954,"bitvec::index"],[955,"bitvec::index"],[956,"core::cmp"],[957,"bitvec::vec::iter"],[958,"bitvec::ptr::span"],[959,"bitvec::slice::iter"],[960,"snafu::backtrace_inert"],[961,"core::fmt"],[962,"common_error::ext"],[963,"serde::de"],[964,"bytes::bytes"],[965,"serde::ser"]],"d":["","<code>Plugins</code> is a wrapper of Arc contents. Make it Cloneable …","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Symbol Export","All implementors are required to have <code>Self</code> and <code>Self::Alias</code> …","All implementors are required to have their alignment …","A type that selects the appropriate load/store …","A sibling <code>BitStore</code> implementor that is known to be …","Immutable Bit View","Mutable Bit View","Bit-Array Type Definition","Bit-Precision Array Immediate","Fixed-Size, Heap-Allocated, Bit Slice","In-Element Bit Ordering","Single-Bit Pointer","Bit-Pointer Range","Proxy Bit-Reference","Bit-Addressable Memory","Bit Storage","Bit-Precision Dynamic Array","The canonical dangling pointer. This selects the starting …","The canonical empty range. All ranges with zero length …","An empty bit-vector with no backing allocation.","Least-Significant-First Bit Traversal","Least-Significant-First Bit Traversal","The inclusive maximum length of a <code>BitSlice&lt;_, T&gt;</code>.","The inclusive maximum length that a <code>[T]</code> slice can be for …","The element type used in the memory region underlying a …","Most-Significant-First Bit Traversal","The underlying element type.","The inverse of <code>::Alias</code>. It is used when a <code>BitSlice</code> removes …","A bit-array with all bits initialized to zero.","The zero constant.","The zero constant.","C-Style Bit-Field Access","Helper trait for scalars and arrays, but not slices.","Bit View","","","The ordering of bits within an <code>A::Store</code> element.","","","","Adjusts a bit-pointer upwards in memory. This is …","Gets the address of the base storage element.","Computes the offset (in bits) that needs to be applied to …","Produces bit-slice view(s) with different underlying …","Produces bit-slice view(s) with different underlying …","Tests if every bit is set to <code>1</code> in the bit-slice.","Tests if there is at least one bit set to <code>1</code> in the …","Moves all the bits out of <code>other</code> into the back of <code>self</code>.","Gets a raw pointer to the zeroth bit of the bit-slice.","Creates an unsafe shared bit-pointer to the start of the …","Views the bit-slice as a half-open range of bit-pointers, …","Views <code>self</code> as an immutable bit-slice region with the <code>O</code> …","Explicitly views the bit-array as a bit-slice.","Explicitly views the bit-box as a bit-slice.","Explicitly views the bit-vector as a bit-slice.","","","","Produces a proxy reference to the referent bit.","","","","Gets a raw, write-capable pointer to the zeroth bit of the …","Creates an unsafe writable bit-pointer to the start of the …","Views the bit-slice as a half-open range of write-capable …","Views <code>self</code> as a mutable bit-slice region with the <code>O</code> …","Explicitly views the bit-array as a mutable bit-slice.","Explicitly views the bit-box as a mutable bit-slice.","Explicitly views the bit-vector as a mutable bit-slice.","","","Produces a range of mutable bit-pointers to each bit in …","Returns a mutable bit-slice containing the entire …","","","","Produces a range of bit-pointers to each bit in the …","Views the type as a mutable slice of its elements.","Views the bit-array as a mutable slice of its underlying …","Views the bit-box as a mutable slice of its underlying …","Views the bit-vector as a mutable slice of its underlying …","Views the type as a slice of its elements.","Views the bit-array as a slice of its underlying memory …","Views the bit-box as a slice of its underlying memory …","Views the bit-vector as a slice of its underlying memory …","","","","Produces a proxy reference to the referent bit.","","","","Returns a bit-slice containing the entire bit-array. …","","Translates a semantic bit index into a real bit position.","","","Gets the <code>BitIdx</code> that selects the bit within the memory …","","Partitions a bit-slice into maybe-contended and …","Partitions a mutable bit-slice into maybe-contended and …","","","","","","","","","","","","Boolean Arithmetic","","Bit-Array Value Constructor","Boxed Bit-Slice Constructor","","","","","","","Boolean Arithmetic","","","","","","","","Bit-Slice Region Constructor","","","Bit-Vector Constructor","","","","","","","","","","","Boolean Arithmetic","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the allocation capacity, measured in bits.","","Casts to a <code>BitPtr</code> with a different storage parameter.","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","Empties the bit-vector.","","","","","","","","","Copies the bits from <code>src</code> into <code>self</code>.","","","","","","","","","","","","","","","","","","Commits a bit into the proxied location.","Tests if a given bit-pointer is contained within the range.","Tests if the bit-slice contains the given sequence …","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","Copies all bits from <code>src</code> into <code>self</code>, using batched …","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","Copies a span of bits to another location in the bit-slice.","Copies bits from one region of the bit-slice to another …","","Counts the number of bits set to <code>1</code> in the bit-slice …","Counts the number of bits cleared to <code>0</code> in the bit-slice …","The wrapped data buffer.","","","","","","","","","","","","","","","","","","Views the underlying memory of a bit-slice, removing alias …","Views the underlying memory of a bit-slice, removing alias …","Iterates over a portion of the bit-vector, <em>removing</em> all …","","","","Runs the destructor of the referent value.","Produces an empty bit-slice with an arbitrary lifetime.","Produces an empty bit-slice with an arbitrary lifetime.","The higher, exclusive, bound of the range. The bit to …","","Tests if the bit-slice ends with the given sequence.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends the contents of a bit-slice to a bit-vector.","Appends a slice of <code>T</code> elements to a bit-vector.","","Extends <code>self</code> by copying an internal range of its bit-slice …","Fills the bit-slice with a given bit.","Sets the unused bits outside the <code>BitBox</code> buffer to a fixed …","Fills the bit-slice with bits produced by a generator …","Gets a reference to the first bit of the bit-slice, or <code>None</code>…","Gets a mutable reference to the first bit of the …","Finds the index of the first bit in the bit-slice set to <code>1</code>.","Finds the index of the first bit in the bit-slice cleared …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the allocated buffer has no dead bits between …","Ensures that the live region of the bit-vector’s …","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts a bit-pointer into a proxy bit-reference.","Copies a bit-slice region into a new bit-box allocation.","Copies the contents of a bit-slice into a new heap …","Converts a <code>Box&lt;[T]&gt;</code> into a <code>BitBox&lt;T, O&gt;</code>, in place.","Constructs a shared <code>&amp;BitSlice</code> reference over a shared …","Constructs a new bit-vector from a single element.","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over an …","","","","","","","Constructs a mutable <code>BitPtr</code> to the zeroth bit in a single …","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Explicitly converts a <code>Range&lt;BitPtr&gt;</code> into a <code>BitPtrRange</code>.","Constructs a bit-box from a raw bit-slice pointer.","Constructs a bit-vector handle from its constituent fields.","Constructs a <code>BitPtr</code> to the zeroth bit in a single element.","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Constructs a shared <code>&amp;BitSlice</code> reference over a slice of …","Constructs a new bit-vector from a slice of memory …","Constructs a mutable <code>BitPtr</code> to the zeroth bit in the …","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over a …","Constructs a shared <code>&amp;BitSlice</code> over an element slice, …","Constructs an exclusive <code>&amp;mut BitSlice</code> over an element …","Converts a regular vector in-place into a bit-vector.","Gets a reference to a single bit or a subsection of the …","Reads a single bit out of the memory system according to …","Gets a mutable reference to a single bit or a subsection …","Gets a reference to a single bit or to a subsection of the …","Gets a mutable reference to a single bit or a subsection …","","","","","","","","","","","","","","","Looks up a single bit by its semantic index.","","","","","","","","","","","","","","Inserts a bit at a given position, shifting all bits after …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wraps <code>self</code> in a <code>BitArray</code>.","Decays the bit-reference to an ordinary bit-pointer.","Converts the bit-box into a bit-vector.","Converts a bit-vector into a boxed bit-slice.","Converts the bit-box back into an ordinary boxed element …","","Removes the bit-array wrapper, returning the contained …","","","","","","","","","","","Explicitly converts a <code>BitPtrRange</code> into a <code>Range&lt;BitPtr&gt;</code>.","Consumes the bit-box, returning a raw bit-slice pointer.","Decomposes a bit-vector into its constituent member fields.","Converts a bit-vector into a <code>Vec</code> of its underlying storage.","Tests whether the array is empty.","Tests if the range is empty (the distance between …","Tests if the bit-slice is empty (length zero).","Tests if the bit-vector is empty.","Tests if a bit-pointer is the null value.","Produces an iterator over each bit in the bit-slice.","Produces a mutable iterator over each bit in the bit-slice.","Enumerates the index of each bit in a bit-slice set to <code>1</code>.","Enumerates the index of each bit in a bit-slice cleared to …","","Gets a reference to the last bit of the bit-slice, or <code>None</code> …","Gets a mutable reference to the last bit of the bit-slice, …","Finds the index of the last bit in the bit-slice set to <code>1</code>.","Finds the index of the last bit in the bit-slice cleared …","Counts the number of bits from the start of the bit-slice …","Counts the number of bits from the start of the bit-slice …","Deliberately leaks the allocated memory, returning an …","Destroys the <code>BitVec</code> handle without destroying the …","Gets the length (in bits) of the bit-array.","","Gets the number of bits in the bit-slice.","Gets the length of the bit-vector.","Integer Loading","Big-Endian Integer Loading","","","<code>Msb0</code> Big-Endian Integer Loading","<code>Lsb0</code> Big-Endian Integer Loading","","Little-Endian Integer Loading","","","<code>Msb0</code> Little-Endian Integer Loading","<code>Lsb0</code> Little-Endian Integer Loading","","Loads a value out of the memory system according to the …","Produces a multi-bit selection mask from a range of …","","","Wraps a raw memory value as a <code>BitStore</code> type.","Wraps an existing buffer as a bit-array.","Tries to construct a <code>BitPtr</code> from a memory location and a …","Constructs a new, empty, bit-vector.","Constructs a <code>BitPtr</code> from an address and head index, …","","","","","","","","Tests if at least one bit is cleared to <code>0</code> in the bit-slice.","Tests if every bit is cleared to <code>0</code> in the bit-slice.","","","Creates a new bit-pointer at a specified offset from the …","Calculates the distance (in bits) between two bit-pointers.","","","","","","","","","","","","","","","","","","","","","","","","Gets a raw pointer to the memory location containing the …","Gets a raw pointer to the memory element containing the …","Attempts to remove the trailing bit from the bit-vector.","","Appends a single bit to the vector.","Decomposes a bit-pointer into its element address and bit …","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","Reads the bit from <code>*self</code>.","","","Reads the bit from <code>*self</code> using an unaligned memory access.","Reads the bit from <code>*self</code> using a volatile load.","Removes a bit at a given position, shifting all bits after …","Creates a bit-vector by repeating a bit-slice <code>n</code> times.","Creates a new bit-vector by repeating a bit for the …","Moves <code>src</code> into the referenced bit, returning the previous …","Replaces the bit at <code>*self</code> with a new value, returning the …","Writes a new value into a bit, and returns its previous …","Writes a new value into a bit, returning the previous …","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Resizes the bit-vector to a new length. New bits are …","Resizes the bit-vector to a new length, using a function …","Retains only the bits that the predicate allows.","Reverses the order of bits in a bit-slice.","Rotates the contents of a bit-slice to the left (towards …","Rotates the contents of a bit-slice to the right (away …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Produces a single-bit selection mask from a bit-index.","","","Writes <code>value</code> into the proxy.","Writes a new value into a single bit.","Writes a new value into a single bit, using alias-safe …","Writes a new value into a single bit, using alias-safe …","Overwrites each element (visible in <code>.as_raw_mut_slice()</code>) …","Resizes a bit-vector to a new length.","Writes a new value into a single bit, without bounds …","Sets the uninitialized bits of a bit-vector to a known …","Shifts the contents of a bit-slice “left” (towards the …","Shifts the contents of a bit-slice “right” (away from …","Releases excess capacity back to the allocator.","","Tests if at least one bit is set to <code>1</code>, and at least one …","Modifies <code>self.drain()</code> so that the removed bit-slice is …","Iterates over subslices separated by bits that match a …","Splits a bit-slice in two parts at an index.","Splits a mutable bit-slice in two parts at an index.","Splits a bit-slice at an index, without bounds checking.","Splits a mutable bit-slice at an index, without bounds …","Splits the bit-slice into a reference to its first bit, …","Splits the bit-slice into mutable references of its first …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Splits the bit-slice into a reference to its last bit, and …","Splits the bit-slice into mutable references to its last …","Iterates over mutable subslices separated by bits that …","Splits the bit-vector in half at an index, moving …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","The lower, inclusive, bound of the range. The bit to which …","","Tests if the bit-slice begins with the given sequence.","Integer Storing","Big-Endian Integer Storing","","","<code>Msb0</code> Big-Endian Integer Storing","<code>Lsb0</code> Big-Endian Integer Storing","","Little-Endian Integer Storing","","","<code>Lsb0</code> Little-Endian Integer Storing","<code>Msb0</code> Little-Endian Integer Storing","","Stores a value into the memory system. This is only called …","Removes a prefix bit-slice, if present.","Removes a suffix bit-slice, if present.","Adjusts a bit-pointer downwards in memory. This is …","Swaps the bit values of two proxies.","Swaps the bits at two mutable locations.","Exchanges the bit values at two indices.","Takes a bit out of the bit-vector.","Swaps two bits in a bit-slice, without bounds checking.","Swaps the contents of two bit-slices.","","Copies a bit-slice into an owned bit-vector.","Removes write permissions from a bit-pointer.","Adds write permissions to a bit-pointer.","","","","","","","","","","Decomposes a bit-pointer into its address and head-index …","","","","","","","Counts the number of bits from the end of the bit-slice to …","Counts the number of bits from the end of the bit-slice to …","Shortens the bit-vector, keeping the first <code>new_len</code> bits …","Attempts to view <code>self</code> as an immutable bit-slice region …","Attempts to view <code>self</code> as a mutable bit-slice region with …","","","","","","","","","","","","","","","","","","","Attempts to convert an ordinary boxed slice into a boxed …","Attempts to construct a shared <code>&amp;BitSlice</code> reference over a …","Fallibly constructs a new bit-vector from a slice of …","Attempts to construct an exclusive <code>&amp;mut BitSlice</code> reference …","Attempts to convert a regular vector in-place into a …","","","","","","","","","","Attempts to view a memory region as an immutable bit-slice.","Attempts to view a memory region as a mutable bit-slice.","","","","","","","","","","Views a memory region as an immutable bit-slice.","Views a memory region as a mutable bit-slice.","Iterates over consecutive windowing subslices in a …","Allocates a new, empty, bit-vector with space for at least …","Adjusts a bit-pointer upwards in memory, using wrapping …","Creates a new bit-pointer at a specified offset from the …","Adjusts a bit-pointer downwards in memory, using wrapping …","Writes a new bit into the given location.","","","Writes a bit into memory, tolerating unaligned addresses.","Writes a new bit using volatile I/O operations.","","Mutable buffer.","","SNAFU context selector for the <code>Error::Eof</code> variant","Contains the error value","","Contains the success value","","SNAFU context selector for the <code>Error::Overflow</code> variant","","","SNAFU context selector for the <code>Error::Underflow</code> variant","Advances internal cursor for next read.","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if buffer has no data for read.","","","","","","","","","Peeks data into dst. This method should not change …","","","","","","","","","","","Reads data into dst. This method will change internal …","","","","","Returns remaining data size for read.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bytes buffer.","String buffer that can hold arbitrary encoding string …","View this string as UTF-8 string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,125,125,0,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,15,23,21,0,0,20,20,17,0,126,17,24,17,25,0,0,0,20,15,24,20,28,20,15,15,15,20,20,20,20,21,20,21,20,127,24,26,21,24,26,28,15,20,21,21,20,21,20,128,24,26,21,20,21,20,24,21,20,21,20,25,24,26,21,25,24,26,21,24,26,28,15,20,21,21,24,21,18,39,40,15,15,20,20,24,26,21,24,26,20,20,20,20,20,20,20,21,0,0,24,26,21,24,26,20,20,20,20,20,20,20,21,28,0,26,21,0,24,26,21,24,26,20,20,20,20,20,20,20,21,24,24,26,26,28,23,15,20,21,21,39,40,24,24,26,26,28,23,15,20,21,21,39,40,21,21,15,20,20,20,20,21,24,26,28,23,15,21,39,40,20,20,24,26,28,23,15,21,39,40,24,26,28,15,20,21,39,40,28,23,20,15,20,15,20,15,15,20,20,23,20,20,24,28,24,26,23,20,20,21,39,40,24,26,28,21,24,26,28,21,20,20,21,26,28,21,15,20,20,23,23,20,24,26,28,28,28,23,15,20,20,20,20,20,20,20,20,20,20,20,20,21,39,40,21,21,21,21,21,21,21,21,21,20,26,20,20,20,20,20,20,21,24,24,24,24,24,24,26,26,26,26,26,26,26,28,28,28,23,15,15,20,20,20,20,20,20,20,21,21,21,21,21,21,21,39,40,26,21,24,24,24,26,26,26,26,26,26,28,23,23,15,15,15,20,21,21,21,21,21,21,39,40,28,26,21,26,20,21,20,26,21,21,21,21,21,15,15,23,26,21,15,15,20,21,15,20,20,20,21,20,17,20,20,20,24,26,28,23,15,20,21,39,40,24,26,20,20,20,20,20,20,20,21,24,26,20,20,20,20,20,20,21,21,24,26,28,23,15,20,21,39,40,25,28,26,21,26,21,24,24,24,24,26,23,20,20,21,21,21,23,26,21,21,24,23,20,21,15,20,20,20,20,23,20,20,20,20,20,20,26,21,24,23,20,21,129,129,24,26,20,20,21,129,24,26,20,20,21,17,18,39,40,17,24,15,21,15,23,23,24,26,28,20,21,20,20,23,23,15,15,24,26,28,28,28,15,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,39,40,15,15,21,15,21,15,20,20,20,20,15,20,21,15,15,21,20,21,28,15,20,20,21,21,21,21,21,20,20,20,20,20,20,20,18,39,40,28,20,20,20,21,21,20,21,20,20,21,23,20,21,20,20,20,20,20,20,20,20,20,20,20,20,21,20,20,23,23,20,129,129,24,26,20,20,21,129,24,26,20,20,21,17,20,20,15,28,15,20,21,20,20,20,20,15,15,24,26,28,23,15,20,21,39,40,15,24,26,28,20,21,20,20,20,21,127,128,24,24,24,24,26,26,28,23,15,15,15,20,20,20,21,21,39,40,26,20,21,20,21,24,26,28,23,15,20,21,39,40,126,126,24,26,28,23,15,20,21,39,40,126,126,20,21,15,15,15,15,20,21,15,15,0,0,98,0,110,0,110,98,0,0,98,0,130,98,98,131,98,101,102,103,98,101,102,103,98,101,102,98,101,102,103,101,102,103,98,98,101,101,102,101,102,103,98,98,101,102,103,98,0,0,0,101,102,103,98,101,102,103,130,98,98,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,98,101,101,102,103,98,101,102,103,98,101,102,103,98,101,102,103,98,131,131,131,131,131,131,131,131,131,131,131,132,133,132,134,133,132,0,0,119,120,119,120,119,120,119,120,119,120,119,120,119,120,120,119,120,120,120,119,119,119,120,119,120,120,120,120,119,119,119,120,119,120,119,119,119,120,119,120,119,120,119,120,119,120,119,120,119,0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,1],[[-1,-2],2,[],[]],[[],1],[-1,-1,[]],[1,[[3,[-1]]],[4,5,6]],0,[[1,-1],2,[4,5]],[-1,-2,[],[]],[1,7],[1,8],[1,[[11,[[10,[9]]]]]],[[1,-1],[[3,[-2]]],12,[]],[[1,-1],-2,12,[]],[[],1],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[15,[-1,-2,-3]],8],[[15,[-1,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]]],[[19,[-1,-2]]],16,17,18],[[[15,[-1,-2,-3]],8],8,16,17,18],[[[20,[-1,-2]]],[[2,[[20,[-1,-2]],[20,[-3,-2]],[20,[-1,-2]]]]],17,18,17],[[[20,[-1,-2]]],[[2,[[20,[-1,-2]],[20,[-3,-2]],[20,[-1,-2]]]]],17,18,17],[[[20,[-1,-2]]],7,17,18],[[[20,[-1,-2]]],7,17,18],[[[21,[-1,-2]],[21,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]]],[[15,[22,-1,-2]]],17,18],[[[21,[-1,-2]]],[[15,[22,-1,-2]]],17,18],[[[20,[-1,-2]]],[[23,[22,-1,-2]]],17,18],[-1,[[20,[-2,-3]]],[],[],18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[28,[27,-1,-2]]],7,17,18],[[[15,[27,-1,-2]]],[[3,[[28,[27,-1,-2]]]]],17,18],[[[20,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[21,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[15,[27,-1,-2]]],17,18],[[[21,[-1,-2]]],[[15,[27,-1,-2]]],17,18],[[[20,[-1,-2]]],[[23,[27,-1,-2]]],17,18],[-1,[[20,[-2,-3]]],[],[],18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[15,[27,-1,-2]]],17,18],[[[21,[-1,-2]]],[[15,[27,-1,-2]]],17,18],[[[20,[-1,-2]]],[[29,[[15,[27,-1,-2]]]]],17,18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[15,[22,-1,-2]]],17,18],[[[21,[-1,-2]]],[[15,[22,-1,-2]]],17,18],[[[20,[-1,-2]]],[[29,[[15,[22,-1,-2]]]]],17,18],[-1,30,[]],[[[24,[-1,-2]]],30,25,18],[[[26,[-1,-2]]],[[30,[-1]]],17,18],[[[21,[-1,-2]]],[[30,[-1]]],17,18],[-1,30,[]],[[[24,[-1,-2]]],30,25,18],[[[26,[-1,-2]]],[[30,[-1]]],17,18],[[[21,[-1,-2]]],[[30,[-1]]],17,18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[28,[-1,-2,-3]]],7,16,17,18],[[[15,[-1,-2,-3]]],[[3,[[28,[22,-2,-3]]]]],16,17,18],[[[20,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[21,[-1,-2]]],17,18],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[31,[-1]]],[[32,[-1]]],33],[[[31,[-1]]],[[32,[-1]]],33],[[[31,[-1]]],[[32,[-1]]],33],[[[15,[-1,-2,-3]]],31,16,17,18],0,[[[20,[-1,-2]]],[[34,[22,-1,-2]]],17,18],[[[20,[-1,-2]]],[[34,[27,-1,-2]]],17,18],[[[24,[-1,-2]],-3],[],25,18,[]],[[[26,[-1,-2]],-3],[],17,18,[]],[[[21,[-1,-2]],-3],[],17,18,[]],[[[24,[-1,-2]],-3],2,25,18,[]],[[[26,[-1,-2]],-3],2,17,18,[]],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[21,[-1,-2]],-3],2,17,18,[]],0,0,[[[24,[-1,-2]],-3],[],25,18,[]],[[[26,[-1,-2]],-3],[],17,18,[]],[[[21,[-1,-2]],-3],[],17,18,[]],[[[24,[-1,-2]],-3],2,25,18,[]],[[[26,[-1,-2]],-3],2,17,18,[]],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[21,[-1,-2]],-3],2,17,18,[]],0,0,0,0,0,[[[24,[-1,-2]],-3],[],25,18,[]],[[[26,[-1,-2]],-3],[],17,18,[]],[[[21,[-1,-2]],-3],[],17,18,[]],[[[24,[-1,-2]],-3],2,25,18,[]],[[[26,[-1,-2]],-3],2,17,18,[]],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[26,[-1,-2]]],2,17,18],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1]],[24,[-2,-1]]],2,18,25],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]],[21,[-1,-2]]],2,17,18],[[[21,[-1,-2]],-3],2,17,18,[]],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[-1,-2,[],[]],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,-2]]],[[20,[-2]]],25,18],[-1,-2,[],[]],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,-2]]],8,17,18],0,[[[15,[-1,-2,-3]]],[[15,[-1,-4,-3]]],16,17,18,17],[[[20,[-1,-2]],8],[[35,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[36,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[37,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[38,[-1,-2]]],17,18],[[[21,[-1,-2]]],2,17,18],[[[24,[-1,-2]]],[[24,[-1,-2]]],25,18],[[[26,[-1,-2]]],[[26,[-1,-2]]],17,18],[[[28,[22,-1,-2]]],[[28,[22,-1,-2]]],17,18],[[[23,[-1,-2,-3]]],[[23,[-1,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]]],[[15,[-1,-2,-3]]],16,17,18],[[[21,[-1,-2]]],[[21,[-1,-2]]],17,18],[39,39],[40,40],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[24,[-1,-2]],[24,[-1,-2]]],41,25,18],[[[26,[-1,-2]],[26,[-1,-2]]],41,17,18],[[[28,[-1,-2,-3]],[28,[-1,-2,-3]]],41,16,17,18],[[[15,[-1,-2,-3]],[15,[-1,-2,-3]]],41,16,17,18],[[[20,[-1,-2]],[20,[-1,-2]]],41,17,18],[[[21,[-1,-2]],[21,[-1,-2]]],41,17,18],[[39,39],41],[[40,40],41],[[[28,[27,-1,-2]],7],2,17,18],[[[23,[-1,-2,-3]],[15,[-4,-5,-3]]],7,16,17,18,16,17],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[15,[27,-1,-2]],[15,[22,-3,-4]],8],2,17,18,17,18],[[[20,[-1,-2]],[20,[-1,-2]]],2,17,18],[[[15,[27,-1,-2]],[15,[22,-3,-4]],8],2,17,18,17,18],[[[20,[-1,-2]],[20,[-1,-2]]],2,17,18],[[[15,[-1,-2,-3]],[15,[27,-4,-5]],8],2,16,17,18,17,18],[[[15,[-1,-2,-3]],[15,[27,-4,-5]],8],2,16,17,18,17,18],[[[20,[-1,-2]],-3,8],2,17,18,[[42,[8]]]],[[[20,[-1,-2]],-3,8],2,17,18,[[42,[8]]]],[[[23,[-1,-2,-3]]],8,16,17,18],[[[20,[-1,-2]]],8,17,18],[[[20,[-1,-2]]],8,17,18],0,0,[[],[[24,[-1,-2]]],25,18],[[],[[26,[-1,-2]]],17,18],[[],[[23,[-1,-2,-3]]],16,17,18],[[],[[20,[-1,-2]]],17,18],[[],[[20,[-1,-2]]],17,18],[[],[[21,[-1,-2]]],17,18],[[],39],[[],40],[[[24,[-1,-2]]],[],25,18],[[[26,[-1,-2]]],[],17,18],[[[28,[-1,-2,-3]]],[],16,17,18],[[[21,[-1,-2]]],[],17,18],[[[24,[-1,-2]]],[],25,18],[[[26,[-1,-2]]],[],17,18],[[[28,[27,-1,-2]]],[],17,18],[[[21,[-1,-2]]],[],17,18],[[[20,[-1,-2]]],[[43,[22,-1,-2]]],17,18],[[[20,[-1,-2]]],[[43,[27,-1,-2]]],17,18],[[[21,[-1,-2]],-3],[[44,[-1,-2]]],17,18,[[45,[8]]]],[[[26,[-1,-2]]],2,17,18],[[[28,[-1,-2,-3]]],2,16,17,18],[[[21,[-1,-2]]],2,17,18],[[[15,[27,-1,-2]]],2,17,18],[[],[[20,[-1,-2]]],17,18],[[],[[20,[-1,-2]]],17,18],0,[[[23,[-1,-2,-3]]],[[46,[[15,[-1,-2,-3]]]]],16,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[24,[-1,-2]],-3],7,25,18,47],[[[26,[-1,-2]],-3],7,17,18,[[48,[[20,[-1,-2]]]],47]],[[[28,[-1,-2,-3]],7],7,16,17,18],[[[28,[-1,-2,-3]],[28,[-4,-5,-6]]],7,16,17,18,16,17,18],[[[28,[-1,-2,-3]],7],7,16,17,18],[[[23,[-1,-2,-3]],[23,[-4,-5,-3]]],7,16,17,18,16,17],[[[15,[-1,-2,-3]],[15,[-4,-5,-3]]],7,16,17,18,16,17],[[[20,[-1,-2]],[21,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[24,[-3,-4]]],7,17,18,25,18],[[[20,[-1,-2]],[26,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[21,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[21,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[26,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[[20,[-1,-2]],[26,[-3,-4]]],7,17,18,17,18],[[[21,[-1,-2]],-3],7,17,18,[[48,[[20,[-1,-2]]]],47]],[[39,39],7],[[40,40],7],[[[21,[-1,-2]],-3],2,17,18,49],[[[21,[-1,-2]],-3],2,17,18,49],[[[21,[-1,-2]],-3],2,17,18,49],[[[21,[-1,-2]],-3],2,17,18,49],[[[21,[-1,-2]],-3],2,17,18,49],[[[21,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[21,[-1,-2]],[30,[-1]]],2,17,18],[[[21,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[21,[-1,-2]],-3],2,17,18,[[42,[8]]]],[[[20,[-1,-2]],7],2,17,18],[[[26,[-1,-2]],7],2,17,18],[[[20,[-1,-2]],-3],2,17,18,50],[[[20,[-1,-2]]],[[3,[[28,[22,-1,-2]]]]],17,18],[[[20,[-1,-2]]],[[3,[[28,[27,-1,-2]]]]],17,18],[[[20,[-1,-2]]],[[3,[8]]],17,18],[[[20,[-1,-2]]],[[3,[8]]],17,18],[[[20,[-1,-2]]],[[13,[2,51]]],17,18],[[[21,[-1,-2]]],[[13,[2,51]]],17,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[24,[-1,-2]],52],[[13,[2,53]]],25,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[26,[-1,-2]],52],[[13,[2,53]]],17,18],[[[28,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[28,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[28,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[23,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[15,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[15,[-1,-2,-3]],52],[[13,[2,53]]],16,17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[20,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[[21,[-1,-2]],52],[[13,[2,53]]],17,18],[[39,52],[[13,[2,53]]]],[[40,52],[[13,[2,53]]]],[[[26,[-1,-2]]],2,17,18],[[[21,[-1,-2]]],2,17,18],[54,-1,[]],[-1,-1,[]],[-1,[[24,[-1,-2]]],25,18],[[[21,[-1,-2]]],[[26,[-1,-2]]],17,18],[[[55,[[20,[-1,-2]]]]],[[26,[-1,-2]]],17,18],[[[24,[-1,-2]]],[[26,[-2]]],25,18],[-1,-1,[]],[[[57,[-1,56]]],[[26,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[26,[-1,-2]]],17,18],[-1,-1,[]],[[[29,[[15,[-1,-2,-3]]]]],[[23,[-1,-2,-3]]],16,17,18],[-1,-1,[]],[-1,[[15,[22,-1,-2]]],17,18],[-1,[[15,[27,-1,-2]]],17,18],[-1,-1,[]],[-1,-1,[]],[[[55,[[20,[-1,-2]]]]],[[21,[-1,-2]]],17,18],[[[24,[-1,-2]]],[[21,[-2]]],25,18],[[[20,[-1,-2]]],[[21,[-1,-2]]],17,18],[-1,-1,[]],[[[20,[-1,-2]]],[[21,[-1,-2]]],17,18],[[[26,[-1,-2]]],[[21,[-1,-2]]],17,18],[-1,-1,[]],[-1,-1,[]],[[[15,[-1,-2,-3]]],[[28,[-1,-2,-3]]],16,17,18],[[[20,[-1,-2]]],[[26,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[21,[-1,-2]]],17,18],[[[57,[[30,[-1]],56]]],[[26,[-1,-2]]],17,18],[-1,[[20,[-1,-2]]],17,18],[-1,[[21,[-1,-2]]],17,18],[-1,[[20,[-1,-2]]],17,18],[-1,[[26,[-2,-3]]],49,17,18],[-1,[[21,[-2,-3]]],49,17,18],[-1,[[21,[-2,-3]]],49,17,18],[-1,[[21,[-2,-3]]],49,17,18],[-1,[[21,[-2,-3]]],49,17,18],[-1,[[21,[-2,-3]]],49,17,18],[-1,[[15,[27,-1,-2]]],17,18],[[[30,[-1]]],[[15,[27,-1,-2]]],17,18],[[[29,[[15,[-1,-2,-3]]]]],[[23,[-1,-2,-3]]],16,17,18],[20,[[26,[-1,-2]]],17,18],[[[15,[27,-1,-2]],8,8],[[21,[-1,-2]]],17,18],[-1,[[15,[22,-1,-2]]],17,18],[[[30,[-1]]],[[15,[22,-1,-2]]],17,18],[[[30,[-1]]],[[20,[-1,-2]]],17,18],[[[30,[-1]]],[[21,[-1,-2]]],17,18],[[[30,[-1]]],[[15,[27,-1,-2]]],17,18],[[[30,[-1]]],[[20,[-1,-2]]],17,18],[[[30,[-1]]],[[20,[-1,-2]]],17,18],[[[30,[-1]]],[[20,[-1,-2]]],17,18],[[[58,[-1,56]]],[[21,[-1,-2]]],17,18],[[[20,[-1,-2]],-3],3,17,18,[[59,[-1,-2]]]],[[-1,31],7,[]],[[[20,[-1,-2]],-3],3,17,18,[[59,[-1,-2]]]],[[[20,[-1,-2]],-3],[],17,18,[[59,[-1,-2]]]],[[[20,[-1,-2]],-3],[],17,18,[[59,[-1,-2]]]],[[[24,[-1,-2]],-3],2,25,18,60],[[[26,[-1,-2]],-3],2,17,18,60],[[[28,[-1,-2,-3]],-4],2,16,17,18,60],[[[23,[-1,-2,-3]],-4],2,16,17,18,60],[[[15,[-1,-2,-3]],-4],2,16,17,18,60],[[[20,[-1,-2]],-3],2,17,18,60],[[[21,[-1,-2]],-3],2,17,18,60],[[39,-1],2,60],[[40,-1],2,60],[[[24,[-1,-2]],-3],[],25,18,[]],[[[26,[-1,-2]],-3],[],17,18,[]],[[[20,[-1,-2]],61],[],17,18],[[[20,[-1,-2]],[62,[8]]],[],17,18],[[[20,[-1,-2]],[63,[8]]],[],17,18],[[[20,[-1,-2]],8],[],17,18],[[[20,[-1,-2]],[64,[8]]],[],17,18],[[[20,[-1,-2]],[29,[8]]],[],17,18],[[[20,[-1,-2]],[65,[8]]],[],17,18],[[[21,[-1,-2]],-3],[],17,18,[]],[[[24,[-1,-2]],-3],[],25,18,[]],[[[26,[-1,-2]],-3],[],17,18,[]],[[[20,[-1,-2]],[65,[8]]],[],17,18],[[[20,[-1,-2]],61],[],17,18],[[[20,[-1,-2]],[64,[8]]],[],17,18],[[[20,[-1,-2]],[63,[8]]],[],17,18],[[[20,[-1,-2]],[62,[8]]],[],17,18],[[[20,[-1,-2]],[29,[8]]],[],17,18],[[[21,[-1,-2]],-3],[],17,18,[]],[[[21,[-1,-2]],8,7],2,17,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-1,-2]]],[],18],[[[28,[-1,-2,-3]]],[[15,[-1,-2,-3]]],16,17,18],[[[26,[-1,-2]]],[[21,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[26,[-1,-2]]],17,18],[[[26,[-1,-2]]],[[57,[[30,[-1]],56]]],17,18],[[[21,[-1,-2]]],[[26,[-1,-2]]],17,18],[[[24,[-1,-2]]],-1,25,18],[[[24,[-1,-2]]],[],25,18],[[[24,[-1,-2]]],[],25,18],[[[24,[-1,-2]]],[],25,18],[[[26,[-1,-2]]],[],17,18],[-1,-2,[],[]],[[[20,[-1,-2]]],[],17,18],[[[20,[-1,-2]]],[],17,18],[[[21,[-1,-2]]],[],17,18],[[[21,[-1,-2]]],[],17,18],[[[21,[-1,-2]]],[],17,18],[[[23,[-1,-2,-3]]],[[29,[[15,[-1,-2,-3]]]]],16,17,18],[[[26,[-1,-2]]],20,17,18],[[[21,[-1,-2]]],[[2,[[15,[27,-1,-2]],8,8]]],17,18],[[[21,[-1,-2]]],[[58,[-1,56]]],17,18],[[[24,[-1,-2]]],7,25,18],[[[23,[-1,-2,-3]]],7,16,17,18],[[[20,[-1,-2]]],7,17,18],[[[21,[-1,-2]]],7,17,18],[[[15,[-1,-2,-3]]],7,16,17,18],[[[20,[-1,-2]]],[[66,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[67,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[68,[-1,-2]]],17,18],[[[20,[-1,-2]]],[[69,[-1,-2]]],17,18],[[[23,[-1,-2,-3]]],3,16,17,18],[[[20,[-1,-2]]],[[3,[[28,[22,-1,-2]]]]],17,18],[[[20,[-1,-2]]],[[3,[[28,[27,-1,-2]]]]],17,18],[[[20,[-1,-2]]],[[3,[8]]],17,18],[[[20,[-1,-2]]],[[3,[8]]],17,18],[[[20,[-1,-2]]],8,17,18],[[[20,[-1,-2]]],8,17,18],[[[26,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[21,[-1,-2]]],[[20,[-1,-2]]],17,18],[[[24,[-1,-2]]],8,25,18],[[[23,[-1,-2,-3]]],8,16,17,18],[[[20,[-1,-2]]],8,17,18],[[[21,[-1,-2]]],8,17,18],[-1,-2,[],70],[-1,-2,[],70],[[[24,[-1,-2]]],-3,25,18,70],[[[26,[-1,-2]]],-3,17,18,70],[[[20,[-1,40]]],-2,17,70],[[[20,[-1,39]]],-2,17,70],[[[21,[-1,-2]]],-3,17,18,70],[-1,-2,[],70],[[[24,[-1,-2]]],-3,25,18,70],[[[26,[-1,-2]]],-3,17,18,70],[[[20,[-1,40]]],-2,17,70],[[[20,[-1,39]]],-2,17,70],[[[21,[-1,-2]]],-3,17,18,70],[-1,[],[]],[[-2,-3],[[71,[-1]]],33,[[72,[[3,[[31,[-1]]]]]]],[[72,[[3,[[73,[-1]]]]]]]],[[-2,-3],[[71,[-1]]],33,[[72,[[3,[[31,[-1]]]]]]],[[72,[[3,[[73,[-1]]]]]]]],[[-2,-3],[[71,[-1]]],33,[[72,[[3,[[31,[-1]]]]]]],[[72,[[3,[[73,[-1]]]]]]]],[[],-1,[]],[-1,[[24,[-1,-2]]],25,18],[[[19,[-1,-2]],31],[[13,[[15,[-1,-2,-3]],[74,[-2]]]]],16,17,18],[[],[[21,[-1,-2]]],17,18],[[[19,[-1,-2]],31],[[15,[-1,-2,-3]]],16,17,18],[[[23,[-1,-2,-3]]],3,16,17,18],[[[23,[-1,-2,-3]]],3,16,17,18],[[[24,[-1,-2]]],[],25,18],[[[26,[-1,-2]]],[],17,18],[[[28,[-1,-2,-3]]],[],16,17,18],[[[20,[-1,-2]]],[],17,18],[[[21,[-1,-2]]],[],17,18],[[[20,[-1,-2]]],7,17,18],[[[20,[-1,-2]]],7,17,18],[[[23,[-1,-2,-3]],8],3,16,17,18],[[[23,[-1,-2,-3]],8],3,16,17,18],[[[15,[-1,-2,-3]],75],[[15,[-1,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]],[15,[-1,-4,-3]]],75,16,17,18,17],[[[24,[-1,-2]],-3],[[3,[41]]],25,18,47],[[[26,[-1,-2]],-3],[[3,[41]]],17,18,[[76,[[20,[-1,-2]]]],47]],[[[28,[-1,-2,-3]],7],[[3,[41]]],16,17,18],[[[28,[-1,-2,-3]],[28,[-4,-5,-6]]],[[3,[41]]],16,17,18,16,17,18],[[[28,[-1,-2,-3]],7],[[3,[41]]],16,17,18],[[[15,[-1,-2,-3]],[15,[-4,-5,-3]]],[[3,[41]]],16,17,18,16,17],[[[20,[-1,-2]],[26,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[24,[-3,-2]]],[[3,[41]]],17,18,25],[[[20,[-1,-2]],[21,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[21,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[26,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[21,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[20,[-1,-2]],[26,[-3,-4]]],[[3,[41]]],17,18,17,18],[[[21,[-1,-2]],-3],[[3,[41]]],17,18,[[76,[[20,[-1,-2]]]],47]],[[39,39],[[3,[41]]]],[[40,40],[[3,[41]]]],[[[15,[27,-1,-2]]],[],17,18],[[[15,[22,-1,-2]]],[],17,18],[[[21,[-1,-2]]],[[3,[7]]],17,18],0,[[[21,[-1,-2]],7],2,17,18],[[[15,[-1,-2,-3]]],[[2,[[19,[-1,-2]],31]]],16,17,18],[[[20,[-1,-2]],8],[[77,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[78,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[79,[-1,-2]]],17,18],[[[20,[-1,-2]],8],[[80,[-1,-2]]],17,18],[[[15,[-1,-2,-3]]],7,16,17,18],[[[20,[-1,-2]],[30,[81]]],[[13,[8,51]]],17,18],[[[21,[-1,-2]],[30,[81]]],[[13,[8,51]]],17,18],[[[15,[-1,-2,-3]]],7,16,17,18],[[[15,[-1,-2,-3]]],7,16,17,18],[[[21,[-1,-2]],8],7,17,18],[[[20,[-1,-2]],8],[[21,[-2]]],17,18],[[7,8],[[21,[-1,-2]]],17,18],[[[28,[27,-1,-2]],7],7,17,18],[[[15,[27,-1,-2]],7],7,17,18],[[[20,[-1,-2]],8,7],7,17,18],[[[20,[-1,-2]],8,7],7,17,18],[[[21,[-1,-2]],8],2,17,18],[[[21,[-1,-2]],8],2,17,18],[[[21,[-1,-2]],8,7],2,17,18],[[[21,[-1,-2]],8,-3],2,17,18,50],[[[21,[-1,-2]],-3],2,17,18,50],[[[20,[-1,-2]]],2,17,18],[[[20,[-1,-2]],8],2,17,18],[[[20,[-1,-2]],8],2,17,18],[[[20,[-1,-2]],-3],[[82,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],-3],[[83,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],8,-3],[[84,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],8,-3],[[85,[-1,-2,-3]]],17,18,50],[[[31,[-1]]],[[86,[-1]]],33],[[[31,[-1]]],[[86,[-1]]],33],[[[31,[-1]]],[[86,[-1]]],33],[[[28,[27,-1,-2]],7],2,17,18],[[[20,[-1,-2]],8,7],2,17,18],[[[20,[-1,-2]],8,7],2,[17,87],18],[[[20,[-1,-2]],8,7],2,[17,87],18],[[[21,[-1,-2]]],2,17,18],[[[21,[-1,-2]],8],2,17,18],[[[20,[-1,-2]],8,7],2,17,18],[[[21,[-1,-2]],7],2,17,18],[[[20,[-1,-2]],8],2,17,18],[[[20,[-1,-2]],8],2,17,18],[[[21,[-1,-2]]],2,17,18],[[[23,[-1,-2,-3]]],[[2,[8,[3,[8]]]]],16,17,18],[[[20,[-1,-2]]],7,17,18],[[[21,[-1,-2]],-3,-4],[[88,[-1,-2]]],17,18,[[45,[8]]],49],[[[20,[-1,-2]],-3],[[89,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],8],[[2,[[20,[-1,-2]],[20,[-1,-2]]]]],17,18],[[[20,[-1,-2]],8],[[2,[[20,[-2]],[20,[-2]]]]],17,18],[[[20,[-1,-2]],8],[[2,[[20,[-1,-2]],[20,[-1,-2]]]]],17,18],[[[20,[-1,-2]],8],[[2,[[20,[-2]],[20,[-2]]]]],17,18],[[[20,[-1,-2]]],[[3,[[2,[[28,[22,-1,-2]],[20,[-1,-2]]]]]]],17,18],[[[20,[-1,-2]]],[[3,[[2,[[28,[27,-2]],[20,[-2]]]]]]],17,18],[[[20,[-1,-2]],-3],[[90,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],-3],[[91,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]]],[[3,[[2,[[28,[22,-1,-2]],[20,[-1,-2]]]]]]],17,18],[[[20,[-1,-2]]],[[3,[[2,[[28,[27,-2]],[20,[-2]]]]]]],17,18],[[[20,[-1,-2]],-3],[[92,[-1,-2,-3]]],17,18,50],[[[21,[-1,-2]],8],[[21,[-1,-2]]],17,18],[[[20,[-1,-2]],8,-3],[[93,[-1,-2,-3]]],17,18,50],[[[20,[-1,-2]],8,-3],[[94,[-1,-2,-3]]],17,18,50],0,[[[23,[-1,-2,-3]]],[[46,[[15,[-1,-2,-3]]]]],16,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],7,17,18,17,18],[[-1,-2],2,[],70],[[-1,-2],2,[],70],[[[24,[-1,-2]],-3],2,25,18,70],[[[26,[-1,-2]],-3],2,17,18,70],[[[20,[-1,40]],-2],2,17,70],[[[20,[-1,39]],-2],2,17,70],[[[21,[-1,-2]],-3],2,17,18,70],[[-1,-2],2,[],70],[[[24,[-1,-2]],-3],2,25,18,70],[[[26,[-1,-2]],-3],2,17,18,70],[[[20,[-1,39]],-2],2,17,70],[[[20,[-1,40]],-2],2,17,70],[[[21,[-1,-2]],-3],2,17,18,70],[-1,2,[]],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[[20,[-1,-2]]]]],17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],[[3,[[20,[-1,-2]]]]],17,18,17,18],[[[15,[-1,-2,-3]],8],[[15,[-1,-2,-3]]],16,17,18],[[[28,[27,-1,-2]],[28,[27,-3,-4]]],2,17,18,17,18],[[[15,[27,-1,-2]],[15,[27,-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]],8,8],2,17,18],[[[21,[-1,-2]],8],7,17,18],[[[20,[-1,-2]],8,8],2,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]],[20,[-3,-4]]],2,17,18,17,18],[[[20,[-1,-2]]],[[21,[-2]]],17,18],[[[15,[-1,-2,-3]]],[[15,[22,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]]],[[15,[27,-2,-3]]],16,17,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2]]],[],17,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1,-2,-3]]],[[2,[[19,[-1,-2]],31]]],16,17,18],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[-1,95,[]],[[[20,[-1,-2]]],[[21,[-2]]],17,18],[[[20,[-1,-2]]],8,17,18],[[[20,[-1,-2]]],8,17,18],[[[21,[-1,-2]],8],2,17,18],[-1,[[13,[[20,[-2,-3]],[96,[-2]]]]],[],[],18],[-1,[[13,[[20,[-2,-3]],[96,[-2]]]]],[],[],18],[[[20,[-1]]],[[13,[[24,[-2,-1]]]]],18,25],[[[20,[-1]]],[[13,[[24,[-2,-1]]]]],18,25],[[[20,[-1]]],[[13,[[24,[-2,-1]]]]],18,25],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[57,[[30,[-1]],56]]],[[13,[[26,[-1,-2]]]]],17,18],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[],[[13,[[15,[27,-1,-2]]]]],17,18],[[],[[13,[[15,[22,-1,-2]]]]],17,18],[-1,[[13,[-2]]],[],[]],[[[30,[-1]]],[[13,[[20,[-1,-2]]]]],17,18],[[[30,[-1]]],[[13,[[20,[-1,-2]]]]],17,18],[-1,[[13,[-2]]],[],[]],[[[58,[-1,56]]],[[13,[[21,[-1,-2]]]]],17,18],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[[[57,[[30,[-1]],56]]],[[13,[[26,[-1,-2]],[57,[[30,[-1]],56]]]]],17,18],[[[30,[-1]]],[[13,[[20,[-1,-2]],[96,[-1]]]]],17,18],[[[30,[-1]]],[[13,[[21,[-1,-2]],[96,[-1]]]]],17,18],[[[30,[-1]]],[[13,[[20,[-1,-2]],[96,[-1]]]]],17,18],[[[58,[-1,56]]],[[13,[[21,[-1,-2]],[58,[-1,56]]]]],17,18],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[[20,[-2]],96]]],[],18],[-1,[[13,[[20,[-2]],96]]],[],18],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,[[20,[-2]]],[],18],[-1,[[20,[-2]]],[],18],[[[20,[-1,-2]],8],[[97,[-1,-2]]],17,18],[8,[[21,[-1,-2]]],17,18],[[[15,[-1,-2,-3]],8],[[15,[-1,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]],75],[[15,[-1,-2,-3]]],16,17,18],[[[15,[-1,-2,-3]],8],[[15,[-1,-2,-3]]],16,17,18],[[[15,[27,-1,-2]],7],2,17,18],[[[20,[-1,-2]],[30,[81]]],[[13,[8,51]]],17,18],[[[21,[-1,-2]],[30,[81]]],[[13,[8,51]]],17,18],[[[15,[27,-1,-2]],7],2,17,18],[[[15,[27,-1,-2]],7],2,17,18],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,8],2,[]],[98,9],[-1,99,[]],[-1,[[30,[81]]],[]],[98,[[3,[100]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[101,[-1,-2]]],98,[[72,[8]]],[[72,[8]]]],[102,98],[98,[[3,[99]]]],[[[101,[-1,-2]]],[[101,[-1,-2]]],6,6],[102,102],[103,103],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[98,8,[58,[95]]],2],[98,104],0,[[[101,[-1,-2]]],[[13,[-3,98]]],[[72,[8]]],[[72,[8]]],[]],[102,[[13,[-1,98]]],[]],[[[101,[-1,-2]],52],105,106,106],[[102,52],105],[[103,52],105],[[98,52],105],[[98,52],105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[101,[-1,-2]]],98,[[72,[8]]],[[72,[8]]]],[102,98],[103,98],[-1,7,[]],[98,[[3,[107]]]],[98,[[3,[108]]]],[-1,[[110,[109]]],[]],[-1,[[110,[111]]],[]],[-1,[[110,[112]]],[]],[-1,[[110,[113]]],[]],[-1,[[110,[114]]],[]],[-1,[[110,[115]]],[]],[[-1,[30,[81]]],[[110,[2]]],[]],[-1,[[110,[116]]],[]],[-1,[[110,[117]]],[]],[-1,[[110,[118]]],[]],[-1,[[110,[81]]],[]],[-1,[[110,[109]]],[]],[-1,[[110,[111]]],[]],[-1,[[110,[112]]],[]],[-1,[[110,[113]]],[]],[-1,[[110,[114]]],[]],[-1,[[110,[115]]],[]],[[-1,[30,[81]]],[[110,[2]]],[]],[-1,[[110,[116]]],[]],[-1,[[110,[117]]],[]],[-1,[[110,[118]]],[]],[-1,[[110,[81]]],[]],[-1,8,[]],[98,[[3,[99]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,95,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[-1,109],[[110,[2]]],[]],[[-1,111],[[110,[2]]],[]],[[-1,[30,[81]]],[[110,[2]]],[]],[[-1,112],[[110,[2]]],[]],[[-1,113],[[110,[2]]],[]],[[-1,114],[[110,[2]]],[]],[[-1,115],[[110,[2]]],[]],[[-1,116],[[110,[2]]],[]],[[-1,117],[[110,[2]]],[]],[[-1,118],[[110,[2]]],[]],[[-1,81],[[110,[2]]],[]],0,0,0,0,0,0,0,0,[119,104],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,120],[119,119],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[120,120],41],[[119,119],41],[[],120],[[],119],[120,[[30,[81]]]],[-1,[[13,[120]]],121],[-1,[[13,[119]]],121],[[120,[58,[81]]],7],[[120,120],7],[[120,[30,[81]]],7],[[119,95],7],[[119,104],7],[[119,119],7],[[120,52],105],[[119,52],105],[122,120],[[[30,[81]]],120],[-1,-1,[]],[[[58,[81]]],120],[-1,-1,[]],[95,119],[104,119],[[120,-1],2,60],[[119,-1],2,60],[-1,-2,[],[]],[-1,-2,[],[]],[119,7],[119,8],[[120,120],[[3,[41]]]],[[119,119],[[3,[41]]]],[[120,-1],13,123],[[119,-1],13,123],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],0,0,0,0,0,0,0,0,0,[124,118],[124,118],[-1,-2,[],[]],[-1,-2,[],[]],[124,124],[[-1,-2],2,[],[]],[-1,[[13,[124]]],121],[[124,118],124],[[124,124],118],[[124,124],7],[[124,52],105],[[124,52],105],[-1,-1,[]],[104,[[13,[124,95]]]],[118,124],[-1,-2,[],[]],[118,124],[118,124],[[124,118],124],[[124,124],[[3,[41]]]],[[124,-1],13,123],[-1,-2,[],[]],[-1,95,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]]],"c":[98,99,101,102,103,104,121,122,217,240,272,307,454,474,563,642,661,720],"p":[[3,"Plugins",0],[15,"tuple"],[4,"Option",927],[8,"Send",928],[8,"Sync",928],[8,"Clone",929],[15,"bool"],[15,"usize"],[8,"Any",930],[3,"Map",931],[3,"MutexGuard",932],[8,"FnOnce",933],[4,"Result",934],[3,"TypeId",930],[3,"BitPtr",30],[8,"Mutability",935],[8,"BitStore",30],[8,"BitOrder",30],[3,"Address",935],[3,"BitSlice",30],[3,"BitVec",30],[3,"Const",935],[3,"BitPtrRange",30],[3,"BitArray",30],[8,"_",30],[3,"BitBox",30],[3,"Mut",935],[3,"BitRef",30],[3,"Range",936],[15,"slice"],[3,"BitIdx",937],[3,"BitPos",937],[8,"BitRegister",938],[4,"BitDomain",939],[3,"Chunks",940],[3,"ChunksExact",940],[3,"ChunksExactMut",940],[3,"ChunksMut",940],[3,"Lsb0",30],[3,"Msb0",30],[4,"Ordering",941],[8,"RangeExt",942],[4,"Domain",939],[3,"Drain",943],[8,"RangeBounds",936],[4,"Bound",936],[8,"Sized",928],[8,"PartialEq",941],[8,"IntoIterator",944],[8,"FnMut",933],[3,"Error",945],[3,"Formatter",946],[3,"Error",946],[15,"never"],[4,"Cow",947],[3,"Global",948],[3,"Box",949],[3,"Vec",950],[8,"BitSliceIndex",951],[8,"Hasher",952],[3,"RangeFull",936],[3,"RangeToInclusive",936],[3,"RangeInclusive",936],[3,"RangeTo",936],[3,"RangeFrom",936],[3,"Iter",940],[3,"IterMut",940],[3,"IterOnes",940],[3,"IterZeros",940],[8,"Integral",953],[3,"BitMask",937],[8,"Into",954],[3,"BitEnd",937],[3,"MisalignError",955],[15,"isize"],[8,"PartialOrd",941],[3,"RChunks",940],[3,"RChunksExact",940],[3,"RChunksExactMut",940],[3,"RChunksMut",940],[15,"u8"],[3,"RSplit",940],[3,"RSplitMut",940],[3,"RSplitN",940],[3,"RSplitNMut",940],[3,"BitSel",937],[8,"Radium",956],[3,"Splice",943],[3,"Split",940],[3,"SplitInclusive",940],[3,"SplitInclusiveMut",940],[3,"SplitMut",940],[3,"SplitN",940],[3,"SplitNMut",940],[3,"String",957],[4,"BitSpanError",958],[3,"Windows",940],[4,"Error",722],[8,"Error",959],[3,"Backtrace",960],[3,"OverflowSnafu",722],[3,"UnderflowSnafu",722],[3,"EofSnafu",722],[15,"str"],[6,"Result",946],[8,"Debug",946],[3,"Location",961],[8,"StackError",962],[15,"f32"],[6,"Result",722],[15,"f64"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"StringBytes",841],[3,"Bytes",841],[8,"Deserializer",963],[3,"Bytes",964],[8,"Serializer",965],[3,"ReadableSize",892],[6,"BitVec",26],[8,"_",30],[8,"AsBits",30],[8,"AsMutBits",30],[8,"_",30],[8,"Buffer",722],[8,"BufferMut",722],[13,"Overflow",835],[13,"Eof",835],[13,"Underflow",835]],"b":[[89,"impl-AsMut%3CBitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[90,"impl-AsMut%3CBitVec%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[119,"impl-AsRef%3CBitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[120,"impl-AsRef%3CBitVec%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[135,"impl-BitAndAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[136,"impl-BitAndAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[137,"impl-BitAndAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[138,"impl-BitAndAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[139,"impl-BitAndAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[140,"impl-BitAndAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[141,"impl-BitAndAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[150,"impl-BitOrAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[151,"impl-BitOrAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[152,"impl-BitOrAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[153,"impl-BitOrAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[154,"impl-BitOrAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[155,"impl-BitOrAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[156,"impl-BitOrAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[168,"impl-BitXorAssign%3CBitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[169,"impl-BitXorAssign%3C%26BitBox%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[170,"impl-BitXorAssign%3C%26BitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[171,"impl-BitXorAssign%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[172,"impl-BitXorAssign%3C%26BitArray%3CA,+O%3E%3E-for-BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E"],[173,"impl-BitXorAssign%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[174,"impl-BitXorAssign%3CBitVec%3CT,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[253,"impl-Default-for-%26mut+BitSlice%3CT,+O%3E"],[254,"impl-Default-for-%26BitSlice%3CT,+O%3E"],[280,"impl-PartialEq%3C%26bool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[281,"impl-PartialEq%3CBitRef%3C\'_,+M2,+T2,+O2%3E%3E-for-BitRef%3C\'_,+M1,+T1,+O1%3E"],[282,"impl-PartialEq%3Cbool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[285,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[286,"impl-PartialEq%3CBitArray%3CA,+O2%3E%3E-for-BitSlice%3CT,+O1%3E"],[287,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[288,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[289,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[290,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[291,"impl-PartialEq%3CBitVec%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[292,"impl-PartialEq%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[293,"impl-PartialEq%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[294,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[295,"impl-PartialEq%3CBitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[296,"impl-PartialEq%3CBitBox%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[300,"impl-Extend%3CT%3E-for-BitVec%3CT,+O%3E"],[301,"impl-Extend%3C%26bool%3E-for-BitVec%3CT,+O%3E"],[302,"impl-Extend%3CBitRef%3C\'a,+M,+T2,+O2%3E%3E-for-BitVec%3CT1,+O1%3E"],[303,"impl-Extend%3Cbool%3E-for-BitVec%3CT,+O%3E"],[304,"impl-Extend%3C%26T%3E-for-BitVec%3CT,+O%3E"],[318,"impl-UpperHex-for-BitArray%3CA,+O%3E"],[319,"impl-Debug-for-BitArray%3CA,+O%3E"],[320,"impl-Display-for-BitArray%3CA,+O%3E"],[321,"impl-LowerHex-for-BitArray%3CA,+O%3E"],[322,"impl-Binary-for-BitArray%3CA,+O%3E"],[323,"impl-Octal-for-BitArray%3CA,+O%3E"],[324,"impl-UpperHex-for-BitBox%3CT,+O%3E"],[325,"impl-Debug-for-BitBox%3CT,+O%3E"],[326,"impl-Display-for-BitBox%3CT,+O%3E"],[327,"impl-LowerHex-for-BitBox%3CT,+O%3E"],[328,"impl-Binary-for-BitBox%3CT,+O%3E"],[329,"impl-Pointer-for-BitBox%3CT,+O%3E"],[330,"impl-Octal-for-BitBox%3CT,+O%3E"],[331,"impl-Pointer-for-BitRef%3C\'_,+M,+T,+O%3E"],[332,"impl-Debug-for-BitRef%3C\'_,+M,+T,+O%3E"],[333,"impl-Display-for-BitRef%3C\'_,+M,+T,+O%3E"],[335,"impl-Debug-for-BitPtr%3CM,+T,+O%3E"],[336,"impl-Pointer-for-BitPtr%3CM,+T,+O%3E"],[337,"impl-Pointer-for-BitSlice%3CT,+O%3E"],[338,"impl-Display-for-BitSlice%3CT,+O%3E"],[339,"impl-UpperHex-for-BitSlice%3CT,+O%3E"],[340,"impl-LowerHex-for-BitSlice%3CT,+O%3E"],[341,"impl-Binary-for-BitSlice%3CT,+O%3E"],[342,"impl-Octal-for-BitSlice%3CT,+O%3E"],[343,"impl-Debug-for-BitSlice%3CT,+O%3E"],[344,"impl-UpperHex-for-BitVec%3CT,+O%3E"],[345,"impl-Octal-for-BitVec%3CT,+O%3E"],[346,"impl-Pointer-for-BitVec%3CT,+O%3E"],[347,"impl-Debug-for-BitVec%3CT,+O%3E"],[348,"impl-Binary-for-BitVec%3CT,+O%3E"],[349,"impl-LowerHex-for-BitVec%3CT,+O%3E"],[350,"impl-Display-for-BitVec%3CT,+O%3E"],[358,"impl-From%3CBitVec%3CT,+O%3E%3E-for-BitBox%3CT,+O%3E"],[359,"impl-From%3CCow%3C\'a,+BitSlice%3CT,+O%3E%3E%3E-for-BitBox%3CT,+O%3E"],[360,"impl-From%3CBitArray%3CA,+O%3E%3E-for-BitBox%3C%3CA+as+BitView%3E::Store,+O%3E"],[362,"impl-From%3CBox%3CT%3E%3E-for-BitBox%3CT,+O%3E"],[363,"impl-From%3C%26BitSlice%3CT,+O%3E%3E-for-BitBox%3CT,+O%3E"],[367,"impl-From%3C%26T%3E-for-BitPtr%3CConst,+T,+O%3E"],[368,"impl-From%3C%26mut+T%3E-for-BitPtr%3CMut,+T,+O%3E"],[371,"impl-From%3CCow%3C\'a,+BitSlice%3CT,+O%3E%3E%3E-for-BitVec%3CT,+O%3E"],[372,"impl-From%3CBitArray%3CA,+O%3E%3E-for-BitVec%3C%3CA+as+BitView%3E::Store,+O%3E"],[373,"impl-From%3C%26BitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[375,"impl-From%3C%26mut+BitSlice%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[376,"impl-From%3CBitBox%3CT,+O%3E%3E-for-BitVec%3CT,+O%3E"],[387,"impl-FromIterator%3C%26T%3E-for-BitVec%3CT,+O%3E"],[388,"impl-FromIterator%3CBitRef%3C\'a,+M,+T2,+O2%3E%3E-for-BitVec%3CT1,+O1%3E"],[389,"impl-FromIterator%3C%26bool%3E-for-BitVec%3CT,+O%3E"],[390,"impl-FromIterator%3CT%3E-for-BitVec%3CT,+O%3E"],[391,"impl-FromIterator%3Cbool%3E-for-BitVec%3CT,+O%3E"],[422,"impl-Index%3CRangeFull%3E-for-BitSlice%3CT,+O%3E"],[423,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[424,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[425,"impl-Index%3Cusize%3E-for-BitSlice%3CT,+O%3E"],[426,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[427,"impl-Index%3CRange%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[428,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[432,"impl-IndexMut%3CRangeFrom%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[433,"impl-IndexMut%3CRangeFull%3E-for-BitSlice%3CT,+O%3E"],[434,"impl-IndexMut%3CRangeTo%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[435,"impl-IndexMut%3CRangeInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[436,"impl-IndexMut%3CRangeToInclusive%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[437,"impl-IndexMut%3CRange%3Cusize%3E%3E-for-BitSlice%3CT,+O%3E"],[456,"impl-IntoIterator-for-%26BitArray%3CA,+O%3E"],[457,"impl-IntoIterator-for-%26mut+BitArray%3CA,+O%3E"],[458,"impl-IntoIterator-for-BitArray%3CA,+O%3E"],[461,"impl-IntoIterator-for-%26BitSlice%3CT,+O%3E"],[462,"impl-IntoIterator-for-%26mut+BitSlice%3CT,+O%3E"],[463,"impl-IntoIterator-for-%26BitVec%3CT,+O%3E"],[464,"impl-IntoIterator-for-%26mut+BitVec%3CT,+O%3E"],[465,"impl-IntoIterator-for-BitVec%3CT,+O%3E"],[496,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[497,"impl-BitField-for-BitSlice%3CT%3E"],[502,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[503,"impl-BitField-for-BitSlice%3CT%3E"],[529,"impl-PartialOrd%3C%26bool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[530,"impl-PartialOrd%3CBitRef%3C\'_,+M2,+T2,+O2%3E%3E-for-BitRef%3C\'_,+M1,+T1,+O1%3E"],[531,"impl-PartialOrd%3Cbool%3E-for-BitRef%3C\'_,+M,+T,+O%3E"],[533,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[534,"impl-PartialOrd%3C%26BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[535,"impl-PartialOrd%3CBitArray%3CA,+O%3E%3E-for-BitSlice%3CT,+O%3E"],[536,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[537,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[538,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[539,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[540,"impl-PartialOrd%3CBitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[541,"impl-PartialOrd%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[542,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[543,"impl-PartialOrd%3CBitVec%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[544,"impl-PartialOrd%3C%26BitSlice%3CT2,+O2%3E%3E-for-%26mut+BitSlice%3CT1,+O1%3E"],[545,"impl-PartialOrd%3C%26mut+BitSlice%3CT2,+O2%3E%3E-for-BitSlice%3CT1,+O1%3E"],[546,"impl-PartialOrd%3CBitBox%3CT2,+O2%3E%3E-for-%26BitSlice%3CT1,+O1%3E"],[550,"impl-BitPtr%3CMut,+T,+O%3E"],[551,"impl-BitPtr%3CConst,+T,+O%3E"],[623,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[624,"impl-BitField-for-BitSlice%3CT%3E"],[629,"impl-BitField-for-BitSlice%3CT%3E"],[630,"impl-BitField-for-BitSlice%3CT,+Msb0%3E"],[667,"impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-BitArray%3CA,+O%3E"],[668,"impl-TryFrom%3C%26BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-%26BitArray%3CA,+O%3E"],[669,"impl-TryFrom%3C%26mut+BitSlice%3C%3CA+as+BitView%3E::Store,+O%3E%3E-for-%26mut+BitArray%3CA,+O%3E"],[675,"impl-TryFrom%3C*mut+T%3E-for-BitPtr%3CMut,+T,+O%3E"],[676,"impl-TryFrom%3C*const+T%3E-for-BitPtr%3CConst,+T,+O%3E"],[678,"impl-TryFrom%3C%26mut+%5BT%5D%3E-for-%26mut+BitSlice%3CT,+O%3E"],[679,"impl-TryFrom%3C%26%5BT%5D%3E-for-%26BitSlice%3CT,+O%3E"],[764,"impl-Display-for-Error"],[765,"impl-Debug-for-Error"],[859,"impl-PartialEq%3CVec%3Cu8%3E%3E-for-Bytes"],[860,"impl-PartialEq-for-Bytes"],[861,"impl-PartialEq%3C%5Bu8%5D%3E-for-Bytes"],[862,"impl-PartialEq%3CString%3E-for-StringBytes"],[863,"impl-PartialEq%3Cstr%3E-for-StringBytes"],[864,"impl-PartialEq-for-StringBytes"],[867,"impl-From%3CBytes%3E-for-Bytes"],[868,"impl-From%3C%26%5Bu8%5D%3E-for-Bytes"],[870,"impl-From%3CVec%3Cu8%3E%3E-for-Bytes"],[872,"impl-From%3CString%3E-for-StringBytes"],[873,"impl-From%3C%26str%3E-for-StringBytes"],[908,"impl-Div%3Cu64%3E-for-ReadableSize"],[909,"impl-Div-for-ReadableSize"],[911,"impl-Display-for-ReadableSize"],[912,"impl-Debug-for-ReadableSize"]]},\
"common_catalog":{"doc":"","t":"FAAFFRRRRRRRRRRRRRRRRRRFNENDNGLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMM","n":["build_db_string","consts","error","format_full_table_name","parse_catalog_and_schema_from_db_string","DEFAULT_CATALOG_NAME","DEFAULT_SCHEMA_NAME","FILE_ENGINE","INFORMATION_SCHEMA_COLUMNS_TABLE_ID","INFORMATION_SCHEMA_NAME","INFORMATION_SCHEMA_TABLES_TABLE_ID","MAX_SYS_TABLE_ID","MIN_USER_TABLE_ID","MITO2_ENGINE","MITO_ENGINE","NUMBERS_TABLE_ID","SCRIPTS_TABLE_ID","SEMANTIC_TYPE_FIELD","SEMANTIC_TYPE_PRIMARY_KEY","SEMANTIC_TYPE_TIME_INDEX","SYSTEM_CATALOG_NAME","SYSTEM_CATALOG_TABLE_ID","SYSTEM_CATALOG_TABLE_NAME","default_engine","Err","Error","InvalidFullTableName","InvalidFullTableNameSnafu","Ok","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow_mut","borrow_mut","build","cause","clone","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","from","from","into","into","into_error","next","source","status_code","table_name","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","location","table_name"],"q":[[0,"common_catalog"],[5,"common_catalog::consts"],[24,"common_catalog::error"],[64,"common_catalog::error::Error"],[66,"alloc::string"],[67,"core::any"],[68,"core::error"],[69,"snafu::backtrace_inert"],[70,"core::option"],[71,"core::convert"],[72,"core::clone"],[73,"alloc::vec"],[74,"core::result"],[75,"core::fmt"],[76,"core::fmt"],[77,"common_error::status_code"],[78,"core::any"]],"d":["Build db name from catalog and schema string","","","Formats table fully-qualified name","Attempt to parse catalog and schema from given database …","","","","id for information_schema.columns","","id for information_schema.tables","the max system table id","Reserves [0,MIN_USER_TABLE_ID) for internal usage. User …","","","numbers table id","scripts table id","","","","","system_catalog table id","","","Contains the error value","","","SNAFU context selector for the <code>Error::InvalidFullTableName</code> …","Contains the success value","","","","","","","","","Consume the selector and return the associated error","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,4,0,21,0,4,4,4,9,4,9,4,9,4,9,9,4,4,9,9,4,4,9,4,9,4,9,4,4,4,9,9,4,9,4,9,4,9,4,22,22],"f":[[[1,1],2],0,0,[[1,1,1],2],[1,[[3,[1,1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,[4,5],[-1,6,[]],[4,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],4,[[10,[2]]]],[4,[[8,[6]]]],[[[9,[-1]]],[[9,[-1]]],11],[[-1,-2],3,[],[]],[[4,12,[13,[2]]],3],[4,1],[[[9,[-1]]],[[14,[-2,4]]],[[10,[2]]],[]],[[[9,[-1]],15],16,17],[[4,15],16],[[4,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],4,[[10,[2]]]],[4,[[8,[18]]]],[4,[[8,[6]]]],[4,19],0,[-1,-2,[],[]],[-1,2,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],0,0],"c":[],"p":[[15,"str"],[3,"String",66],[15,"tuple"],[4,"Error",24],[8,"Any",67],[8,"Error",68],[3,"Backtrace",69],[4,"Option",70],[3,"InvalidFullTableNameSnafu",24],[8,"Into",71],[8,"Clone",72],[15,"usize"],[3,"Vec",73],[4,"Result",74],[3,"Formatter",75],[6,"Result",75],[8,"Debug",75],[8,"StackError",76],[4,"StatusCode",77],[3,"TypeId",67],[6,"Result",24],[13,"InvalidFullTableName",64]],"b":[[45,"impl-Display-for-Error"],[46,"impl-Debug-for-Error"]]},\
"common_config":{"doc":"","t":"DDLLLLLLLLLLLLMLLMMLLLLLLFMMMMLLMLLLLLLLL","n":["KvBackendConfig","WalConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","dir","eq","eq","file_size","file_size","fmt","fmt","from","from","into","into","metadata_store_dir","purge_interval","purge_threshold","purge_threshold","read_batch_size","serialize","serialize","sync_write","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"common_config"],[41,"core::result"],[42,"serde::de"],[43,"core::fmt"],[44,"core::fmt"],[45,"serde::ser"],[46,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,0,1,1,2,1,1,2,1,1,2,1,2,1,2,1,2],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],1],[[],2],[-1,[[4,[1]]],5],[-1,[[4,[2]]],5],0,[[1,1],6],[[2,2],6],0,0,[[1,7],8],[[2,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,10],0,0,0,0,[[1,-1],4,11],[[2,-1],4,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]]],"c":[],"p":[[3,"WalConfig",0],[3,"KvBackendConfig",0],[15,"tuple"],[4,"Result",41],[8,"Deserializer",42],[15,"bool"],[3,"Formatter",43],[6,"Result",43],[15,"str"],[3,"String",44],[8,"Serializer",45],[3,"TypeId",46]],"b":[]},\
"common_datasource":{"doc":"","t":"AAAAAAAAIIDLLMMKLLLLLLLLMLLLLLLMMMLLLLLLKLMMNEDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMOLLLLLLLLLLMLLLLLLLLLLLLLLLLNDNDNDNDNDNENDNDNDNDNDNDNNDNDNDNDNDNDGNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMINRRRRRRRIENNNLLLLLLLAKLLLLLLLLKLLLKFLLLAFAAFLLLLLLLDDEDDNNLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMLMFLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMFLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLFFMLMMLMMLMLLLLLLLLLLLLLLLDDGDDLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMMMMFMLLLLLLLLLLLLLLLLLLLLMMNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLDRRMLLFLLLLLLLLAFLLLFALLLLFRRRRRRFFDLLMLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["buffered_writer","compression","error","file_format","lister","object_store","share_buffer","util","ArrowWriterCloser","DfRecordBatchEncoder","LazyBufferedWriter","borrow","borrow_mut","buffer","bytes_written","close","close_inner_writer","close_with_arrow_writer","compat","compat_mut","compat_ref","deref","deref_mut","drop","encoder","from","init","into","into_request","maybe_init_writer","new","path","rows_written","threshold","try_flush","try_flush_all","try_from","try_into","type_id","vzip","write","write","writer","writer_factory","Bzip2","CompressionType","CompressionTypeIter","Gzip","Uncompressed","Xz","Zstd","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_async_read","convert_stream","decode","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","eq","equivalent","equivalent","equivalent","equivalent","file_extension","fmt","fmt","fmt","from","from","from_ref","from_ref","from_str","get","get_hash","hash","idx","impl_compression_type","init","init","into","into","into_iter","into_request","into_request","is_compressed","iter","len","marker","next","next_back","nth","serialize","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AsyncWrite","AsyncWriteSnafu","BufferedWriterClosed","BufferedWriterClosedSnafu","BuildBackend","BuildBackendSnafu","EmptyHostPath","EmptyHostPathSnafu","EncodeRecordBatch","EncodeRecordBatchSnafu","Err","Error","InferSchema","InferSchemaSnafu","InvalidConnection","InvalidConnectionSnafu","InvalidUrl","InvalidUrlSnafu","JoinHandle","JoinHandleSnafu","ListObjects","ListObjectsSnafu","MergeSchema","MergeSchemaSnafu","Ok","OrcReader","OrcReaderSnafu","ParquetToSchema","ParquetToSchemaSnafu","ParseFormat","ParseFormatSnafu","ReadObject","ReadObjectSnafu","ReadParquetSnafu","ReadParquetSnafuSnafu","ReadRecordBatch","ReadRecordBatchSnafu","Result","UnsupportedBackendProtocol","UnsupportedBackendProtocolSnafu","UnsupportedCompressionType","UnsupportedCompressionTypeSnafu","UnsupportedFormat","UnsupportedFormatSnafu","WriteObject","WriteObjectSnafu","WriteParquet","WriteParquetSnafu","WriteRecordBatch","WriteRecordBatchSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compression_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","location_opt","msg","next","path","path","path","path","protocol","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","compression_type","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","format","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","path","path","path","path","protocol","url","url","url","value","ArrowDecoder","Csv","DEFAULT_SCHEMA_INFER_MAX_RECORD","FILE_PATTERN","FORMAT_COMPRESSION_TYPE","FORMAT_DELIMITER","FORMAT_HAS_HEADER","FORMAT_SCHEMA_INFER_MAX_RECORD","FORMAT_TYPE","FileFormat","Format","Json","Orc","Parquet","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","csv","decode","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","flush","fmt","from","from_ref","infer_schema","infer_schemas","init","into","into_request","json","open_with_decoder","orc","parquet","stream_to_file","suffix","to_owned","try_from","try_from","try_into","type_id","vzip","CsvConfig","CsvConfigBuilder","CsvConfigBuilderError","CsvFormat","CsvOpener","UninitializedField","ValidationError","as_error_source","batch_size","batch_size","batch_size","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compression_type","compression_type","config","create_empty","default","default","delimiter","delimiter","delimiter","delimiter","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","file_projection","file_projection","file_projection","file_schema","file_schema","file_schema","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","has_header","has_header","has_header","has_header","infer_schema","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","new","object_store","open","schema_infer_max_record","stream_to_csv","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","JsonFormat","JsonOpener","batch_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","compression_type","compression_type","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","infer_schema","init","init","into","into","into_request","into_request","new","object_store","open","projected_schema","schema_infer_max_record","stream_to_json","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OrcArrowStreamReaderAdapter","OrcFormat","OrcOpener","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_ref","from_ref","infer_orc_schema","infer_schema","init","init","init","into","into","into","into_request","into_request","into_request","into_streaming_request","new","new","new_orc_cursor","new_orc_stream_reader","object_store","open","output_schema","output_schema","poll_next","projection","projection","schema","stream","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","BufferedWriter","DefaultParquetFileReaderFactory","InnerBufferedWriter","LazyParquetFileReader","ParquetFormat","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytes_written","clone","clone","clone_into","clone_into","close","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create_reader","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encoder","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_ref","from_ref","get_bytes","get_metadata","infer_schema","init","init","init","init","inner","into","into","into","into","into_request","into_request","into_request","into_request","maybe_initialize","new","new","object_store","object_store","path","path","reader","rows_written","stream_to_parquet","threshold","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write","writer","writer_factory","Dir","Filename","Lister","Source","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","init","init","into","into","into_request","into_request","list","new","object_store","regex","root","source","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DISK_SYMBOL_PATTERN","FS_SCHEMA","S3_SCHEMA","__private_field","borrow","borrow_mut","build_backend","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","fs","handle_windows_path","init","into","into_request","parse_url","s3","try_from","try_into","type_id","vzip","build_fs_backend","ACCESS_KEY_ID","ENABLE_VIRTUAL_HOST_STYLE","ENDPOINT","REGION","SECRET_ACCESS_KEY","SESSION_TOKEN","build_s3_backend","is_supported_in_s3","SharedBuffer","borrow","borrow_mut","buffer","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","flush","from","from_ref","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","with_capacity","write","write","write_fixedint","write_varint","find_dir_and_filename"],"q":[[0,"common_datasource"],[8,"common_datasource::buffered_writer"],[44,"common_datasource::compression"],[123,"common_datasource::error"],[735,"common_datasource::error::Error"],[787,"common_datasource::file_format"],[839,"common_datasource::file_format::csv"],[988,"common_datasource::file_format::json"],[1049,"common_datasource::file_format::orc"],[1133,"common_datasource::file_format::parquet"],[1242,"common_datasource::lister"],[1294,"common_datasource::object_store"],[1320,"common_datasource::object_store::fs"],[1321,"common_datasource::object_store::s3"],[1329,"common_datasource::share_buffer"],[1358,"common_datasource::util"],[1359,"core::future::future"],[1360,"alloc::boxed"],[1361,"core::pin"],[1362,"tokio::io::async_write"],[1363,"core::marker"],[1364,"core::marker"],[1365,"parquet::format"],[1366,"async_compat"],[1367,"tonic::request"],[1368,"core::convert"],[1369,"core::result"],[1370,"core::any"],[1371,"arrow_array::record_batch"],[1372,"tokio::io::async_read"],[1373,"futures_core::stream"],[1374,"alloc::vec"],[1375,"std::io::error"],[1376,"serde::de"],[1377,"core::fmt"],[1378,"core::fmt"],[1379,"core::hash"],[1380,"core::marker"],[1381,"alloc::string"],[1382,"core::any"],[1383,"snafu::backtrace_inert"],[1384,"core::convert"],[1385,"core::fmt"],[1386,"common_error::ext"],[1387,"common_error::status_code"],[1388,"arrow_schema::error"],[1389,"opendal::types::operator::operator"],[1390,"arrow_schema::schema"],[1391,"alloc::sync"],[1392,"datafusion::datasource::physical_plan::file_stream"],[1393,"datafusion_common::error"],[1394,"core::ops::function"],[1395,"std::collections::hash::map"],[1396,"arrow_csv::reader"],[1397,"arrow_schema::schema"],[1398,"datafusion::datasource::physical_plan"],[1399,"tokio::io::async_seek"],[1400,"orc_rust::async_arrow_reader"],[1401,"orc_rust::arrow_reader"],[1402,"core::task::wake"],[1403,"core::task::poll"],[1404,"datafusion_physical_plan::metrics"],[1405,"parquet::arrow::async_reader"],[1406,"core::ops::range"],[1407,"bytes::bytes"],[1408,"parquet::errors"],[1409,"futures_core::future"],[1410,"parquet::file::metadata"],[1411,"opendal::types::error"],[1412,"parquet::file::properties"],[1413,"opendal::types::entry"],[1414,"regex::regex::string"],[1415,"der::error"],[1416,"std::io::error"],[1417,"integer_encoding::varint"]],"d":["","","","","","","","","","","","","","","","","Closes the writer without flushing the buffer data.","Closes <code>LazyBufferedWriter</code> and optionally flushes all data …","","","","","","","None stands for <code>LazyBufferedWriter</code> closed.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Only initiates underlying file writer when rows have been …","","","","","","","","","","","","","","","Bzip2-ed file","","An iterator over the variants of CompressionType","Gzip-ed file","Uncompressed file","Xz-ed file (liblzma)","Zstd-ed file,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AsyncWrite</code> variant","","SNAFU context selector for the <code>Error::BufferedWriterClosed</code> …","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::EmptyHostPath</code> variant","","SNAFU context selector for the <code>Error::EncodeRecordBatch</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::InvalidConnection</code> …","","SNAFU context selector for the <code>Error::InvalidUrl</code> variant","","SNAFU context selector for the <code>Error::JoinHandle</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MergeSchema</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::OrcReader</code> variant","","SNAFU context selector for the <code>Error::ParquetToSchema</code> …","","SNAFU context selector for the <code>Error::ParseFormat</code> variant","","SNAFU context selector for the <code>Error::ReadObject</code> variant","","SNAFU context selector for the <code>Error::ReadParquetSnafu</code> …","","SNAFU context selector for the <code>Error::ReadRecordBatch</code> …","","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::WriteObject</code> variant","","SNAFU context selector for the <code>Error::WriteParquet</code> variant","","SNAFU context selector for the <code>Error::WriteRecordBatch</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeecode records from <code>buf</code> returning the number of bytes read.","","","","","","","","","Flushes the currently buffered data to a <code>RecordBatch</code>.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Builder for <code>CsvConfig</code>.","Error type for CsvConfigBuilder","","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","Builds a new <code>CsvConfig</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Return a new <code>CsvOpener</code>. The caller must ensure <code>CsvConfig</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return a new <code>JsonOpener</code>. Any fields not present in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parquet writer that buffers row groups in memory and …","","","","","","","","","","","","","","","","","","","Close parquet writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","None stands for <code>LazyBufferedWriter</code> closed.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Must initialize the reader, or throw an error from the …","","","","","","","","","Output the stream to a parquet file.","","","","","","","","","","","","","","","","","","","","","Write a record batch to stream writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Returns <code>(schema, Option&lt;host&gt;, path)</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,10,4,4,4,26,0,0,26,26,26,26,25,25,26,25,26,25,26,25,26,25,26,25,26,25,26,26,26,26,25,26,25,26,26,25,26,26,26,26,26,26,26,26,25,26,26,25,26,25,26,26,25,26,26,25,0,25,26,25,26,25,25,26,26,26,25,25,25,25,25,26,25,25,26,26,25,26,25,26,25,26,25,26,43,0,43,0,43,0,43,0,43,0,6,0,43,0,43,0,43,0,43,0,43,0,43,0,6,43,0,43,0,43,0,43,0,43,0,43,0,0,43,0,43,0,43,0,43,0,43,0,43,0,43,43,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,52,53,54,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,52,53,54,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,43,50,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,53,43,52,43,59,60,68,71,49,43,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,49,51,56,53,47,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,52,69,53,70,54,71,43,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,128,147,145,148,129,130,131,132,133,134,135,136,137,138,139,140,141,149,142,146,143,150,144,149,132,133,141,144,147,147,148,129,146,0,76,0,0,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,0,151,76,76,76,76,76,76,76,76,151,76,76,76,79,0,76,76,76,0,0,0,0,0,76,76,76,76,76,76,76,0,0,0,0,0,89,89,89,87,88,87,91,88,87,89,92,91,88,87,89,92,87,88,91,88,87,92,91,88,87,92,91,88,87,89,92,91,88,87,89,92,91,88,87,89,92,91,92,92,87,91,87,87,91,88,87,91,88,87,89,92,91,88,87,89,92,91,88,87,89,92,91,91,91,91,91,87,88,87,87,88,87,91,88,89,89,92,91,88,87,89,89,89,92,91,88,87,92,87,91,88,87,91,91,88,87,89,92,91,88,87,89,92,91,88,87,89,92,92,92,92,91,0,91,88,87,92,89,91,91,88,87,89,92,91,88,87,89,92,91,88,87,89,92,91,88,87,89,92,0,0,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,97,96,96,97,96,97,96,97,96,96,96,96,96,96,97,96,97,96,97,96,96,97,96,97,96,97,97,97,97,97,96,0,96,97,96,96,97,96,97,96,97,96,97,0,0,0,102,98,99,102,98,99,98,99,98,99,102,98,99,102,98,99,102,98,99,98,102,98,99,102,98,99,102,98,99,98,98,98,98,98,98,99,102,98,99,98,99,0,98,102,98,99,102,98,99,102,98,99,102,102,99,0,0,99,99,102,99,102,102,99,102,102,98,99,102,98,99,102,98,99,102,102,98,99,102,98,99,0,0,0,0,0,111,108,106,107,111,108,106,107,152,152,106,107,106,107,108,111,108,106,107,111,108,106,107,111,108,106,107,107,106,111,108,106,107,111,108,106,107,111,108,106,107,152,106,106,106,106,106,106,107,111,108,106,107,106,107,111,111,106,111,108,106,107,108,111,108,106,107,111,108,106,107,111,111,107,111,107,111,152,111,152,0,152,106,107,111,108,106,107,111,108,106,107,108,111,108,106,107,111,108,106,107,108,152,152,119,119,0,0,120,119,120,119,119,119,120,119,120,119,120,119,120,119,120,119,120,119,119,119,119,119,119,119,120,119,119,120,119,120,119,120,119,120,120,120,120,120,120,119,120,119,120,119,120,119,120,119,0,0,0,123,123,123,0,123,123,123,123,123,123,123,123,0,0,123,123,123,0,0,123,123,123,123,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[3,[[2,[1]]]]],[]],[[[4,[-1,-2,-3]]],[[6,[5]]],[7,8,9],10,11],[[[4,[-1,-2,-3]]],[[6,[[5,[12,13]]]]],[7,8,9],[10,14],11],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[16,-1,[]],[16,-1,[]],[16,5],0,[-1,-1,[]],[[],16],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[[[4,[-1,-2,-3]]],[[6,[-1]]],[7,8,9],10,11],[[16,18,-1,-2,-3],[[4,[-4,-1,-3]]],10,[[20,[19]]],11,[7,8,9]],0,0,0,[[[4,[-1,-2,-3]],21],[[6,[13]]],[7,8,9],10,11],[[[4,[-1,-2,-3]]],[[6,[13]]],[7,8,9],10,11],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[[-1,24],[[6,[5]]],[]],[[[4,[-1,-2,-3]],24],[[6,[5]]],[7,8,9],10,11],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[26,26],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[26,-1],[[2,[27]]],[27,9,8]],[[26,-1],[[2,[28]]],[28,9,8]],[[26,-1],[[31,[[30,[29]]]]],[[20,[[32,[29]]]]]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[22,[26]]],33],[16,5],[16,5],[[26,-1],[[31,[[30,[29]]]]],[[20,[[32,[29]]]]]],[[26,26],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[26,19],[[25,34],35],[[26,34],35],[[26,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[6,[26]]]],[[25,16],[[36,[26]]]],[[-1,-2],13,[37,38],39],[[26,-1],5,40],0,0,[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[26,21],[[],25],[25,16],0,[25,36],[25,36],[[25,16],36],[[26,-1],22,41],[25,[[5,[16,[36,[16]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,44],[-1,45,[]],[43,[[36,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],43,[[48,[42]]]],[[[49,[-1,-2]]],43,[[48,[42]]],[[48,[42]]]],[[[50,[-1]]],43,[[48,[42]]]],[[[51,[-1]]],43,[[48,[42]]]],[[[52,[-1]]],43,[[48,[42]]]],[[[53,[-1,-2]]],43,[[48,[19]]],[[48,[42]]]],[54,43],[43,[[36,[45]]]],[[[47,[-1]]],[[47,[-1]]],55],[[[49,[-1,-2]]],[[49,[-1,-2]]],55,55],[[[50,[-1]]],[[50,[-1]]],55],[[[51,[-1]]],[[51,[-1]]],55],[[[56,[-1]]],[[56,[-1]]],55],[57,57],[58,58],[[[59,[-1]]],[[59,[-1]]],55],[[[60,[-1]]],[[60,[-1]]],55],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[[[68,[-1]]],[[68,[-1]]],55],[[[52,[-1]]],[[52,[-1]]],55],[69,69],[[[53,[-1,-2]]],[[53,[-1,-2]]],55,55],[70,70],[54,54],[[[71,[-1]]],[[71,[-1]]],55],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[[43,16,[30,[42]]],5],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[43,19],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[[[47,[-1]]],[[22,[-2,43]]],[[48,[42]]],[]],[[[49,[-1,-2]]],[[22,[-3,43]]],[[48,[42]]],[[48,[42]]],[]],[[[50,[-1]]],[[22,[-2,43]]],[[48,[42]]],[]],[[[51,[-1]]],[[22,[-2,43]]],[[48,[42]]],[]],[[[52,[-1]]],[[22,[-2,43]]],[[48,[42]]],[]],[[[53,[-1,-2]]],[[22,[-3,43]]],[[48,[19]]],[[48,[42]]],[]],[54,[[22,[-1,43]]],[]],[[[47,[-1]],34],35,72],[[[49,[-1,-2]],34],35,72,72],[[[50,[-1]],34],35,72],[[[51,[-1]],34],35,72],[[[56,[-1]],34],35,72],[[57,34],35],[[58,34],35],[[[59,[-1]],34],35,72],[[[60,[-1]],34],35,72],[[61,34],35],[[62,34],35],[[63,34],35],[[64,34],35],[[65,34],35],[[66,34],35],[[67,34],35],[[[68,[-1]],34],35,72],[[[52,[-1]],34],35,72],[[69,34],35],[[[53,[-1,-2]],34],35,72,72],[[70,34],35],[[54,34],35],[[[71,[-1]],34],35,72],[[43,34],35],[[43,34],35],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],43,[[48,[42]]]],[[[49,[-1,-2]]],43,[[48,[42]]],[[48,[42]]]],[[[50,[-1]]],43,[[48,[42]]]],[[[51,[-1]]],43,[[48,[42]]]],[[[56,[-1]]],43,[[48,[42]]]],[57,43],[58,43],[[[59,[-1]]],43,[[48,[42]]]],[[[60,[-1]]],43,[[48,[42]]]],[61,43],[62,43],[63,43],[64,43],[65,43],[66,43],[67,43],[[[68,[-1]]],43,[[48,[42]]]],[[[52,[-1]]],43,[[48,[42]]]],[69,43],[[[53,[-1,-2]]],43,[[48,[19]]],[[48,[42]]]],[70,43],[54,43],[[[71,[-1]]],43,[[48,[42]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[43,[[36,[73]]]],0,[43,[[36,[74]]]],0,0,0,0,0,[43,[[36,[45]]]],[43,75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[[-1,[32,[29]]],[[22,[16,77]]],[]],[16,-1,[]],[16,-1,[]],[16,5],[[76,76],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[-1,[[22,[[36,[24]],77]]],[]],[[76,34],35],[-1,-1,[]],[-1,-1,[]],[[-1,78,19],[[3,[[2,[1]]]]],[]],[[78,[32,[42]],79],[[6,[80]]]],[[],16],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],0,[[[81,[78]],42,26,-1],[[83,[82]]],84],0,0,[[85,78,19,16,-1],[[6,[16]]],84],[76,19],[-1,-2,[],[]],[[[86,[42,42]]],[[6,[76]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,45,[]],[[87,16],87],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,[[22,[88,89]]]],[88,90],[91,91],[88,88],[87,87],[92,92],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,0,[[],87],[[],91],[[],87],[[87,29],87],0,0,0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,5],[16,5],[16,5],[16,5],[16,5],[[91,91],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[87,[36,[[30,[16]]]]],87],0,0,[[87,93],87],0,0,[[91,34],35],[[88,34],35],[[89,34],35],[[89,34],35],[[92,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[42,89],[-1,-1,[]],[94,89],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[87,21],87],0,0,0,[[91,78,19],[[3,[[2,[1]]]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[88,78,26],92],0,[[92,95],[[83,[82]]]],0,[[85,78,19,16],[[6,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,42,[]],[-1,[[22,[-2]]],[],[]],[[[86,[42,42]]],[[6,[91]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[97,97],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,0,[[],96],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,5],[16,5],[[96,96],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[96,34],35],[[97,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[96,78,19],[[3,[[2,[1]]]]]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[16,93,78,26],97],0,[[97,95],[[83,[82]]]],0,0,[[85,78,19,16],[[6,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[86,[42,42]]],[[6,[96]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,98],[99,99],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[],98],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,5],[16,5],[16,5],[[98,98],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[98,34],35],[[99,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[6,[80]]],[27,100,9,8]],[[98,78,19],[[3,[[2,[1]]]]]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[93,[101,[-1]],[36,[[30,[16]]]]],[[102,[-1]]],[27,100,9,8]],[[78,93,[36,[[30,[16]]]]],99],[-1,[[6,[[103,[-1]]]]],[27,100,9,8]],[-1,[[6,[[101,[-1]]]]],[27,100,9,8]],0,[[99,95],[[83,[82]]]],0,0,[[[3,[[102,[-1]]]],104],[[105,[36]]],[27,100,9,8]],0,0,[[[102,[-1]]],93,[27,100,9,8]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[3,[-1]],104],[[105,[[36,[22]]]]],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[106,106],[107,107],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[108,[[6,[[5,[12,13]]]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[107,16,95,[36,[16]],109],[[83,[[2,[110]]]]]],[[],106],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,5],[16,5],[16,5],[16,5],0,[[106,106],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[106,34],35],[[107,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[111,[112,[16]]],[[115,[[114,[113]]]]]],[111,[[115,[[114,[[81,[116]]]]]]]],[[106,78,19],[[3,[[2,[1]]]]]],[[],16],[[],16],[[],16],[[],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[111,[[22,[5,117]]]],[[78,42],111],[78,107],0,0,0,0,0,0,[[85,78,19,16],[[6,[16]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[42,78,93,[36,[118]],16],[[6,[108]]]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[108,24],[[6,[5]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,5],[16,5],[[119,119],21],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[-1,-2],21,[],[]],[[119,34],35],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[120,[[6,[[30,[121]]]]]],[[78,119,42,[36,[122]]],120],0,0,0,0,[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[19,[86,[42,42]]],[[6,[78]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[123,122],[16,-1,[]],[16,-1,[]],[16,5],[-1,-1,[]],0,[19,[[36,[42]]]],[[],16],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[19,[[6,[[5,[42,[36,[42]],42]]]]]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[19,[[6,[78]]]],0,0,0,0,0,0,[[19,19,[86,[42,42]]],[[6,[78]]]],[19,21],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[18,18],[[-1,-2],5,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[],18],[16,-1,[]],[16,-1,[]],[16,5],[18,[[31,[5]]]],[-1,-1,[]],[-1,-1,[]],[[],16],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],[16,18],[[-1,[32,[29]]],[[22,[5,124]]],[]],[[18,[32,[29]]],[[31,[16]]]],[[-1,-2],[[22,[16,125]]],[],126],[[-1,-2],[[22,[16,125]]],[],127],[19,[[5,[42,[36,[42]]]]]]],"c":[],"p":[[8,"Future",1359],[3,"Box",1360],[3,"Pin",1361],[3,"LazyBufferedWriter",8],[15,"tuple"],[6,"Result",123],[8,"AsyncWrite",1362],[8,"Send",1363],[8,"Unpin",1363],[8,"DfRecordBatchEncoder",8],[8,"FnMut",1364],[3,"FileMetaData",1365],[15,"u64"],[8,"ArrowWriterCloser",8],[3,"Compat",1366],[15,"usize"],[3,"Request",1367],[3,"SharedBuffer",1329],[15,"str"],[8,"AsRef",1368],[15,"bool"],[4,"Result",1369],[3,"TypeId",1370],[3,"RecordBatch",1371],[3,"CompressionTypeIter",44],[4,"CompressionType",44],[8,"AsyncRead",1372],[8,"Stream",1373],[15,"u8"],[3,"Vec",1374],[6,"Result",1375],[15,"slice"],[8,"Deserializer",1376],[3,"Formatter",1377],[6,"Result",1377],[4,"Option",1378],[8,"Hash",1379],[8,"Sized",1363],[8,"BuildHasher",1379],[8,"Hasher",1379],[8,"Serializer",1380],[3,"String",1381],[4,"Error",123],[8,"Any",1370],[8,"Error",1382],[3,"Backtrace",1383],[3,"UnsupportedCompressionTypeSnafu",123],[8,"Into",1368],[3,"UnsupportedBackendProtocolSnafu",123],[3,"UnsupportedFormatSnafu",123],[3,"EmptyHostPathSnafu",123],[3,"InvalidConnectionSnafu",123],[3,"ParseFormatSnafu",123],[3,"BufferedWriterClosedSnafu",123],[8,"Clone",1384],[3,"InvalidUrlSnafu",123],[3,"BuildBackendSnafu",123],[3,"OrcReaderSnafu",123],[3,"ReadObjectSnafu",123],[3,"WriteObjectSnafu",123],[3,"AsyncWriteSnafu",123],[3,"WriteRecordBatchSnafu",123],[3,"EncodeRecordBatchSnafu",123],[3,"ReadRecordBatchSnafu",123],[3,"ReadParquetSnafuSnafu",123],[3,"ParquetToSchemaSnafu",123],[3,"InferSchemaSnafu",123],[3,"ListObjectsSnafu",123],[3,"JoinHandleSnafu",123],[3,"MergeSchemaSnafu",123],[3,"WriteParquetSnafu",123],[8,"Debug",1377],[3,"Location",1385],[8,"StackError",1386],[4,"StatusCode",1387],[4,"Format",787],[4,"ArrowError",1388],[3,"Operator",1389],[8,"FileFormat",787],[3,"Schema",1390],[3,"Arc",1391],[6,"FileOpenFuture",1392],[6,"Result",1393],[8,"Fn",1364],[6,"SendableRecordBatchStream",1394],[3,"HashMap",1395],[3,"CsvConfigBuilder",839],[3,"CsvConfig",839],[4,"CsvConfigBuilderError",839],[3,"ReaderBuilder",1396],[3,"CsvFormat",839],[3,"CsvOpener",839],[6,"SchemaRef",1390],[3,"UninitializedFieldError",1397],[3,"FileMeta",1398],[3,"JsonFormat",988],[3,"JsonOpener",988],[3,"OrcFormat",1049],[3,"OrcOpener",1049],[8,"AsyncSeek",1399],[3,"ArrowStreamReader",1400],[3,"OrcArrowStreamReaderAdapter",1049],[3,"Cursor",1401],[3,"Context",1402],[4,"Poll",1403],[3,"ParquetFormat",1133],[3,"DefaultParquetFileReaderFactory",1133],[3,"BufferedWriter",1133],[3,"ExecutionPlanMetricsSet",1404],[8,"AsyncFileReader",1405],[3,"LazyParquetFileReader",1133],[3,"Range",1406],[3,"Bytes",1407],[6,"Result",1408],[6,"BoxFuture",1409],[3,"ParquetMetaData",1410],[3,"Error",1411],[3,"WriterProperties",1412],[4,"Source",1242],[3,"Lister",1242],[3,"Entry",1413],[3,"Regex",1414],[3,"DISK_SYMBOL_PATTERN",1294],[3,"Error",1415],[3,"Error",1375],[8,"FixedInt",1416],[8,"VarInt",1417],[13,"UnsupportedCompressionType",735],[13,"InvalidUrl",735],[13,"BuildBackend",735],[13,"OrcReader",735],[13,"ReadObject",735],[13,"WriteObject",735],[13,"AsyncWrite",735],[13,"WriteRecordBatch",735],[13,"EncodeRecordBatch",735],[13,"ReadRecordBatch",735],[13,"ReadParquetSnafu",735],[13,"ParquetToSchema",735],[13,"InferSchema",735],[13,"ListObjects",735],[13,"JoinHandle",735],[13,"MergeSchema",735],[13,"WriteParquet",735],[13,"UnsupportedFormat",735],[13,"ParseFormat",735],[13,"UnsupportedBackendProtocol",735],[13,"EmptyHostPath",735],[13,"InvalidConnection",735],[13,"BufferedWriterClosed",735],[8,"ArrowDecoder",787],[6,"InnerBufferedWriter",1133]],"b":[[84,"impl-Debug-for-CompressionType"],[85,"impl-Display-for-CompressionType"],[455,"impl-Debug-for-Error"],[456,"impl-Display-for-Error"],[923,"impl-Display-for-CsvConfigBuilderError"],[924,"impl-Debug-for-CsvConfigBuilderError"],[929,"impl-From%3CString%3E-for-CsvConfigBuilderError"],[931,"impl-From%3CUninitializedFieldError%3E-for-CsvConfigBuilderError"]]},\
"common_decimal":{"doc":"","t":"CAARRRRDLLLLLLLLLFLLLLLLLLLLMLMLLLLLLLLLLLFMNDNENDNNDNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["Decimal128","decimal128","error","BYTES_TO_OVERFLOW_RUST_DECIMAL","DECIMAL128_DEFAULT_SCALE","DECIMAL128_MAX_PRECISION","DECIMAL128_MAX_SCALE","Decimal128","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","fmt","fmt","format_decimal_str","from","from","from","from_str","from_value_precision_scale","hash","into","new","partial_cmp","precision","precision","scale","scale","serialize","split_value","to_owned","to_scalar_value","to_string","try_from","try_from","try_into","try_new","type_id","val","valid_precision_and_scale","value","BigDecimalOutOfRange","BigDecimalOutOfRangeSnafu","Err","Error","InvalidPrecisionOrScale","InvalidPrecisionOrScaleSnafu","Ok","ParseBigDecimalStr","ParseBigDecimalStrSnafu","ParseRustDecimalStr","ParseRustDecimalStrSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_error","into_error","into_error","into_error","location_opt","next","raw","raw","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","error","error","location","location","raw","raw","reason","value"],"q":[[0,"common_decimal"],[3,"common_decimal::decimal128"],[44,"common_decimal::error"],[132,"common_decimal::error::Error"],[140,"core::result"],[141,"serde::de"],[142,"core::fmt"],[143,"core::fmt"],[144,"rust_decimal::decimal"],[145,"core::hash"],[146,"core::cmp"],[147,"core::option"],[148,"serde::ser"],[149,"bigdecimal"],[150,"core::any"],[151,"core::any"],[152,"snafu::backtrace_inert"],[153,"core::convert"],[154,"core::clone"],[155,"alloc::vec"],[156,"core::fmt"],[157,"common_error::ext"],[158,"common_error::status_code"]],"d":["","","","The maximum bytes length that an accurate RustDecimal can …","The default scale for Decimal128 values","The maximum precision for Decimal128 values","The maximum scale for Decimal128 values","128bit decimal, using the i128 to represent the decimal.","","","","","","","","","","Port from arrow-rs, see …","Returns the argument unchanged.","","","","Convert from precision, scale, a i128 value which …","","Calls <code>U::from(self)</code>.","Create a new Decimal128 from i128, precision and scale …","","Returns the precision of this decimal.","","Returns the scale of this decimal.","","","split the self.value(i128) to (high-64 bit, low-64 bit), …","","Convert to ScalarValue(value,precision,scale)","","","","","Try new Decimal128 from i128, precision and scale with …","","Return underlying value without precision and scale","check whether precision and scale is valid","","","SNAFU context selector for the <code>Error::BigDecimalOutOfRange</code> …","Contains the error value","","","SNAFU context selector for the …","Contains the success value","","SNAFU context selector for the <code>Error::ParseBigDecimalStr</code> …","","SNAFU context selector for the <code>Error::ParseRustDecimalStr</code> …","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,23,0,21,0,23,0,21,23,0,23,0,0,23,23,23,27,31,32,29,23,27,31,32,29,23,27,29,23,27,31,32,29,27,31,32,29,23,23,27,29,27,31,32,29,23,23,27,31,32,29,23,27,31,32,29,23,27,31,32,29,23,23,31,32,29,23,23,27,31,32,29,23,27,31,32,29,23,27,31,32,29,23,27,31,32,29,23,27,38,39,40,41,38,39,41,40],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[],1],[-1,[[3,[1]]],4],[[1,1],5],[[1,6],7],[[1,6],7],[[8,9,10],11],[-1,-1,[]],[12,1],[13,1],[8,[[3,[1]]]],[[14,14,15,10],1],[[1,-1],2,16],[-1,-2,[],[]],[[13,15,10],1],[[1,1],[[18,[17]]]],[1,15],0,[1,10],0,[[1,-1],3,19],[1,[[2,[14,14]]]],[-1,-2,[],[]],[1,[[2,[[18,[13]],15,10]]]],[-1,11,[]],[20,[[3,[1]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[13,15,10],[[21,[1]]]],[-1,22,[]],[1,13],[[15,10],[[21,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[23,24],[-1,25,[]],[23,[[18,[26]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],23,[[28,[20]]]],[[[29,[-1]]],23,[[28,[11]]]],[23,[[18,[25]]]],[[[27,[-1]]],[[27,[-1]]],30],[[[31,[-1]]],[[31,[-1]]],30],[[[32,[-1]]],[[32,[-1]]],30],[[[29,[-1]]],[[29,[-1]]],30],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[23,9,[33,[11]]],2],[23,8],[[[27,[-1]]],[[3,[-2,23]]],[[28,[20]]],[]],[[[29,[-1]]],[[3,[-2,23]]],[[28,[11]]],[]],[[[27,[-1]],6],7,34],[[[31,[-1]],6],7,34],[[[32,[-1]],6],7,34],[[[29,[-1]],6],7,34],[[23,6],7],[[23,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],23,[[28,[20]]]],[[[31,[-1]]],23,[[28,[11]]]],[[[32,[-1]]],23,[[28,[11]]]],[[[29,[-1]]],23,[[28,[11]]]],[23,[[18,[35]]]],[23,[[18,[36]]]],0,0,0,[23,[[18,[25]]]],[23,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Decimal128",3],[15,"tuple"],[4,"Result",140],[8,"Deserializer",141],[15,"bool"],[3,"Formatter",142],[6,"Result",142],[15,"str"],[15,"usize"],[15,"i8"],[3,"String",143],[3,"Decimal",144],[15,"i128"],[15,"i64"],[15,"u8"],[8,"Hasher",145],[4,"Ordering",146],[4,"Option",147],[8,"Serializer",148],[3,"BigDecimal",149],[6,"Result",44],[3,"TypeId",150],[4,"Error",44],[8,"Any",150],[8,"Error",151],[3,"Backtrace",152],[3,"BigDecimalOutOfRangeSnafu",44],[8,"Into",153],[3,"InvalidPrecisionOrScaleSnafu",44],[8,"Clone",154],[3,"ParseRustDecimalStrSnafu",44],[3,"ParseBigDecimalStrSnafu",44],[3,"Vec",155],[8,"Debug",142],[3,"Location",156],[8,"StackError",157],[4,"StatusCode",158],[13,"ParseRustDecimalStr",132],[13,"ParseBigDecimalStr",132],[13,"BigDecimalOutOfRange",132],[13,"InvalidPrecisionOrScale",132]],"b":[[15,"impl-Debug-for-Decimal128"],[16,"impl-Display-for-Decimal128"],[19,"impl-From%3CDecimal%3E-for-Decimal128"],[20,"impl-From%3Ci128%3E-for-Decimal128"],[88,"impl-Display-for-Error"],[89,"impl-Debug-for-Error"]]},\
"common_error":{"doc":"","t":"RRAAACADIDIKLLLLLLLLLKLLLLLLLLMLLLLLLMLLKLLLLLLLLMLLLLLLLLDLLLLLLLLLDLLLLMLLLLLLLLLMLLLLLLNNNNNNNNNNNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLL","n":["GREPTIME_ERROR_CODE","GREPTIME_ERROR_MSG","ext","format","mock","snafu","status_code","BoxedError","ErrorExt","PlainError","StackError","as_any","as_any","as_any","as_error_source","as_error_source","backtrace","borrow","borrow","borrow_mut","borrow_mut","debug_fmt","debug_fmt","debug_fmt","fmt","fmt","fmt","fmt","from","from","inner","into","into","last","location_opt","location_opt","location_opt","msg","new","new","next","next","next","output_msg","source","source","status_code","status_code","status_code","status_code","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DebugFormat","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","MockError","as_any","as_error_source","borrow","borrow_mut","code","debug_fmt","fmt","fmt","from","into","location_opt","new","next","source","source","status_code","to_string","try_from","try_into","type_id","with_source","AccessDenied","AuthHeaderNotFound","Cancelled","DatabaseNotFound","EngineExecuteQuery","Internal","InvalidArguments","InvalidAuthHeader","InvalidSyntax","PermissionDenied","PlanQuery","RateLimited","RegionAlreadyExists","RegionNotFound","RegionReadonly","RuntimeResourcesExhausted","StatusCode","StorageUnavailable","Success","TableAlreadyExists","TableColumnExists","TableColumnNotFound","TableNotFound","Unexpected","Unknown","Unsupported","UnsupportedPasswordType","UserNotFound","UserPasswordMismatch","as_ref","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from_str","from_u32","into","is_retryable","is_success","should_log_error","to_owned","to_string","try_from","try_from","try_into","type_id"],"q":[[0,"common_error"],[7,"common_error::ext"],[58,"common_error::format"],[68,"common_error::mock"],[90,"common_error::status_code"],[140,"core::any"],[141,"core::error"],[142,"snafu::backtrace_inert"],[143,"core::option"],[144,"alloc::string"],[145,"alloc::vec"],[146,"core::fmt"],[147,"core::fmt"],[148,"snafu"],[149,"core::marker"],[150,"core::any"]],"d":["","","","","Utils for mock.","","","An opaque boxed error based on errors that implement …","Extension to <code>Error</code> in std.","Error type with plain error message","","Returns the error as Any so that it can be downcast to a …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the location of this error, None if the location is …","","","","","","","","","","","","Map this error to StatusCode.","","","","","","","","","","","","Pretty debug format for error, also prints source and …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new format struct from <code>err</code>.","","","","A mock error mainly for test.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new MockError without backtrace.","","","","","","","","","Create a new MockError with source.","Illegal request to connect catalog-schema","Not found http authorization header","The task is cancelled.","","The query engine fail to execute query.","Internal server error.","Invalid arguments.","Invalid http authorization header","SQL Syntax error.","User is not authorized to perform the operation","Fail to create a plan for the query.","Rate limit exceeded","","","","Runtime resources exhausted, like creating threads failed.","Common status code for public API.","Storage is temporarily unable to handle the request","Success.","Table already exists.","","","","Unexpected error, maybe there is a BUG.","Unknown error.","Unsupported operation.","Unsupported password type","User not exist","Username and password does not match","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the error with this code is retryable.","Returns <code>true</code> if <code>code</code> is success.","Returns <code>true</code> if we should print an error log for an error …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,16,2,3,2,3,2,2,3,2,3,13,2,3,2,2,3,3,2,3,2,2,3,13,16,2,3,3,2,3,13,2,3,16,2,3,16,2,3,3,2,3,2,3,2,3,2,3,0,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[2,1],[3,1],[-1,4,[]],[-1,4,[]],[2,[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,7,[9,[8]]],10,[]],[[2,7,[9,[8]]],10],[[3,7,[9,[8]]],10],[[2,11],12],[[2,11],12],[[3,11],12],[[3,11],12],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,14],[-1,[[6,[15]]],[]],[2,[[6,[15]]]],[3,[[6,[15]]]],0,[-1,2,[16,17,18]],[[8,19],3],[-1,[[6,[13]]],[]],[2,[[6,[13]]]],[3,[[6,[13]]]],[-1,8,14],[2,[[6,[4]]]],[3,[[6,[4]]]],[-1,19,[]],[2,19],[3,19],0,[-1,8,[]],[-1,8,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1]],11],12,[16,14]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[22,[-1]]],14],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,[23,1],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[23,7,[9,[8]]],10],[[23,11],12],[[23,11],12],[-1,-1,[]],[-1,-2,[],[]],[23,[[6,[15]]]],[19,23],[23,[[6,[13]]]],[23,[[6,[4]]]],0,[23,19],[-1,8,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[23,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,24],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],10,[],[]],[[19,19],25],[[19,11],12],[[19,11],12],[-1,-1,[]],[24,[[20,[19]]]],[26,[[6,[19]]]],[-1,-2,[],[]],[19,25],[26,25],[19,25],[-1,-2,[],[]],[-1,8,[]],[-1,[[20,[-2]]],[],[]],[24,[[20,[19]]]],[-1,[[20,[-2]]],[],[]],[-1,21,[]]],"c":[],"p":[[8,"Any",140],[3,"BoxedError",7],[3,"PlainError",7],[8,"Error",141],[3,"Backtrace",142],[4,"Option",143],[15,"usize"],[3,"String",144],[3,"Vec",145],[15,"tuple"],[3,"Formatter",146],[6,"Result",146],[8,"StackError",7],[8,"Sized",147],[3,"Location",148],[8,"ErrorExt",7],[8,"Send",147],[8,"Sync",147],[4,"StatusCode",90],[4,"Result",149],[3,"TypeId",140],[3,"DebugFormat",58],[3,"MockError",68],[15,"str"],[15,"bool"],[15,"u32"]],"b":[[24,"impl-Debug-for-BoxedError"],[25,"impl-Display-for-BoxedError"],[26,"impl-Debug-for-PlainError"],[27,"impl-Display-for-PlainError"],[75,"impl-Display-for-MockError"],[76,"impl-Debug-for-MockError"],[125,"impl-Display-for-StatusCode"],[126,"impl-Debug-for-StatusCode"]]},\
"common_function":{"doc":"","t":"ACCCCAAAAAAAADGDGDDDDDDDDMMAALMLLLLLLLMALLLLLMMMMMMMMLLLLLLLLALMLAMMAMMLAALLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLLLMLMLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLDDMLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMLMLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMDDLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMDDLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMDMAAMFFAFDMLLLMLLLLLLLLLLLLLFIDGMLLLLLKLLLLLLLKMMKKLLLLLLMLHDLMLLLLLLMLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLALLALLLLLLLLLLLDLLLLLOLFFFLLLLLLLLLFFLLFFLLLLLLLLLFFFFDLLLLALLLLLLLALLLLDRLLLLLLLLLLLLLLLLLLLLLLLLLLRDLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLF","n":["scalars","FUNCTION_REGISTRY","Function","FunctionRef","FunctionRegistry","aggregate","expression","function","function_registry","math","numpy","timestamp","udf","AggregateFunctionMeta","AggregateFunctionMetaRef","AggregateFunctions","AggregatorCreatorFunction","ArgmaxAccumulatorCreator","ArgminAccumulatorCreator","DiffAccumulatorCreator","MeanAccumulatorCreator","PercentileAccumulatorCreator","PolyvalAccumulatorCreator","ScipyStatsNormCdfAccumulatorCreator","ScipyStatsNormPdfAccumulatorCreator","alloc","alloc","argmax","argmin","args_count","args_count","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","creator","diff","from","from","from_ref","from_subset","from_subset","input_types","input_types","input_types","input_types","input_types","input_types","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","mean","name","name","new","percentile","phantom","phantom","polyval","ptr","ptr","register","scipy_stats_norm_cdf","scipy_stats_norm_pdf","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Argmax","ArgmaxAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","max","merge_batch","n","output_type","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Argmin","ArgminAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","min","n","output_type","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Diff","DiffAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","Mean","MeanAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","n","output_type","push","set_input_types","state","state_types","sum","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Percentile","PercentileAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","greater","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","n","not_greater","output_type","p","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","vzip","vzip","Polyval","PolyvalAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","ScipyStatsNormCdf","ScipyStatsNormCdfAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","ScipyStatsNormPdf","ScipyStatsNormPdfAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","EvalContext","_tz","binary","ctx","error","scalar_binary_op","scalar_unary_op","unary","scalar_binary_op","EvalContext","_tz","borrow","borrow_mut","default","error","from","from_subset","into","into_request","into_request","is_in_subset","set_error","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","scalar_unary_op","Function","FunctionContext","FunctionRef","alloc","borrow","borrow_mut","clone","clone_into","default","eval","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","phantom","ptr","return_type","signature","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","tz","vzip","FUNCTION_REGISTRY","FunctionRegistry","aggregate_functions","aggregate_functions","borrow","borrow_mut","default","from","from_subset","functions","functions","get_aggr_function","get_function","into","into_request","into_request","is_in_subset","register","register_aggregate_function","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MathFunction","PowFunction","RangeFunction","RateFunction","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from","from_ref","from_subset","from_subset","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","name","pow","rate","register","return_type","signature","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PowFunction","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","return_type","scalar_pow","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RateFunction","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NumpyFunction","borrow","borrow_mut","clip","from","from_subset","interp","into","into_request","into_request","is_in_subset","register","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ClipFunction","borrow","borrow_mut","clone","clone_into","default","define_eval","eval","eval_f64","eval_i64","eval_u64","fmt","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","max","min","name","return_type","scalar_max","scalar_min","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","binary_search_ascending_vector","concrete_type_to_primitive_vector","interp","linear_search_ascending_vector","TimestampFunction","borrow","borrow_mut","from","from_subset","greatest","into","into_request","into_request","is_in_subset","register","to_subset","to_subset_unchecked","to_unixtime","try_from","try_into","type_id","vzip","GreatestFunction","NAME","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NAME","ToUnixtimeFunction","borrow","borrow_mut","clone","clone_into","convert_dates_to_seconds","convert_datetimes_to_seconds","convert_timestamps_to_seconds","convert_to_seconds","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","create_udf"],"q":[[0,"common_function"],[1,"common_function::scalars"],[13,"common_function::scalars::aggregate"],[87,"common_function::scalars::aggregate::argmax"],[134,"common_function::scalars::aggregate::argmin"],[181,"common_function::scalars::aggregate::diff"],[228,"common_function::scalars::aggregate::mean"],[277,"common_function::scalars::aggregate::percentile"],[326,"common_function::scalars::aggregate::polyval"],[374,"common_function::scalars::aggregate::scipy_stats_norm_cdf"],[421,"common_function::scalars::aggregate::scipy_stats_norm_pdf"],[468,"common_function::scalars::expression"],[476,"common_function::scalars::expression::binary"],[477,"common_function::scalars::expression::ctx"],[496,"common_function::scalars::expression::unary"],[497,"common_function::scalars::function"],[527,"common_function::scalars::function_registry"],[552,"common_function::scalars::math"],[599,"common_function::scalars::math::pow"],[627,"common_function::scalars::math::rate"],[654,"common_function::scalars::numpy"],[672,"common_function::scalars::numpy::clip"],[707,"common_function::scalars::numpy::interp"],[711,"common_function::scalars::timestamp"],[729,"common_function::scalars::timestamp::greatest"],[757,"common_function::scalars::timestamp::to_unixtime"],[789,"common_function::scalars::udf"],[790,"common_query::logical_plan::accumulator"],[791,"tonic::request"],[792,"tonic::request"],[793,"core::ops::function"],[794,"alloc::sync"],[795,"core::option"],[796,"core::result"],[797,"core::any"],[798,"common_query::function"],[799,"core::default"],[800,"datatypes::value"],[801,"common_query::error"],[802,"datatypes::types::primitive_type"],[803,"core::cmp"],[804,"core::fmt"],[805,"core::fmt"],[806,"alloc::vec"],[807,"common_query::error"],[808,"core::marker"],[809,"core::iter::traits::accum"],[810,"common_query::signature"],[811,"num_traits::cast"],[812,"datatypes::scalars"],[813,"datatypes::vectors::primitive"],[814,"common_query::logical_plan::udf"]],"d":["","","","","","","","","functions registry","","","","","<code>AggregateFunctionMeta</code> dynamically creates …","","","A function creates <code>AggregateFunctionCreator</code>. “Aggregator…","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: remove the allow_unused when it’s used.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","TODO: remove the allow_unused when it’s used.","Scalar function trait, modified from databend to adapt …","","","","","","","","","Evaluate the function, e.g. run/execute the function.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns the name of the function, should be unique.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","<code>RangeFunction</code> will never be used as a normal function, …","generates rates from a sequence of adjacent data points.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","<code>range_fn</code> will never been used. As long as a legal …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generates rates from a sequence of adjacent data points.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","numpy.clip function, …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","search the biggest number that smaller than x in xp","","One-dimensional linear interpolation for monotonically …","search the biggest number that smaller than x in xp","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A function to convert the column into the unix timestamp …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Create a ScalarUdf from function."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,54,0,0,1,1,69,1,69,1,1,1,1,1,0,69,1,1,69,1,16,34,37,39,42,44,47,49,69,1,69,69,1,1,69,1,0,1,1,1,0,68,54,0,68,54,69,0,0,1,69,1,69,1,69,1,69,1,69,1,69,1,0,0,18,16,18,16,16,18,16,18,18,16,18,16,18,16,16,16,18,16,18,18,16,16,18,16,18,18,18,16,16,18,16,18,16,18,16,18,16,18,16,18,16,18,18,18,16,0,0,35,34,35,34,34,35,34,35,35,34,35,34,35,34,34,34,35,34,35,35,34,34,35,34,35,35,35,34,34,35,34,35,34,35,34,35,34,35,34,35,34,35,35,35,34,0,0,38,38,37,38,37,37,38,37,38,38,37,38,37,38,37,37,37,38,37,38,38,37,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,38,38,37,0,0,40,40,39,40,39,39,40,39,40,40,39,40,39,40,39,39,39,40,39,40,40,39,39,40,39,40,40,39,40,39,40,39,40,40,39,40,39,40,39,40,39,40,39,40,40,40,39,0,0,43,42,43,42,42,43,42,43,43,42,43,42,43,42,43,42,42,43,42,43,43,42,42,43,42,43,43,43,42,43,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,43,42,0,0,45,45,44,45,44,44,45,44,45,45,44,45,44,45,44,44,44,45,44,45,45,44,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,45,45,44,45,0,0,48,47,48,47,47,48,47,48,48,47,48,47,48,47,47,47,48,47,48,48,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,48,48,47,48,0,0,50,49,50,49,49,50,49,50,50,49,50,49,50,49,49,49,50,49,50,50,49,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,50,50,49,50,0,51,0,0,51,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,0,55,52,52,52,52,52,70,52,52,52,52,52,52,52,70,55,55,70,70,52,52,52,52,52,52,52,52,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,71,56,71,56,56,56,56,56,56,56,71,56,56,71,56,71,56,71,71,56,56,71,56,56,0,0,71,56,56,56,56,71,56,71,56,71,56,71,56,71,56,71,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,57,57,57,57,57,57,57,57,57,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,72,72,0,72,72,0,72,72,72,72,72,72,72,72,72,72,72,0,60,60,60,60,60,0,60,0,0,0,60,60,60,60,60,60,60,60,60,0,0,60,60,0,0,60,60,60,60,60,60,60,60,60,0,0,0,0,0,73,73,73,73,0,73,73,73,73,73,73,73,0,73,73,73,73,0,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,65,65,65,65,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],3,[],[]],[1,4],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],0,[1,8],0,[[9,2,[11,[10]]],1],0,0,0,0,0,0,[12,3],0,0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,17],[[],[[18,[-1]]],19],[[],16],[[[18,[-1]]],[[21,[20]]],[22,23]],[[[18,[-1]],24],25,26],[[16,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],0,[[[18,[-1]],[31,[30]]],[[21,[3]]],[22,23]],0,[16,[[21,[27]]]],[[16,[28,[27]]],[[14,[3,29]]]],[[[18,[-1]]],[[21,[[28,[20]]]]],[22,23]],[16,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[18,[-1]],-1,32],3,[23,33]],[[[18,[-1]],[31,[30]]],[[21,[3]]],[22,23]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,17],[[],[[35,[-1]]],19],[[],34],[[[35,[-1]]],[[21,[20]]],[22,23]],[[[35,[-1]],24],25,26],[[34,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[35,[-1]],[31,[30]]],[[21,[3]]],[22,23]],0,0,[34,[[21,[27]]]],[[34,[28,[27]]],[[14,[3,29]]]],[[[35,[-1]]],[[21,[[28,[20]]]]],[22,23]],[34,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[35,[-1]],-1,36],3,[33,23]],[[[35,[-1]],[31,[30]]],[[21,[3]]],[22,23]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,17],[[],[[38,[-1,-2]]],19,19],[[],37],[[[38,[-1,-2]]],[[21,[20]]],22,22],[[[38,[-1,-2]],24],25,26,26],[[37,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[38,[-1,-2]],[31,[30]]],[[21,[3]]],22,22],[37,[[21,[27]]]],[[[38,[-1,-2]],-1],3,[],[]],[[37,[28,[27]]],[[14,[3,29]]]],[[[38,[-1,-2]]],[[21,[[28,[20]]]]],22,22],[37,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[38,[-1,-2]],[31,[30]]],[[21,[3]]],22,22],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,17],[[],[[40,[-1]]],19],[[],39],[[[40,[-1]]],[[21,[20]]],22],[[[40,[-1]],24],25,26],[[39,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[40,[-1]],[31,[30]]],[[21,[3]]],22],0,[39,[[21,[27]]]],[[[40,[-1]],-1],3,22],[[39,[28,[27]]],[[14,[3,29]]]],[[[40,[-1]]],[[21,[[28,[20]]]]],22],[39,[[21,[[28,[27]]]]]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[40,[-1]],41,32],3,22],[[[40,[-1]],[31,[30]]],[[21,[3]]],22],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,17],[[],[[43,[-1]]],[22,19]],[[],42],[[[43,[-1]]],[[21,[20]]],22],[[[43,[-1]],24],25,[22,26]],[[42,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[42,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[43,[-1]],[31,[30]]],[[21,[3]]],22],0,0,[42,[[21,[27]]]],0,[[[43,[-1]],-1],3,22],[[42,[28,[27]]],[[14,[3,29]]]],[[[43,[-1]]],[[21,[[28,[20]]]]],22],[42,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[43,[-1]],[31,[30]]],[[21,[3]]],22],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,17],[[],[[45,[-1,-2]]],[22,19],[22,19]],[[],44],[[[45,[-1,-2]]],[[21,[20]]],22,[22,46]],[[[45,[-1,-2]],24],25,[22,26],[22,26]],[[44,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[45,[-1,-2]],[31,[30]]],[[21,[3]]],22,[22,46]],[44,[[21,[27]]]],[[[45,[-1,-2]],-1],3,22,22],[[44,[28,[27]]],[[14,[3,29]]]],[[[45,[-1,-2]]],[[21,[[28,[20]]]]],22,[22,46]],[44,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[45,[-1,-2]],[31,[30]]],[[21,[3]]],22,[22,46]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,17],[[],[[48,[-1]]],19],[[],47],[[[48,[-1]]],[[21,[20]]],[]],[[[48,[-1]],24],25,26],[[47,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[48,[-1]],[31,[30]]],[[21,[3]]],[]],[47,[[21,[27]]]],[[[48,[-1]],-1],3,[]],[[47,[28,[27]]],[[14,[3,29]]]],[[[48,[-1]]],[[21,[[28,[20]]]]],[]],[47,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[48,[-1]],[31,[30]]],[[21,[3]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,17],[[],[[50,[-1]]],19],[[],49],[[[50,[-1]]],[[21,[20]]],22],[[[50,[-1]],24],25,26],[[49,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,[[14,[[28,[27]],29]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[[50,[-1]],[31,[30]]],[[21,[3]]],22],[49,[[21,[27]]]],[[[50,[-1]],-1],3,[]],[[49,[28,[27]]],[[14,[3,29]]]],[[[50,[-1]]],[[21,[[28,[20]]]]],22],[49,[[21,[[28,[27]]]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[[50,[-1]],[31,[30]]],[[21,[3]]],22],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[30,30,-1,51],21,10],[[30,-1,51],21,10],0,[[30,30,-1,51],21,10],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],51],0,[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[[51,29],3],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[[30,-1,51],21,10],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[-1,-2],3,[],[]],[[],52],[[-1,52,[31,[30]]],[[21,[30]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,9,[]],0,0,[[-1,[31,[27]]],[[21,[27]]],[]],[-1,53,[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],0,[-1,-2,[],[]],0,0,[12,[[28,[54]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[-1,-1,[]],[-1,-2,[],[]],[12,[[28,[55]]]],0,[[12,9],[[13,[54]]]],[[12,9],[[13,[55]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[[12,55],3],[[12,54],3],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[-1,-2],3,[],[]],[[],56],[[56,52,[31,[30]]],[[21,[30]]]],[[56,24],25],[[56,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[56,9],0,0,[12,3],[[56,[31,[27]]],[[21,[27]]]],[56,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[[-1,-2],3,[],[]],[[],57],[[57,52,[31,[30]]],[[21,[30]]]],[[57,24],25],[[57,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[57,9],[[57,[31,[27]]],[[21,[27]]]],[[[13,[-1]],[13,[-2]],51],[[13,[41]]],[[58,[41]]],[[58,[41]]]],[57,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[-1,-2],3,[],[]],[[],59],[[59,52,[31,[30]]],[[21,[30]]]],[[59,24],25],[[59,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[59,9],[[59,[31,[27]]],[[21,[27]]]],[59,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[12,3],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[[-1,-2],3,[],[]],[[],60],0,[[60,52,[31,[30]]],[[21,[30]]]],[[[31,[30]]],[[21,[30]]]],[[[31,[30]]],[[21,[30]]]],[[[31,[30]]],[[21,[30]]]],[[60,24],25],[[60,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[[-1,-1],-1,23],[[-1,-1],-1,23],[60,9],[[60,[31,[27]]],[[21,[27]]]],[[[13,[-1]],[13,[-1]],51],[[13,[-1]]],[61,33,23]],[[[13,[-1]],[13,[-1]],51],[[13,[-1]]],[61,33,23]],[60,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[[20,62],63],[30,[[21,[62]]]],[[[31,[30]]],[[21,[30]]]],[[20,62],63],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[12,3],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[[-1,-2],3,[],[]],[[],64],[[64,52,[31,[30]]],[[21,[30]]]],[[64,24],25],[[64,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[64,9],[[64,[31,[27]]],[[21,[27]]]],[64,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[65,65],[[-1,-2],3,[],[]],[30,[[28,[[13,[66]]]]]],[30,[[28,[[13,[66]]]]]],[30,[[28,[[13,[66]]]]]],[9,[[13,[66]]]],[[],65],[[65,52,[31,[30]]],[[21,[30]]]],[[65,24],25],[[65,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[65,9],[[65,[31,[27]]],[[21,[27]]]],[65,53],[-1,-2,[],[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[55,67]],"c":[],"p":[[3,"AggregateFunctionMeta",13],[15,"u8"],[15,"tuple"],[6,"AggregateFunctionCreatorRef",790],[3,"Request",791],[3,"Request",791],[15,"bool"],[3,"String",792],[15,"str"],[8,"Fn",793],[3,"Arc",794],[3,"FunctionRegistry",527],[4,"Option",795],[4,"Result",796],[3,"TypeId",797],[3,"ArgmaxAccumulatorCreator",87],[6,"AccumulatorCreatorFunction",798],[3,"Argmax",87],[8,"Default",799],[4,"Value",800],[6,"Result",801],[8,"WrapperType",802],[8,"PartialOrd",803],[3,"Formatter",804],[6,"Result",804],[8,"Debug",804],[4,"ConcreteDataType",805],[3,"Vec",806],[4,"Error",801],[6,"VectorRef",807],[15,"slice"],[15,"u64"],[8,"Copy",808],[3,"ArgminAccumulatorCreator",134],[3,"Argmin",134],[15,"u32"],[3,"DiffAccumulatorCreator",181],[3,"Diff",181],[3,"MeanAccumulatorCreator",228],[3,"Mean",228],[15,"f64"],[3,"PercentileAccumulatorCreator",277],[3,"Percentile",277],[3,"PolyvalAccumulatorCreator",326],[3,"Polyval",326],[8,"Sum",809],[3,"ScipyStatsNormCdfAccumulatorCreator",374],[3,"ScipyStatsNormCdf",374],[3,"ScipyStatsNormPdfAccumulatorCreator",421],[3,"ScipyStatsNormPdf",421],[3,"EvalContext",477],[3,"FunctionContext",497],[3,"Signature",810],[6,"AggregateFunctionMetaRef",13],[6,"FunctionRef",497],[3,"RangeFunction",552],[3,"PowFunction",599],[8,"AsPrimitive",811],[3,"RateFunction",627],[3,"ClipFunction",672],[8,"Scalar",812],[6,"Float64Vector",813],[15,"usize"],[3,"GreatestFunction",729],[3,"ToUnixtimeFunction",757],[15,"i64"],[3,"ScalarUdf",814],[6,"AggregatorCreatorFunction",13],[3,"AggregateFunctions",13],[8,"Function",497],[3,"MathFunction",552],[3,"NumpyFunction",654],[3,"TimestampFunction",711]],"b":[[564,"impl-Debug-for-RangeFunction"],[565,"impl-Display-for-RangeFunction"],[606,"impl-Debug-for-PowFunction"],[607,"impl-Display-for-PowFunction"],[634,"impl-Debug-for-RateFunction"],[635,"impl-Display-for-RateFunction"],[683,"impl-Display-for-ClipFunction"],[684,"impl-Debug-for-ClipFunction"],[737,"impl-Debug-for-GreatestFunction"],[738,"impl-Display-for-GreatestFunction"],[769,"impl-Display-for-ToUnixtimeFunction"],[770,"impl-Debug-for-ToUnixtimeFunction"]]},\
"common_greptimedb_telemetry":{"doc":"","t":"INNNRRDEENDHRRMLLLLLLLLLMFLLLLLLLLLLLLLLLLLKKLKLKLMKLLLLLLLLMLLMMFLMLLKLMLMLMLLLLLLLLLLLLMMLLLLM","n":["Collector","Disable","Distributed","Enable","GREPTIMEDB_TELEMETRY_CLIENT_CONNECT_TIMEOUT","GREPTIMEDB_TELEMETRY_CLIENT_REQUEST_TIMEOUT","GreptimeDBTelemetry","GreptimeDBTelemetryTask","Mode","Standalone","StatisticData","TELEMETRY_INTERVAL","TELEMETRY_URL","UUID_FILE_NAME","arch","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","client","default_get_uuid","deserialize","deserialize","disable","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","get_arch","get_git_hash","get_mode","get_nodes","get_os","get_retry","get_uuid","get_uuid_cache","get_version","git_commit","inc_retry","into","into","into","into","into_request","into_request","into_request","into_request","mode","name","new","nodes","os","print_anonymous_usage_data_disclaimer","report_telemetry_info","report_times","serialize","serialize","set_uuid_cache","should_report","should_report","start","statistics","stop","telemetry_url","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uuid","version","vzip","vzip","vzip","vzip","working_home"],"q":[[0,"common_greptimedb_telemetry"],[96,"core::future::future"],[97,"alloc::boxed"],[98,"core::pin"],[99,"alloc::string"],[100,"core::option"],[101,"core::result"],[102,"serde::de"],[103,"core::time"],[104,"common_runtime::error"],[105,"common_runtime::repeated_task"],[106,"core::sync::atomic"],[107,"alloc::sync"],[108,"core::fmt"],[109,"core::fmt"],[110,"reqwest::async_impl::response"],[111,"serde::ser"],[112,"common_runtime::error"]],"d":["","","","","The default connect timeout to greptime cloud.","The default request timeout to greptime cloud.","Report version info to GreptimeDB. We do not collect any …","","","","Telemetry data to report","The default interval of reporting telemetry data to …","The URL to report telemetry data.","The local installation uuid cache file","The architecture of the CPU, such as <code>x86</code>, <code>x86_64</code> etc.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","The git commit revision of greptimedb","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The running mode, <code>standalone</code> or <code>distributed</code>.","","","The node number","Operating system name, such as <code>linux</code>, <code>windows</code> etc.","","","","","","","","","","","","","","","","","","","","","","","","","The local installation uuid","The greptimedb version","","","","",""],"i":[0,11,10,11,0,0,0,0,0,10,0,0,0,0,7,11,1,7,10,11,1,7,10,1,1,0,7,10,11,11,10,10,10,10,10,7,10,11,1,7,10,24,24,24,24,24,24,24,24,24,7,24,11,1,7,10,11,1,7,10,7,1,1,7,7,0,1,1,7,10,24,11,1,11,1,11,1,11,1,7,10,11,1,7,10,11,1,7,10,7,7,11,1,7,10,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[[3,[2]]]]]],0,[[[6,[5]]],[[6,[5]]]],[-1,[[8,[7]]],9],[-1,[[8,[10]]],9],[[],11],[[12,[14,[13]],[16,[15]]],11],[[10,10],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[7,18],19],[[10,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,5,[]],[-1,5,[]],[-1,10,[]],[-1,[[4,[[3,[2]]]]],[]],[-1,5,[]],[-1,20,[]],[[-1,[6,[5]]],[[6,[5]]],[]],[-1,[[6,[5]]],[]],[-1,5,[]],0,[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],0,[1,23],[[[6,[5]],[3,[24]],[16,[15]]],1],0,0,[[],21],[1,[[6,[25]]]],0,[[7,-1],8,26],[[10,-1],8,26],[[-1,5],21,[]],[[11,17],21],0,[11,[[27,[21]]]],0,[11,[[27,[21]]]],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0],"c":[],"p":[[3,"GreptimeDBTelemetry",0],[8,"Future",96],[3,"Box",97],[3,"Pin",98],[3,"String",99],[4,"Option",100],[3,"StatisticData",0],[4,"Result",101],[8,"Deserializer",102],[4,"Mode",0],[4,"GreptimeDBTelemetryTask",0],[3,"Duration",103],[4,"Error",104],[6,"BoxedTaskFunction",105],[3,"AtomicBool",106],[3,"Arc",107],[15,"bool"],[3,"Formatter",108],[6,"Result",108],[15,"i32"],[15,"tuple"],[3,"Request",109],[15,"str"],[8,"Collector",0],[3,"Response",110],[8,"Serializer",111],[6,"Result",104],[3,"TypeId",112]],"b":[]},\
"common_grpc":{"doc":"","t":"CAAAAADDDDRRRRDDRMLMLLLLLLLLLLLLLMMMMMMLMLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMMLLMLMLLLLLLLLLLLLLLLLLLMMLLMLLMFLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLNDNDNDNDNDNENDNDNDNDNGNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMNDDENNLLLLLLFLLMLLMLFLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMOFFGNDNNNNEGNMLLLLLLMLLLLLLLLLLLLLLLLLLLMLMFLLLLLLLLMLLLLLLLLLL","n":["Error","channel_manager","error","flight","select","writer","Channel","ChannelConfig","ChannelManager","ClientTlsOption","DEFAULT_GRPC_CONNECT_TIMEOUT_SECS","DEFAULT_GRPC_REQUEST_TIMEOUT_SECS","DEFAULT_MAX_GRPC_RECV_MESSAGE_SIZE","DEFAULT_MAX_GRPC_SEND_MESSAGE_SIZE","ID","Pool","RECYCLE_CHANNEL_INTERVAL_SECS","__private_field","access","access","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_endpoint","channel","channel_recycle_started","channels","client_cert_path","client_key_path","client_tls","client_tls_config","client_tls_config","clone","clone","clone","clone_into","clone_into","clone_into","concurrency_limit","concurrency_limit","config","config","connect_timeout","connect_timeout","default","default","default","deref","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","get","get","http2_adaptive_window","http2_adaptive_window","http2_keep_alive_interval","http2_keep_alive_interval","http2_keep_alive_timeout","http2_keep_alive_timeout","http2_keep_alive_while_idle","http2_keep_alive_while_idle","id","increase_access","initial_connection_window_size","initial_connection_window_size","initial_stream_window_size","initial_stream_window_size","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_recv_message_size","max_send_message_size","new","new","pool","put","rate_limit","rate_limit","recycle_channel_in_loop","reset_with_connector","retain_channel","retain_channel","server_ca_cert_path","tcp_keepalive","tcp_keepalive","tcp_nodelay","tcp_nodelay","timeout","timeout","to_owned","to_owned","to_owned","trigger_channel_recycling","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_default_connector","use_default_connector","vzip","vzip","vzip","vzip","vzip","vzip","with_config","with_tls_config","Conversion","ConversionSnafu","ConvertArrowSchema","ConvertArrowSchemaSnafu","CreateChannel","CreateChannelSnafu","CreateRecordBatch","CreateRecordBatchSnafu","DecodeFlightData","DecodeFlightDataSnafu","Err","Error","InvalidConfigFilePath","InvalidConfigFilePathSnafu","InvalidFlightData","InvalidFlightDataSnafu","InvalidTlsConfig","InvalidTlsConfigSnafu","NotSupported","NotSupportedSnafu","Ok","Result","TypeMismatch","TypeMismatchSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","debug_fmt","description","expected","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","msg","next","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column_name","error","error","error","expected","feat","from","location","location","location","location","location","location","location","location","msg","reason","source","source","AffectedRows","FlightDecoder","FlightEncoder","FlightMessage","Recordbatch","Schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_none_flight_msg","clone","clone_into","data_gen","default","default","dictionary_tracker","encode","flight_messages_to_recordbatches","fmt","from","from","from","from_ref","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","schema","to_owned","try_decode","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_options","convert_arrow_array_to_grpc_vals","null_mask","values","ColumnName","Hour","LinesWriter","Microsecond","Millisecond","Minute","Nanosecond","Precision","RowCount","Second","batch","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_name_index","commit","default","eq","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","from","from","from_ref","into","into","into_request","into_request","into_request","into_request","lines","mut_column","null_masks","to_ms_ts","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vec","vzip","vzip","with_lines","write_bool","write_f64","write_i64","write_string","write_tag","write_ts","write_u64"],"q":[[0,"common_grpc"],[6,"common_grpc::channel_manager"],[167,"common_grpc::error"],[390,"common_grpc::error::Error"],[410,"common_grpc::flight"],[461,"common_grpc::select"],[464,"common_grpc::writer"],[524,"tonic::transport::channel::endpoint"],[525,"core::time"],[526,"core::sync::atomic"],[527,"alloc::string"],[528,"dashmap::mapref::entry"],[529,"core::fmt"],[530,"core::fmt"],[531,"core::convert"],[532,"core::option"],[533,"tonic::request"],[534,"tonic::request"],[535,"http::uri"],[536,"tower::make::make_connection"],[537,"core::marker"],[538,"core::ops::function"],[539,"core::result"],[540,"core::any"],[541,"core::any"],[542,"snafu::backtrace_inert"],[543,"core::convert"],[544,"alloc::vec"],[545,"core::fmt"],[546,"common_error::status_code"],[547,"common_base::bytes"],[548,"arrow_flight::gen"],[549,"common_recordbatch"],[550,"datatypes::vectors"],[551,"greptime_proto::v1::column"],[552,"greptime_proto::v1"],[553,"greptime_proto::v1"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value of tls client auth.","","","","","","","","A concurrency limit to each request.","","","","A timeout to connecting to the uri.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Sets whether to use an adaptive flow control. Uses …","","Set http2 KEEP_ALIVE_INTERVAL. Uses hyper’s default …","","Set http2 KEEP_ALIVE_TIMEOUT. Uses hyper’s default …","","Set http2 KEEP_ALIVE_WHILE_IDLE. Uses hyper’s default …","","","","Sets the max connection-level flow control for HTTP2","","Sets the SETTINGS_INITIAL_WINDOW_SIZE option for HTTP2 …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A rate limit to each request.","","","","","","","Set whether TCP keepalive messages are enabled on accepted …","","Set the value of TCP_NODELAY option for accepted …","","A timeout to each request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Conversion</code> variant","","SNAFU context selector for the <code>Error::ConvertArrowSchema</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::DecodeFlightData</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::InvalidConfigFilePath</code>…","","SNAFU context selector for the <code>Error::InvalidFlightData</code> …","","SNAFU context selector for the <code>Error::InvalidTlsConfig</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","Contains the success value","","","SNAFU context selector for the <code>Error::TypeMismatch</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,1,12,3,8,7,1,11,12,3,8,7,1,11,3,1,3,11,8,8,7,7,3,3,8,7,3,8,7,7,7,3,3,7,7,3,7,11,12,11,8,7,8,8,8,8,7,7,7,7,3,8,7,1,11,12,3,8,7,1,11,3,8,7,3,11,7,7,7,7,7,7,7,7,3,1,7,7,7,7,12,3,8,7,1,11,12,12,3,3,8,8,7,7,1,1,11,11,7,7,3,7,3,11,7,7,0,3,3,11,8,7,7,7,7,7,7,3,8,7,3,12,3,8,7,1,11,12,3,8,7,1,11,12,3,8,7,1,11,1,1,12,3,8,7,1,11,3,3,33,0,33,0,33,0,33,0,33,0,6,0,33,0,33,0,33,0,33,0,6,0,33,0,39,33,33,33,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,33,37,39,40,41,42,33,37,44,39,45,46,40,47,41,48,42,37,44,39,45,46,40,47,41,48,42,39,33,33,39,37,39,40,41,42,42,37,44,39,45,46,40,47,41,48,42,33,33,37,44,39,45,46,40,47,41,48,42,33,40,37,44,39,45,46,40,47,41,48,42,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,37,37,44,44,39,39,45,45,46,46,40,40,47,47,41,41,48,48,42,42,33,33,37,33,41,33,33,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,33,37,44,39,45,46,40,47,41,48,42,33,71,71,72,73,74,71,75,76,72,71,73,77,76,74,78,79,80,78,77,79,54,0,0,0,54,54,55,54,56,55,54,56,0,54,54,55,55,56,55,55,0,54,55,54,56,54,55,54,56,55,55,54,54,56,56,56,54,56,55,54,56,55,54,56,55,54,56,55,54,56,55,0,0,0,0,63,0,63,63,63,63,0,0,63,64,64,63,64,63,63,63,64,64,64,63,63,63,63,63,64,63,63,64,63,63,64,63,64,64,63,63,64,64,64,0,63,63,64,63,64,63,64,63,81,64,63,64,64,64,64,64,64,64,64],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,4],[[6,[5]]]],0,0,0,0,0,0,[[7,8],7],0,[3,3],[8,8],[7,7],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[7,2],7],0,[3,7],0,[[7,10],7],0,[[],3],[[],7],[[],11],[12,13],[[11,14],[[15,[14,1]]]],[[8,8],16],[[7,7],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[3,17],18],[[8,17],18],[[7,17],18],[[1,17],18],[[11,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[3,-1],[[6,[19]]],[[20,[4]]]],[[11,4],[[21,[19]]]],[[7,16],7],0,[[7,10],7],0,[[7,10],7],0,[[7,16],7],0,0,[1,9],[[7,22],7],0,[[7,22],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],0,0,[[],3],[[],7],0,[[11,4,1],9],[[7,25,10],7],0,[[[26,[11]],25],9],[[3,-1,-2],[[6,[19]]],[[20,[4]]],[[28,[27]],29]],[[3,-1],9,30],[[11,-1],9,30],0,[[7,10],7],0,[[7,16],7],0,[[7,10],7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,9],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[1,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,3],[7,[[6,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[33,34],[-1,35,[]],[33,[[21,[36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1]]],33,[[38,[14]]]],[[[39,[-1,-2,-3]]],33,[[38,[14]]],[[38,[14]]],[[38,[14]]]],[[[40,[-1]]],33,[[38,[14]]]],[[[41,[-1]]],33,[[38,[14]]]],[[[42,[-1]]],33,[[38,[14]]]],[33,[[21,[35]]]],[[[37,[-1]]],[[37,[-1]]],43],[44,44],[[[39,[-1,-2,-3]]],[[39,[-1,-2,-3]]],43,43,43],[45,45],[46,46],[[[40,[-1]]],[[40,[-1]]],43],[47,47],[[[41,[-1]]],[[41,[-1]]],43],[48,48],[[[42,[-1]]],[[42,[-1]]],43],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[[33,2,[49,[14]]],9],[33,4],0,[[[37,[-1]]],[[31,[-2,33]]],[[38,[14]]],[]],[[[39,[-1,-2,-3]]],[[31,[-4,33]]],[[38,[14]]],[[38,[14]]],[[38,[14]]],[]],[[[40,[-1]]],[[31,[-2,33]]],[[38,[14]]],[]],[[[41,[-1]]],[[31,[-2,33]]],[[38,[14]]],[]],[[[42,[-1]]],[[31,[-2,33]]],[[38,[14]]],[]],0,[[[37,[-1]],17],18,50],[[44,17],18],[[[39,[-1,-2,-3]],17],18,50,50,50],[[45,17],18],[[46,17],18],[[[40,[-1]],17],18,50],[[47,17],18],[[[41,[-1]],17],18,50],[[48,17],18],[[[42,[-1]],17],18,50],[[33,17],18],[[33,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1]]],33,[[38,[14]]]],[44,33],[[[39,[-1,-2,-3]]],33,[[38,[14]]],[[38,[14]]],[[38,[14]]]],[45,33],[46,33],[[[40,[-1]]],33,[[38,[14]]]],[47,33],[[[41,[-1]]],33,[[38,[14]]]],[48,33],[[[42,[-1]]],33,[[38,[14]]]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[33,[[21,[51]]]],0,[33,[[21,[35]]]],[33,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,14,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],53],[54,54],[[-1,-2],9,[],[]],0,[[],55],[[],56],0,[[55,54],57],[[[49,[54]]],[[6,[58]]]],[[54,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],0,[-1,-2,[],[]],[[56,57],[[6,[54]]]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[60,[59]],2],[[49,[61]]]],[[[60,[59]]],[[6,[62]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[[-1,-2],9,[],[]],0,[64,9],[[],64],[[63,63],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[64,[[9,[[49,[65]],22]]]],[[63,17],18],[[63,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],0,[[64,4,66,67,[21,[68]]],[[9,[2,65]]]],0,[[63,69],69],[-1,-2,[],[]],[-1,14,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,64],[[64,4,16],[[6,[9]]]],[[64,4,70],[[6,[9]]]],[[64,4,69],[[6,[9]]]],[[64,4,4],[[6,[9]]]],[[64,4,4],[[6,[9]]]],[[64,4,[9,[69,63]]],[[6,[9]]]],[[64,4,25],[[6,[9]]]]],"c":[],"p":[[3,"Channel",6],[15,"usize"],[3,"ChannelManager",6],[15,"str"],[3,"Endpoint",524],[6,"Result",167],[3,"ChannelConfig",6],[3,"ClientTlsOption",6],[15,"tuple"],[3,"Duration",525],[3,"Pool",6],[3,"ID",6],[3,"AtomicU64",526],[3,"String",527],[4,"Entry",528],[15,"bool"],[3,"Formatter",529],[6,"Result",529],[3,"Channel",530],[8,"AsRef",531],[4,"Option",532],[15,"u32"],[3,"Request",533],[3,"Request",533],[15,"u64"],[3,"Arc",534],[3,"Uri",535],[8,"MakeConnection",536],[8,"Send",537],[8,"FnMut",538],[4,"Result",539],[3,"TypeId",540],[4,"Error",167],[8,"Any",540],[8,"Error",541],[3,"Backtrace",542],[3,"InvalidTlsConfigSnafu",167],[8,"Into",531],[3,"TypeMismatchSnafu",167],[3,"ConversionSnafu",167],[3,"InvalidFlightDataSnafu",167],[3,"NotSupportedSnafu",167],[8,"Clone",543],[3,"InvalidConfigFilePathSnafu",167],[3,"CreateChannelSnafu",167],[3,"CreateRecordBatchSnafu",167],[3,"DecodeFlightDataSnafu",167],[3,"ConvertArrowSchemaSnafu",167],[3,"Vec",544],[8,"Debug",529],[8,"StackError",545],[4,"StatusCode",546],[3,"Bytes",547],[4,"FlightMessage",410],[3,"FlightEncoder",410],[3,"FlightDecoder",410],[3,"FlightData",548],[3,"RecordBatches",549],[6,"VectorRef",550],[15,"slice"],[15,"u8"],[3,"Values",551],[4,"Precision",464],[3,"LinesWriter",464],[3,"Column",552],[4,"ColumnDataType",552],[4,"SemanticType",552],[3,"ColumnDataTypeExtension",552],[15,"i64"],[15,"f64"],[13,"TypeMismatch",390],[13,"InvalidConfigFilePath",390],[13,"CreateChannel",390],[13,"DecodeFlightData",390],[13,"NotSupported",390],[13,"Conversion",390],[13,"CreateRecordBatch",390],[13,"InvalidFlightData",390],[13,"ConvertArrowSchema",390],[13,"InvalidTlsConfig",390],[6,"ColumnName",464]],"b":[[263,"impl-Debug-for-Error"],[264,"impl-Display-for-Error"],[490,"impl-Display-for-Precision"],[491,"impl-Debug-for-Precision"]]},\
"common_grpc_expr":{"doc":"","t":"AFCFAACAARRFFFFNDNDNDNDNENDNDNDNDNDNGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMFFFFDLLFMLLLMLLLFLLLLLLLLLLLMLLLLLL","n":["alter","alter_expr_to_request","build_create_expr_from_insertion","create_table_schema","delete","error","find_new_columns","insert","util","LOCATION_TYPE_AFTER","LOCATION_TYPE_FIRST","alter_expr_to_request","create_table_schema","parse_location","to_table_delete_request","ColumnDataType","ColumnDataTypeSnafu","CreateVector","CreateVectorSnafu","DuplicatedColumnName","DuplicatedColumnNameSnafu","DuplicatedTimestampColumn","DuplicatedTimestampColumnSnafu","Err","Error","IllegalDeleteRequest","IllegalDeleteRequestSnafu","InvalidColumnDef","InvalidColumnDefSnafu","InvalidColumnProto","InvalidColumnProtoSnafu","MissingField","MissingFieldSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","Ok","Result","UnexpectedValuesLength","UnexpectedValuesLengthSnafu","UnknownLocationType","UnknownLocationTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duplicated","err_msg","exists","fail","fail","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","location_type","msg","name","next","reason","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","duplicated","err_msg","exists","field","location","location","location","location","location","location","location","location","location","location","location","location_type","msg","name","reason","reason","source","source","source","add_values_to_builder","build_create_expr_from_insertion","find_new_columns","is_null","ColumnExpr","borrow","borrow_mut","build_create_table_expr","column_name","compat","compat_mut","compat_ref","datatype","deref","deref_mut","drop","extract_new_columns","from","from","from","from_column_schemas","from_columns","from_subset","init","into","into_request","into_request","is_in_subset","semantic_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"common_grpc_expr"],[9,"common_grpc_expr::alter"],[14,"common_grpc_expr::delete"],[15,"common_grpc_expr::error"],[397,"common_grpc_expr::error::Error"],[421,"common_grpc_expr::insert"],[425,"common_grpc_expr::util"],[456,"table::metadata"],[457,"greptime_proto::v1"],[458,"table::requests"],[459,"greptime_proto::v1"],[460,"greptime_proto::v1"],[461,"common_query"],[462,"greptime_proto::v1"],[463,"core::error"],[464,"snafu::backtrace_inert"],[465,"alloc::string"],[466,"core::convert"],[467,"core::clone"],[468,"async_compat"],[469,"alloc::vec"],[470,"core::result"],[471,"core::fmt"],[472,"core::fmt"],[473,"tonic::request"],[474,"common_error::status_code"],[475,"core::any"],[476,"greptime_proto::v1::column"],[477,"datatypes::vectors"],[478,"greptime_proto::v1"],[479,"greptime_proto::v1"],[480,"table::engine"],[481,"datatypes::schema"]],"d":["","Convert an <code>AlterExpr</code> to an <code>AlterTableRequest</code>","","","","","","","","","","Convert an <code>AlterExpr</code> to an <code>AlterTableRequest</code>","","","","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::CreateVector</code> variant","","SNAFU context selector for the <code>Error::DuplicatedColumnName</code> …","","SNAFU context selector for the …","Contains the error value","","","SNAFU context selector for the <code>Error::IllegalDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidColumnDef</code> …","","SNAFU context selector for the <code>Error::InvalidColumnProto</code> …","","SNAFU context selector for the <code>Error::MissingField</code> variant","","SNAFU context selector for the …","Contains the success value","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnknownLocationType</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to build create table request from insert data.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,0,14,0,14,0,4,0,14,0,14,0,14,0,14,0,14,0,4,0,14,0,14,0,14,14,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,21,22,23,24,25,26,27,14,18,30,21,22,23,24,31,25,32,26,27,18,30,21,22,23,24,31,25,32,26,27,32,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,14,18,30,21,22,23,24,31,25,32,26,27,14,21,24,21,18,21,22,23,24,25,26,27,25,18,30,21,22,23,24,31,25,32,26,27,14,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,18,18,30,30,21,21,22,22,23,23,24,24,31,31,25,25,32,32,26,26,27,27,14,14,18,30,21,22,23,24,31,25,32,26,27,14,27,23,22,14,18,26,14,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,18,30,21,22,23,24,31,25,32,26,27,14,59,60,61,60,62,63,64,60,65,66,61,67,62,59,68,69,69,66,65,63,68,64,67,59,0,0,0,0,0,56,56,0,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":[0,[[1,2],[[4,[3]]]],0,[[5,6],[[4,[7]]]],0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[5,6],[[4,[7]]]],[[[9,[8]]],[[4,[[9,[10]]]]]],[[11,11,12],[[4,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,15],[-1,16,[]],[14,[[9,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],14,[[20,[19]]]],[[[21,[-1,-2]]],14,[[20,[19]]],[[20,[19]]]],[[[22,[-1]]],14,[[20,[19]]]],[[[23,[-1]]],14,[[20,[19]]]],[[[24,[-1]]],14,[[20,[19]]]],[[[25,[-1]]],14,[[20,[19]]]],[[[26,[-1]]],14,[[20,[19]]]],[[[27,[-1]]],14,[[20,[28]]]],[14,[[9,[16]]]],[[[18,[-1]]],[[18,[-1]]],29],[30,30],[[[21,[-1,-2]]],[[21,[-1,-2]]],29,29],[[[22,[-1]]],[[22,[-1]]],29],[[[23,[-1]]],[[23,[-1]]],29],[[[24,[-1]]],[[24,[-1]]],29],[31,31],[[[25,[-1]]],[[25,[-1]]],29],[[[32,[-1]]],[[32,[-1]]],29],[[[26,[-1]]],[[26,[-1]]],29],[[[27,[-1]]],[[27,[-1]]],29],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],[[-1,-2],33,[],[]],0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[[14,35,[36,[19]]],33],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[35,-1,[]],[14,11],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],[35,33],0,0,0,[[[18,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[21,[-1,-2]]],[[37,[-3,14]]],[[20,[19]]],[[20,[19]]],[]],[[[22,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[23,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[24,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[25,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[26,[-1]]],[[37,[-2,14]]],[[20,[19]]],[]],[[[27,[-1]]],[[37,[-2,14]]],[[20,[28]]],[]],0,[[[18,[-1]],38],39,40],[[30,38],39],[[[21,[-1,-2]],38],39,40,40],[[[22,[-1]],38],39,40],[[[23,[-1]],38],39,40],[[[24,[-1]],38],39,40],[[31,38],39],[[[25,[-1]],38],39,40],[[[32,[-1]],38],39,40],[[[26,[-1]],38],39,40],[[[27,[-1]],38],39,40],[[14,38],39],[[14,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[18,[-1]]],14,[[20,[19]]]],[30,14],[[[21,[-1,-2]]],14,[[20,[19]]],[[20,[19]]]],[[[22,[-1]]],14,[[20,[19]]]],[[[23,[-1]]],14,[[20,[19]]]],[[[24,[-1]]],14,[[20,[19]]]],[31,14],[[[25,[-1]]],14,[[20,[19]]]],[[[32,[-1]]],14,[[20,[19]]]],[[[26,[-1]]],14,[[20,[19]]]],[[[27,[-1]]],14,[[20,[28]]]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,0,0,[14,[[9,[43]]]],0,0,[14,[[9,[16]]]],[14,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,47,35,[36,[48]]],[[4,[49]]]],[[11,11,[9,[1]],11,[51,[50]],11],[[4,[5]]]],[[52,[51,[50]]],[[4,[[9,[53]]]]]],[[54,35],[[9,[6]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[1]],55,[36,[56]],11,11],[[4,[5]]]],0,[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],[-1,[[34,[-2]]],[],[]],0,[35,-1,[]],[35,-1,[]],[35,33],[[57,[36,[56]]],[[4,[[9,[53]]]]]],[58,56],[50,56],[-1,-1,[]],[[[51,[58]]],[[36,[56]]]],[[[51,[50]]],[[36,[56]]]],[-1,-2,[],[]],[[],35],[-1,-2,[],[]],[-1,[[41,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,6,[]],0,[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,45,[]],[-1,-2,[],[]]],"c":[],"p":[[6,"TableId",456],[3,"AlterExpr",457],[3,"AlterTableRequest",458],[6,"Result",15],[3,"CreateTableExpr",457],[15,"bool"],[3,"RawSchema",459],[3,"AddColumnLocation",457],[4,"Option",460],[4,"AddColumnLocation",461],[15,"str"],[3,"DeleteRequest",457],[3,"DeleteRequest",458],[4,"Error",15],[8,"Any",462],[8,"Error",463],[3,"Backtrace",464],[3,"IllegalDeleteRequestSnafu",15],[3,"String",465],[8,"Into",466],[3,"DuplicatedTimestampColumnSnafu",15],[3,"DuplicatedColumnNameSnafu",15],[3,"MissingTimestampColumnSnafu",15],[3,"InvalidColumnProtoSnafu",15],[3,"MissingFieldSnafu",15],[3,"UnexpectedValuesLengthSnafu",15],[3,"UnknownLocationTypeSnafu",15],[15,"i32"],[8,"Clone",467],[3,"ColumnDataTypeSnafu",15],[3,"CreateVectorSnafu",15],[3,"InvalidColumnDefSnafu",15],[15,"tuple"],[3,"Compat",468],[15,"usize"],[3,"Vec",469],[4,"Result",470],[3,"Formatter",471],[6,"Result",471],[8,"Debug",471],[3,"Request",472],[3,"Request",472],[8,"StackError",473],[4,"StatusCode",474],[3,"TypeId",462],[4,"ConcreteDataType",475],[3,"Values",476],[15,"u8"],[6,"VectorRef",477],[3,"Column",457],[15,"slice"],[6,"SchemaRef",478],[3,"AddColumns",457],[6,"BitVec",479],[3,"TableReference",480],[3,"ColumnExpr",425],[3,"Schema",478],[3,"ColumnSchema",457],[13,"InvalidColumnDef",397],[13,"DuplicatedTimestampColumn",397],[13,"InvalidColumnProto",397],[13,"MissingField",397],[13,"IllegalDeleteRequest",397],[13,"ColumnDataType",397],[13,"DuplicatedColumnName",397],[13,"MissingTimestampColumn",397],[13,"CreateVector",397],[13,"UnexpectedValuesLength",397],[13,"UnknownLocationType",397]],"b":[[197,"impl-Debug-for-Error"],[198,"impl-Display-for-Error"],[438,"impl-From%3C%26ColumnSchema%3E-for-ColumnExpr%3C\'a%3E"],[439,"impl-From%3C%26Column%3E-for-ColumnExpr%3C\'a%3E"]]},\
"common_macro":{"doc":"","t":"YAXAXAXAXFFFFFFFFOFDLLFFFMLLMMLLLMMMLMMFLLLLLL","n":["AggrFuncTypeStore","aggr_func","as_aggr_func_creator","print_caller","print_caller","range_fn","range_fn","stack_trace_debug","stack_trace_debug","impl_aggr_func_type_store","impl_as_aggr_func_creator","process_print_caller","build_calc_fn","build_struct","extract_arg_map","extract_input_types","get_ident","ok","process_range_fn","ErrorVariant","borrow","borrow_mut","build_debug_fmt_impl","build_debug_impl","build_next_impl","cfg_attr","clone","clone_into","display","fields","fmt","from","from_enum_variant","has_external_cause","has_location","has_source","into","name","span","stack_trace_style_impl","to_debug_match_arm","to_next_match_arm","to_owned","try_from","try_into","type_id"],"q":[[0,"common_macro"],[9,"common_macro::aggr_func"],[11,"common_macro::print_caller"],[12,"common_macro::range_fn"],[19,"common_macro::stack_trace_debug"],[46,"syn::derive"],[47,"proc_macro"],[48,"proc_macro2"],[49,"syn::ty"],[50,"alloc::vec"],[51,"syn::attr"],[52,"syn::data"],[53,"syn::attr"],[54,"std::collections::hash::map"],[55,"syn::error"],[56,"core::result"],[57,"syn::item"],[58,"syn::token"],[59,"syn::punctuated"],[60,"proc_macro2"],[61,"core::fmt"]],"d":["Make struct implemented trait AggrFuncTypeStore, which is …","","A struct can be used as a creator for aggregate function …","","Attribute macro to print the caller to the annotated …","","Attribute macro to convert an arithimetic function to a …","implement <code>::common_error::ext::StackError</code>","Attribute macro to derive std::fmt::Debug for the …","","","","","","Extract a String &lt;-&gt; Ident map from the attribute args.","Extract the argument list from the annotated function.","Helper function to get an Ident from the previous arg map.","Internal util macro to early return on error.","","","","","Generate <code>debug_fmt</code> fn.","Implement std::fmt::Debug via <code>debug_fmt</code>","Generate <code>next</code> fn.","","","","","","","Returns the argument unchanged.","Construct self from Variant","","","","Calls <code>U::from(self)</code>.","","","","Convert self into an match arm that will be used in …","Convert self into an match arm that will be used in …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,[1,2],[[2,2],2],[[2,2],2],[[3,[5,[4]],3,3],2],[[[5,[6]],7,3,3],2],[[[5,[8]]],[[12,[[10,[9,3]],11]]]],[[[15,[13,14]]],[[12,[[5,[4]],11]]]],[[[10,[9,3]],16,17],[[12,[3,11]]]],0,[[2,2],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[[3,[5,[18]]],19],[3,19],[[3,[5,[18]]],19],0,[18,18],[[-1,-2],20,[],[]],0,0,[[18,21],22],[-1,-1,[]],[23,18],0,0,0,[-1,-2,[],[]],0,0,[[19,19],19],[18,19],[18,19],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,24,[]]],"c":[],"p":[[3,"DeriveInput",46],[3,"TokenStream",47],[3,"Ident",48],[4,"Type",49],[3,"Vec",50],[3,"Attribute",51],[4,"Visibility",52],[4,"NestedMeta",51],[3,"String",53],[3,"HashMap",54],[3,"Error",55],[4,"Result",56],[4,"FnArg",57],[3,"Comma",58],[3,"Punctuated",59],[15,"str"],[3,"Span",48],[3,"ErrorVariant",19],[3,"TokenStream",48],[15,"tuple"],[3,"Formatter",60],[6,"Result",60],[3,"Variant",52],[3,"TypeId",61]],"b":[]},\
"common_mem_prof":{"doc":"","t":"FAANENDNNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMRRFAFNDNDENDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMM","n":["dump_profile","error","jemalloc","Err","Error","Internal","InternalSnafu","Ok","ProfilingNotSupported","ProfilingNotSupportedSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into_error","into_error","next","source","status_code","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","source","OPT_PROF","PROF_DUMP","dump_profile","error","is_prof_enabled","BuildTempPath","BuildTempPathSnafu","DumpProfileData","DumpProfileDataSnafu","Error","OpenTempFile","OpenTempFileSnafu","ProfilingNotEnabled","ProfilingNotEnabledSnafu","ReadOptProf","ReadOptProfSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","next","path","path","path","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","error","error","error","location","path","path","path"],"q":[[0,"common_mem_prof"],[3,"common_mem_prof::error"],[57,"common_mem_prof::error::Error"],[58,"common_mem_prof::jemalloc"],[63,"common_mem_prof::jemalloc::error"],[160,"common_mem_prof::jemalloc::error::Error"],[167,"alloc::vec"],[168,"core::any"],[169,"core::error"],[170,"snafu::backtrace_inert"],[171,"core::option"],[172,"alloc::string"],[173,"core::result"],[174,"core::fmt"],[175,"core::fmt"],[176,"common_error::status_code"],[177,"core::any"],[178,"core::convert"],[179,"core::clone"],[180,"core::fmt"]],"d":["","","","Contains the error value","","","SNAFU context selector for the <code>Error::Internal</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::ProfilingNotSupported</code>…","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildTempPath</code> variant","","SNAFU context selector for the <code>Error::DumpProfileData</code> …","","","SNAFU context selector for the <code>Error::OpenTempFile</code> variant","","SNAFU context selector for the <code>Error::ProfilingNotEnabled</code> …","","SNAFU context selector for the <code>Error::ReadOptProf</code> variant","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,0,4,0,3,4,0,0,4,4,4,10,9,4,10,9,4,9,4,10,9,10,9,4,4,9,10,9,4,4,10,9,4,4,10,9,4,10,9,4,4,4,10,9,4,10,9,4,10,9,4,10,9,4,32,0,0,0,0,0,18,0,18,0,0,18,0,18,0,18,0,18,18,18,27,23,24,29,30,18,27,23,24,29,30,18,23,24,18,27,23,24,29,30,27,23,24,29,30,18,18,23,24,27,23,24,29,30,18,18,27,23,24,29,30,18,27,23,24,29,30,18,27,23,24,29,30,18,24,29,30,18,18,27,23,24,29,30,18,27,23,24,29,30,18,27,23,24,29,30,18,27,23,24,29,30,18,33,34,35,36,36,34,35],"f":[[[],[[3,[[2,[1]]]]]],0,0,0,0,0,0,0,0,0,0,[4,5],[-1,6,[]],[4,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,4],[4,[[8,[6]]]],[10,10],[9,9],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[4,12,[2,[13]]],11],[4,14],[9,[[15,[-1,4]]],[]],[[10,16],17],[[9,16],17],[[4,16],17],[[4,16],17],[-1,-1,[]],[-1,-1,[]],[18,4],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,4],[9,4],[4,[[8,[19]]]],[4,[[8,[6]]]],[4,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,0,[[],[[3,[[2,[1]]]]]],0,[[],[[3,[22]]]],0,0,0,0,0,0,0,0,0,0,0,[18,5],[-1,6,[]],[18,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,18],[[[24,[-1]]],18,[[26,[25]]]],[18,[[8,[6]]]],[27,27],[23,23],[[[24,[-1]]],[[24,[-1]]],28],[[[29,[-1]]],[[29,[-1]]],28],[[[30,[-1]]],[[30,[-1]]],28],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[18,12,[2,[13]]],11],[18,14],[23,[[15,[-1,18]]],[]],[[[24,[-1]]],[[15,[-2,18]]],[[26,[25]]],[]],[[27,16],17],[[23,16],17],[[[24,[-1]],16],17,31],[[[29,[-1]],16],17,31],[[[30,[-1]],16],17,31],[[18,16],17],[[18,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,18],[23,18],[[[24,[-1]]],18,[[26,[25]]]],[[[29,[-1]]],18,[[26,[13]]]],[[[30,[-1]]],18,[[26,[25]]]],[18,[[8,[19]]]],0,0,0,[18,[[8,[6]]]],[18,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,0,0,0,0,0],"c":[],"p":[[15,"u8"],[3,"Vec",167],[6,"Result",3],[4,"Error",3],[8,"Any",168],[8,"Error",169],[3,"Backtrace",170],[4,"Option",171],[3,"ProfilingNotSupportedSnafu",3],[3,"InternalSnafu",3],[15,"tuple"],[15,"usize"],[3,"String",172],[15,"str"],[4,"Result",173],[3,"Formatter",174],[6,"Result",174],[4,"Error",63],[8,"StackError",175],[4,"StatusCode",176],[3,"TypeId",168],[15,"bool"],[3,"ProfilingNotEnabledSnafu",63],[3,"BuildTempPathSnafu",63],[3,"PathBuf",177],[8,"Into",178],[3,"ReadOptProfSnafu",63],[8,"Clone",179],[3,"OpenTempFileSnafu",63],[3,"DumpProfileDataSnafu",63],[8,"Debug",174],[13,"Internal",57],[13,"ReadOptProf",160],[13,"OpenTempFile",160],[13,"DumpProfileData",160],[13,"BuildTempPath",160]],"b":[[31,"impl-Debug-for-Error"],[32,"impl-Display-for-Error"],[111,"impl-Debug-for-Error"],[112,"impl-Display-for-Error"]]},\
"common_meta":{"doc":"","t":"GGCAAAAAAAOOOAAAAAAAAAAAIGDDDIGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLKLLLLLMMMMMLLLLLLLLLLLLLLLLLLGIIGGMMKKKMMMMDIGDIDGMMALLLLLLMLLMMLLLLLLLLLKAMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMMMKMLLLLLLLMALLLLLLLLLALLLDDENNNSNLLLLLLLLLLLMLLLLLLLLLMLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLMLLLMLMLLLLLLLLLLLLLLLLLLLNDDENNSDLLLLLLLLLLLLMLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLNDDENNNSLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMMLLLLLLLLLLLLLLLLLLLNNSDDELLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLLMLLLLLLLLLLLLLLLLLLLFFFDGMLLMLLLLMLLLLLFFFFLLLLLMMMLLLLLLLMLMLLLLLLLRRRRRRNDNDNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDGNDNDNDNDNDNDNDNNDNDNDNDDNNDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLMLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAAANNEDIDIGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLMMLLLLLLLLLLLLKLLLMLLAMMMMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDGGDGMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLMMLMMMLLLLLLLLLLLLLFFNNDNNDEENNNDNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDRDRDRRGDRRDRRRIDGMMMMMMMKLLLLLLLLLLLLMLMALLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLMLMALALMALMAALMALFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLRDDDLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMFLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLGDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLMLLLLLLLLLLLLLLMLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLLLLLLLLLLLLLLLLLLLLMLLLFIGIGCMMKKKKAKLKALLAKMMMMKLKKAADLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLDDDDDDDRDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFFFFFFFFFDENNQNNNNNNNNDEEDDILLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLRRNNNGDDENDMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLAALLLLLLLLLLLLLLLALMLLNDNDENDDDNDMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMLLLLMMMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLNDDDDEDDFFMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMFLMMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLMMMMMMMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDRDGMLLLLLLLLLLLLLLLLMLLLLMLLMMLLLLLLLLMLLLMLMMMMLLLLLLLLLLLLRDRLLLLLLFLLLLLLLLLLLMMLLFLLLLLLLFDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLFF","n":["ClusterId","DatanodeId","RegionIdent","cache_invalidator","datanode_manager","ddl","ddl_manager","distributed_time_constants","error","heartbeat","impl_optional_meta_value","impl_table_meta_key","impl_table_meta_value","instruction","key","kv_backend","metrics","peer","range_stream","rpc","sequence","state_store","table_name","util","CacheInvalidator","CacheInvalidatorRef","Context","DummyCacheInvalidator","DummyKvCacheInvalidator","KvCacheInvalidator","KvCacheInvalidatorRef","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invalidate_key","invalidate_key","invalidate_table_id","invalidate_table_id","invalidate_table_id","invalidate_table_name","invalidate_table_name","invalidate_table_name","is_in_subset","is_in_subset","is_in_subset","phantom","phantom","ptr","ptr","subject","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AffectedRows","Datanode","DatanodeManager","DatanodeManagerRef","DatanodeRef","alloc","alloc","datanode","handle","handle_query","phantom","phantom","ptr","ptr","DdlContext","DdlTaskExecutor","DdlTaskExecutorRef","ExecutorContext","TableMetadataAllocator","TableMetadataAllocatorContext","TableMetadataAllocatorRef","alloc","alloc","alter_table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_invalidator","clone","clone_into","cluster_id","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","create_table","datanode_manager","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_table","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","phantom","phantom","ptr","ptr","submit_ddl_task","table_metadata_manager","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tracing_context","truncate_table","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","AlterTableData","AlterTableProcedure","AlterTableState","InvalidateTableCache","Prepare","SubmitAlterRegionRequests","TYPE_NAME","UpdateMetadata","alter_expr","alter_kind","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_new_table_info","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","create_alter_region_request","create_proto_alter_kind","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kind","lock_key","lock_key_inner","new","new","next_column_id","on_broadcast","on_prepare","on_update_metadata","on_update_metadata_for_alter","on_update_metadata_for_rename","serialize","serialize","state","submit_alter_region_requests","table_id","table_info","table_info_value","table_ref","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","CreateMetadata","CreateTableData","CreateTableProcedure","CreateTableState","DatanodeCreateRegions","Prepare","TYPE_NAME","TableCreator","as_ref","as_uncased","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cluster_id","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","context","create_region_request_template","creator","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from","from_json","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_create_metadata","on_datanode_create_regions","on_prepare","region_routes","region_routes","serialize","serialize","state","table_id","table_info","table_ref","task","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","DatanodeDropRegions","DropTableData","DropTableProcedure","DropTableState","InvalidateTableCache","Prepare","RemoveMetadata","TYPE_NAME","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_broadcast","on_datanode_drop_regions","on_prepare","on_remove_metadata","region_routes","serialize","serialize","state","table_id","table_info","table_info_value","table_ref","table_route_value","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","DatanodeTruncateRegions","Prepare","TYPE_NAME","TruncateTableData","TruncateTableProcedure","TruncateTableState","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_datanode_truncate_regions","on_prepare","region_routes","serialize","serialize","state","table_id","table_info","table_info_value","table_name","table_ref","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","handle_operate_region_error","handle_retry_error","region_storage_path","DdlManager","DdlManagerRef","alloc","borrow","borrow_mut","cache_invalidator","compat","compat_mut","compat_ref","create_context","datanode_manager","deref","deref_mut","drop","from","from_subset","handle_alter_table_task","handle_create_table_task","handle_drop_table_task","handle_truncate_table_task","init","into","into_request","into_request","is_in_subset","phantom","procedure_manager","ptr","register_loaders","submit_alter_table_task","submit_create_table_task","submit_ddl_task","submit_drop_table_task","submit_procedure","submit_truncate_table_task","table_meta_allocator","table_metadata_manager","table_metadata_manager","to_subset","to_subset_unchecked","try_from","try_into","try_new","type_id","vzip","DATANODE_LEASE_SECS","FRONTEND_HEARTBEAT_INTERVAL_MILLIS","HEARTBEAT_INTERVAL_MILLIS","META_KEEP_ALIVE_INTERVAL_SECS","META_LEASE_SECS","REGION_LEASE_SECS","BuildTableMeta","BuildTableMetaSnafu","CacheNotGet","CacheNotGetSnafu","CatalogAlreadyExists","CatalogAlreadyExistsSnafu","ConnectEtcd","ConnectEtcdSnafu","ConvertAlterTableRequest","ConvertAlterTableRequestSnafu","ConvertRawKey","ConvertRawKeySnafu","ConvertRawTableInfo","ConvertRawTableInfoSnafu","DecodeJson","DecodeJsonSnafu","DecodeProto","DecodeProtoSnafu","EmptyKey","EmptyKeySnafu","EncodeJson","EncodeJsonSnafu","Err","Error","EtcdFailed","EtcdFailedSnafu","EtcdTxnOpResponse","EtcdTxnOpResponseSnafu","External","ExternalSnafu","GetKvCache","GetKvCacheSnafu","IllegalServerState","IllegalServerStateSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidHeartbeatResponse","InvalidHeartbeatResponseSnafu","InvalidProtoMsg","InvalidProtoMsgSnafu","InvalidTableMetadata","InvalidTableMetadataSnafu","InvalidTxnResult","InvalidTxnResultSnafu","MoveRegion","MoveRegionSnafu","NextSequence","NextSequenceSnafu","Ok","OperateDatanode","OperateDatanodeSnafu","ParseOption","ParseOptionSnafu","PayloadNotExist","PayloadNotExistSnafu","PrimaryKeyNotFound","PrimaryKeyNotFoundSnafu","RegisterProcedureLoader","RegisterProcedureLoaderSnafu","RenameTable","RenameTableSnafu","Result","RetryLater","RetryLaterSnafu","RouteInfoCorrupted","RouteInfoCorruptedSnafu","SchemaAlreadyExists","SchemaAlreadyExistsSnafu","SendMessage","SendMessageSnafu","SequenceOutOfRange","SequenceOutOfRangeSnafu","SerdeJson","SerdeJsonSnafu","SubmitProcedure","SubmitProcedureSnafu","Table","TableAlreadyExists","TableAlreadyExistsSnafu","TableInfoNotFound","TableInfoNotFoundSnafu","TableNotFound","TableNotFoundSnafu","TableRouteNotFound","TableRouteNotFoundSnafu","TableSnafu","Unexpected","UnexpectedSequenceValue","UnexpectedSequenceValueSnafu","UnexpectedSnafu","Unsupported","UnsupportedSnafu","WaitProcedure","WaitProcedureSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_exceeded_size_limit","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_retry_later","key","key","key","name","next","operation","peer","reason","region","retry_later","schema","source","start","status_code","step","table_id","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","code","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","key","key","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","operation","peer","reason","region","schema","source","source","source","source","source","source","source","source","source","source","start","step","table_id","table_name","table_name","table_name","table_name","table_name","type_name","value","handler","mailbox","utils","Continue","Done","HandleControl","HandlerGroupExecutor","HeartbeatResponseHandler","HeartbeatResponseHandlerContext","HeartbeatResponseHandlerExecutor","HeartbeatResponseHandlerExecutorRef","HeartbeatResponseHandlerRef","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","from","from","from","from_subset","from_subset","from_subset","handle","handle","handle","handlers","incoming_message","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","mailbox","new","new","parse_mailbox_message","phantom","phantom","ptr","ptr","response","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ParseMailboxMessageHandler","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","HeartbeatMailbox","IncomingMessage","MailboxRef","MessageMeta","OutgoingMessage","alloc","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_ref","from_subset","from_subset","id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","phantom","ptr","send","sender","subject","to","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","mailbox_message_to_incoming_message","outgoing_message_to_mailbox_message","CloseRegion","CloseRegion","DowngradeRegion","DowngradeRegion","DowngradeRegion","DowngradeRegionReply","Instruction","InstructionReply","InvalidateTableCache","InvalidateTableIdCache","InvalidateTableNameCache","OpenRegion","OpenRegion","OpenRegion","RegionIdent","SimpleReply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_id","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datanode_id","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","exists","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_region_id","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_entry_id","new","options","region_id","region_ident","region_number","region_storage_path","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CACHE_KEY_PREFIXES","CATALOG_NAME_KEY_PATTERN","CATALOG_NAME_KEY_PREFIX","DATANODE_TABLE_KEY_PATTERN","DATANODE_TABLE_KEY_PREFIX","DeserializedValueWithBytes","NAME_PATTERN","REMOVED_PREFIX","RegionDistribution","SCHEMA_NAME_KEY_PATTERN","SCHEMA_NAME_KEY_PREFIX","TABLE_INFO_KEY_PREFIX","TABLE_NAME_KEY_PATTERN","TABLE_NAME_KEY_PREFIX","TABLE_REGION_KEY_PREFIX","TABLE_ROUTE_PREFIX","TableMetaKey","TableMetadataManager","TableMetadataManagerRef","__private_field","__private_field","__private_field","__private_field","_marker","alloc","alloc","as_raw_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","catalog_manager","catalog_manager","catalog_name","clone","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table_metadata","datanode_table","datanode_table_manager","datanode_table_manager","delete_table_metadata","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","ensure_values","fmt","from","from","from","from","from","from","from_inner","from_inner_bytes","from_inner_slice","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_full_table_info","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_bytes","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kv_backend","kv_backend","length","new","phantom","ptr","rename_table","root","schema_manager","schema_manager","schema_name","serialize","table_info","table_info_manager","table_info_manager","table_name","table_name_manager","table_name_manager","table_region","table_route","table_route_manager","table_route_manager","test_utils","to_owned","to_removed_key","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_leader_region_status","update_table_info","update_table_route","vzip","vzip","vzip","vzip","vzip","vzip","CatalogManager","CatalogNameKey","CatalogNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_decoder","catalog_names","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exists","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","range_start_key","serialize","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DatanodeTableKey","DatanodeTableManager","DatanodeTableValue","RegionInfo","as_raw_key","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_delete_txn","build_update_txn","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","datanode_id","datanode_table_value_decoder","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","engine","eq","eq","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","prefix","range_start_key","region_info","region_options","region_storage_path","regions","serialize","serialize","strip_table_id","table_id","table_id","tables","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","OPT_KEY_TTL","SchemaManager","SchemaNameKey","SchemaNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","exists","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","range_start_key","schema","schema_decoder","schema_names","serialize","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip","TableInfoKey","TableInfoManager","TableInfoValue","as_raw_key","batch_get","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_decode_fn","build_delete_txn","build_get_txn","build_update_txn","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","serialize","table_id","table_info","table_name","table_ref","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","update","version","vzip","vzip","vzip","with_update","TableNameKey","TableNameManager","TableNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_delete_txn","build_update_txn","catalog","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exists","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","prefix_to_table","schema","serialize","strip_table_name","table","table_id","table_id","tables","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RegionDistribution","TableRegionKey","TableRegionValue","_marker","alloc","as_raw_key","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","length","new","new","region_distribution","root","serialize","table_id","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from_raw_value","try_into","try_into","type_id","type_id","version","vzip","vzip","TableRouteKey","TableRouteManager","TableRouteValue","as_raw_key","batch_get","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_decode_fn","build_delete_txn","build_get_txn","build_update_txn","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get","get_region_distribution","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","region_routes","serialize","table_id","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","update","version","vzip","vzip","vzip","new_test_table_info","KvBackend","KvBackendRef","ResettableKvBackend","ResettableKvBackendRef","TxnService","alloc","alloc","as_any","batch_delete","batch_get","batch_put","chroot","compare_and_put","delete","delete_range","etcd","exists","get","memory","name","phantom","phantom","ptr","ptr","put","put_conditionally","range","reset","test","txn","ChrootKvBackend","as_any","batch_delete","batch_get","batch_put","borrow","borrow_mut","chroot_key_value_with","chroot_txn_response","compare_and_put","compat","compat_mut","compat_ref","delete_range","deref","deref_mut","drop","from","from_subset","init","inner","into","into_request","into_request","is_in_subset","key_prepend_root","key_strip_root","name","new","put","range","range_end_prepend_root","root","to_subset","to_subset_unchecked","try_from","try_into","txn","txn_prepend_root","type_id","vzip","BatchDelete","BatchGet","BatchPut","CompareAndPut","Delete","EtcdStore","Get","MAX_TXN_SIZE","Put","as_any","batch_delete","batch_get","batch_put","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","compare_and_put","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","convert_key_value","delete_range","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_multi_txn","drop","drop","drop","drop","drop","drop","drop","drop","expect","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","keys","keys","kvs","name","options","options","options","options","options","options","put","put_options","range","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoints","with_etcd_client","MemoryKvBackend","_phantom","as_any","batch_delete","batch_get","batch_put","borrow","borrow_mut","clear","compare_and_put","compat","compat_mut","compat_ref","default","delete_range","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","kvs","name","new","put","range","reset","to_string","to_subset","to_subset_unchecked","try_from","try_into","txn","type_id","vzip","mock_kvs","prepare_kv","test_kv_batch_delete","test_kv_batch_get","test_kv_compare_and_put","test_kv_delete_range","test_kv_put","test_kv_range","test_kv_range_2","Compare","CompareOp","Delete","Equal","Error","Get","Greater","Less","NotEqual","Put","ResponseDelete","ResponseGet","ResponsePut","Txn","TxnOp","TxnOpResponse","TxnRequest","TxnResponse","TxnService","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_else","c_then","c_when","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","compare_with_value","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","etcd","extend","failure","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","merge","merge_all","new","new","or_else","req","responses","succeeded","success","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","with_not_exist_value","with_value","METRIC_META_CREATE_CATALOG","METRIC_META_CREATE_CATALOG_COUNTER","METRIC_META_CREATE_SCHEMA","METRIC_META_CREATE_SCHEMA_COUNTER","METRIC_META_PROCEDURE_ALTER_TABLE","METRIC_META_PROCEDURE_CREATE_TABLE","METRIC_META_PROCEDURE_DROP_TABLE","METRIC_META_PROCEDURE_TRUNCATE_TABLE","METRIC_META_TXN_REQUEST","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Peer","addr","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","empty","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_subset","get_hash","hash","id","init","into","into_request","into_request","is_in_subset","new","serialize","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DEFAULT_ADAPTIVE_PAGE_SIZE","DEFAULT_PAGE_SIZE","Decoding","Error","Init","KeyValueDecoderFn","PaginationStream","PaginationStreamFactory","PaginationStreamState","Reading","SimpleKeyValueDecoder","adaptive_page_size","adaptive_range","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","decoder","decoder_fn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","factory","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","keys_only","kv","kv","more","new","new","next","page_size","poll_next","range_end","read_next","state","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_reduce_adaptive_page_size","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","KeyValue","ResponseHeader","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ddl","deref","deref","deref_mut","deref_mut","drop","drop","eq","error_code","error_msg","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","key","key","lock","new","protocol_version","router","store","take_key","take_value","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","util","value","value","vzip","vzip","AlterTable","AlterTableTask","CreateTable","CreateTableTask","DdlTask","DropTable","DropTableTask","SubmitDdlTaskRequest","SubmitDdlTaskResponse","TruncateTable","TruncateTableTask","alter_table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","new","new_alter_table","new_create_table","new_drop_table","new_truncate_table","partitions","schema","schema","serialize","serialize","serialize","serialize","table","table","table_id","table_id","table_id","table_info","table_name","table_name","table_name","table_name","table_ref","table_ref","table_ref","table_ref","task","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LockRequest","LockResponse","UnlockRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","expire_secs","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","key","key","name","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Downgraded","Partition","Region","RegionRoute","RegionRoutes","RegionStatus","Table","TableRoute","as_utf8","as_utf8_vec","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_list","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","convert_to_region_leader_map","convert_to_region_leader_status_map","convert_to_region_peer_map","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downgrade_leader","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","extract_all_peers","find_leader_regions","find_leaders","find_region_leader","find_region_leader","fmt","fmt","fmt","fmt","fmt","fmt","follower_peers","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_utf8","from_utf8_vec","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_leader_downgraded","leader_peer","leader_status","name","new","new_test","partition","region","region_distribution","region_leader_map","region_leaders","region_routes","serialize","serialize","serialize","serialize","serialize","serialize","set_leader_status","table","table_name","table_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_raw","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_list","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BatchDeleteRequest","BatchDeleteResponse","BatchGetRequest","BatchGetResponse","BatchPutRequest","BatchPutResponse","CompareAndPutRequest","CompareAndPutResponse","DeleteRangeRequest","DeleteRangeResponse","PutRequest","PutResponse","RangeRequest","RangeResponse","add_key","add_key","add_kv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","default","default","default","default","default","deleted","deleted","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","expect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_success","key","key","key","key","keys","keys","keys_only","kvs","kvs","kvs","limit","more","new","new","new","new","new","new","new","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kvs","prev_kvs","prev_kvs","range","range","range_end","range_end","success","take_kvs","take_prev_kv","take_prev_kvs","take_prev_kvs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_range","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_expect","with_key","with_key","with_key","with_key","with_keys_only","with_limit","with_prefix","with_prefix","with_prev_kv","with_prev_kv","with_prev_kv","with_prev_kv","with_range","with_range","with_value","with_value","check_response_header","get_prefix_end_key","Inner","SEQ_PREFIX","Sequence","SequenceRef","alloc","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","force_quit","from","from","from_subset","from_subset","generator","init","init","initial","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","name","new","next","next","next","next_range","phantom","ptr","range","step","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DELIMITER","KvStateStore","PROCEDURE_PREFIX","batch_delete","borrow","borrow_mut","compat","compat_mut","compat_ref","decode_kv","delete","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","kv_backend","max_size_per_range","new","put","strip_prefix","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","walk_top_down","with_prefix","TableName","borrow","borrow_mut","catalog_name","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_ref","from_subset","get_hash","hash","init","into","into_request","into_request","is_in_subset","new","schema_name","serialize","table_name","table_ref","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","get_next_prefix_key","get_prefix_end_key"],"q":[[0,"common_meta"],[24,"common_meta::cache_invalidator"],[110,"common_meta::datanode_manager"],[124,"common_meta::ddl"],[219,"common_meta::ddl::alter_table"],[328,"common_meta::ddl::create_table"],[454,"common_meta::ddl::drop_table"],[555,"common_meta::ddl::truncate_table"],[652,"common_meta::ddl::utils"],[655,"common_meta::ddl_manager"],[700,"common_meta::distributed_time_constants"],[706,"common_meta::error"],[2139,"common_meta::error::Error"],[2234,"common_meta::heartbeat"],[2237,"common_meta::heartbeat::handler"],[2327,"common_meta::heartbeat::handler::parse_mailbox_message"],[2352,"common_meta::heartbeat::mailbox"],[2419,"common_meta::heartbeat::utils"],[2421,"common_meta::instruction"],[2685,"common_meta::key"],[2894,"common_meta::key::catalog_name"],[2985,"common_meta::key::datanode_table"],[3117,"common_meta::key::schema_name"],[3219,"common_meta::key::table_info"],[3316,"common_meta::key::table_name"],[3420,"common_meta::key::table_region"],[3487,"common_meta::key::table_route"],[3582,"common_meta::key::test_utils"],[3583,"common_meta::kv_backend"],[3613,"common_meta::kv_backend::chroot"],[3654,"common_meta::kv_backend::etcd"],[3870,"common_meta::kv_backend::memory"],[3910,"common_meta::kv_backend::test"],[3919,"common_meta::kv_backend::txn"],[4151,"common_meta::metrics"],[4367,"common_meta::peer"],[4411,"common_meta::range_stream"],[4529,"common_meta::rpc"],[4604,"common_meta::rpc::ddl"],[4815,"common_meta::rpc::lock"],[4889,"common_meta::rpc::router"],[5133,"common_meta::rpc::store"],[5613,"common_meta::rpc::util"],[5615,"common_meta::sequence"],[5676,"common_meta::state_store"],[5710,"common_meta::table_name"],[5756,"common_meta::util"],[5758,"async_compat"],[5759,"tonic::request"],[5760,"tonic::request"],[5761,"alloc::boxed"],[5762,"core::pin"],[5763,"table::metadata"],[5764,"alloc::alloc"],[5765,"core::option"],[5766,"core::result"],[5767,"core::any"],[5768,"greptime_proto::v1::region"],[5769,"greptime_proto::v1::region"],[5770,"core::fmt"],[5771,"core::fmt"],[5772,"greptime_proto::v1::alter_expr"],[5773,"uncased::borrowed"],[5774,"table::metadata"],[5775,"greptime_proto::v1::region"],[5776,"store_api::storage::descriptors"],[5777,"alloc::string"],[5778,"common_procedure::error"],[5779,"common_procedure::procedure"],[5780,"common_procedure::procedure"],[5781,"common_procedure::procedure"],[5782,"table::engine"],[5783,"greptime_proto::v1::region"],[5784,"common_procedure::error"],[5785,"snafu::backtrace_inert"],[5786,"core::convert"],[5787,"store_api::storage::descriptors"],[5788,"core::fmt"],[5789,"common_error::ext"],[5790,"core::marker"],[5791,"greptime_proto::v1::meta"],[5792,"greptime_proto::v1::meta"],[5793,"core::marker"],[5794,"serde::ser"],[5795,"bytes::bytes"],[5796,"core::ops::function"],[5797,"store_api::storage::descriptors"],[5798,"core::ops::function"],[5799,"etcd_client::rpc::kv"],[5800,"etcd_client::rpc::kv"],[5801,"alloc::sync"],[5802,"etcd_client::rpc::kv"],[5803,"prometheus::histogram"],[5804,"greptime_proto::v1::meta"],[5805,"core::task::poll"],[5806,"greptime_proto::v1::meta"],[5807,"greptime_proto::v1::meta"],[5808,"greptime_proto::v1::meta"],[5809,"greptime_proto::v1::meta"]],"d":["","","","","","","","","","","","","","","This mod defines all the keys used in the metadata store …","","","","","","","","","","","","Places context of invalidating cache. e.g., span id, trace …","","","KvBackend cache invalidator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a target <code>datanode</code>.","Handles DML, and DDL requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Broadcasts the invalidating table cache instruction.","Prepares to alter the table","","","Updates table metadata.","","","","","","","","","","","","","","","","","","","","","","","","Creates region proto alter kind from <code>table_info</code> and …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","proto alter Kind for adding/dropping columns.","","","","","Next column id of the table if the task adds columns to …","Broadcasts the invalidating table cache instructions.","","Update table metadata.","","Update table metadata for rename table operation.","","","","","","","Table info value before alteration.","","","","","","","","","","","","","","","","","","","","","","Creates metadata","","","","Creates regions on the Datanode","Prepares to create the table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Checks whether the table exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops regions on Datanode","","","","Invalidates Table Cache","Prepares to drop the table","Removes metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Broadcasts invalidate table cache instruction.","","","Removes the table metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Truncates regions on Datanode","Prepares to truncate the table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The DdlManager provides the ability to execute Ddl.","","","","","","","","","Returns the DdlContext","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Submits and executes an alter table task.","Submits and executes a create table task.","","Submits and executes a drop table task.","","Submits and executes a truncate table task.","","Returns the TableMetadataManagerRef.","","","","","","Returns a new DdlManager with all Ddl BoxedProcedureLoader…","","","When creating table or region failover, a target node …","The frontend will also send heartbeats to Metasrv, sending …","Heartbeat interval time (is the basic unit of various …","","The lease seconds of metasrv leader.","The lease seconds of a region. It’s set by 3 heartbeat …","","SNAFU context selector for the <code>Error::BuildTableMeta</code> …","","SNAFU context selector for the <code>Error::CacheNotGet</code> variant","","SNAFU context selector for the <code>Error::CatalogAlreadyExists</code> …","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertRawKey</code> variant","","SNAFU context selector for the <code>Error::ConvertRawTableInfo</code> …","","SNAFU context selector for the <code>Error::DecodeJson</code> variant","","SNAFU context selector for the <code>Error::DecodeProto</code> variant","","SNAFU context selector for the <code>Error::EmptyKey</code> variant","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::EtcdFailed</code> variant","","SNAFU context selector for the <code>Error::EtcdTxnOpResponse</code> …","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::GetKvCache</code> variant","","SNAFU context selector for the <code>Error::IllegalServerState</code> …","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidProtoMsg</code> …","","SNAFU context selector for the <code>Error::InvalidTableMetadata</code> …","","SNAFU context selector for the <code>Error::InvalidTxnResult</code> …","","SNAFU context selector for the <code>Error::MoveRegion</code> variant","","SNAFU context selector for the <code>Error::NextSequence</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::OperateDatanode</code> …","","SNAFU context selector for the <code>Error::ParseOption</code> variant","","SNAFU context selector for the <code>Error::PayloadNotExist</code> …","","SNAFU context selector for the <code>Error::PrimaryKeyNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RenameTable</code> variant","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::RouteInfoCorrupted</code> …","","SNAFU context selector for the <code>Error::SchemaAlreadyExists</code> …","","SNAFU context selector for the <code>Error::SendMessage</code> variant","","SNAFU context selector for the <code>Error::SequenceOutOfRange</code> …","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableInfoNotFound</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableRouteNotFound</code> …","SNAFU context selector for the <code>Error::Table</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","SNAFU context selector for the <code>Error::WaitProcedure</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the response exceeds the size limit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine whether it is a retry later type through …","","","","","","","","","","Creates a new Error::RetryLater error from source <code>err</codeandleControl","","HeartbeatResponseHandler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The instruction of downgrading leader region.","","","The result of downgrade leader region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return error if any during the operation.","","Indicates whether the region exists.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the <code>last_entry_id</code> if available.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CATALOG_NAME_KEY: {CATALOG_NAME_KEY_PREFIX}/{catalog_name}","","","","A struct containing a deserialized value(<code>inner</code>) and an …","","","","SCHEMA_NAME_KEY: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates metadata for table and returns an error if …","","","","Deletes metadata for table. The caller MUST ensure it has …","","","","","","","","","","","","","","","","","","Deserialize behaviors:The <code>inner</code> field will be deserialized …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Notes: used for test purpose.","Returns a struct containing a deserialized value and an …","Returns a struct containing a deserialized value and an …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns original <code>bytes</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Renames the table name and returns an error if different …","","","","","Serialize behaviors:The <code>inner</code> field will be ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates the leader status of the RegionRoute.","Updates table info and returns an error if different …","","","","","","","","","","","","","","","","","","","Decoder <code>KeyValue</code> to ({catalog},())","","","","","","","","","","","","","Creates <code>CatalogNameKey</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RegionInfo For compatible reason, DON’T modify the field …","","","","","","","","","","Builds the create datanode table transactions. It only …","Builds the delete datanode table transactions. It only …","Builds the update datanode table transactions. It only …","","","","","","","","","","","","","","","","","","Decodes <code>KeyValue</code> to ((),<code>DatanodeTableValue</code>)","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates <code>SchemaNameKey</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Decodes <code>KeyValue</code> to ({schema},())","Returns a schema stream, it lists all schemas belong to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a create table info transaction, it expected the …","","Builds a delete table info transaction.","","Builds a update table info transaction, it expected the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a create table name transaction. It only executes …","Builds a delete table name transaction. It only executes …","Builds a update table name transaction. It only executes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It may return a subset of the <code>table_ids</code>.","","","","","","","Builds a create table route transaction. it expected the …","","Builds a delete table route transaction, it expected the …","","Builds a update table route transaction, it expected the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the key exists, not returning the value. If the …","","","","","","","","","Puts a value at a key. If <code>if_not_exists</code> is <code>true</code>, the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a list of operations. The operations list will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a list of operations. The operations list will be …","","","","","None means the key does not exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a list of comparison. If all comparisons passed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Node identifier. Unique in a cluster.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The Range Request’s default page size.","Decoding key value pairs.","Error","At the start of reading.","","","","","Retrieving data from backend.","","It reduces the page size if the response size exceeds the …","Decreases the <code>page size</code> if the response message size …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","key is the first key for the range, If range_end is not …","keys_only when set returns only the keys and not the …","","","","","","","page_size is the pagination page size.","","range_end is the upper bound on the requested range [key, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The following cases in which the Region will be downgraded.","","","","","The Status of the Region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the HashMap&lt;RegionNumber, &amp;Peer&gt;;","Returns the HashMap&lt;RegionNumber, RegionStatus&gt;;","Returns the HashMap&lt;RegionNumber, HashSet&gt;","","","","","","","","","","","","","","","","","","","","","","","Marks the Leader Region as downgraded.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the Leader Region is downgraded.","","<code>None</code> by default.","","","","","","","","","","","","","","","","Sets the leader status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range.","","","keys_only when set returns only the keys and not the …","","","","limit is a limit on the number of keys returned for the …","","","","","","","","","If prev_kv is set, gets the previous key-value pair before …","","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set, gets the previous key-value pairs …","","If prev_kv is set, gets the previous key-value pairs …","","","","Returns the <code>RangeBounds</code>.","Returns the <code>RangeBounds</code>.","range_end is the upper bound on the requested range [key, …","range_end is the key following the last key to delete for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","","","","","","","","","","","","","","expect is the previous value, in bytes","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range. If range_end …","keys_only when set returns only the keys and not the …","limit is a limit on the number of keys returned for the …","Gets all keys prefixed with key. range_end is the key plus …","Deletes all keys prefixed with key. range_end is one bit …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pairs …","key is the first key for the range, If range_end is not …","key is the first key to delete in the range.","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","Get prefix end key of <code>key</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","returns the <code>next</code> value directly if it is in the <code>range</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get next prefix key of <code>key</code>.","Get prefix end key of <code>key</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,313,85,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,2,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,12,12,16,16,2,2,314,12,315,12,16,315,12,16,12,16,2,313,85,313,85,2,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,12,16,2,0,0,0,0,0,316,84,317,318,318,316,84,316,84,0,0,0,0,0,0,0,319,86,0,26,29,25,26,29,25,25,25,25,26,29,26,29,25,26,29,25,26,29,25,320,0,25,29,26,29,25,26,29,25,26,29,25,0,29,26,29,25,25,26,29,25,26,29,25,26,29,25,26,26,29,29,25,25,26,29,25,319,86,319,86,321,25,25,26,29,25,26,29,25,29,0,26,29,25,26,29,25,26,29,25,0,26,29,25,0,0,0,37,37,37,33,37,33,33,37,37,33,37,46,33,37,46,33,46,33,37,46,33,37,46,33,37,46,33,33,0,33,33,37,46,33,37,46,37,46,33,37,46,33,33,37,46,33,37,46,33,33,37,46,33,37,46,33,37,46,33,33,37,37,46,46,33,37,46,33,33,33,33,46,46,33,33,33,33,33,37,46,46,33,46,46,46,46,46,33,37,46,33,37,46,33,37,46,33,37,46,33,37,46,33,33,37,46,59,0,0,0,59,59,60,0,59,59,60,65,59,62,60,65,59,62,59,59,62,60,65,59,62,60,65,59,62,60,65,59,62,60,60,60,65,60,65,59,62,60,65,59,62,59,62,60,65,59,62,60,60,59,62,60,65,59,62,60,59,60,65,59,62,60,65,59,62,60,65,59,62,60,60,65,65,59,59,62,62,60,65,59,62,60,60,65,60,60,60,60,62,59,62,62,60,60,62,62,59,60,65,59,62,60,65,59,62,60,65,59,62,60,65,59,62,60,65,59,62,60,60,65,59,62,66,0,0,0,66,66,66,68,66,66,68,67,66,68,67,66,67,68,67,66,68,67,66,68,67,66,68,68,68,67,66,68,67,66,67,66,68,67,66,68,68,67,66,68,67,66,68,68,67,66,68,67,66,68,67,66,68,68,67,67,66,66,68,67,66,68,68,67,68,68,68,68,67,67,66,67,67,67,67,67,67,67,68,67,66,68,67,66,68,67,66,68,67,66,68,67,66,68,68,67,66,71,71,73,0,0,0,71,71,73,72,71,73,72,71,72,73,72,71,73,72,71,73,72,71,73,73,73,72,71,73,72,71,72,71,73,72,71,73,73,72,71,73,72,71,73,73,72,71,73,72,71,73,72,71,73,73,72,72,71,71,73,72,71,73,73,72,73,73,72,72,71,72,72,72,72,72,72,72,73,72,71,73,72,71,73,72,71,73,72,71,73,72,71,73,73,72,71,0,0,0,0,0,322,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,78,78,78,78,78,322,78,322,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,36,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,36,76,0,76,0,76,0,76,0,76,0,76,0,0,76,0,76,0,76,0,76,0,76,0,76,0,76,0,76,76,0,76,0,76,0,76,0,0,76,76,0,0,76,0,76,0,76,76,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,119,109,110,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,104,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,91,93,95,101,103,104,106,107,113,114,116,117,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,119,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,90,90,91,91,121,121,122,122,93,93,94,94,95,95,96,96,123,123,124,124,97,97,125,125,126,126,98,98,127,127,128,128,99,99,129,129,130,130,131,131,100,100,101,101,132,132,102,102,103,103,104,104,133,133,106,106,107,107,108,108,109,109,110,110,134,134,111,111,112,112,113,113,114,114,115,115,116,116,117,117,135,135,136,136,119,119,137,137,138,138,76,76,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,76,98,102,115,94,76,97,137,112,117,76,110,76,94,76,94,117,96,127,99,108,111,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,123,102,90,91,121,122,93,94,95,96,123,124,97,125,126,98,127,128,99,129,130,131,100,101,132,102,103,104,133,106,107,108,109,110,134,111,112,113,114,115,116,117,135,136,119,137,138,76,323,324,325,326,327,328,329,330,325,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,326,337,338,327,349,328,350,351,352,353,354,355,345,339,356,357,340,341,342,358,329,343,346,330,325,359,331,332,360,323,324,344,361,362,333,347,335,336,363,364,365,366,349,353,366,362,336,324,351,352,354,355,356,359,363,364,366,367,349,349,336,350,339,357,360,361,351,346,0,0,0,145,145,0,0,0,0,0,0,0,368,150,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,145,146,147,145,146,147,145,369,370,147,147,146,146,147,145,146,147,145,146,146,147,147,145,145,369,146,147,145,146,146,147,0,368,150,368,150,146,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,146,147,145,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,0,0,0,148,155,152,155,152,152,152,155,152,155,152,155,152,155,152,155,152,155,152,152,152,152,152,152,152,155,152,152,152,155,152,152,155,152,155,152,155,155,152,152,155,152,155,148,148,155,155,152,152,152,155,152,155,152,155,152,155,152,155,152,155,152,0,0,163,164,0,163,164,0,0,0,164,163,163,0,163,164,0,0,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,158,159,160,164,158,158,158,158,159,159,159,159,160,160,160,160,164,164,164,164,159,160,159,158,158,159,159,160,160,161,161,162,162,163,163,164,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,158,158,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,158,159,159,160,160,161,161,162,162,163,163,164,164,158,159,160,161,162,163,164,159,161,161,162,161,158,161,160,158,159,160,161,162,163,164,158,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,158,159,160,161,162,163,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,178,179,180,194,194,82,371,171,55,176,178,179,180,171,55,176,178,179,180,55,171,171,0,55,55,171,55,176,178,179,180,171,55,176,178,179,180,171,55,176,178,179,180,171,0,171,171,171,171,55,55,176,176,178,178,179,179,180,180,171,55,176,178,179,180,55,171,55,176,178,179,180,0,55,171,55,176,178,179,180,55,55,55,55,171,55,176,178,179,180,171,171,171,55,176,178,179,180,55,171,55,176,178,179,180,55,55,171,171,55,55,176,176,178,178,179,179,180,180,171,55,176,178,179,180,171,171,194,171,82,82,171,194,171,171,0,55,0,171,171,0,171,171,0,0,171,171,0,55,0,171,55,176,178,179,180,171,55,176,178,179,180,171,55,176,178,179,180,171,55,176,178,179,180,171,55,176,178,179,180,171,171,171,171,55,176,178,179,180,0,0,0,189,172,189,192,172,189,192,189,0,172,189,189,172,189,192,172,189,192,172,189,192,172,189,172,189,192,172,189,192,192,172,189,192,189,172,189,189,192,172,189,192,189,172,189,192,172,189,192,172,189,192,172,172,189,189,192,192,172,189,192,172,172,189,189,192,189,189,172,189,192,172,189,192,192,172,189,189,192,192,172,189,192,172,189,192,172,189,192,0,0,0,0,193,193,175,188,196,193,175,188,196,175,175,175,188,196,188,196,193,175,188,196,193,175,188,196,193,175,188,196,193,0,188,193,175,188,196,193,175,188,196,188,196,193,175,188,196,188,188,196,193,188,196,193,175,188,196,188,196,193,175,188,196,175,193,175,188,196,193,175,188,196,193,193,175,175,188,188,196,196,193,175,188,196,175,193,175,196,193,193,196,188,188,196,188,196,193,193,196,175,188,196,193,193,175,188,196,193,175,188,196,196,193,175,188,196,196,193,175,188,196,193,175,188,196,196,193,175,188,196,0,0,0,0,198,183,198,199,183,198,199,198,198,199,198,199,183,198,199,183,198,199,183,198,199,183,198,199,183,198,199,183,198,199,199,183,198,199,198,199,183,198,198,199,183,198,199,198,199,183,198,199,183,183,198,199,183,198,199,183,183,198,198,199,199,183,198,199,183,183,198,198,198,0,183,199,198,199,198,183,198,199,183,198,199,199,183,198,198,199,199,199,183,198,199,199,183,198,199,183,198,199,0,0,0,200,184,200,184,54,200,184,54,184,184,184,184,184,54,54,200,184,54,200,184,54,200,184,54,200,184,54,200,184,54,54,200,184,54,54,200,54,200,184,54,54,200,184,54,184,200,184,54,200,184,54,200,200,184,184,54,54,200,184,54,184,200,184,54,54,200,54,54,54,54,200,200,184,54,200,184,54,54,200,184,54,54,200,184,54,200,184,54,54,54,200,184,54,54,0,0,0,201,185,201,202,185,201,202,185,185,185,201,201,202,201,202,185,201,202,185,201,202,185,201,202,185,185,201,202,185,201,202,202,185,201,202,202,185,201,201,202,185,201,201,202,201,202,185,201,202,185,185,201,202,185,201,202,185,185,201,201,202,202,185,201,202,185,185,201,202,201,201,202,201,201,202,202,185,201,202,201,185,201,202,185,201,202,202,185,201,201,202,202,185,201,202,185,201,202,185,201,202,0,0,0,205,205,203,203,204,203,204,204,204,203,204,203,204,203,204,203,204,203,204,204,203,204,204,203,204,203,204,204,203,204,203,204,203,204,203,203,204,204,203,204,205,203,204,204,205,204,203,204,203,203,204,203,204,204,203,204,204,203,204,203,204,204,203,204,0,0,0,206,186,206,186,70,206,186,70,186,186,186,186,186,70,70,206,186,70,206,186,70,206,186,70,206,186,70,206,186,70,70,206,186,70,70,206,70,206,186,70,70,206,186,70,186,186,206,186,70,206,186,70,206,206,186,186,70,70,206,186,70,186,206,186,70,70,70,206,70,206,206,186,70,206,186,70,70,206,186,70,70,206,186,70,206,186,70,70,70,206,186,70,0,0,0,0,0,0,182,372,233,233,233,233,0,233,233,233,0,233,233,0,233,182,372,182,372,233,233,233,373,0,0,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,0,0,0,0,0,0,0,0,0,219,219,219,219,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,219,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,0,219,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,219,223,224,225,226,227,228,229,228,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,219,223,223,224,224,225,225,226,226,227,227,228,228,229,229,219,223,224,225,226,227,228,229,223,224,228,229,225,227,226,219,223,224,225,226,227,229,219,228,219,219,223,224,225,226,227,228,229,219,223,224,225,226,227,228,229,219,223,223,224,224,225,225,226,226,227,227,228,228,229,229,219,223,224,225,226,227,228,229,219,219,223,224,225,226,227,228,229,224,228,219,223,224,225,226,227,228,229,219,219,0,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,0,0,0,0,0,0,0,0,0,0,0,235,236,374,235,236,236,236,235,239,239,239,0,0,0,0,0,0,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,195,195,195,236,237,235,238,239,195,236,237,235,238,239,195,237,238,237,218,236,237,235,238,239,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,238,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,236,237,235,238,239,195,0,238,238,236,237,235,238,239,195,218,236,237,235,238,238,239,195,236,237,235,238,239,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,218,218,236,236,237,237,235,235,238,238,239,239,195,195,218,236,237,235,238,239,195,237,195,195,237,195,195,195,218,218,238,237,236,237,235,238,239,195,218,236,237,235,238,239,195,218,236,237,235,238,239,195,218,218,236,237,235,238,239,239,195,218,236,237,235,238,239,195,374,218,236,237,235,238,239,195,218,236,237,235,238,239,195,195,237,237,0,0,0,0,0,0,0,0,0,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,241,243,243,245,245,247,247,248,248,249,249,250,250,251,251,252,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,241,243,243,245,245,247,247,248,248,249,249,250,250,251,251,252,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,241,243,245,247,248,249,250,251,252,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,375,375,375,0,0,0,0,375,0,254,254,375,254,256,257,375,254,256,257,375,254,256,257,375,254,256,257,375,254,256,257,257,256,375,254,256,257,375,254,256,257,375,254,256,257,256,375,254,256,257,375,254,256,257,375,254,256,257,375,254,256,257,257,375,375,254,254,256,256,257,257,256,256,375,254,256,257,254,254,254,257,254,254,256,257,254,256,254,254,256,375,254,256,257,375,254,256,257,375,254,256,257,375,254,256,257,256,254,375,254,256,257,375,254,256,257,0,0,261,190,261,190,261,190,261,190,261,261,190,261,190,261,190,0,261,190,261,190,261,190,190,261,261,261,190,190,261,190,190,190,261,190,261,190,261,190,261,190,261,261,190,190,261,190,190,190,0,190,261,0,0,190,190,261,190,190,261,190,261,190,261,190,261,190,261,190,0,190,190,261,190,263,0,263,0,0,263,0,0,0,263,0,53,32,263,79,69,63,53,74,32,263,79,69,63,53,74,69,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,63,79,32,263,79,69,63,53,74,32,263,79,69,63,53,74,69,63,53,74,32,263,79,69,63,53,74,69,63,53,74,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,32,263,263,79,79,69,69,63,63,53,53,74,74,32,263,79,69,63,53,74,79,63,263,263,263,263,63,69,74,69,63,53,74,69,74,79,69,74,63,69,63,53,74,69,63,53,74,32,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,263,79,79,69,69,63,63,53,53,74,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,32,263,79,69,63,53,74,0,0,0,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,271,271,272,273,271,272,272,273,271,272,273,271,272,273,271,272,273,271,271,272,272,273,273,271,272,273,272,273,271,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,271,272,273,277,0,0,0,0,0,0,0,0,0,278,281,275,276,64,277,278,279,281,275,276,64,277,278,279,275,276,64,277,278,279,275,276,64,277,278,279,279,281,275,276,64,277,278,279,281,275,276,64,277,278,279,281,275,276,64,277,278,279,0,0,0,64,278,281,275,276,64,277,278,279,281,275,276,64,277,278,279,275,276,64,277,278,279,64,281,275,276,64,277,278,279,275,276,64,277,278,279,0,0,0,0,281,275,276,64,277,278,279,64,281,275,276,64,277,278,278,279,279,275,276,64,277,278,279,281,275,276,64,277,278,279,0,0,276,278,281,275,276,64,277,278,279,281,275,276,64,277,278,279,281,281,275,275,276,276,64,64,277,277,278,278,279,279,281,275,276,64,277,278,279,64,64,64,278,275,278,278,64,0,281,275,275,275,276,64,277,278,279,64,275,276,276,275,276,64,277,278,279,281,275,276,64,277,278,279,281,275,276,64,277,278,279,281,275,276,276,64,277,278,279,275,281,275,276,64,277,278,279,281,275,276,64,277,278,279,279,281,275,276,64,277,278,279,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,209,211,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,214,210,211,209,212,289,213,290,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,260,285,290,212,215,215,260,260,214,285,286,286,211,287,209,288,212,289,213,290,215,215,260,214,214,285,210,210,286,211,211,287,209,209,288,212,212,289,213,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,289,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,215,260,260,214,214,285,285,210,210,286,286,211,211,287,287,209,209,288,288,212,212,289,289,213,213,290,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,289,215,214,212,213,210,209,215,260,286,211,215,260,215,214,210,211,209,212,213,214,285,211,209,289,213,287,288,290,215,213,215,213,289,260,289,287,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,260,285,286,287,288,289,290,0,215,260,286,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,260,214,285,285,210,286,286,211,287,287,209,288,288,212,289,289,213,290,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,215,260,214,285,210,286,211,287,209,288,212,289,213,290,214,212,215,260,214,285,210,286,211,287,209,288,212,289,213,290,212,215,214,212,213,215,215,215,213,214,211,209,213,215,213,214,212,0,0,0,0,0,0,376,308,309,308,309,308,309,308,309,308,309,308,309,308,309,308,309,309,308,309,308,309,309,308,309,309,308,308,309,308,308,309,309,308,309,309,308,308,309,309,309,376,376,309,309,308,309,308,309,308,309,308,309,308,309,308,309,0,0,0,311,311,311,311,311,311,0,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,0,311,311,311,311,311,311,311,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],2],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,[8,[7]]],[[11,[[10,[9]]]]],[]],[[12,[8,[7]]],[[11,[[10,[9]]]]]],[[-1,2,13],[[11,[[10,[9]]]]],[]],[[-1,2,14],[[11,[[10,[9,15]]]]],[]],[[16,2,13],[[11,[[10,[9]]]]]],[[-1,2,17],[[11,[[10,[9]]]]],[]],[[-1,2,17],[[11,[[10,[9,15]]]]],[]],[[16,2,17],[[11,[[10,[9]]]]]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,22],[[11,[[10,[9]]]]],[]],[[-1,23],[[11,[[10,[9]]]]],[]],[[-1,24],[[11,[[10,[9]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,25],[[-1,-2],4,[],[]],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[-1,26,27,[8,[28]]],[[11,[[10,[9]]]]],[]],0,0,[[],29],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],0,[[29,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,[[-1,29,32],[[11,[[10,[9]]]]],[]],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[33,34],[33,[[36,[35]]]],[37,38],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,[[36,[40]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[33,41],[[36,[42]]]],[[27,35],[[36,[[4,[[19,[43]],[19,[44]]]]]]]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[37]]],45],[-1,[[20,[46]]],45],[3,4],[3,4],[3,4],[33,[[48,[47]]]],[[33,49],[[11,[[10,[9]]]]]],[[37,30],31],[[46,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[38,25],[[48,[33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[33,50],[33,[[51,[47]]]],[[52,53,[55,[54]],25],[[36,[33]]]],[[53,[55,[54]],52,[19,[44]]],46],0,[33,[[36,[56]]]],[33,[[36,[56]]]],[33,[[36,[56]]]],[[33,27],[[36,[4]]]],[[33,47],[[36,[4]]]],[[37,-1],20,57],[[46,-1],20,57],0,[33,[[36,[56]]]],[46,13],[46,27],0,[46,58],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[33,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[59,38],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[60,[[36,[61]]]],0,0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[59]]],45],[-1,[[20,[62]]],45],[3,4],[3,4],[3,4],[3,4],[60,[[48,[47]]]],[[60,49],[[11,[[10,[9]]]]]],[[59,30],31],[[62,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[38,25],[[48,[60]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[60,50],[[52,63,[51,[64]],25],60],[[52,63,[51,[64]]],65],[60,[[36,[56]]]],[60,[[36,[56]]]],[60,[[36,[56]]]],[60,[[51,[64]]]],0,[[59,-1],20,57],[[62,-1],20,57],0,[60,13],[60,27],[62,58],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[60,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[66,38],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[67]]],45],[-1,[[20,[66]]],45],[3,4],[3,4],[3,4],[68,[[48,[47]]]],[[68,49],[[11,[[10,[9]]]]]],[[67,30],31],[[66,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[38,25],[[48,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[68,50],[[52,69,[55,[70]],[55,[54]],25],68],[[52,69,[55,[70]],[55,[54]]],67],[68,[[36,[56]]]],[68,[[36,[56]]]],[68,[[36,[56]]]],[68,[[36,[56]]]],[67,[[51,[64]]]],[[67,-1],20,57],[[66,-1],20,57],0,[67,13],[67,27],0,[67,58],0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[68,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[71,38],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[72]]],45],[-1,[[20,[71]]],45],[3,4],[3,4],[3,4],[73,[[48,[47]]]],[[73,49],[[11,[[10,[9]]]]]],[[72,30],31],[[71,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[38,25],[[48,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[73,50],[[52,74,[55,[54]],[51,[64]],25],73],[[52,74,[55,[54]],[51,[64]]],72],[73,[[36,[56]]]],[73,[[36,[56]]]],0,[[72,-1],20,57],[[71,-1],20,57],0,[72,13],[72,27],0,[72,17],[72,58],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[73,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,[[0,[75]]]],[76,77],[[38,38],47],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[78,25],0,[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[[78,52,53],[[36,[79]]]],[[78,52,63],[[36,[79]]]],[[78,52,69],[[36,[79]]]],[[78,52,74],[[36,[79]]]],[[],3],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],0,0,0,[78,[[36,[4]]]],[[78,52,53,[55,[54]]],[[36,[80]]]],[[78,52,63,[51,[64]]],[[36,[80]]]],[[78,29,32],[[11,[[10,[9]]]]]],[[78,52,69,[55,[54]],[55,[70]]],[[36,[80]]]],[[78,81],[[36,[80]]]],[[78,52,74,[55,[54]],[51,[64]]],[[36,[80]]]],0,[78,82],0,[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[83,84,85,82,86],[[36,[78]]]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[76,87],[-1,88,[]],[76,[[19,[89]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,76],[[[91,[-1]]],76,[[92,[47]]]],[[[93,[-1]]],76,[[92,[47]]]],[[[94,[-1,-2,-3]]],76,[[92,[47]]],[[92,[52]]],[[92,[52]]]],[[[95,[-1]]],76,[[92,[47]]]],[[[96,[-1]]],76,[[92,[47]]]],[[[97,[-1]]],76,[[92,[47]]]],[[[98,[-1]]],76,[[92,[47]]]],[[[99,[-1]]],76,[[92,[47]]]],[100,76],[[[101,[-1]]],76,[[92,[47]]]],[[[102,[-1,-2]]],76,[[92,[47]]],[[92,[47]]]],[[[103,[-1]]],76,[[92,[47]]]],[[[104,[-1,-2]]],76,[[92,[105]]],[[92,[47]]]],[[[106,[-1]]],76,[[92,[47]]]],[[[107,[-1]]],76,[[92,[47]]]],[[[108,[-1]]],76,[[92,[47]]]],[[[109,[-1]]],76,[[92,[47]]]],[[[110,[-1,-2]]],76,[[92,[47]]],[[92,[47]]]],[[[111,[-1]]],76,[[92,[47]]]],[[[112,[-1]]],76,[[92,[47]]]],[[[113,[-1]]],76,[[92,[47]]]],[[[114,[-1]]],76,[[92,[47]]]],[[[115,[-1]]],76,[[92,[47]]]],[[[116,[-1]]],76,[[92,[47]]]],[[[117,[-1,-2,-3]]],76,[[92,[13]]],[[92,[118]]],[[92,[47]]]],[119,76],0,0,[76,[[19,[88]]]],[90,90],[[[91,[-1]]],[[91,[-1]]],120],[121,121],[122,122],[[[93,[-1]]],[[93,[-1]]],120],[[[94,[-1,-2,-3]]],[[94,[-1,-2,-3]]],120,120,120],[[[95,[-1]]],[[95,[-1]]],120],[[[96,[-1]]],[[96,[-1]]],120],[[[123,[-1]]],[[123,[-1]]],120],[124,124],[[[97,[-1]]],[[97,[-1]]],120],[125,125],[126,126],[[[98,[-1]]],[[98,[-1]]],120],[[[127,[-1]]],[[127,[-1]]],120],[128,128],[[[99,[-1]]],[[99,[-1]]],120],[129,129],[130,130],[131,131],[100,100],[[[101,[-1]]],[[101,[-1]]],120],[132,132],[[[102,[-1,-2]]],[[102,[-1,-2]]],120,120],[[[103,[-1]]],[[103,[-1]]],120],[[[104,[-1,-2]]],[[104,[-1,-2]]],120,120],[133,133],[[[106,[-1]]],[[106,[-1]]],120],[[[107,[-1]]],[[107,[-1]]],120],[[[108,[-1]]],[[108,[-1]]],120],[[[109,[-1]]],[[109,[-1]]],120],[[[110,[-1,-2]]],[[110,[-1,-2]]],120,120],[134,134],[[[111,[-1]]],[[111,[-1]]],120],[[[112,[-1]]],[[112,[-1]]],120],[[[113,[-1]]],[[113,[-1]]],120],[[[114,[-1]]],[[114,[-1]]],120],[[[115,[-1]]],[[115,[-1]]],120],[[[116,[-1]]],[[116,[-1]]],120],[[[117,[-1,-2,-3]]],[[117,[-1,-2,-3]]],120,120,120],[135,135],[136,136],[119,119],[[[137,[-1]]],[[137,[-1]]],120],[138,138],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[76,3,[51,[47]]],4],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[76,38],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,0,0,0,0,0,0,0,0,0,0,0,[90,[[20,[-1,76]]],[]],[[[91,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[93,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[94,[-1,-2,-3]]],[[20,[-4,76]]],[[92,[47]]],[[92,[52]]],[[92,[52]]],[]],[[[95,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[96,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[97,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[98,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[99,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[100,[[20,[-1,76]]],[]],[[[101,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[102,[-1,-2]]],[[20,[-3,76]]],[[92,[47]]],[[92,[47]]],[]],[[[103,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[104,[-1,-2]]],[[20,[-3,76]]],[[92,[105]]],[[92,[47]]],[]],[[[106,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[107,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[108,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[109,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[110,[-1,-2]]],[[20,[-3,76]]],[[92,[47]]],[[92,[47]]],[]],[[[111,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[112,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[113,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[114,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[115,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[116,[-1]]],[[20,[-2,76]]],[[92,[47]]],[]],[[[117,[-1,-2,-3]]],[[20,[-4,76]]],[[92,[13]]],[[92,[118]]],[[92,[47]]],[]],[119,[[20,[-1,76]]],[]],[[90,30],31],[[[91,[-1]],30],31,139],[[121,30],31],[[122,30],31],[[[93,[-1]],30],31,139],[[[94,[-1,-2,-3]],30],31,139,139,139],[[[95,[-1]],30],31,139],[[[96,[-1]],30],31,139],[[[123,[-1]],30],31,139],[[124,30],31],[[[97,[-1]],30],31,139],[[125,30],31],[[126,30],31],[[[98,[-1]],30],31,139],[[[127,[-1]],30],31,139],[[128,30],31],[[[99,[-1]],30],31,139],[[129,30],31],[[130,30],31],[[131,30],31],[[100,30],31],[[[101,[-1]],30],31,139],[[132,30],31],[[[102,[-1,-2]],30],31,139,139],[[[103,[-1]],30],31,139],[[[104,[-1,-2]],30],31,139,139],[[133,30],31],[[[106,[-1]],30],31,139],[[[107,[-1]],30],31,139],[[[108,[-1]],30],31,139],[[[109,[-1]],30],31,139],[[[110,[-1,-2]],30],31,139,139],[[134,30],31],[[[111,[-1]],30],31,139],[[[112,[-1]],30],31,139],[[[113,[-1]],30],31,139],[[[114,[-1]],30],31,139],[[[115,[-1]],30],31,139],[[[116,[-1]],30],31,139],[[[117,[-1,-2,-3]],30],31,139,139,139],[[135,30],31],[[136,30],31],[[119,30],31],[[[137,[-1]],30],31,139],[[138,30],31],[[76,30],31],[[76,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,76],[[[91,[-1]]],76,[[92,[47]]]],[121,76],[122,76],[[[93,[-1]]],76,[[92,[47]]]],[[[94,[-1,-2,-3]]],76,[[92,[47]]],[[92,[52]]],[[92,[52]]]],[[[95,[-1]]],76,[[92,[47]]]],[[[96,[-1]]],76,[[92,[47]]]],[[[123,[-1]]],76,[[92,[47]]]],[124,76],[[[97,[-1]]],76,[[92,[47]]]],[125,76],[126,76],[[[98,[-1]]],76,[[92,[47]]]],[[[127,[-1]]],76,[[92,[47]]]],[128,76],[[[99,[-1]]],76,[[92,[47]]]],[129,76],[130,76],[131,76],[100,76],[[[101,[-1]]],76,[[92,[47]]]],[132,76],[[[102,[-1,-2]]],76,[[92,[47]]],[[92,[47]]]],[[[103,[-1]]],76,[[92,[47]]]],[[[104,[-1,-2]]],76,[[92,[105]]],[[92,[47]]]],[133,76],[[[106,[-1]]],76,[[92,[47]]]],[[[107,[-1]]],76,[[92,[47]]]],[[[108,[-1]]],76,[[92,[47]]]],[[[109,[-1]]],76,[[92,[47]]]],[[[110,[-1,-2]]],76,[[92,[47]]],[[92,[47]]]],[134,76],[[[111,[-1]]],76,[[92,[47]]]],[[[112,[-1]]],76,[[92,[47]]]],[[[113,[-1]]],76,[[92,[47]]]],[[[114,[-1]]],76,[[92,[47]]]],[[[115,[-1]]],76,[[92,[47]]]],[[[116,[-1]]],76,[[92,[47]]]],[[[117,[-1,-2,-3]]],76,[[92,[13]]],[[92,[118]]],[[92,[47]]]],[135,76],[136,76],[119,76],[[[137,[-1]]],76,[[92,[22]]]],[138,76],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[76,18],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[76,18],0,0,0,0,[76,[[19,[140]]]],0,0,0,0,[-1,76,[141,142,143]],0,[76,[[19,[88]]]],0,[76,144],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[[145,145],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,146],[[11,[[10,[9]]]]],[]],[[-1,146],[[11,[[10,[9]]]]],[]],[[147,146],[[11,[[10,[9]]]]]],0,0,[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[-1,146],18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[[148,149],146],[[[51,[150]]],147],0,0,0,0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],151],[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[[151,146],[[11,[[10,[9]]]]]],[[],3],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[151,146],18],[-1,18,[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[152,152],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[[152,152],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[152,30],31],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[[154,[153]]],155],0,0,[[155,153],[[36,[4]]]],0,0,0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,[[36,[157]]]],[153,[[36,[156]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[158]]],45],[-1,[[20,[159]]],45],[-1,[[20,[160]]],45],[-1,[[20,[161]]],45],[-1,[[20,[162]]],45],[-1,[[20,[163]]],45],[-1,[[20,[164]]],45],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,[[158,158],18],[[159,159],18],[[160,160],18],[[164,164],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],0,0,0,[[158,30],31],[[158,30],31],[[159,30],31],[[159,30],31],[[160,30],31],[[160,30],31],[[161,30],31],[[161,30],31],[[162,30],31],[[162,30],31],[[163,30],31],[[163,30],[[20,[4,165]]]],[[164,30],31],[[164,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],52,[166,167],168],[158,41],[[158,-1],4,169],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[[158,38,[170,[47,47]]],161],0,0,0,0,0,0,[[158,-1],20,57],[[159,-1],20,57],[[160,-1],20,57],[[161,-1],20,57],[[162,-1],20,57],[[163,-1],20,57],[[164,-1],20,57],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[51,[7]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[171,172],0,0,[[[55,[-1]]],[[55,[-1]]],[173,174,120]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[171,27,[51,[64]]],[[36,[4]]]],0,[171,175],0,[[171,[55,[54]],[55,[70]]],[[36,[4]]]],[3,-1,[]],[[[55,[-1]]],[],[174,173]],[3,-1,[]],[176,177],[3,-1,[]],[3,-1,[]],[178,177],[3,-1,[]],[179,177],[180,177],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[[55,[-2]]]]],45,[174,173]],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,[[[55,[-1]],30],31,[174,173,139]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[55,[-1]]],[173,174]],[181,[[36,[[55,[-1]]]]],[173,174]],[[[8,[7]]],[[36,[[55,[-1]]]]],[173,174]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[171,13],[[36,[[4,[[19,[[55,[54]]]],[19,[[55,[70]]]]]]]]]],[171,[[36,[4]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[51,[7]]],[173,174]],[[[55,[-1]]],-1,[173,174]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[171,182],0,0,[182,171],0,0,[[171,[55,[54]],47],[[36,[4]]]],0,[171,183],0,0,[[[55,[-1]],-2],20,[174,173],57],0,[171,184],0,0,[171,185],0,0,0,[171,186],0,0,[-1,-2,[],[]],[38,47],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[171,13,[55,[70]],-1],[[36,[4]]],187],[[171,[55,[54]],27],[[36,[4]]]],[[171,13,188,[55,[70]],[51,[64]],[170,[47,47]]],[[36,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[189,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[190,[[36,[[4,[47,4]]]]]],[172,[[191,[[36,[47]]]]]],[189,189],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[172,189,18],[[36,[4]]]],[[],189],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[192]]],45],[3,4],[3,4],[3,4],[[189,189],18],[[172,189],[[36,[18]]]],[[189,30],31],[[189,30],31],[[192,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[182,172],[38,189],[[],47],[[192,-1],20,57],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[192,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[38,[[36,[189]]]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[[19,[192]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[193,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[175,13,38,38,[170,[47,47]],194],[[36,[195]]]],[[175,13,194],[[36,[195]]]],[[175,13,188,194,194,[170,[47,47]]],[[36,[195]]]],[188,188],[196,196],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[190,[[36,[[4,[4,196]]]]]],[[],188],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[188]]],45],[-1,[[20,[196]]],45],[3,4],[3,4],[3,4],[3,4],0,[[188,188],18],[[196,196],18],[[193,30],31],[[188,30],31],[[196,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[175,193],[[36,[[19,[196]]]]]],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[[197,13],193],[182,175],[[13,[51,[118]],188],196],[197,47],[197,47],0,0,0,0,[[188,-1],20,57],[[196,-1],20,57],[[[8,[7]]],[[36,[13]]]],0,0,[[175,197],[[191,[[36,[196]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[196,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[196]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[198,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[198,198],[199,199],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[183,198,[19,[199]],18],[[36,[4]]]],[[],198],[[],199],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[199]]],45],[3,4],[3,4],[3,4],[[198,198],18],[[199,199],18],[[183,198],[[36,[18]]]],[[198,30],31],[[198,30],31],[[199,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[183,198],[[36,[[19,[199]]]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[182,183],[[38,38],198],[38,47],0,[190,[[36,[[4,[47,4]]]]]],[[183,38],[[191,[[36,[47]]]]]],[[199,-1],20,57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[199,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[38,[[36,[198]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[170,[47,47]]],[[20,[199]]]],[[[8,[7]]],[[36,[[19,[199]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],0,[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[200,[[51,[7]]]],[[184,[8,[13]]],[[36,[[170,[13,54]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[184,13,54],[[36,[[4,[195,[0,[75]]]]]]]],[[[51,[7]]],[[0,[75]]]],[[184,13,[55,[54]]],[[36,[195]]]],[[184,13],[[4,[195,[0,[75]]]]]],[[184,13,[55,[54]],54],[[36,[[4,[195,[0,[75]]]]]]]],[54,54],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[54]]],45],[3,4],[3,4],[3,4],[[54,54],18],[[200,30],31],[[54,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[184,13],[[36,[[19,[[55,[54]]]]]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[13,200],[182,184],[27,54],[[54,-1],20,57],0,0,[54,17],[54,58],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[54]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[54,27],54],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[54,-1],54,75],0,0,0,[201,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[185,201,13],[[36,[195]]]],[[185,201,13],[[36,[195]]]],[[185,201,201,13],[[36,[195]]]],0,[201,201],[202,202],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],185],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[202]]],45],[3,4],[3,4],[3,4],[[202,202],18],[[185,201],[[36,[18]]]],[[201,30],31],[[201,30],31],[[202,30],31],[-1,-1,[]],[-1,-1,[]],[17,201],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[185,201],[[36,[[19,[202]]]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[182,185],[[38,38,38],201],[13,202],[[38,38],47],0,[[202,-1],20,57],[[[8,[7]]],[[36,[47]]]],0,[202,13],0,[[185,38,38],[[36,[[51,[[4,[47,202]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[38,[[36,[201]]]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[202]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[203,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[204]]],45],[3,4],[3,4],[[204,204],18],[[203,30],31],[[204,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,[13,203],[205,204],0,0,[[204,-1],20,57],0,[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[204]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[206,[[51,[7]]]],[[186,[8,[13]]],[[36,[[170,[13,70]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[186,13,70],[[36,[[4,[195,[0,[75]]]]]]]],[[[51,[7]]],[[0,[75]]]],[[186,13,[55,[70]]],[[36,[195]]]],[[186,13],[[4,[195,[0,[75]]]]]],[[186,13,[55,[70]],70],[[36,[[4,[195,[0,[75]]]]]]]],[70,70],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[70]]],45],[3,4],[3,4],[3,4],[[70,70],18],[[206,30],31],[[70,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[186,13],[[36,[[19,[[55,[70]]]]]]]],[[186,13],[[36,[[19,[194]]]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[13,206],[182,186],[[[51,[64]]],70],0,[[70,-1],20,57],0,[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,[[36,[[51,[7]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[8,[7]]],[[36,[70]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[70,[51,[64]]],70],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[207,-1],40,208],0,0,0,0,0,0,0,[-1,87,[]],[[-1,209],[[11,[[10,[9]]]]],[]],[[-1,210],[[11,[[10,[9]]]]],[]],[[-1,211],[[11,[[10,[9]]]]],[]],0,[[-1,212],[[11,[[10,[9]]]]],[]],[[-1,[8,[7]],18],[[11,[[10,[9]]]]],143],[[-1,213],[[11,[[10,[9]]]]],[]],0,[[-1,[8,[7]]],[[11,[[10,[9]]]]],143],[[-1,[8,[7]]],[[11,[[10,[9]]]]],143],0,[-1,38,[]],0,0,0,0,[[-1,214],[[11,[[10,[9]]]]],[]],[[-1,[51,[7]],[51,[7]],18],[[11,[[10,[9]]]]],143],[[-1,215],[[11,[[10,[9]]]]],[]],[-1,4,[]],0,0,0,[216,87],[[216,209],[[11,[[10,[9]]]]]],[[216,210],[[11,[[10,[9]]]]]],[[216,211],[[11,[[10,[9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[216,[[0,[217]]]],[[216,218],218],[[216,212],[[11,[[10,[9]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[216,213],[[11,[[10,[9]]]]]],[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[[],3],0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[[216,[51,[7]]],[[51,[7]]]],[[216,[51,[7]]],[[51,[7]]]],[216,38],[[[51,[7]],182],216],[[216,214],[[11,[[10,[9]]]]]],[[216,215],[[11,[[10,[9]]]]]],[[216,[51,[7]]],[[51,[7]]]],0,[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[216,195],[[11,[[10,[9]]]]]],[[216,195],195],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[219,87],[[219,209],[[11,[[10,[9]]]]]],[[219,210],[[11,[[10,[9]]]]]],[[219,211],[[11,[[10,[9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[219,212],[[11,[[10,[9]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[220,190],[[219,213],[[11,[[10,[9]]]]]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[[219,[51,[221]]],[[36,[[51,[222]]]]]],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,0,0,[219,38],0,0,0,0,0,0,[[219,214],[[11,[[10,[9]]]]]],0,[[219,215],[[11,[[10,[9]]]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[215,[[36,[223]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[214,[[36,[224]]]],[-1,[[20,[-2]]],[],[]],[210,[[36,[225]]]],[211,[[36,[226]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[209,[[36,[227]]]],[-1,[[20,[-2]]],[],[]],[212,[[36,[228]]]],[213,[[36,[229]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[219,195],[[11,[[10,[9]]]]]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[36,[182]]],[[230,[38]]],[[230,[[8,[-1]]]]]],[231,182],0,0,[[[232,[-1]]],87,[141,142,143]],[[[232,[-1]],209],[[11,[[10,[9]]]]],[141,142,143]],[[[232,[-1]],210],[[11,[[10,[9]]]]],[141,142,143]],[[[232,[-1]],211],[[11,[[10,[9]]]]],[141,142,143]],[-1,-2,[],[]],[-1,-2,[],[]],[[[232,[-1]]],4,[]],[[[232,[-1]],212],[[11,[[10,[9]]]]],[141,142,143]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],[[232,[-1]]],[]],[[[232,[-1]],213],[[11,[[10,[9]]]]],[141,142,143]],[3,-1,[]],[3,-1,[]],[3,4],[[[232,[-1]],30],31,[]],[-1,-1,[]],[-1,-2,[],[]],[[],3],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],0,[[[232,[-1]]],38,[141,142,143]],[[],[[232,[-1]]],[]],[[[232,[-1]],214],[[11,[[10,[9]]]]],[141,142,143]],[[[232,[-1]],215],[[11,[[10,[9]]]]],[141,142,143]],[[[232,[-1]]],4,[141,142,143]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[232,[-1]],195],[[11,[[10,[9]]]]],[141,142,143]],[-1,21,[]],[-1,-2,[],[]],[[],[[51,[190]]]],[-1,4,233],[-1,4,233],[-1,4,233],[[[234,[233]]],4],[-1,4,233],[-1,4,233],[-1,4,233],[-1,4,233],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[195,-1],195,[[92,[[51,[235]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[236,236],[237,237],[235,235],[238,238],[239,239],[195,195],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[[237,[19,[[51,[7]]]]],18],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],238],[[],195],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[[236,236],18],[[237,237],18],[[235,235],18],[[238,238],18],[[239,239],18],[[195,195],18],0,[[238,238],4],0,[[236,30],31],[[237,30],31],[[235,30],31],[[238,30],31],[[239,30],31],[[195,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[195,238],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[[195,195],195],[-1,195,208],[[[51,[7]],236,[19,[[51,[7]]]]],237],[[],195],[[195,-1],195,[[92,[[51,[235]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[222,[[36,[218]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[240,[[36,[239]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[-1,195],[[11,[[10,[9]]]]],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[195,-1],195,[[92,[[51,[237]]]]]],[[[51,[7]],236],237],[[[51,[7]],236,[51,[7]]],237],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[241,242],[3,-1,[]],[3,-1,[]],[243,244],[3,-1,[]],[245,246],[247,244],[3,-1,[]],[248,246],[3,-1,[]],[249,242],[3,-1,[]],[250,242],[3,-1,[]],[3,-1,[]],[251,242],[3,-1,[]],[252,242],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],22],[3,-1,[]],[3,-1,[]],[-1,[[20,[22]]],45],[3,4],[52,22],[[22,22],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[22,30],31],[[22,30],31],[253,22],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],52,[166,167],168],[[22,-1],4,169],0,[[],3],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[[52,-1],22,[[92,[47]]]],[[22,-1],20,57],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[254,215],[[11,[[10,[9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[3,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,[[182,[51,[7]],[51,[7]],3,18,18],254],[[182,215,3,[234,[[255,[-1,-2]]]]],[[256,[-1,-2]]],[],[]],[[[257,[-1,-2]]],19,[],[]],0,[[[11,[[256,[-1,-2]]]],258],[[259,[19]]],[],[]],0,[254,[[36,[[4,[254,[19,[260]]]]]]]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[11,[-1]],258],[[259,[[19,[20]]]]],[]],[254,[[36,[4]]]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[261,261],[190,190],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[261,52],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[[190,190],18],[261,105],[261,47],[[261,30],31],[[190,30],31],[[190,30],31],[-1,-1,[]],[[[4,[[51,[7]],[51,[7]]]]],190],[220,190],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[190,[[8,[7]]]],0,0,[262,190],[261,52],0,0,[190,[[51,[7]]]],[190,[[51,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,[190,[[8,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[],79],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[69]]],45],[-1,[[20,[63]]],45],[-1,[[20,[53]]],45],[-1,[[20,[74]]],45],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[[69,69],18],[[63,63],18],[[53,53],18],[[74,74],18],[[263,30],31],[[79,30],31],[[69,30],31],[[63,30],31],[[53,30],31],[[74,30],31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[[264,[51,[28]],27],63],[34,263],[[264,[51,[28]],27],263],[[47,47,47,13],263],[[47,47,47,13],263],0,0,0,[[69,-1],20,57],[[63,-1],20,57],[[53,-1],20,57],[[74,-1],20,57],0,0,0,0,0,0,[69,17],[63,17],[53,17],[74,17],[69,58],[63,58],[53,58],[74,58],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[265,[[36,[263]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[266,[[36,[79]]]],[-1,[[20,[-2]]],[],[]],[267,[[36,[69]]]],[-1,[[20,[-2]]],[],[]],[268,[[36,[63]]]],[-1,[[20,[-2]]],[],[]],[269,[[36,[53]]]],[270,[[36,[74]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],0,[[271,30],31],[[272,30],31],[[273,30],31],[-1,-1,[]],[274,272],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[8,[7]],-1],20,57],[[[8,[[51,[7]]]],-1],20,57],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[275,275],[276,276],[64,64],[277,277],[278,278],[279,279],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[[8,[64]]],[[170,[118,22]]]],[[[8,[64]]],[[170,[118,277]]]],[[[8,[64]]],[[170,[118,[280,[52]]]]]],[[],64],[[],278],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[275]]],45],[-1,[[20,[276]]],45],[-1,[[20,[64]]],45],[-1,[[20,[277]]],45],[-1,[[20,[278]]],45],[-1,[[20,[279]]],45],[64,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[[275,275],18],[[276,276],18],[[64,64],18],[[277,277],18],[[278,278],18],[[279,279],18],[[[8,[64]]],[[51,[22]]]],[[[8,[64]],22],[[51,[118]]]],[[[8,[64]]],[[280,[22]]]],[[[8,[64]],118],[[19,[22]]]],[[281,118],[[19,[22]]]],[[275,30],31],[[276,30],31],[[64,30],31],[[277,30],31],[[278,30],31],[[279,30],31],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[282,278],[-1,-1,[]],[28,279],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[[51,[7]]]]],45],[-1,[[20,[[51,[[51,[7]]]]]]],45],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[64,18],0,0,0,[[276,[51,[64]]],275],[41,278],0,0,[[[8,[64]]],[[36,[194]]]],[281,[[170,[118,22]]]],0,0,[[275,-1],20,57],[[276,-1],20,57],[[64,-1],20,57],[[277,-1],20,57],[[278,-1],20,57],[[279,-1],20,57],[[64,[19,[277]]],18],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[283,[[36,[276]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[[8,[253]],284],[[36,[275]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[210,-1],210,[[92,[[51,[7]]]]]],[[209,-1],209,[[92,[[51,[7]]]]]],[[211,-1,-2],211,[[92,[[51,[7]]]]],[[92,[[51,[7]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[215,215],[260,260],[214,214],[285,285],[210,210],[286,286],[211,211],[287,287],[209,209],[288,288],[212,212],[289,289],[213,213],[290,290],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],215],[[],214],[[],210],[[],211],[[],209],[[],212],[[],289],[[],213],[290,291],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[[260,260],18],[[285,285],18],[[290,290],18],0,[[215,30],31],[[215,30],31],[[260,30],31],[[260,30],31],[[214,30],31],[[285,30],31],[[286,30],31],[[286,30],31],[[211,30],31],[[287,30],31],[[209,30],31],[[288,30],31],[[212,30],31],[[289,30],31],[[213,30],31],[[290,30],31],[-1,-1,[]],[292,215],[-1,-1,[]],[293,214],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[294,210],[-1,-1,[]],[-1,-1,[]],[295,211],[-1,-1,[]],[296,209],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[297,212],[-1,-1,[]],[298,213],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[289,-1],[[20,[-2,-3]]],75,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[289,18],0,0,0,0,0,0,0,0,0,0,0,0,[[],215],[[],214],[[],210],[[],211],[[],209],[[],212],[[],213],0,0,0,0,0,0,0,0,0,[215,[[4,[[299,[[51,[7]]]],[299,[[51,[7]]]]]]]],[213,[[4,[[299,[[51,[7]]]],[299,[[51,[7]]]]]]]],0,0,0,[260,[[51,[190]]]],[289,[[19,[190]]]],[287,[[51,[190]]]],[290,[[51,[190]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[260,300],301],[[285,300],302],[[286,300],303],[[287,300],304],[[288,300],305],[[289,300],306],[[290,300],307],[[[51,[7]],[51,[7]]],[[4,[[299,[[51,[7]]]],[299,[[51,[7]]]]]]]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[301,[[36,[260]]]],[-1,[[20,[-2]]],[],[]],[302,[[36,[285]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[303,[[36,[286]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[304,[[36,[287]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[305,[[36,[288]]]],[-1,[[20,[-2]]],[],[]],[306,[[36,[289]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[307,[[36,[290]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[212,-1],212,[[92,[[51,[7]]]]]],[[215,-1],215,[[92,[[51,[7]]]]]],[[214,-1],214,[[92,[[51,[7]]]]]],[[212,-1],212,[[92,[[51,[7]]]]]],[[213,-1],213,[[92,[[51,[7]]]]]],[215,215],[[215,291],215],[[215,-1],215,[[92,[[51,[7]]]]]],[[213,-1],213,[[92,[[51,[7]]]]]],[214,214],[211,211],[209,209],[213,213],[[215,-1,-2],215,[[92,[[51,[7]]]]],[[92,[[51,[7]]]]]],[[213,-1,-2],213,[[92,[[51,[7]]]]],[[92,[[51,[7]]]]]],[[214,-1],214,[[92,[[51,[7]]]]]],[[212,-1],212,[[92,[[51,[7]]]]]],[[[19,[300]]],[[36,[4]]]],[[[8,[7]]],[[51,[7]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],3],[[],3],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,[[-1,52,52,182],308,[[230,[38]]]],[308,[[36,[52]]]],[309,[[36,[52]]]],0,[309,[[36,[[310,[52]]]]]],0,0,0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[311,[8,[47]]],[[11,[[10,[9]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[190,[[36,[[4,[47,[51,[7]]]]]]]],[[311,38],[[11,[[10,[9]]]]]],[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[[],3],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,18,[]],0,0,[182,311],[[311,38,[51,[7]]],[[11,[[10,[9]]]]]],[38,47],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[311,38],[[11,[[10,[9]]]]]],[38,47],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[17,17],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[-1,[[20,[17]]],45],[3,4],[[17,17],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[[17,30],31],[[17,30],31],[201,17],[-1,-1,[]],[312,17],[58,17],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],52,[166,167],168],[[17,-1],4,169],[[],3],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[[-1,-2,-3],17,[[92,[47]]],[[92,[47]]],[[92,[47]]]],0,[[17,-1],20,57],0,[17,58],[-1,-2,[],[]],[-1,47,[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[[8,[7]]],[[51,[7]]]],[[[8,[7]]],[[51,[7]]]]],"c":[3421,3422,3466,3469,3484],"p":[[3,"Compat",5758],[3,"Context",24],[15,"usize"],[15,"tuple"],[3,"Request",5759],[3,"Request",5759],[15,"u8"],[15,"slice"],[8,"Future",5760],[3,"Box",5761],[3,"Pin",5762],[3,"DummyKvCacheInvalidator",24],[6,"TableId",5763],[15,"u32"],[3,"Global",5764],[3,"DummyCacheInvalidator",24],[3,"TableName",5710],[15,"bool"],[4,"Option",5765],[4,"Result",5766],[3,"TypeId",5767],[3,"Peer",4367],[3,"RegionRequest",5768],[3,"QueryRequest",5768],[3,"DdlContext",124],[3,"TableMetadataAllocatorContext",124],[3,"RawTableInfo",5763],[3,"Partition",5769],[3,"ExecutorContext",124],[3,"Formatter",5770],[6,"Result",5770],[3,"SubmitDdlTaskRequest",4604],[3,"AlterTableProcedure",219],[3,"AlterExpr",5771],[4,"Kind",5772],[6,"Result",706],[4,"AlterTableState",219],[15,"str"],[3,"UncasedStr",5773],[3,"TableInfo",5763],[3,"RegionId",5774],[3,"AlterRequest",5768],[4,"Kind",5775],[6,"ColumnId",5774],[8,"Deserializer",5776],[3,"AlterTableData",219],[3,"String",5777],[6,"Result",5778],[3,"Context",5779],[3,"LockKey",5779],[3,"Vec",5780],[15,"u64"],[3,"AlterTableTask",4604],[3,"TableInfoValue",3219],[3,"DeserializedValueWithBytes",2685],[4,"Status",5779],[8,"Serializer",5781],[3,"TableReference",5782],[4,"CreateTableState",328],[3,"CreateTableProcedure",328],[3,"CreateRequest",5768],[3,"CreateTableData",328],[3,"CreateTableTask",4604],[3,"RegionRoute",4889],[3,"TableCreator",328],[4,"DropTableState",454],[3,"DropTableData",454],[3,"DropTableProcedure",454],[3,"DropTableTask",4604],[3,"TableRouteValue",3487],[4,"TruncateTableState",555],[3,"TruncateTableData",555],[3,"TruncateTableProcedure",555],[3,"TruncateTableTask",4604],[8,"FnOnce",5783],[4,"Error",706],[4,"Error",5778],[3,"DdlManager",655],[3,"SubmitDdlTaskResponse",4604],[3,"ProcedureId",5779],[3,"ProcedureWithId",5779],[6,"TableMetadataManagerRef",2685],[6,"ProcedureManagerRef",5779],[6,"DatanodeManagerRef",110],[6,"CacheInvalidatorRef",24],[6,"TableMetadataAllocatorRef",124],[8,"Any",5767],[8,"Error",5784],[3,"Backtrace",5785],[3,"EmptyKeySnafu",706],[3,"InvalidTxnResultSnafu",706],[8,"Into",5786],[3,"NextSequenceSnafu",706],[3,"SequenceOutOfRangeSnafu",706],[3,"UnexpectedSequenceValueSnafu",706],[3,"TableInfoNotFoundSnafu",706],[3,"UnsupportedSnafu",706],[3,"PrimaryKeyNotFoundSnafu",706],[3,"TableRouteNotFoundSnafu",706],[3,"PayloadNotExistSnafu",706],[3,"SendMessageSnafu",706],[3,"ParseOptionSnafu",706],[3,"RouteInfoCorruptedSnafu",706],[3,"IllegalServerStateSnafu",706],[15,"i32"],[3,"InvalidProtoMsgSnafu",706],[3,"UnexpectedSnafu",706],[3,"TableAlreadyExistsSnafu",706],[3,"CatalogAlreadyExistsSnafu",706],[3,"SchemaAlreadyExistsSnafu",706],[3,"TableNotFoundSnafu",706],[3,"RenameTableSnafu",706],[3,"InvalidTableMetadataSnafu",706],[3,"GetKvCacheSnafu",706],[3,"CacheNotGetSnafu",706],[3,"EtcdTxnOpResponseSnafu",706],[3,"MoveRegionSnafu",706],[6,"RegionNumber",5774],[3,"InvalidHeartbeatResponseSnafu",706],[8,"Clone",5787],[3,"ConnectEtcdSnafu",706],[3,"EtcdFailedSnafu",706],[3,"RegisterProcedureLoaderSnafu",706],[3,"SubmitProcedureSnafu",706],[3,"WaitProcedureSnafu",706],[3,"ConvertRawTableInfoSnafu",706],[3,"BuildTableMetaSnafu",706],[3,"TableSnafu",706],[3,"DecodeProtoSnafu",706],[3,"EncodeJsonSnafu",706],[3,"DecodeJsonSnafu",706],[3,"SerdeJsonSnafu",706],[3,"ConvertAlterTableRequestSnafu",706],[3,"ConvertRawKeySnafu",706],[3,"InvalidCatalogValueSnafu",706],[3,"ExternalSnafu",706],[3,"OperateDatanodeSnafu",706],[3,"RetryLaterSnafu",706],[8,"Debug",5770],[8,"StackError",5788],[8,"ErrorExt",5788],[8,"Send",5789],[8,"Sync",5789],[4,"StatusCode",5790],[4,"HandleControl",2237],[3,"HeartbeatResponseHandlerContext",2237],[3,"HandlerGroupExecutor",2237],[6,"MailboxRef",2352],[3,"HeartbeatResponse",5769],[6,"HeartbeatResponseHandlerRef",2237],[3,"ParseMailboxMessageHandler",2327],[3,"MessageMeta",2352],[6,"OutgoingMessage",2352],[3,"Sender",5791],[3,"HeartbeatMailbox",2352],[3,"MailboxMessage",5769],[6,"IncomingMessage",2352],[3,"RegionIdent",2421],[3,"DowngradeRegionReply",2421],[3,"SimpleReply",2421],[3,"OpenRegion",2421],[3,"DowngradeRegion",2421],[4,"Instruction",2421],[4,"InstructionReply",2421],[3,"Error",5770],[8,"Hash",5792],[8,"Sized",5789],[8,"BuildHasher",5792],[8,"Hasher",5792],[3,"HashMap",5793],[3,"TableMetadataManager",2685],[3,"CatalogManager",2894],[8,"Serialize",5781],[8,"DeserializeOwned",5776],[3,"DatanodeTableManager",2985],[3,"DATANODE_TABLE_KEY_PATTERN",2685],[3,"Regex",5794],[3,"TABLE_NAME_KEY_PATTERN",2685],[3,"CATALOG_NAME_KEY_PATTERN",2685],[3,"SCHEMA_NAME_KEY_PATTERN",2685],[3,"Bytes",5795],[6,"KvBackendRef",3583],[3,"SchemaManager",3117],[3,"TableInfoManager",3219],[3,"TableNameManager",3316],[3,"TableRouteManager",3487],[8,"Fn",5783],[3,"RegionInfo",2985],[3,"CatalogNameKey",2894],[3,"KeyValue",4529],[6,"BoxStream",5796],[3,"CatalogNameValue",2894],[3,"DatanodeTableKey",2985],[6,"RegionDistribution",2685],[3,"Txn",3919],[3,"DatanodeTableValue",2985],[6,"DatanodeId",0],[3,"SchemaNameKey",3117],[3,"SchemaNameValue",3117],[3,"TableInfoKey",3219],[3,"TableNameKey",3316],[3,"TableNameValue",3316],[3,"TableRegionKey",3420],[3,"TableRegionValue",3420],[6,"RegionDistribution",3420],[3,"TableRouteKey",3487],[6,"TableId",5774],[8,"IntoIterator",5797],[3,"BatchDeleteRequest",5133],[3,"BatchGetRequest",5133],[3,"BatchPutRequest",5133],[3,"CompareAndPutRequest",5133],[3,"DeleteRangeRequest",5133],[3,"PutRequest",5133],[3,"RangeRequest",5133],[3,"ChrootKvBackend",3613],[8,"FnMut",5783],[3,"TxnResponse",3919],[3,"EtcdStore",3654],[3,"KeyValue",5798],[3,"TxnOp",5799],[3,"TxnResponse",5799],[3,"Get",3654],[3,"Put",3654],[3,"BatchGet",3654],[3,"BatchPut",3654],[3,"BatchDelete",3654],[3,"CompareAndPut",3654],[3,"Delete",3654],[8,"AsRef",5786],[3,"Client",5800],[3,"MemoryKvBackend",3870],[8,"KvBackend",3583],[3,"Arc",5801],[4,"TxnOp",3919],[4,"CompareOp",3919],[3,"Compare",3919],[3,"TxnRequest",3919],[4,"TxnOpResponse",3919],[4,"TxnOpResponse",5799],[3,"METRIC_META_TXN_REQUEST",4151],[6,"HistogramVec",5802],[3,"METRIC_META_CREATE_CATALOG",4151],[3,"Histogram",5802],[3,"METRIC_META_CREATE_CATALOG_COUNTER",4151],[6,"IntCounter",5803],[3,"METRIC_META_CREATE_SCHEMA",4151],[3,"METRIC_META_CREATE_SCHEMA_COUNTER",4151],[3,"METRIC_META_PROCEDURE_CREATE_TABLE",4151],[3,"METRIC_META_PROCEDURE_DROP_TABLE",4151],[3,"METRIC_META_PROCEDURE_ALTER_TABLE",4151],[3,"METRIC_META_PROCEDURE_TRUNCATE_TABLE",4151],[3,"Peer",5769],[3,"PaginationStreamFactory",4411],[6,"KeyValueDecoderFn",4411],[3,"PaginationStream",4411],[3,"SimpleKeyValueDecoder",4411],[3,"Context",5804],[4,"Poll",5805],[3,"RangeResponse",5133],[3,"ResponseHeader",4529],[3,"KeyValue",5769],[4,"DdlTask",4604],[3,"CreateTableExpr",5771],[4,"Task",5806],[3,"SubmitDdlTaskResponse",5769],[3,"DropTableTask",5769],[3,"CreateTableTask",5769],[3,"AlterTableTask",5769],[3,"TruncateTableTask",5769],[3,"LockRequest",4815],[3,"LockResponse",4815],[3,"UnlockRequest",4815],[3,"LockResponse",5769],[3,"TableRoute",4889],[3,"Table",4889],[4,"RegionStatus",4889],[3,"Region",4889],[3,"Partition",4889],[3,"HashSet",5807],[3,"RegionRoutes",4889],[3,"Region",5769],[3,"Table",5769],[3,"TableRoute",5769],[3,"PutResponse",5133],[3,"BatchGetResponse",5133],[3,"BatchPutResponse",5133],[3,"BatchDeleteResponse",5133],[3,"CompareAndPutResponse",5133],[3,"DeleteRangeResponse",5133],[15,"i64"],[3,"RangeRequest",5769],[3,"PutRequest",5769],[3,"BatchGetRequest",5769],[3,"BatchPutRequest",5769],[3,"BatchDeleteRequest",5769],[3,"CompareAndPutRequest",5769],[3,"DeleteRangeRequest",5769],[4,"Bound",5808],[3,"ResponseHeader",5769],[3,"RangeResponse",5769],[3,"PutResponse",5769],[3,"BatchGetResponse",5769],[3,"BatchPutResponse",5769],[3,"BatchDeleteResponse",5769],[3,"CompareAndPutResponse",5769],[3,"DeleteRangeResponse",5769],[3,"Sequence",5615],[3,"Inner",5615],[3,"Range",5808],[3,"KvStateStore",5676],[3,"TableName",5769],[6,"KvCacheInvalidatorRef",24],[8,"KvCacheInvalidator",24],[8,"CacheInvalidator",24],[6,"DatanodeRef",110],[8,"DatanodeManager",110],[8,"Datanode",110],[6,"DdlTaskExecutorRef",124],[8,"TableMetadataAllocator",124],[8,"DdlTaskExecutor",124],[6,"DdlManagerRef",655],[13,"CatalogAlreadyExists",2139],[13,"SchemaAlreadyExists",2139],[13,"IllegalServerState",2139],[13,"InvalidTxnResult",2139],[13,"NextSequence",2139],[13,"UnexpectedSequenceValue",2139],[13,"SendMessage",2139],[13,"RouteInfoCorrupted",2139],[13,"InvalidProtoMsg",2139],[13,"Unexpected",2139],[13,"InvalidTableMetadata",2139],[13,"GetKvCache",2139],[13,"EtcdTxnOpResponse",2139],[13,"MoveRegion",2139],[13,"ConnectEtcd",2139],[13,"EtcdFailed",2139],[13,"BuildTableMeta",2139],[13,"DecodeProto",2139],[13,"EncodeJson",2139],[13,"DecodeJson",2139],[13,"SerdeJson",2139],[13,"ConvertRawKey",2139],[13,"PrimaryKeyNotFound",2139],[13,"ParseOption",2139],[13,"CacheNotGet",2139],[13,"EmptyKey",2139],[13,"SequenceOutOfRange",2139],[13,"TableInfoNotFound",2139],[13,"RegisterProcedureLoader",2139],[13,"SubmitProcedure",2139],[13,"Unsupported",2139],[13,"WaitProcedure",2139],[13,"ConvertRawTableInfo",2139],[13,"Table",2139],[13,"TableRouteNotFound",2139],[13,"PayloadNotExist",2139],[13,"ConvertAlterTableRequest",2139],[13,"TableAlreadyExists",2139],[13,"TableNotFound",2139],[13,"RenameTable",2139],[13,"InvalidCatalogValue",2139],[13,"External",2139],[13,"InvalidHeartbeatResponse",2139],[13,"OperateDatanode",2139],[13,"RetryLater",2139],[6,"HeartbeatResponseHandlerExecutorRef",2237],[8,"HeartbeatResponseHandler",2237],[8,"HeartbeatResponseHandlerExecutor",2237],[8,"TableMetaKey",2685],[6,"ResettableKvBackendRef",3583],[8,"ResettableKvBackend",3583],[8,"TxnService",3919],[4,"PaginationStreamState",4411],[6,"SequenceRef",5615]],"b":[[1378,"impl-Debug-for-Error"],[1379,"impl-Display-for-Error"],[2540,"impl-Debug-for-RegionIdent"],[2541,"impl-Display-for-RegionIdent"],[2542,"impl-Debug-for-DowngradeRegionReply"],[2543,"impl-Display-for-DowngradeRegionReply"],[2544,"impl-Debug-for-SimpleReply"],[2545,"impl-Display-for-SimpleReply"],[2546,"impl-Debug-for-OpenRegion"],[2547,"impl-Display-for-OpenRegion"],[2548,"impl-Display-for-DowngradeRegion"],[2549,"impl-Debug-for-DowngradeRegion"],[2550,"impl-Debug-for-Instruction"],[2551,"impl-Display-for-Instruction"],[2552,"impl-Display-for-InstructionReply"],[2553,"impl-Debug-for-InstructionReply"],[2932,"impl-Display-for-CatalogNameKey%3C\'_%3E"],[2933,"impl-Debug-for-CatalogNameKey%3C\'a%3E"],[3158,"impl-Display-for-SchemaNameKey%3C\'_%3E"],[3159,"impl-Debug-for-SchemaNameKey%3C\'a%3E"],[3356,"impl-Display-for-TableNameKey%3C\'_%3E"],[3357,"impl-Debug-for-TableNameKey%3C\'a%3E"],[4387,"impl-Debug-for-Peer"],[4388,"impl-Display-for-Peer"],[4557,"impl-Debug-for-KeyValue"],[4558,"impl-Display-for-KeyValue"],[4560,"impl-From%3C(Vec%3Cu8%3E,+Vec%3Cu8%3E)%3E-for-KeyValue"],[4561,"impl-From%3CKeyValue%3E-for-KeyValue"],[5304,"impl-Display-for-RangeRequest"],[5305,"impl-Debug-for-RangeRequest"],[5306,"impl-Debug-for-RangeResponse"],[5307,"impl-Display-for-RangeResponse"],[5310,"impl-Display-for-BatchGetResponse"],[5311,"impl-Debug-for-BatchGetResponse"],[5728,"impl-Display-for-TableName"],[5729,"impl-Debug-for-TableName"],[5730,"impl-From%3CTableNameKey%3C\'_%3E%3E-for-TableName"],[5732,"impl-From%3CTableName%3E-for-TableName"],[5733,"impl-From%3CTableReference%3C\'_%3E%3E-for-TableName"]]},\
"common_procedure":{"doc":"Common traits and structures for the procedure framework.","t":"GDINNCNNDIDIGEDCNNENCMKAKMAKAMAMMKKKMMKKKAKKAMMMMMNDNDNDNDNENDNDNDNDNDNNDNDNDGNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDRDDDGDMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMAMMMMMMMMLLLLLLLMMMMMLLMLMLMLLLLLMMMMMALMLLLLLMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLMNNENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMMMMLLLMLLMLLMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLGGDIGNNNNDDDIDIGEDNNENMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMMMMKKKMMMLKLLLLMKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMMMMMNERDDDNNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLMOMLLAMMMLLLLLLLLLLLLLLLMLLLLGGDIGMKLLLLLLKLLLLLLLLLLMMKLMLLLLKLGMMF","n":["BoxedProcedure","Context","ContextProvider","Done","Done","Error","Executing","Failed","LockKey","Procedure","ProcedureId","ProcedureManager","ProcedureManagerRef","ProcedureState","ProcedureWithId","Result","Retrying","Running","Status","Suspended","Watcher","alloc","dump","error","execute","id","local","lock_key","options","phantom","procedure","procedure","procedure_id","procedure_state","procedure_state","procedure_watcher","provider","ptr","register_loader","start","stop","store","submit","type_name","watcher","error","error","persist","persist","subprocedures","CorruptedData","CorruptedDataSnafu","DeleteState","DeleteStateSnafu","DeleteStates","DeleteStatesSnafu","DuplicateProcedure","DuplicateProcedureSnafu","Err","Error","External","ExternalSnafu","FromJson","FromJsonSnafu","ListState","ListStateSnafu","LoaderConflict","LoaderConflictSnafu","ManagerNotStart","ManagerNotStartSnafu","Ok","ProcedureExec","ProcedureExecSnafu","ProcedurePanic","ProcedurePanicSnafu","PutState","PutStateSnafu","Result","RetryLater","RetryLaterSnafu","RetryTimesExceeded","RetryTimesExceededSnafu","StartRemoveOutdatedMetaTask","StartRemoveOutdatedMetaTaskSnafu","StopRemoveOutdatedMetaTask","StopRemoveOutdatedMetaTaskSnafu","SubprocedureFailed","SubprocedureFailedSnafu","ToJson","ToJsonSnafu","WaitWatcher","WaitWatcherSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","external","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_ext","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_retry_later","key","key","keys","name","next","path","procedure_id","procedure_id","procedure_id","retry_later","source","status_code","subprocedure_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","key","key","keys","location","location","location","location","location","location","location","location","location","location","location","location","location","name","path","procedure_id","procedure_id","procedure_id","source","source","source","source","source","source","source","source","source","source","subprocedure_id","LoadedProcedure","LocalManager","META_TTL","ManagerConfig","ManagerContext","ProcedureMeta","ProcedureMetaRef","RemoveOutdatedMetaFunction","alloc","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_remove_outdated_meta_task","call","child_notify","children","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","contains_procedure","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","find_procedures","finished_procedures","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","list_children","load_one_procedure","load_one_procedure_from_message","loaders","lock","lock_key","lock_map","lock_notify","manager_ctx","manager_ctx","max_retry_times","max_retry_times","messages","name","new","new","new","notify_by_subprocedure","num_children","on_procedures_finish","parent_id","parent_id","parent_path","phantom","procedure","procedure_state","procedure_state","procedure_store","procedure_watcher","procedures","procedures_in_tree","ptr","push_child","recover","register_loader","remove_messages","remove_outdated_meta","remove_outdated_meta_task","remove_outdated_meta_task_interval","remove_outdated_meta_ttl","retry_delay","retry_delay","runner","running","running","set_state","start","start","state","state","state_receiver","state_sender","step","stop","stop","submit","submit_root","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_procedure","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","watcher","Lock","LockMap","acquire_lock","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_owner","hold_lock","init","init","into","into","into_request","into_request","locks","new","owner","release_lock","switch_owner","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","waiters","Continue","Done","ExecResult","Failed","ProcedureGuard","RetryLater","Runner","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit_procedure","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","done","drop","drop","drop","drop","execute_once","execute_once_with_retry","execute_procedure_in_loop","exponential_builder","finish","finish","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","manager_ctx","manager_ctx","meta","meta","new","on_suspended","persist_procedure","procedure","rollback","rollback_procedure","rolling_back","run","running","step","store","submit_subprocedure","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_on_err","ProcedureConfig","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","init","into","into_request","max_retry_times","retry_delay","serialize","to_owned","try_from","try_into","type_id","vzip","BoxedProcedure","BoxedProcedureLoader","Context","ContextProvider","ContextProviderRef","Done","Done","Executing","Failed","LockKey","ParseIdError","ParseIdSnafu","Procedure","ProcedureId","ProcedureManager","ProcedureManagerRef","ProcedureState","ProcedureWithId","Retrying","Running","Status","Suspended","alloc","alloc","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dump","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","execute","executing","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","get_hash","hash","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_done","is_failed","is_retrying","is_running","keys_to_lock","keys_to_unlock","lock_key","need_persist","new","parse_str","phantom","phantom","procedure","procedure_id","procedure_state","procedure_state","procedure_watcher","provider","ptr","ptr","random","register_loader","retrying","serialize","single","source","source","start","stop","submit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_random_id","error","error","persist","persist","subprocedures","Commit","KeyType","PROC_PATH","ParsedKey","ProcedureMessage","ProcedureStore","Rollback","Step","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_procedure","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","data","delete_procedure","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_str","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","key_type","load_messages","load_one_message","new","parent_id","parse_str","prefix","proc_path","proc_path","proc_path","procedure_id","rollback_procedure","serialize","state_store","step","step","store","store_procedure","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","KeyValue","KeyValueStream","ObjectStateStore","StateStore","StateStoreRef","alloc","batch_delete","batch_delete","borrow","borrow_mut","compat","compat_mut","compat_ref","delete","delete","deref","deref_mut","drop","fmt","from","init","into","into_request","new","phantom","ptr","put","put","store","try_from","try_into","type_id","vzip","walk_top_down","walk_top_down","Watcher","shared","version","wait"],"q":[[0,"common_procedure"],[45,"common_procedure::ProcedureState"],[47,"common_procedure::Status"],[50,"common_procedure::error"],[559,"common_procedure::error::Error"],[596,"common_procedure::local"],[773,"common_procedure::local::lock"],[817,"common_procedure::local::runner"],[899,"common_procedure::options"],[931,"common_procedure::procedure"],[1173,"common_procedure::procedure::ProcedureState"],[1175,"common_procedure::procedure::Status"],[1178,"common_procedure::store"],[1299,"common_procedure::store::state_store"],[1334,"common_procedure::watcher"],[1338,"alloc::string"],[1339,"core::future::future"],[1340,"alloc::boxed"],[1341,"core::pin"],[1342,"core::option"],[1343,"core::ops::function"],[1344,"core::any"],[1345,"core::error"],[1346,"snafu::backtrace_inert"],[1347,"core::convert"],[1348,"core::clone"],[1349,"async_compat"],[1350,"alloc::vec"],[1351,"common_error::ext"],[1352,"core::marker"],[1353,"core::marker"],[1354,"core::fmt"],[1355,"core::fmt"],[1356,"common_error::ext"],[1357,"core::any"],[1358,"alloc::sync"],[1359,"core::time"],[1360,"serde::de"],[1361,"serde::ser"],[1362,"core::hash"],[1363,"core::marker"],[1364,"core::iter::traits::collect"],[1365,"std::collections::hash::map"],[1366,"opendal::types::operator::operator"]],"d":["Boxed Procedure.","Procedure execution context.","ContextProvider provides information about procedures in …","the procedure is done.","The procedure is finished.","","The procedure is still executing.","The procedure is failed and cannot proceed anymore.","Keys to identify required locks.","A <code>Procedure</code> represents an operation or a set of operations …","Unique id for Procedure.","<code>ProcedureManager</code> executes Procedure submitted to it.","Ref-counted pointer to the ProcedureManager.","State of a submitted procedure.","A procedure with specific id.","","The procedure is failed and can be retried.","The procedure is running.","Procedure execution status.","The procedure has suspended itself and is waiting for …","","","Dump the state of the procedure to a string.","","Execute the procedure.","Id of the procedure.","","Returns the LockKey that this procedure needs to acquire.","Common traits and structures for the procedure framework.","","","","Id of the procedure.","Query the procedure state.","Query the procedure state.","Returns a Watcher to watch ProcedureState of specific …","ProcedureManager context provider.","","Registers loader for specific procedure type <code>name</code>.","Starts the background GC task.","Stops the background GC task.","","Submits a procedure to execute.","Type name of the procedure.","","","","Whether the framework needs to persist the procedure.","Whether the framework needs to persist the procedure.","","","SNAFU context selector for the <code>Error::CorruptedData</code> variant","","SNAFU context selector for the <code>Error::DeleteState</code> variant","","SNAFU context selector for the <code>Error::DeleteStates</code> variant","","SNAFU context selector for the <code>Error::DuplicateProcedure</code> …","Contains the error value","Procedure error.","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::FromJson</code> variant","","SNAFU context selector for the <code>Error::ListState</code> variant","","SNAFU context selector for the <code>Error::LoaderConflict</code> …","","SNAFU context selector for the <code>Error::ManagerNotStart</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ProcedureExec</code> variant","","SNAFU context selector for the <code>Error::ProcedurePanic</code> …","","SNAFU context selector for the <code>Error::PutState</code> variant","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::RetryTimesExceeded</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::SubprocedureFailed</code> …","","SNAFU context selector for the <code>Error::ToJson</code> variant","","SNAFU context selector for the <code>Error::WaitWatcher</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new Error::External error from source <code>err</code>.","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Error::RetryLater or Error::External error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine whether it is a retry later type through …","","","","","","","","","","Creates a new Error::RetryLater error from source <code>err</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Procedure loaded from store.","A ProcedureManager that maintains procedure states locally.","The expired time of a procedure’s metadata.","Config for LocalManager.","Shared context of the manager.","Shared metadata of a procedure.","Reference counted pointer to ProcedureMeta.","","","","","","","","","","","","","","","Build remove outedated meta task","","Notify to wait for subprocedures.","Id of child procedures.","","","","","","","","","","","","","","","","","","","","Returns true if the procedure with specific <code>procedure_id</code> …","","","","","","","","","","","","","","","","","","","","Finds procedures by given <code>procedure_ids</code>.","Ids and finished time of finished procedures.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Id of this procedure.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Append subprocedures to given <code>buffer</code>.","Load procedure with specific <code>procedure_id</code> from cached …","Load procedure from specific ProcedureMessage.","Procedure loaders. The key is the type name of the …","","Lock required by this procedure.","","Notify to wait for a lock.","","","","","Messages loaded from the procedure store.","","Returns a new ManagerContext.","Create a new LocalManager with specific <code>config</code>.","","Notify a suspended parent procedure with specific …","Returns the number of subprocedures.","Clean resources of finished procedures.","","Parent procedure id.","","","","","","","","","Returns all procedures in the tree (including given <code>root</code> …","","Push <code>procedure_id</code> of the subprocedure to the metadata.","Recovers unfinished procedures and reruns them.","","Remove cached ProcedureMessage by ids.","Remove metadata of outdated procedures.","GC task.","","","","","","Return <code>ProcedureManager</code> is running.","Running flag.","Update current ProcedureState.","Set the running flag.","","Returns the ProcedureState of specific <code>procedure_id</code>.","Returns current ProcedureState.","Receiver to watch the procedure state.","Sender to notify the procedure state.","","","","","Submit a root procedure with given <code>procedure_id</code>.","","","","","","","Try to insert the <code>procedure</code> to the context if there is no …","","","","","","","","","","","","","","","","","","","","Returns the Watcher of specific <code>procedure_id</code>.","A lock entry.","Manages lock entries for procedures.","Acquire lock by <code>key</code> for procedure with specific <code>meta</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a Lock with specific <code>owner</code> procedure.","Returns true if the procedure with specific <code>procedure_id</code> …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a new LockMap.","Current lock owner.","Release lock by <code>key</code>.","Try to pop a waiter from the waiter list, set it as owner …","","","","","","","","","Waiter procedures.","","","","","A guard to cleanup procedure state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The procedure is finished successfully.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns a new ProcedureGuard.","","","","","","","Run the procedure.","Return <code>ProcedureManager</code> is running.","","","Submit a subprocedure with specific <code>procedure_id</code>.","","","","","","","","","","","","","Extend the retry time to wait for the next retry.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Max retry times of procedure.","Initial retry delay of procedures, increases exponentially.","","","","","","","Boxed Procedure.","Loader to recover the Procedure instance from serialized …","Procedure execution context.","ContextProvider provides information about procedures in …","Reference-counted pointer to ContextProvider.","the procedure is done.","The procedure is finished.","The procedure is still executing.","The procedure is failed and cannot proceed anymore.","Keys to identify required locks.","","SNAFU context selector for the <code>ParseIdError</code> error","A <code>Procedure</code> represents an operation or a set of operations …","Unique id for Procedure.","<code>ProcedureManager</code> executes Procedure submitted to it.","Ref-counted pointer to the ProcedureManager.","State of a submitted procedure.","A procedure with specific id.","The procedure is failed and can be retried.","The procedure is running.","Procedure execution status.","The procedure has suspended itself and is waiting for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dump the state of the procedure to a string.","","","","","","","","","","","Returns the error.","Execute the procedure.","Returns a Status::Executing with given <code>persist</code> flag.","Returns a ProcedureState with failed state.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Id of the procedure.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns true if the procedure state is done.","Returns true if the procedure state failed.","Returns true if the procedure state is retrying.","Returns true if the procedure state is running.","Returns the keys to lock.","Returns the keys to unlock.","Returns the LockKey that this procedure needs to acquire.","Returns <code>true</code> if the procedure needs the framework to …","Returns a new LockKey with keys from specific <code>iter</code>.","Parses id from string.","","","","Id of the procedure.","Query the procedure state.","Query the procedure state.","Returns a Watcher to watch ProcedureState of specific …","ProcedureManager context provider.","","","Returns a new unique ProcedureId randomly.","Registers loader for specific procedure type <code>name</code>.","Returns a ProcedureState with retrying state.","","Returns a new LockKey with only one key.","","","Starts the background GC task.","Stops the background GC task.","Submits a procedure to execute.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type name of the procedure.","","","","","","","","","Returns a new ProcedureWithId that holds specific <code>procedure</code>","","","Whether the framework needs to persist the procedure.","Whether the framework needs to persist the procedure.","","","Suffix type of the key.","Key prefix of procedure store.","Key to refer the procedure in the ProcedureStore.","Serialized data of a procedure.","Procedure storage layer.","","","","","","","","","","","","","","Write commit flag to the storage.","","","","","","","","","","","","","The data of the procedure.","Delete states of procedure from the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Load procedures from the storage. Returns a map of …","","Creates a new ProcedureStore from specific StateStoreRef.","Parent procedure id.","Try to parse the key from specific <code>input</code>.","","","","Constructs a path for procedure store.","","Write rollback flag to the storage.","","","Current step.","","","Dump the <code>procedure</code> to the storage.","","","","","","","","","","","","","","","Type name of the procedure. The procedure framework also …","","","","","Key value from state store.","Stream that yields KeyValue.","StateStore based on ObjectStore.","Storage layer for persisting procedure’s state.","Reference counted pointer to StateStore.","","Deletes key-value pairs by <code>keys</code>.","","","","","","","Deletes one key-value pair by <code>key</code>. Return <code>Ok</code> if the key …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Returns a new ObjectStateStore with specific <code>store</code>.","","","Puts <code>key</code> and <code>value</code> into the store.","","","","","","","Returns the key-value pairs under <code>path</code> in top down way.","","Watcher to watch procedure state.","","","Wait the Watcher until the ProcedureState is done."],"i":[0,0,0,81,67,0,81,67,0,0,0,0,0,0,0,0,67,67,0,81,0,95,96,0,96,14,0,96,0,95,0,14,3,97,98,98,3,95,98,98,98,0,98,96,0,99,100,101,102,102,15,0,15,0,15,0,15,0,2,0,15,0,15,0,15,0,15,0,15,0,2,15,0,15,0,15,0,0,15,0,15,0,15,0,15,0,15,0,15,0,15,0,15,15,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,19,21,22,23,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,19,21,22,23,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,15,27,28,29,19,15,30,22,23,35,15,15,15,39,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,24,19,21,26,22,27,28,29,30,31,32,23,33,34,35,36,37,38,39,15,103,104,105,106,107,108,104,109,110,111,103,112,108,109,113,105,106,114,115,116,117,110,113,112,118,119,120,108,109,113,121,114,119,115,116,117,117,0,0,0,0,0,0,0,0,122,63,58,55,57,61,59,63,58,55,57,61,59,55,57,61,61,63,58,55,57,61,59,63,58,55,57,61,59,63,58,55,57,61,59,55,58,59,63,58,55,57,61,59,63,58,55,57,61,59,63,58,55,57,61,59,58,58,61,59,63,58,55,57,61,59,61,63,58,55,57,61,59,63,58,55,57,61,59,63,58,55,57,61,59,61,58,58,58,0,61,58,61,55,57,55,59,58,57,58,55,61,58,61,58,63,61,59,122,63,58,55,55,55,58,58,122,61,55,55,58,58,55,59,59,55,59,0,58,58,61,58,55,58,61,61,61,63,58,55,55,55,63,58,55,57,61,59,58,63,58,55,57,61,59,57,63,58,55,57,61,59,63,58,55,57,61,59,58,0,0,70,70,71,70,71,70,71,70,71,70,71,70,71,70,71,70,71,71,70,71,71,70,70,71,70,71,70,71,70,70,71,70,71,70,71,70,71,70,71,70,71,71,74,74,0,74,0,74,0,73,72,74,73,72,74,72,73,72,74,73,72,74,73,72,74,73,72,74,73,72,74,72,73,73,72,74,72,72,72,72,73,73,74,73,72,74,73,72,74,73,72,74,73,72,74,73,72,73,72,73,72,72,72,72,72,72,72,72,72,72,72,73,72,74,73,72,74,73,72,74,73,72,74,72,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,0,0,81,67,81,67,0,0,0,0,0,0,0,0,0,67,67,0,81,123,95,79,79,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,79,3,7,80,8,67,3,7,80,8,67,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,7,67,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,79,8,14,81,3,7,79,80,8,67,96,7,8,7,7,7,7,8,8,8,8,67,96,81,67,14,81,7,79,79,80,8,8,67,14,81,3,7,79,80,8,67,3,7,80,8,67,8,8,8,14,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,80,14,81,3,7,79,80,8,67,67,67,67,67,7,7,96,81,7,8,123,95,14,3,97,98,98,3,123,95,8,98,67,8,7,79,79,98,98,98,3,7,80,8,67,79,8,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,14,81,3,7,79,80,8,67,96,14,81,3,7,79,80,8,67,14,99,100,101,102,102,88,0,0,0,0,0,88,88,88,89,64,88,90,89,64,88,90,64,64,89,89,64,88,90,89,64,88,90,89,64,88,90,64,89,89,64,88,90,89,64,88,90,64,89,64,88,90,64,88,90,64,64,64,64,88,88,88,88,90,90,90,90,64,88,90,90,89,64,88,90,64,88,89,64,88,90,89,64,88,90,89,64,88,90,90,89,89,89,64,90,90,89,89,0,90,89,64,0,64,90,89,89,64,90,89,64,88,90,89,64,88,90,89,64,88,90,64,89,64,88,90,0,0,0,0,0,124,65,93,93,93,93,93,93,65,93,93,93,93,93,93,93,93,93,93,124,124,65,93,93,93,93,93,93,65,93,0,9,9,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[1]]],[]],0,[[-1,3],[[6,[[5,[4]]]]],[]],0,0,[-1,7,[]],0,0,0,0,0,[[-1,8],[[6,[[5,[4]]]]],[]],[[-1,8],[[6,[[5,[4]]]]],[]],[[-1,8],[[10,[9]]],[]],0,0,[[-1,11,[5,[12]]],[[2,[13]]],[]],[-1,[[6,[[5,[4]]]]],[]],[-1,[[6,[[5,[4]]]]],[]],0,[[-1,14],[[6,[[5,[4]]]]],[]],[-1,11,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,16],[-1,17,[]],[15,[[10,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],15,[[20,[1]]]],[21,15],[[[22,[-1]]],15,[[20,[8]]]],[[[23,[-1]]],15,[[20,[8]]]],[15,[[10,[17]]]],[24,24],[[[19,[-1]]],[[19,[-1]]],25],[21,21],[26,26],[[[22,[-1]]],[[22,[-1]]],25],[[[27,[-1]]],[[27,[-1]]],25],[[[28,[-1]]],[[28,[-1]]],25],[[[29,[-1]]],[[29,[-1]]],25],[[[30,[-1]]],[[30,[-1]]],25],[31,31],[32,32],[[[23,[-1]]],[[23,[-1]]],25],[33,33],[34,34],[[[35,[-1]]],[[35,[-1]]],25],[36,36],[37,37],[38,38],[[[39,[-1]]],[[39,[-1]]],25],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[15,41,[42,[1]]],13],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[15,11],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[-1,15,[43,44,45]],[[[19,[-1]]],[[46,[-2,15]]],[[20,[1]]],[]],[21,[[46,[-1,15]]],[]],[[[22,[-1]]],[[46,[-2,15]]],[[20,[8]]],[]],[[[23,[-1]]],[[46,[-2,15]]],[[20,[8]]],[]],[[24,47],48],[[[19,[-1]],47],48,49],[[21,47],48],[[26,47],48],[[[22,[-1]],47],48,49],[[[27,[-1]],47],48,49],[[[28,[-1]],47],48,49],[[[29,[-1]],47],48,49],[[[30,[-1]],47],48,49],[[31,47],48],[[32,47],48],[[[23,[-1]],47],48,49],[[33,47],48],[[34,47],48],[[[35,[-1]],47],48,49],[[36,47],48],[[37,47],48],[[38,47],48],[[[39,[-1]],47],48,49],[[15,47],48],[[15,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,15,[43,44,45]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,15],[[[19,[-1]]],15,[[20,[1]]]],[21,15],[26,15],[[[22,[-1]]],15,[[20,[8]]]],[[[27,[-1]]],15,[[20,[1]]]],[[[28,[-1]]],15,[[20,[1]]]],[[[29,[-1]]],15,[[20,[1]]]],[[[30,[-1]]],15,[[20,[1]]]],[31,15],[32,15],[[[23,[-1]]],15,[[20,[8]]]],[33,15],[34,15],[[[35,[-1]]],15,[[20,[8]]]],[36,15],[37,15],[38,15],[[[39,[-1]]],15,[[20,[8]]]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[15,51],0,0,0,0,[15,[[10,[52]]]],0,0,0,0,[-1,15,[43,44,45]],[15,[[10,[17]]]],[15,53],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,[[56,[15]]]],[57,[[6,[[5,[4]]]]]],0,0,[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[[58,8],51],[[],59],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[[58,[60,[8]],[42,[[62,[61]]]]],13],0,[[61,47],48],[[59,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[[61,[42,[8]]],13],[[58,8],[[10,[63]]]],[[58,8,64],[[10,[63]]]],0,0,0,0,0,0,0,0,0,0,[57,11],[[],58],[[59,[62,[65]]],55],[[8,[10,[8]],7],61],[[58,8],13],[61,41],[[58,[60,[8]]],13],0,0,0,0,0,[[58,8],[[6,[[5,[4]]]]]],[[55,8],[[6,[[5,[4]]]]]],0,[[55,8],[[10,[9]]]],0,[[58,[62,[61]]],[[42,[8]]]],0,[[61,8],13],[55,[[2,[13]]]],[[55,11,[5,[12]]],[[2,[13]]]],[[58,[60,[8]]],13],[[58,66],13],0,0,0,0,0,0,[58,51],0,[[61,67],13],[58,13],[55,[[6,[[5,[4]]]]]],[[58,8],[[10,[67]]]],[61,67],0,0,0,[58,13],[55,[[6,[[5,[4]]]]]],[[55,14],[[6,[[5,[4]]]]]],[[55,8,68,69],[[2,[9]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[[58,[62,[61]]],51],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],0,[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,8],[[10,[9]]]],0,0,[[70,11,[62,[61]]],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,13],[41,13],[[71,47],48],[-1,-1,[]],[-1,-1,[]],[[[62,[61]]],71],[[70,11,8],51],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],0,[[],70],0,[[70,11,8],13],[71,51],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,[[2,[13]]]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[72,13],[73,13],[41,13],[41,13],[41,13],[[72,3],74],[[72,3],13],[72,13],0,[73,13],0,[[74,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],41],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],0,0,0,0,[[[62,[61]],[62,[58]]],73],[[72,[42,[14]]],13],[72,[[2,[13]]]],0,[[72,[62,[15]]],74],[72,[[2,[13]]]],0,[72,13],[72,51],0,0,[[72,8,69],13],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[72,66,75],13],0,[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],13,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[],76],[41,-1,[]],[41,-1,[]],[-1,[[46,[76]]],77],[41,13],[[76,76],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[76,47],48],[-1,-1,[]],[-1,-1,[]],[[],41],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],0,0,[[76,-1],46,78],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,17,[]],[79,[[10,[18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,[[10,[17]]]],[3,3],[7,7],[80,80],[8,8],[67,67],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[],7],[[],67],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[79,11],[-1,[[46,[8]]],77],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[41,13],[-1,[[2,[1]]],[]],[[7,7],51],[[8,8],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[67,[[10,[[62,[15]]]]]],[[-1,3],[[6,[[5,[4]]]]],[]],[51,81],[[[62,[15]]],67],[[14,47],48],[[81,47],48],[[7,47],48],[[79,47],48],[[79,47],48],[[80,47],48],[[8,47],48],[[8,47],48],[[67,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[46,[8,79]]]],[[-1,-2],75,[82,83],84],[[8,-1],13,85],0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,79],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[67,51],[67,51],[67,51],[67,51],[7,[[0,[86]]]],[7,[[0,[86]]]],[-1,7,[]],[81,51],[-1,7,87],[11,[[46,[8,79]]]],0,0,0,0,[[-1,8],[[6,[[5,[4]]]]],[]],[[-1,8],[[6,[[5,[4]]]]],[]],[[-1,8],[[10,[9]]],[]],0,0,0,[[],8],[[-1,11,[5,[12]]],[[2,[13]]],[]],[[[62,[15]]],67],[[8,-1],46,78],[-1,7,[[20,[1]]]],[79,[[10,[17]]]],0,[-1,[[6,[[5,[4]]]]],[]],[-1,[[6,[[5,[4]]]]],[]],[[-1,14],[[6,[[5,[4]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,14],0,0,0,0,0,0,0,0,0,0,0,0,0,[88,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[[-1,-2],13,[],[]],[[89,8,68],[[2,[13]]]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],0,[[89,8],[[2,[13]]]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[41,-1,[]],[-1,[[46,[64]]],77],[41,13],[41,13],[41,13],[41,13],[[64,64],51],[[88,88],51],[[90,90],51],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[-1,-2],51,[],[]],[[64,47],48],[[88,47],48],[[90,47],48],[[90,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,[[10,[88]]]],[[],41],[[],41],[[],41],[[],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],[-1,[[50,[-2]]],[],[]],0,[89,[[2,[[13,[[91,[8,64]],[42,[8]]]]]]]],[[89,90,[60,[92]]],[[10,[64]]]],[[11,[62,[65]]],89],0,[[11,11],[[10,[90]]]],0,[89,11],0,0,0,[[89,8,68],[[2,[13]]]],[[64,-1],46,78],0,0,0,0,[[89,8,68,69,[10,[8]]],[[2,[13]]]],[-1,-2,[],[]],[-1,1,[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,[60,[1]]],[[6,[[5,[4]]]]],[]],[[93,[60,[1]]],[[6,[[5,[4]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[-1,[[40,[-2]]],[],[]],[[-1,11],[[6,[[5,[4]]]]],[]],[[93,11],[[6,[[5,[4]]]]]],[41,-1,[]],[41,-1,[]],[41,13],[[93,47],48],[-1,-1,[]],[[],41],[-1,-2,[],[]],[-1,[[50,[-2]]],[],[]],[94,93],0,0,[[-1,11,[42,[92]]],[[6,[[5,[4]]]]],[]],[[93,11,[42,[92]]],[[6,[[5,[4]]]]]],0,[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,54,[]],[-1,-2,[],[]],[[-1,11],[[6,[[5,[4]]]]],[]],[[93,11],[[6,[[5,[4]]]]]],0,0,0,[9,[[2,[13]]]]],"c":[],"p":[[3,"String",1338],[6,"Result",50],[3,"Context",931],[8,"Future",1339],[3,"Box",1340],[3,"Pin",1341],[3,"LockKey",931],[3,"ProcedureId",931],[6,"Watcher",1334],[4,"Option",1342],[15,"str"],[8,"Fn",1343],[15,"tuple"],[3,"ProcedureWithId",931],[4,"Error",50],[8,"Any",1344],[8,"Error",1345],[3,"Backtrace",1346],[3,"LoaderConflictSnafu",50],[8,"Into",1347],[3,"ManagerNotStartSnafu",50],[3,"DuplicateProcedureSnafu",50],[3,"ProcedurePanicSnafu",50],[3,"ExternalSnafu",50],[8,"Clone",1348],[3,"ToJsonSnafu",50],[3,"PutStateSnafu",50],[3,"DeleteStateSnafu",50],[3,"DeleteStatesSnafu",50],[3,"ListStateSnafu",50],[3,"FromJsonSnafu",50],[3,"RetryLaterSnafu",50],[3,"WaitWatcherSnafu",50],[3,"ProcedureExecSnafu",50],[3,"RetryTimesExceededSnafu",50],[3,"CorruptedDataSnafu",50],[3,"StartRemoveOutdatedMetaTaskSnafu",50],[3,"StopRemoveOutdatedMetaTaskSnafu",50],[3,"SubprocedureFailedSnafu",50],[3,"Compat",1349],[15,"usize"],[3,"Vec",1350],[8,"ErrorExt",1351],[8,"Send",1352],[8,"Sync",1352],[4,"Result",1353],[3,"Formatter",1354],[6,"Result",1354],[8,"Debug",1354],[3,"Request",1355],[15,"bool"],[8,"StackError",1351],[4,"StatusCode",1356],[3,"TypeId",1344],[3,"LocalManager",596],[3,"RepeatedTask",1357],[3,"RemoveOutdatedMetaFunction",596],[3,"ManagerContext",596],[3,"ManagerConfig",596],[15,"slice"],[3,"ProcedureMeta",596],[3,"Arc",1358],[3,"LoadedProcedure",596],[3,"ProcedureMessage",1178],[8,"StateStore",1299],[3,"Duration",1359],[4,"ProcedureState",931],[15,"u32"],[6,"BoxedProcedure",931],[3,"LockMap",773],[3,"Lock",773],[3,"Runner",817],[3,"ProcedureGuard",817],[4,"ExecResult",817],[15,"u64"],[3,"ProcedureConfig",899],[8,"Deserializer",1360],[8,"Serializer",1361],[3,"ParseIdError",931],[3,"ParseIdSnafu",931],[4,"Status",931],[8,"Hash",1362],[8,"Sized",1352],[8,"BuildHasher",1362],[8,"Hasher",1362],[8,"Iterator",1363],[8,"IntoIterator",1364],[4,"KeyType",1178],[3,"ProcedureStore",1178],[3,"ParsedKey",1178],[3,"HashMap",1365],[15,"u8"],[3,"ObjectStateStore",1299],[3,"Operator",1366],[6,"ProcedureManagerRef",931],[8,"Procedure",931],[8,"ContextProvider",931],[8,"ProcedureManager",931],[13,"Retrying",1173],[13,"Failed",1173],[13,"Executing",1175],[13,"Suspended",1175],[13,"ToJson",559],[13,"DeleteState",559],[13,"FromJson",559],[13,"WaitWatcher",559],[13,"CorruptedData",559],[13,"PutState",559],[13,"DeleteStates",559],[13,"LoaderConflict",559],[13,"ManagerNotStart",559],[13,"DuplicateProcedure",559],[13,"ListState",559],[13,"ProcedureExec",559],[13,"StartRemoveOutdatedMetaTask",559],[13,"StopRemoveOutdatedMetaTask",559],[13,"SubprocedureFailed",559],[13,"ProcedurePanic",559],[13,"RetryTimesExceeded",559],[13,"External",559],[13,"RetryLater",559],[6,"ProcedureMetaRef",596],[6,"ContextProviderRef",931],[6,"StateStoreRef",1299]],"b":[[324,"impl-Debug-for-Error"],[325,"impl-Display-for-Error"],[1054,"impl-Debug-for-ParseIdError"],[1055,"impl-Display-for-ParseIdError"],[1057,"impl-Debug-for-ProcedureId"],[1058,"impl-Display-for-ProcedureId"],[1242,"impl-Display-for-ParsedKey%3C\'a%3E"],[1243,"impl-Debug-for-ParsedKey%3C\'a%3E"]]},\
"common_procedure_test":{"doc":"Test utilities for procedures.","t":"DLLLLLLLLLFFFLLLLLLMLLLL","n":["MockContextProvider","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","execute_procedure_once","execute_procedure_until_done","execute_until_suspended_or_done","from","init","into","into_request","new","procedure_state","states","try_from","try_into","type_id","vzip"],"q":[[0,"common_procedure_test"],[24,"async_compat"],[25,"common_procedure::procedure"],[26,"common_procedure::procedure"],[27,"core::option"],[28,"tonic::request"],[29,"common_procedure::procedure"],[30,"core::future::future"],[31,"alloc::boxed"],[32,"core::pin"],[33,"core::result"],[34,"core::any"]],"d":["A Mock ContextProvider.","","","","","","","","","","Executes a procedure once.","Executes a procedure until it returns Status::Done.","Executes a procedure until it returns Status::Suspended or …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Returns a new provider.","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],2],[3,-1,[]],[3,-1,[]],[3,4],[[5,2,6],7],[6,4],[[5,2,6],[[10,[[9,[8]]]]]],[-1,-1,[]],[[],3],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[[[13,[5,12]]],2],[[2,5],[[16,[[15,[14]]]]]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Compat",24],[3,"MockContextProvider",0],[15,"usize"],[15,"tuple"],[3,"ProcedureId",25],[8,"Procedure",25],[15,"bool"],[3,"ProcedureWithId",25],[3,"Vec",26],[4,"Option",27],[3,"Request",28],[4,"ProcedureState",25],[3,"HashMap",29],[8,"Future",30],[3,"Box",31],[3,"Pin",32],[4,"Result",33],[3,"TypeId",34]],"b":[]},\
"common_query":{"doc":"","t":"ENNINENNLKLLLLLKLLALLLLLLLAKLLLLLLLALLLLLLLLALLLKKAALLKLAKLLLLLLLLLLLLLLLLLKMENNLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNDNNDGNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGGGMMMMMFMMMMMMMMMMFCDNCCNNNNNNNENDNNNNNNNNNNNNNNNNNNNNNNDNNNNNNAMLLLLLLLLLLLFLLLLLFFMMLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLMMLMLLLLLLLLLLLAALLLMIIIGDMMLLKMKLLLLKLLLLFFFKLLKMMKLKLKLLLLLKLLNNNNNNNNENDNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLFLLLMLLLLLLLLLLLLLLLLFLLLLLLLMDMLLLLMLLLLLLLLLMLMMMFFLLLLLLLDLLLLLLLLMLLLLLMLMMFLLLLLLLDNEIDGNDDNMMKLLLLLLLLLLLLLLKLLLLLLLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLKLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLMKLLMLMLLMMLMLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLLLLLLLLGGCNNNCNNNNNNNNNNCNNNNNNNNNNNNNNNNNGGCEDNGNNNNNNNNNENNNNNNNNNELLMMMMMLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLNNNNDNENNNNELLLLLLFLLLLLLLLLLLLLLLLLLLLLLMML","n":["AddColumnLocation","AffectedRows","After","DfPhysicalPlan","First","Output","RecordBatches","Stream","arc_children","as_any","benefits_from_input_partitioning","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","columnar_value","deserialize","eq","equivalence_properties","equivalent","equivalent","equivalent","equivalent","error","execute","fmt","fmt","from","from","from_ref","from_subset","from_subset","function","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","logical_plan","maintains_input_order","metrics","ordering_equivalence_properties","output_ordering","output_partitioning","physical_plan","prelude","required_input_distribution","required_input_ordering","schema","serialize","signature","statistics","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unbounded_output","visit","visit","vzip","vzip","with_new_arc_children","with_new_children","column_name","ColumnarValue","Scalar","Vector","borrow","borrow_mut","clone","clone_into","data_type","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into_vector","type_id","vzip","ArrowCompute","ArrowComputeSnafu","BadAccumulatorImpl","BadAccumulatorImplSnafu","ConvertArrowSchema","ConvertArrowSchemaSnafu","ConvertDfRecordBatchStream","ConvertDfRecordBatchStreamSnafu","CreateAccumulator","CreateAccumulatorSnafu","DowncastVector","DowncastVectorSnafu","Err","Error","ExecuteFunction","ExecuteFunctionSnafu","ExecutePhysicalPlan","ExecutePhysicalPlanSnafu","ExecuteRepeatedly","ExecuteRepeatedlySnafu","FromArrowArray","FromArrowArraySnafu","FromScalarValue","FromScalarValueSnafu","GeneralDataFusion","GeneralDataFusionSnafu","GenerateFunction","GenerateFunctionSnafu","GetScalarVector","GetScalarVectorSnafu","IntoVector","IntoVectorSnafu","InvalidFuncArgs","InvalidFuncArgsSnafu","InvalidInputCol","InvalidInputColSnafu","InvalidInputState","InvalidInputStateSnafu","InvalidInputType","InvalidInputTypeSnafu","Ok","PyUdf","PyUdfSnafu","Result","ToScalarValue","ToScalarValueSnafu","TypeCast","TypeCastSnafu","UdfTempRecordBatch","UdfTempRecordBatchSnafu","UnsupportedInputDataType","UnsupportedInputDataTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","datatypes","debug_fmt","description","err_msg","err_msg","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","function","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","next","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","data_type","datatypes","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","function","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","source","source","source","source","source","source","source","source","source","source","typ","AccumulatorCreatorFunction","AccumulatorFunctionImpl","ReturnTypeFunction","ScalarFunctionImplementation","StateTypeFunction","alloc","alloc","alloc","alloc","alloc","make_scalar_function","phantom","phantom","phantom","phantom","phantom","ptr","ptr","ptr","ptr","ptr","to_df_return_type","Accumulator","AggregateFunction","AggregateFunction","AggregateFunctionCreator","AggregateFunctionCreatorRef","AggregateUDF","Alias","Between","BinaryExpr","Case","Cast","Column","DfExpr","Exists","Expr","GetIndexedField","GroupingSet","InList","InSubquery","IsFalse","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","Like","Literal","Negative","Not","OuterReferenceColumn","Placeholder","QualifiedWildcard","ScalarFunction","ScalarSubquery","ScalarUDF","ScalarUdf","ScalarVariable","SimilarTo","Sort","TryCast","Wildcard","WindowFunction","accumulator","accumulator","add","alias","alias_if_changed","and","apply_children","between","bitand","bitor","bitxor","borrow","borrow_mut","build_filter_from_timestamp","canonical_name","cast_to","clone","clone_into","contains_outer","create_aggregate_function","create_udf","creator","df_expr","display_name","div","eq","eq","equivalent","equivalent","equivalent","equivalent","expr","field","fmt","fmt","from","from_ref","from_subset","fun","get_hash","get_type","gt","gt_eq","hash","ilike","in_list","index","into","into_request","into_request","is_false","is_in_subset","is_not_false","is_not_null","is_not_true","is_not_unknown","is_null","is_true","is_unknown","like","lt","lt_eq","map_children","metadata","mul","name","name","name","name_for_alias","neg","not","not_between","not_eq","not_ilike","not_like","nullable","or","partial_cmp","range","rem","return_type","return_type","shl","shr","signature","signature","sort","state_type","sub","to_columns","to_field","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into_col","type_id","udaf","udf","unalias","variant_name","vzip","qualifier","Accumulator","AggrFuncTypeStore","AggregateFunctionCreator","AggregateFunctionCreatorRef","DfAccumulatorAdaptor","accumulator","alloc","borrow","borrow_mut","creator","creator","evaluate","evaluate","fmt","from","from_subset","input_types","into","into_request","into_request","is_in_subset","make_accumulator_function","make_return_function","make_state_function","merge_batch","merge_batch","new","output_type","phantom","ptr","set_input_types","size","state","state","state_types","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_batch","update_batch","vzip","AggregateFunction","AggregateUDF","Alias","Between","BinaryExpr","Case","Cast","Column","DfExpr","Exists","Expr","GetIndexedField","GroupingSet","InList","InSubquery","IsFalse","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","Like","Literal","Negative","Not","OuterReferenceColumn","Placeholder","QualifiedWildcard","ScalarFunction","ScalarSubquery","ScalarUDF","ScalarVariable","SimilarTo","Sort","TryCast","Wildcard","WindowFunction","borrow","borrow_mut","build_filter_from_timestamp","clone","clone_into","df_expr","df_expr","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_subset","get_hash","hash","into","into_request","into_request","is_in_subset","timestamp_to_literal","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","qualifier","AggregateFunction","accumulator","borrow","borrow_mut","clone","clone_into","creator","eq","fmt","from","from_ref","from_subset","into","into_request","into_request","is_in_subset","name","new","return_type","signature","state_type","to_df_accumulator_func","to_df_state_type","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ScalarUdf","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","from_subset","fun","into","into_df_udf","into_request","into_request","is_in_subset","name","new","return_type","signature","to_df_scalar_func","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DfPhysicalPlanAdapter","Hash","Partitioning","PhysicalPlan","PhysicalPlanAdapter","PhysicalPlanRef","RoundRobinBatch","SessionContext","TaskContext","UnknownPartitioning","aggregate_functions","alloc","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_names","children","children","children","clone","clone","clone_into","clone_into","copied_config","create_physical_plan","default","default","deregister_table","df_plan","df_plan","enable_ident_normalization","eq","execute","execute","execute","execute_logical_plan","fmt","fmt","fmt","fmt","fmt","fmt_as","from","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","memory_pool","metric","metrics","metrics","metrics","new","new","new","new_with_config","new_with_config_rt","new_with_state","optimize","output_ordering","output_ordering","output_partitioning","output_partitioning","output_partitioning","partition_count","phantom","ptr","read_arrow","read_avro","read_batch","read_csv","read_empty","read_json","read_parquet","read_table","refresh_catalogs","register_arrow","register_avro","register_batch","register_catalog","register_catalog_list","register_csv","register_json","register_listing_table","register_parquet","register_table","register_udaf","register_udf","register_udwf","register_variable","runtime","runtime_env","runtime_env","satisfy","scalar_functions","schema","schema","schema","schema","session_config","session_config","session_id","session_id","session_id","session_id","session_start_time","session_start_time","sql","sql_with_options","state","state","state_weak_ref","statistics","table","table_exist","table_factory","table_provider","tables","task_ctx","task_id","task_id","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","udaf","udaf","udf","udf","udfs","udfs","udwf","udwf","vzip","vzip","vzip","vzip","vzip","window_functions","with_config","with_config_rt","with_new_children","with_new_children","with_new_children","with_runtime","with_session_config","with_state","write_csv","write_json","write_parquet","AccumulatorCreatorFunction","AccumulatorFunctionImpl","AggregateFunction","Any","Binary","Boolean","ColumnarValue","Date32","Date64","Decimal128","Decimal256","Dictionary","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Exact","Expr","FixedSizeBinary","Fixedsizelist","Float32","Float64","Immutable","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","LargeBinary","LargeUtf8","List","Null","OneOf","ReturnTypeFunction","ScalarFunctionImplementation","ScalarUdf","ScalarValue","Signature","Stable","StateTypeFunction","Struct","Time32Millisecond","Time32Second","Time64Microsecond","Time64Nanosecond","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","TypeSignature","UInt16","UInt32","UInt64","UInt8","Uniform","Utf8","Variadic","VariadicEqual","Volatile","Volatility","add","add_checked","alloc","alloc","alloc","alloc","alloc","any","arithmetic_negate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_udf","data_type","distance","eq","eq","eq","eq_array","equivalent","equivalent","equivalent","equivalent","exact","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_subset","from_subset","from_subset","get_datatype","get_hash","hash","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_null","is_unsigned","iter_to_array","lit","make_scalar_function","new","new_interval_dt","new_interval_mdn","new_interval_ym","new_list","new_negative_one","new_one","new_primitive","new_ten","new_utf8","new_zero","one_of","partial_cmp","phantom","phantom","phantom","phantom","phantom","ptr","ptr","ptr","ptr","ptr","size","size_of_hashset","size_of_vec","sub","sub_checked","to_array","to_array_of_size","to_df_return_type","to_owned","to_owned","to_owned","to_scalar","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from_array","try_from_string","try_into","try_into","try_into","try_new_decimal128","type_id","type_id","type_id","type_signature","uniform","variadic","variadic_equal","volatility","vzip","vzip","vzip","Any","Exact","Immutable","OneOf","Signature","Stable","TypeSignature","Uniform","Variadic","VariadicEqual","Volatile","Volatility","borrow","borrow_mut","clone","clone_into","cmp","compare","concrete_types_to_arrow_types","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","get_hash","hash","into","into_request","into_request","is_in_subset","partial_cmp","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_signature","volatility","vzip"],"q":[[0,"common_query"],[76,"common_query::AddColumnLocation"],[77,"common_query::columnar_value"],[101,"common_query::error"],[687,"common_query::error::Error"],[734,"common_query::function"],[756,"common_query::logical_plan"],[904,"common_query::logical_plan::DfExpr"],[905,"common_query::logical_plan::accumulator"],[948,"common_query::logical_plan::expr"],[1018,"common_query::logical_plan::expr::DfExpr"],[1019,"common_query::logical_plan::udaf"],[1049,"common_query::logical_plan::udf"],[1076,"common_query::physical_plan"],[1291,"common_query::prelude"],[1510,"common_query::signature"],[1554,"alloc::alloc"],[1555,"alloc::sync"],[1556,"alloc::vec"],[1557,"core::any"],[1558,"core::result"],[1559,"serde::de"],[1560,"datafusion_physical_expr::equivalence"],[1561,"datafusion_execution::stream"],[1562,"alloc::boxed"],[1563,"core::pin"],[1564,"datafusion_common::error"],[1565,"core::fmt"],[1566,"core::fmt"],[1567,"tonic::request"],[1568,"core::option"],[1569,"datafusion_physical_expr::equivalence"],[1570,"datafusion_physical_expr::partitioning"],[1571,"datafusion_physical_expr::sort_expr"],[1572,"serde::ser"],[1573,"datafusion_common::stats"],[1574,"core::any"],[1575,"sqlparser::ast::visitor"],[1576,"sqlparser::ast::visitor"],[1577,"datafusion_expr::columnar_value"],[1578,"datatypes::vectors"],[1579,"core::error"],[1580,"snafu::backtrace_inert"],[1581,"alloc::string"],[1582,"core::convert"],[1583,"core::clone"],[1584,"core::fmt"],[1585,"common_error::ext"],[1586,"common_error::status_code"],[1587,"core::ops::function"],[1588,"core::marker"],[1589,"core::marker"],[1590,"datafusion_common::tree_node"],[1591,"core::ops::function"],[1592,"datafusion_common::dfschema"],[1593,"core::fmt"],[1594,"core::marker"],[1595,"std::collections::hash::map"],[1596,"datafusion_common::column"],[1597,"std::collections::hash::set"],[1598,"datafusion_common::dfschema"],[1599,"datafusion_common::error"],[1600,"common_time::timestamp"],[1601,"datafusion_expr::function"],[1602,"datafusion_expr::function"],[1603,"datafusion_execution::config"],[1604,"datafusion_expr::logical_plan::plan"],[1605,"datafusion::datasource::provider"],[1606,"datafusion_common::table_reference"],[1607,"common_recordbatch"],[1608,"datafusion_execution::stream"],[1609,"datafusion_physical_plan::display"],[1610,"datafusion::execution::context"],[1611,"datafusion_execution::memory_pool"],[1612,"datafusion_expr::udaf"],[1613,"datafusion_expr::udwf"],[1614,"datafusion_execution::runtime_env"],[1615,"datatypes::schema"],[1616,"datafusion::datasource::file_format::options"],[1617,"datafusion::execution::context"],[1618,"datafusion::datasource::file_format::options"],[1619,"core::convert"],[1620,"datafusion_physical_expr::var_provider"],[1621,"chrono::datetime"],[1622,"datafusion::execution::context"],[1623,"lock_api::rwlock"],[1624,"alloc::sync"],[1625,"parquet::file::properties"],[1626,"core::borrow"],[1627,"arrow_array::array"],[1628,"core::iter::traits::collect"],[1629,"arrow_array::scalar"]],"d":["","","","<code>ExecutionPlan</code> represent nodes in the DataFusion Physical …","","","","","","Returns the execution plan as <code>Any</code> so that it can be …","Specifies whether the operator benefits from increased …","","","","","Get a list of child execution plans that provide the input …","","","","","","Get the EquivalenceProperties within the plan","","","","","","creates an iterator","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>false</code> if this operator’s implementation may …","Return a snapshot of the set of <code>Metric</code>s for this …","Get the OrderingEquivalenceProperties within the plan","If the output of this operator within each partition is …","Specifies the output partitioning scheme of this plan","","","Specifies the data distribution requirements for all the …","Specifies the ordering requirements for all of the children","Get the schema for this execution plan","","Signature module contains foundational types that are used …","Returns the global output statistics for this <code>ExecutionPlan</code>…","","","","","","","","","","","","Specifies whether this plan generates an infinite stream …","","","","","","Returns a new plan where all children were replaced by new …","","Represents the result from an expression","A single value","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Convert a columnar value into an VectorRef","","","","SNAFU context selector for the <code>Error::ArrowCompute</code> variant","","SNAFU context selector for the <code>Error::BadAccumulatorImpl</code> …","","SNAFU context selector for the <code>Error::ConvertArrowSchema</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::CreateAccumulator</code> …","","SNAFU context selector for the <code>Error::DowncastVector</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::ExecuteFunction</code> …","","SNAFU context selector for the <code>Error::ExecutePhysicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteRepeatedly</code> …","","SNAFU context selector for the <code>Error::FromArrowArray</code> …","","SNAFU context selector for the <code>Error::FromScalarValue</code> …","","SNAFU context selector for the <code>Error::GeneralDataFusion</code> …","","SNAFU context selector for the <code>Error::GenerateFunction</code> …","","SNAFU context selector for the <code>Error::GetScalarVector</code> …","","SNAFU context selector for the <code>Error::IntoVector</code> variant","","SNAFU context selector for the <code>Error::InvalidFuncArgs</code> …","","SNAFU context selector for the <code>Error::InvalidInputCol</code> …","","SNAFU context selector for the <code>Error::InvalidInputState</code> …","","SNAFU context selector for the <code>Error::InvalidInputType</code> …","Contains the success value","","SNAFU context selector for the <code>Error::PyUdf</code> variant","","","SNAFU context selector for the <code>Error::ToScalarValue</code> variant","","SNAFU context selector for the <code>Error::TypeCast</code> variant","","SNAFU context selector for the <code>Error::UdfTempRecordBatch</code> …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codereate Accumulator with the data type of input columns.","Accumulator creator that will be used by DataFusion","A function’s return type","Scalar function","This signature corresponds to which types an aggregator …","","","","","","decorates a function to handle <code>ScalarValue</code>s by converting …","","","","","","","","","","","","","Logical representation of a user-defined aggregate …","Represents the call of an aggregate built-in function with …","","","aggregate function","An expression with a specific name.","Whether an expression is between a given range.","A binary expression such as “age &gt; 21”","The CASE expression is similar to a series of nested …","Casts the expression to a given type and will return a …","A named reference to a qualified filed in a schema.","<code>Expr</code> is a central struct of DataFusion’s query API, and …","EXISTS subquery","Central struct of query API. Represent logical expressions …","Returns the field of a <code>arrow::array::ListArray</code> or …","List of grouping set expressions. Only valid in the …","Returns whether the list contains the expr value.","IN subquery","Whether an expression is False. Boolean operation","Whether an expression is not False. Boolean operation","Whether an expression is not Null. This expression is …","Whether an expression is not True. Boolean operation","Whether an expression is not Unknown. Boolean operation","Whether an expression is Null. This expression is never …","Whether an expression is True. Boolean operation","Whether an expression is Unknown. Boolean operation","LIKE expression","A constant value.","arithmetic negation of an expression, the operand must be …","Negation of an expression. The expression’s type must be …","A place holder which hold a reference to a qualified field …","A place holder for parameters in a prepared statement …","Represents a reference to all available fields in a …","Represents the call of a built-in scalar function with a …","Scalar subquery","Represents the call of a user-defined scalar function with …","Logical representation of a UDF.","A named reference to a variable in a registry.","LIKE expression that uses regular expressions","A sort expression, that can be used to sort values.","Casts the expression to a given type and will return a …","Represents a reference to all available fields.","Represents the call of a window function with arguments.","Accumulator module contains the trait definition for …","actual implementation","","Return <code>self AS name</code> alias expression","Ensure <code>expr</code> has the name as <code>original_name</code> by adding an …","Return <code>self &amp;&amp; other</code>","","return <code>self BETWEEN low AND high</code>","","","","","","Builds an <code>Expr</code> that filters timestamp column from given …","Returns a full and complete string representation of this …","Wraps this expression in a cast to a target …","","","Return true when the expression contains out …","","Creates a new UDF with a specific signature and specific …","the creator that creates aggregate functions","","Returns the name of this expression as it should appear in …","","Return <code>self == other</code>","","","","","","","Return access to the named field. Example <code>expr[&quot;name&quot;]</code>","","","Returns the argument unchanged.","","","actual implementation","","Returns the arrow::datatypes::DataType of the expression …","Return <code>self &gt; other</code>","Return <code>self &gt;= other</code>","","Return <code>self ILIKE other</code>","Return <code>self IN &lt;list&gt;</code> if <code>negated</code> is false, otherwise …","Return access to the element field. Example <code>expr[&quot;name&quot;]</code>","Calls <code>U::from(self)</code>.","","","Return <code>IsFalse(Box(self))</code>","","Return <code>IsNotFalse(Box(self))</code>","Return `IsNotNull(Box(self))","Return <code>IsNotTrue(Box(self))</code>","Return <code>IsNotUnknown(Box(self))</code>","Return `IsNull(Box(self))","Return <code>IsTrue(Box(self))</code>","Return <code>IsUnknown(Box(self))</code>","Return <code>self LIKE other</code>","Return <code>self &lt; other</code>","Return <code>self &lt;= other</code>","","","","Returns the name of this expression as it should appear in …","name","name","Return the name to use for the specific Expr, recursing …","","","return <code>self NOT BETWEEN low AND high</code>","Return <code>self != other</code>","Return <code>self NOT ILIKE other</code>","Return <code>self NOT LIKE other</code>","Returns the nullability of the expression based on …","Return <code>self || other</code>","","Return elements between <code>1</code> based <code>start</code> and <code>stop</code>, for …","","Return type","Return type","","","signature","signature","Create a sort expression from an existing expression.","the accumulator’s state’s description as a function of …","","Return all referenced columns of this expression.","Returns a arrow::datatypes::Field compatible with this …","","","","","","","","","Udaf module contains functions and structs supporting …","Udf module contains foundational types that are used to …","Remove an alias from an expression if one exists.","Return String representation of the variant represented by …","","","An accumulator represents a stateful object that lives …","<code>AggrFuncTypeStore</code> stores the aggregate function’s input …","An <code>AggregateFunctionCreator</code> dynamically creates <code>Accumulator</code>…","","A wrapper type for our Accumulator to DataFusion’s …","","","","","Create a function that can create a new accumulator with …","","returns its value based on its current state.","","","Returns the argument unchanged.","","Get the input data types of the Accumulator.","Calls <code>U::from(self)</code>.","","","","","","","updates the accumulator’s state from a vector of states.","","","Get the Accumulator’s output data type.","","","Store the input data types that are provided by DataFusion …","","Returns the state of the accumulator at the end of the …","","Get the Accumulator’s state data types.","","","","","","updates the accumulator’s state from a vector of arrays.","","","Represents the call of an aggregate built-in function with …","aggregate function","An expression with a specific name.","Whether an expression is between a given range.","A binary expression such as “age &gt; 21”","The CASE expression is similar to a series of nested …","Casts the expression to a given type and will return a …","A named reference to a qualified filed in a schema.","<code>Expr</code> is a central struct of DataFusion’s query API, and …","EXISTS subquery","Central struct of query API. Represent logical expressions …","Returns the field of a <code>arrow::array::ListArray</code> or …","List of grouping set expressions. Only valid in the …","Returns whether the list contains the expr value.","IN subquery","Whether an expression is False. Boolean operation","Whether an expression is not False. Boolean operation","Whether an expression is not Null. This expression is …","Whether an expression is not True. Boolean operation","Whether an expression is not Unknown. Boolean operation","Whether an expression is Null. This expression is never …","Whether an expression is True. Boolean operation","Whether an expression is Unknown. Boolean operation","LIKE expression","A constant value.","arithmetic negation of an expression, the operand must be …","Negation of an expression. The expression’s type must be …","A place holder which hold a reference to a qualified field …","A place holder for parameters in a prepared statement …","Represents a reference to all available fields in a …","Represents the call of a built-in scalar function with a …","Scalar subquery","Represents the call of a user-defined scalar function with …","A named reference to a variable in a registry.","LIKE expression that uses regular expressions","A sort expression, that can be used to sort values.","Casts the expression to a given type and will return a …","Represents a reference to all available fields.","Represents the call of a window function with arguments.","","","Builds an <code>Expr</code> that filters timestamp column from given …","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Converts a Timestamp to datafusion literal value.","","","","","","","","","Logical representation of a user-defined aggregate …","actual implementation","","","","","the creator that creates aggregate functions","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","name","Create a new AggregateUDF","Return type","signature","the accumulator’s state’s description as a function of …","","","","","","","","","","Logical representation of a UDF.","","","","","","Returns the argument unchanged.","","","actual implementation","Calls <code>U::from(self)</code>.","Cast self into datafusion UDF.","","","","name","Create a new ScalarUdf","Return type","signature","","","","","","","","","","Allocate rows based on a hash of one of more expressions …","Partitioning schemes supported by operators.","<code>PhysicalPlan</code> represent nodes in the Physical Plan.","Adapt DataFusion’s <code>ExecutionPlan</code> to GreptimeDB’s …","","Allocate batches using a round-robin algorithm and the …","Main interface for executing queries with DataFusion. …","Task Execution Context","Unknown partitioning scheme with a known number of …","","","Returns the physical plan as <code>Any</code> so that it can be …","","","","","","","","","","","","","Retrieves a <code>CatalogProvider</code> instance by name","Retrieves the list of available catalog names.","Get a list of child physical plans that provide the input …","","","","","","","Return a copied version of config for this Session","Creates a physical plan from a logical plan.","","","Deregisters the given table.","","","Return the <code>enable_ident_normalization</code> of this Session","","Creates an RecordBatch stream.","","","Execute the <code>LogicalPlan</code>, return a <code>DataFrame</code>. This API is …","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Return the <code>MemoryPool</code> associated with this TaskContext","","","","","Create a new <code>TaskContext</code> instance.","","Creates a new <code>SessionContext</code> using the default …","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Optimizes the logical plan by applying optimizer rules.","returns <code>Some(keys)</code> that describes how the output was …","","Specifies the output partitioning scheme of this plan","","","Returns the number of partitions in this partitioning …","","","Creates a <code>DataFrame</code> for reading an Arrow data source.","Creates a <code>DataFrame</code> for reading an Avro data source.","Creates a <code>DataFrame</code> for reading a <code>RecordBatch</code>","Creates a <code>DataFrame</code> for reading a CSV data source.","Creates an empty DataFrame.","Creates a <code>DataFrame</code> for reading an JSON data source.","Creates a <code>DataFrame</code> for reading a Parquet data source.","Creates a <code>DataFrame</code> for a <code>TableProvider</code> such as a …","Finds any <code>ListingSchemaProvider</code>s and instructs them to …","Registers an Arrow file as a table that can be referenced …","Registers an Avro file as a table that can be referenced …","Registers the <code>RecordBatch</code> as the specified table name","Registers a named catalog using a custom <code>CatalogProvider</code> …","Register <code>CatalogList</code> in <code>SessionState</code>","Registers a CSV file as a table which can referenced from …","Registers a JSON file as a table that it can be referenced …","Registers a <code>ListingTable</code> that can assemble multiple files …","Registers a Parquet file as a table that can be referenced …","Registers a <code>TableProvider</code> as a table that can be …","Registers an aggregate UDF within this context.","Registers a scalar UDF within this context.","Registers a window UDF within this context.","Registers a variable provider within this context.","","Return the RuntimeEnv associated with this TaskContext","Return the RuntimeEnv used to run queries with this …","Returns true when the guarantees made by this [Partitioning…","","Get the schema for this physical plan","","","","Return the SessionConfig associated with this TaskContext","","Return the <code>session_id</code> of this TaskContext","Returns an id that uniquely identifies this <code>SessionContext</code>.","","","Returns the time this <code>SessionContext</code> was created","","Creates a <code>DataFrame</code> from SQL query text.","Creates a <code>DataFrame</code> from SQL query text, first validating …","Snapshots the <code>SessionState</code> of this <code>SessionContext</code> setting …","","Get weak reference to <code>SessionState</code>","","Retrieves a <code>DataFrame</code> representing a table previously …","Return <code>true</code> if the specified table exists in the schema …","Return the <code>TableProviderFactory</code> that is registered for the …","Return a <code>TableProvider</code> for the specified table.","Returns the set of available tables in the default catalog …","Get a new TaskContext to run in this session","Return the <code>task_id</code> of this TaskContext","","","","","","","","","","","","","","","","","","","","","","","","","Create a new task context instance, by first copying all …","","","","","","","","","","","","","","","","","","","","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Returns a new plan where all children were replaced by new …","","","Update the <code>RuntimeEnv</code>","Update the <code>ConfigOptions</code>","Creates a new <code>SessionContext</code> using the provided …","Executes a query and writes the results to a partitioned …","Executes a query and writes the results to a partitioned …","Executes a query and writes the results to a partitioned …","Create Accumulator with the data type of input columns.","Accumulator creator that will be used by DataFusion","","fixed number of arguments of arbitrary types","binary","true or false value","","Date stored as a signed 32bit int days since UNIX epoch …","Date stored as a signed 64bit int milliseconds since UNIX …","128bit decimal, using the i128 to represent the decimal, …","256bit decimal, using the i256 to represent the decimal, …","Dictionary type: index type and value","Duration in microseconds","Duration in milliseconds","Duration in nanoseconds","Duration in seconds","exact number of arguments of an exact type","","fixed size binary","Fixed size list of nested ScalarValue","32bit float","64bit float","An immutable function will always return the same output …","signed 16bit int","signed 32bit int","signed 64bit int","signed 8bit int","Number of elapsed days and milliseconds (no leap seconds) …","A triple of the number of elapsed months, days, and …","Number of elapsed whole months","large binary","utf-8 encoded string representing a LargeString’s arrow …","List of nested ScalarValue","represents <code>DataType::Null</code> (castable to/from any other type)","One of a list of signatures","A function’s return type","Scalar function","","Represents a dynamically typed, nullable single value. …","The Signature of a function defines its supported input …","A stable function may return different values given the …","This signature corresponds to which types an aggregator …","struct of nested ScalarValue","Time stored as a signed 32bit int as milliseconds since …","Time stored as a signed 32bit int as seconds since midnight","Time stored as a signed 64bit int as microseconds since …","Time stored as a signed 64bit int as nanoseconds since …","Timestamp Microseconds","Timestamp Milliseconds","Timestamp Nanoseconds","Timestamp Second","A function’s type signature, which defines the function…","unsigned 16bit int","unsigned 32bit int","unsigned 64bit int","unsigned 8bit int","fixed number of arguments of an arbitrary but equal type …","utf-8 encoded string.","arbitrary number of arguments of an common type out of a …","arbitrary number of arguments of an arbitrary but equal …","A volatile function may change the return value from …","A function’s volatility, which defines the functions …","Wrapping addition of <code>ScalarValue</code>","Checked addition of <code>ScalarValue</code>","","","","","","any - Creates a signature which can a be made of any type …","Calculate arithmetic negation for a scalar value","","","","","","","","","","","","","","return the <code>DataType</code> of this <code>ScalarValue</code>","Absolute distance between two numeric values (of the same …","","","","Compares a single row of array @ index for equality with …","","","","","exact - Creates a signature which must match the types in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Getter for the <code>DataType</code> of the value.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","whether this value is null or not.","","Converts an iterator of references <code>ScalarValue</code> into an …","","decorates a function to handle <code>ScalarValue</code>s by converting …","new - Creates a new Signature from any type signature and …","Returns a <code>ScalarValue::IntervalDayTime</code> representing <code>days</code> …","Returns a <code>ScalarValue::IntervalMonthDayNano</code> representing …","Returns a <code>ScalarValue::IntervalYearMonth</code> representing <code>years</code>…","Create a new nullable ScalarValue::List with the specified …","Create a negative one value in the given type.","Create an one value in the given type.","Create a <code>ScalarValue</code> with the provided value and datatype","","Returns a <code>ScalarValue::Utf8</code> representing <code>val</code>","Create a zero value in the given type.","one_of Creates a signature which can match any of the …","","","","","","","","","","","","Estimate size if bytes including <code>Self</code>. For values with …","Estimates size of <code>HashSet</code> in bytes.","Estimates size of <code>Vec</code> in bytes.","Wrapping subtraction of <code>ScalarValue</code>","Checked subtraction of <code>ScalarValue</code>","Converts a scalar value into an 1-row array.","Converts a scalar value into an array of <code>size</code> rows.","","","","","Converts a scalar into an arrow <code>Scalar</code> (which implements …","","","","","","","","","","","Create a Null instance of ScalarValue for this datatype","Create a Null instance of ScalarValue for this datatype","Converts a value in <code>array</code> at <code>index</code> into a ScalarValue","Try to parse <code>value</code> into a ScalarValue of type <code>target_type</code>","","","","Create a decimal Scalar from value/precision and scale.","","","","type_signature - The types that the function accepts. See …","uniform - Creates a function with a fixed number of …","variadic - Creates a variadic signature that represents an …","variadic_equal - Creates a variadic signature that …","volatility - The volatility of the function. See Volatility…","","","","fixed number of arguments of arbitrary types","exact number of arguments of an exact type","An immutable function will always return the same output …","One of a list of signatures","The Signature of a function defines its supported input …","A stable function may return different values given the …","A function’s type signature, which defines the function…","fixed number of arguments of an arbitrary but equal type …","arbitrary number of arguments of an common type out of a …","arbitrary number of arguments of an arbitrary but equal …","A volatile function may change the return value from …","A function’s volatility, which defines the functions …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","type_signature - The types that the function accepts. See …","volatility - The volatility of the function. See Volatility…",""],"i":[0,18,7,0,7,0,18,18,1,1,1,18,7,18,7,1,7,7,0,7,7,1,7,7,7,7,0,1,18,7,18,7,7,18,7,0,18,7,18,18,7,7,18,7,0,1,1,1,1,1,0,0,1,1,1,7,0,1,7,18,7,18,7,18,7,18,7,18,7,1,7,7,18,7,1,1,181,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,43,0,43,0,43,0,43,0,43,0,43,0,41,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,41,43,0,0,43,0,43,0,43,0,43,0,43,43,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,49,50,51,52,53,54,55,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,63,49,43,43,50,51,52,64,56,46,49,50,51,52,53,54,55,56,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,49,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,46,46,58,58,59,59,49,49,60,60,61,61,62,62,63,63,50,50,51,51,52,52,64,64,53,53,54,54,55,55,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,56,56,43,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,43,43,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,69,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,46,58,59,49,60,61,62,63,50,51,52,64,53,54,55,65,66,67,68,69,70,71,72,56,43,182,183,184,185,186,187,188,189,190,191,192,193,183,194,195,189,183,190,196,197,182,186,187,198,199,200,191,201,202,203,192,193,204,205,188,194,195,196,197,182,187,201,202,203,204,205,192,0,0,0,0,0,78,82,113,108,114,0,78,82,113,108,114,78,82,113,108,114,0,0,0,84,0,0,84,84,84,84,84,84,84,0,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,84,84,84,84,84,84,0,92,84,84,84,84,84,84,84,84,84,84,84,0,84,84,84,84,84,0,0,92,88,84,84,84,84,84,84,84,84,0,84,84,84,84,84,84,94,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,92,94,84,84,84,84,84,84,84,84,84,84,84,84,92,94,84,84,92,94,84,92,84,84,84,84,84,84,84,84,84,84,84,0,0,84,84,84,206,0,0,0,0,0,110,117,110,110,91,110,116,110,110,110,110,207,110,110,110,110,0,0,0,116,110,110,91,117,117,207,110,116,110,91,110,110,110,110,110,116,110,110,84,84,84,84,84,84,84,84,0,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,88,88,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,88,88,88,88,88,88,88,206,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,0,0,92,92,92,92,92,92,92,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,94,94,94,94,94,94,94,0,28,0,0,0,0,28,0,0,28,13,128,208,124,125,13,124,125,126,28,13,124,125,126,28,126,126,208,124,125,126,28,126,28,126,126,13,126,126,124,124,126,28,208,124,125,126,13,124,125,28,28,125,13,13,13,124,125,126,28,126,28,13,124,125,126,28,13,124,125,126,28,13,13,124,124,125,125,126,126,28,28,13,124,125,126,28,13,124,208,124,125,13,124,126,126,126,126,126,208,125,208,124,125,28,128,128,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,13,13,126,28,13,208,124,125,124,13,13,13,126,13,126,126,126,126,126,126,126,126,125,126,126,126,126,126,126,13,13,126,28,28,13,124,125,126,28,13,124,125,126,28,13,124,125,126,28,13,124,125,126,28,13,13,124,125,126,28,13,126,13,126,13,126,13,126,13,124,125,126,28,13,126,126,208,124,125,13,13,126,126,126,126,0,0,0,167,111,111,0,111,111,111,111,111,111,111,111,111,167,0,111,111,111,111,93,111,111,111,111,111,111,111,111,111,111,111,167,0,0,0,0,0,93,0,111,111,111,111,111,111,111,111,111,0,111,111,111,111,167,111,167,167,93,0,111,111,78,82,113,108,114,119,111,167,119,111,167,119,111,167,119,111,167,119,111,0,111,111,167,119,111,111,111,111,111,111,119,167,119,111,111,167,119,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,167,119,111,111,167,119,111,111,111,111,167,119,111,167,167,119,119,111,111,167,119,111,111,111,111,111,0,119,111,111,111,111,111,111,111,111,111,111,119,111,78,82,113,108,114,78,82,113,108,114,111,111,111,111,111,111,111,0,167,119,111,111,111,167,119,111,167,119,111,167,119,111,111,111,111,111,167,119,111,111,167,119,111,119,119,119,119,119,167,119,111,167,167,93,167,0,93,0,167,167,167,93,0,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,119,119,93],"f":[0,0,0,0,0,0,0,0,[1,[[4,[[3,[1,2]],2]]]],[-1,5,[]],[-1,[[4,[6,2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[[3,[1,2]],2]]],[]],[7,7],[[-1,-2],8,[],[]],0,[-1,[[9,[7]]],10],[[7,7],6],[-1,11,[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,[[-1,12,[3,[13,2]]],[[9,[[16,[[15,[14,2]]]],17]]],[]],[[18,19],20],[[7,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,[-1,[[4,[6,2]]],[]],[-1,[[24,[23]]],[]],[-1,25,[]],[-1,[[24,[[27,[26]]]]],[]],[-1,28,[]],0,0,[-1,[[4,[29,2]]],[]],[-1,[[4,[[24,[[4,[30,2]]]],2]]],[]],[-1,[[3,[31,2]]],[]],[[7,-1],9,32],0,[-1,33,[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[[-1,[27,[6]]],[[9,[6,17]]],[]],[[7,-1],35,36],[[7,-1],35,37],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[1,2]],[4,[[3,[1,2]],2]]],[[9,[[3,[1,2]],17]]]],[[[3,[-1,2]],[4,[[3,[1,2]],2]]],[[9,[[3,[1,2]],17]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[[-1,-2],8,[],[]],[38,39],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,6,[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[40,[[41,[38]]]],[-1,[[9,[-2]]],[],[]],[[38,12],[[41,[42]]]],[-1,34,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,5],[-1,44,[]],[43,[[24,[45]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],43,[[48,[47]]]],[[[49,[-1,-2]]],43,[[48,[47]]],[[48,[[4,[39]]]]]],[[[50,[-1]]],43,[[48,[47]]]],[[[51,[-1]]],43,[[48,[47]]]],[[[52,[-1]]],43,[[48,[47]]]],[53,43],[54,43],[55,43],[[[56,[-1]]],43,[[48,[47]]]],[43,[[24,[44]]]],[[[46,[-1]]],[[46,[-1]]],57],[58,58],[59,59],[[[49,[-1,-2]]],[[49,[-1,-2]]],57,57],[60,60],[61,61],[62,62],[[[63,[-1]]],[[63,[-1]]],57],[[[50,[-1]]],[[50,[-1]]],57],[[[51,[-1]]],[[51,[-1]]],57],[[[52,[-1]]],[[52,[-1]]],57],[[[64,[-1]]],[[64,[-1]]],57],[53,53],[54,54],[55,55],[65,65],[66,66],[67,67],[68,68],[[[69,[-1]]],[[69,[-1]]],57],[70,70],[71,71],[72,72],[[[56,[-1]]],[[56,[-1]]],57],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,0,[[43,12,[4,[47]]],8],[43,73],0,0,0,0,0,[[[46,[-1]]],[[9,[-2,43]]],[[48,[47]]],[]],[[[49,[-1,-2]]],[[9,[-3,43]]],[[48,[47]]],[[48,[[4,[39]]]]],[]],[[[50,[-1]]],[[9,[-2,43]]],[[48,[47]]],[]],[[[51,[-1]]],[[9,[-2,43]]],[[48,[47]]],[]],[[[52,[-1]]],[[9,[-2,43]]],[[48,[47]]],[]],[53,[[9,[-1,43]]],[]],[54,[[9,[-1,43]]],[]],[55,[[9,[-1,43]]],[]],[[[56,[-1]]],[[9,[-2,43]]],[[48,[47]]],[]],[[[46,[-1]],19],20,74],[[58,19],20],[[59,19],20],[[[49,[-1,-2]],19],20,74,74],[[60,19],20],[[61,19],20],[[62,19],20],[[[63,[-1]],19],20,74],[[[50,[-1]],19],20,74],[[[51,[-1]],19],20,74],[[[52,[-1]],19],20,74],[[[64,[-1]],19],20,74],[[53,19],20],[[54,19],20],[[55,19],20],[[65,19],20],[[66,19],20],[[67,19],20],[[68,19],20],[[[69,[-1]],19],20,74],[[70,19],20],[[71,19],20],[[72,19],20],[[[56,[-1]],19],20,74],[[43,19],20],[[43,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1]]],43,[[48,[47]]]],[58,43],[59,43],[[[49,[-1,-2]]],43,[[48,[47]]],[[48,[[4,[39]]]]]],[60,43],[61,43],[62,43],[[[63,[-1]]],43,[[48,[75]]]],[[[50,[-1]]],43,[[48,[47]]]],[[[51,[-1]]],43,[[48,[47]]]],[[[52,[-1]]],43,[[48,[47]]]],[[[64,[-1]]],43,[[48,[47]]]],[53,43],[54,43],[55,43],[65,43],[66,43],[67,43],[68,43],[[[69,[-1]]],43,[[48,[75]]]],[70,43],[71,43],[72,43],[[[56,[-1]]],43,[[48,[47]]]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,[43,[[24,[76]]]],[43,[[24,[44]]]],[43,77],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,78,[79,80,81]],0,0,0,0,0,0,0,0,0,0,[82,83],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[84,84],84],[[84,-1],84,[[48,[47]]]],[[84,47],[[9,[84,17]]]],[[84,84],84],[[84,-1],[[9,[85,17]]],86],[[84,84,84],84],[[84,84],84],[[84,84],84],[[84,84],84],[-1,-2,[],[]],[-1,-2,[],[]],[[73,[24,[87]]],[[24,[88]]]],[84,47],[[84,75,-1],[[9,[84,17]]],89],[84,84],[[-1,-2],8,[],[]],[84,6],[[47,90,[3,[91]]],92],[[73,[4,[39]],[3,[39]],93,78],94],0,0,[84,[[9,[47,17]]]],[[84,84],84],[[84,84],84],[[84,84],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,[[84,-1],84,[[48,[47]]]],[[84,19],[[9,[8,95]]]],[[84,19],[[9,[8,95]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[-1,-2],96,[97,98],99],[[84,-1],[[9,[75,17]]],89],[[84,84],84],[[84,84],84],[[84,-1],8,100],[[84,84],84],[[84,[4,[84,2]],6],84],[[84,84],84],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[84,84],[-1,6,[]],[84,84],[84,84],[84,84],[84,84],[84,84],[84,84],[84,84],[[84,84],84],[[84,84],84],[[84,84],84],[[84,-1],[[9,[84,17]]],86],[[84,-1],[[9,[[102,[47,47,101]],17]]],89],[[84,84],84],[84,[[9,[47,17]]]],0,0,[84,[[9,[47,17]]]],[84],[84],[[84,84,84],84],[[84,84],84],[[84,84],84],[[84,84],84],[[84,-1],[[9,[6,17]]],89],[[84,84],84],[[84,84],[[24,[103]]]],[[84,84,84],84],[[84,84],84],0,0,[[84,84]],[[84,84]],0,0,[[84,6,6],84],0,[[84,84],84],[84,[[9,[[105,[104,101]],17]]]],[[84,106],[[9,[107,17]]]],[-1,-2,[],[]],[-1,47,[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[84,[[9,[104,17]]]],[-1,34,[]],0,0,[84,84],[84,73],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,108,[]],0,[-1,[[41,[109]]],[]],[110,[[112,[111]]]],[[110,19],20],[-1,-1,[]],[-1,-2,[],[]],[-1,[[41,[[4,[39]]]]],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,6,[]],[[[3,[91]]],113],[[[3,[91]]],82],[[[3,[91]]],114],[[-1,[27,[42]]],[[41,[8]]],[]],[[110,[27,[115]]],[[112,[8]]]],[[[15,[116]],117],110],[-1,[[41,[39]]],[]],0,0,[[-1,[4,[39]]],[[41,[8]]],[]],[110,12],[-1,[[41,[[4,[109]]]]],[]],[110,[[112,[[4,[111]]]]]],[-1,[[41,[[4,[39]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[[-1,[27,[42]]],[[41,[8]]],[]],[[110,[27,[115]]],[[112,[8]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[73,[24,[87]]],[[24,[88]]]],[88,88],[[-1,-2],8,[],[]],[88,84],0,[[88,88],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[88,19],20],[-1,-1,[]],[84,88],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],96,[97,98],99],[[88,-1],8,100],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,6,[]],[118,84],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[[-1,-2],8,[],[]],0,[[92,92],6],[[92,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,6,[]],0,[[47,119,82,113,114,117],92],0,0,0,[[113,117],120],[114,121],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[[-1,-2],8,[],[]],[[94,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[94,122],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,6,[]],0,[[73,119,82,78],94],0,0,[78,123],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,5,[]],[124,5],[125,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[126,73],[[24,[[3,[127,2]]]]]],[126,[[4,[47,2]]]],[-1,[[4,[128]]],[]],[124,[[4,[128]]]],[125,[[4,[[3,[1]]]]]],[126,126],[28,28],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[126,129],[[126,130],[[9,[[3,[1,2]],17]]]],[[],13],[[],126],[[126,-1],[[9,[[24,[[3,[131,2]]]],17]]],[[48,[132]]]],[124,[[3,[1]]]],0,[126,6],[[28,28],6],[[-1,12,[3,[13]]],[[41,[133]]],[]],[[124,12,[3,[13]]],[[41,[133]]]],[[125,12,[3,[13]]],[[112,[134]]]],[[126,130],[[9,[135,17]]]],[[13,19],[[9,[8,95]]]],[[124,19],20],[[125,19],20],[[28,19],[[9,[8,95]]]],[[28,19],[[9,[8,95]]]],[[125,136,19],20],[137,13],[-1,-1,[]],[126,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[13,[[3,[138,2]]]],0,[-1,[[24,[23]]],[]],[124,[[24,[23]]]],[125,[[24,[23]]]],[[[24,[47]],47,129,[102,[47,[3,[122,2]],101]],[102,[47,[3,[139,2]],101]],[102,[47,[3,[140,2]],101]],[3,[141,2]]],13],[[142,[3,[1]]],124],[[],126],[129,126],[[129,[3,[141,2]]],126],[137,126],[[126,130],[[9,[130,17]]]],[-1,[[24,[[27,[26]]]]],[]],[125,[[24,[[27,[26]]]]]],[-1,28,[]],[124,28],[125,28],[28,12],0,0,[[126,-1,143],[[9,[135,17]]],144],[[126,-1,145],[[9,[135,17]]],144],[[126,146],[[9,[135,17]]]],[[126,-1,147],[[9,[135,17]]],144],[126,[[9,[135,17]]]],[[126,-1,148],[[9,[135,17]]],144],[[126,-1,149],[[9,[135,17]]],144],[[126,[3,[131,2]]],[[9,[135,17]]]],[126,[[9,[8,17]]]],[[126,73,73,143],[[9,[8,17]]]],[[126,73,73,145],[[9,[8,17]]]],[[126,73,146],[[9,[[24,[[3,[131,2]]]],17]]]],[[126,-1,[3,[127,2]]],[[24,[[3,[127,2]]]]],[[48,[47]]]],[[126,[3,[150,2]]],8],[[126,73,73,147],[[9,[8,17]]]],[[126,73,73,148],[[9,[8,17]]]],[[126,73,-1,151,[24,[[3,[31,2]]]],[24,[47]]],[[9,[8,17]]],[[152,[73]]]],[[126,73,73,149],[[9,[8,17]]]],[[126,-1,[3,[131,2]]],[[9,[[24,[[3,[131,2]]]],17]]],[[48,[132]]]],[[126,139],8],[[126,122],8],[[126,140],8],[[126,153,[3,[154,2]]],8],0,[13,[[3,[141,2]]]],[126,[[3,[141,2]]]],[[28,29,-1],6,155],0,[-1,142,[]],[124,142],[125,156],0,[13,129],0,[13,47],[126,47],0,0,[126,[[158,[157]]]],0,[[126,73],[[9,[135,17]]]],[[126,73,159],[[9,[135,17]]]],[126,137],0,[126,[[162,[[161,[160,137]],2]]]],[125,33],[[126,-1],[[9,[135,17]]],[[48,[132]]]],[[126,-1],[[9,[6,17]]],[[48,[132]]]],[[126,73],[[24,[[3,[163,2]]]]]],[[126,-1],[[9,[[3,[131,2]],17]]],[[48,[132]]]],[126,[[9,[[105,[47,101]],17]]]],[126,[[3,[13,2]]]],[13,[[24,[47]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,47,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[47,47,[102,[47,47,101]],[102,[47,[3,[122,2]],101]],[102,[47,[3,[139,2]],101]],[3,[141,2]],164],[[9,[13,17]]]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[13,73],[[9,[[3,[139,2]],17]]]],[[126,73],[[9,[[3,[139,2]],17]]]],[[13,73],[[9,[[3,[122,2]],17]]]],[[126,73],[[9,[[3,[122,2]],17]]]],[13,[[105,[47,101]]]],[126,[[105,[47,101]]]],[[13,73],[[9,[[3,[140,2]],17]]]],[[126,73],[[9,[[3,[140,2]],17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[129,126],[[129,[3,[141,2]]],126],[[-1,[4,[128]]],[[41,[128]]],[]],[[124,[4,[128]]],[[41,[128]]]],[[[3,[125]],[4,[[3,[1]]]]],[[112,[[3,[1]]]]]],[[13,[3,[141,2]]],13],[[13,129],13],[137,126],[[126,[3,[1,2]],-1],[[9,[8,17]]],[[152,[73]]]],[[126,[3,[1,2]],-1],[[9,[8,17]]],[[152,[73]]]],[[126,[3,[1,2]],-1,[24,[165]]],[[9,[8,17]]],[[152,[73]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[111,-1],[[9,[111,17]]],[[166,[111]]]],[[111,-1],[[9,[111,17]]],[[166,[111]]]],0,0,0,0,0,[[12,93],119],[111,[[9,[111,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,167],[119,119],[111,111],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[111,75],[[111,111],[[24,[12]]]],[[167,167],6],[[119,119],6],[[111,111],6],[[111,[3,[168,2]],12],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[[4,[39]],93],119],[[167,19],20],[[119,19],20],[[111,19],[[9,[8,95]]]],[[111,19],[[9,[8,95]]]],[-1,-1,[]],[-1,-1,[]],[169,111],[170,111],[6,111],[[[24,[90]]],111],[73,111],[96,111],[171,111],[172,111],[[[24,[173]]],111],[[[24,[73]]],111],[[[4,[[8,[73,111]],2]]],111],[174,111],[90,111],[[[24,[169]]],111],[[[24,[175]]],111],[[[24,[176]]],111],[-1,-1,[]],[176,111],[[[24,[171]]],111],[173,111],[[[24,[96]]],111],[175,111],[[[177,[-1]]],111,97],[[[24,[174]]],111],[[[24,[170]]],111],[[[24,[172]]],111],[[[24,[6]]],111],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[73,[[9,[111]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,75],[[-1,-2],96,[97,98],99],[[111,-1],8,100],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[111,6],[111,6],[-1,[[9,[[3,[168,2]],17]]],178],[111,84],[-1,78,[79,80,81]],[[167,93],119],[[175,175],111],[[175,175,176],111],[[175,175],111],[[[24,[[4,[111,2]]]],75],111],[75,[[9,[111,17]]]],[75,[[9,[111,17]]]],[[24,75],111],[75,[[9,[111,17]]]],[-1,111,[[48,[47]]]],[75,[[9,[111,17]]]],[[[4,[167]],93],119],[[111,111],[[24,[103]]]],0,0,0,0,0,0,0,0,0,0,[111,12],[[[105,[111,-1]]],12,[]],[[[4,[111,2]]],12],[[111,-1],[[9,[111,17]]],[[166,[111]]]],[[111,-1],[[9,[111,17]]],[[166,[111]]]],[111,[[3,[168,2]]]],[[111,12],[[3,[168,2]]]],[82,83],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[111,[[179,[[3,[168,2]]]]]],[-1,47,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[75,[[9,[111,17]]]],[75,[[9,[111,17]]]],[[168,12],[[9,[111,17]]]],[[47,75],[[9,[111,17]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[180,90,172],[[9,[111,17]]]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[[12,[4,[39]],93],119],[[[4,[39]],93],119],[93,119],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[93,93],[[-1,-2],8,[],[]],[[93,93],103],[[-1,-2],103,[],[]],[[[4,[39]]],[[4,[75]]]],[[93,93],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[93,19],[[9,[8,95]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],96,[97,98],99],[[93,-1],8,100],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,6,[]],[[93,93],[[24,[103]]]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],0,0,[-1,-2,[],[]]],"c":[865,1111,1174,1233,1260,1280,1281,1287,1426],"p":[[8,"DfPhysicalPlan",0],[3,"Global",1554],[3,"Arc",1555],[3,"Vec",1556],[8,"Any",1557],[15,"bool"],[4,"AddColumnLocation",0],[15,"tuple"],[4,"Result",1558],[8,"Deserializer",1559],[3,"EquivalenceProperties",1560],[15,"usize"],[3,"TaskContext",1076],[8,"RecordBatchStream",1561],[3,"Box",1562],[3,"Pin",1563],[4,"DataFusionError",1564],[4,"Output",0],[3,"Formatter",1565],[6,"Result",1565],[3,"Request",1566],[3,"Request",1566],[3,"MetricsSet",1567],[4,"Option",1568],[3,"OrderingEquivalenceProperties",1560],[3,"PhysicalSortExpr",1569],[15,"slice"],[4,"Partitioning",1076],[4,"Distribution",1570],[3,"PhysicalSortRequirement",1569],[3,"Schema",1571],[8,"Serializer",1572],[3,"Statistics",1573],[3,"TypeId",1557],[4,"ControlFlow",1574],[8,"Visitor",1575],[8,"VisitorMut",1575],[4,"ColumnarValue",77],[4,"ConcreteDataType",1576],[4,"ColumnarValue",1577],[6,"Result",101],[6,"VectorRef",1578],[4,"Error",101],[8,"Error",1579],[3,"Backtrace",1580],[3,"PyUdfSnafu",101],[3,"String",1581],[8,"Into",1582],[3,"UnsupportedInputDataTypeSnafu",101],[3,"CreateAccumulatorSnafu",101],[3,"DowncastVectorSnafu",101],[3,"BadAccumulatorImplSnafu",101],[3,"InvalidInputStateSnafu",101],[3,"InvalidInputColSnafu",101],[3,"ExecuteRepeatedlySnafu",101],[3,"InvalidFuncArgsSnafu",101],[8,"Clone",1583],[3,"UdfTempRecordBatchSnafu",101],[3,"ExecuteFunctionSnafu",101],[3,"GenerateFunctionSnafu",101],[3,"FromScalarValueSnafu",101],[3,"FromArrowArraySnafu",101],[3,"IntoVectorSnafu",101],[3,"InvalidInputTypeSnafu",101],[3,"GeneralDataFusionSnafu",101],[3,"ConvertDfRecordBatchStreamSnafu",101],[3,"ConvertArrowSchemaSnafu",101],[3,"ExecutePhysicalPlanSnafu",101],[3,"TypeCastSnafu",101],[3,"ArrowComputeSnafu",101],[3,"ToScalarValueSnafu",101],[3,"GetScalarVectorSnafu",101],[15,"str"],[8,"Debug",1565],[4,"DataType",1584],[8,"StackError",1585],[4,"StatusCode",1586],[6,"ScalarFunctionImplementation",734],[8,"Fn",1587],[8,"Sync",1588],[8,"Send",1588],[6,"ReturnTypeFunction",734],[6,"ReturnTypeFunction",1589],[4,"DfExpr",756],[4,"VisitRecursion",1590],[8,"FnMut",1587],[6,"TimestampRange",1591],[3,"Expr",948],[8,"ExprSchema",1592],[15,"u8"],[8,"AggregateFunctionCreator",905],[3,"AggregateFunction",1019],[4,"Volatility",1510],[3,"ScalarUdf",1049],[3,"Error",1565],[15,"u64"],[8,"Hash",1593],[8,"Sized",1588],[8,"BuildHasher",1593],[8,"Hasher",1593],[3,"RandomState",1594],[3,"HashMap",1594],[4,"Ordering",1595],[3,"Column",1596],[3,"HashSet",1597],[3,"DFSchema",1592],[3,"DFField",1592],[6,"AccumulatorCreatorFunction",734],[4,"Value",1598],[3,"DfAccumulatorAdaptor",905],[4,"ScalarValue",1291],[6,"Result",1564],[6,"AccumulatorFunctionImpl",734],[6,"StateTypeFunction",734],[6,"ArrayRef",1599],[8,"Accumulator",905],[6,"AggregateFunctionCreatorRef",905],[3,"Timestamp",1600],[3,"Signature",1291],[6,"AccumulatorFactoryFunction",1589],[6,"StateTypeFunction",1589],[3,"ScalarUDF",1601],[6,"ScalarFunctionImplementation",1589],[3,"PhysicalPlanAdapter",1076],[3,"DfPhysicalPlanAdapter",1076],[3,"SessionContext",1076],[8,"CatalogProvider",1602],[6,"PhysicalPlanRef",1076],[3,"SessionConfig",1603],[4,"LogicalPlan",1604],[8,"TableProvider",1605],[4,"TableReference",1606],[6,"SendableRecordBatchStream",1607],[6,"SendableRecordBatchStream",1561],[3,"DataFrame",1608],[4,"DisplayFormatType",1609],[3,"SessionState",1610],[8,"MemoryPool",1611],[3,"AggregateUDF",1612],[3,"WindowUDF",1613],[3,"RuntimeEnv",1614],[6,"SchemaRef",1615],[3,"ArrowReadOptions",1616],[8,"DataFilePaths",1610],[3,"AvroReadOptions",1616],[3,"RecordBatch",1617],[3,"CsvReadOptions",1616],[3,"NdJsonReadOptions",1616],[3,"ParquetReadOptions",1616],[8,"CatalogList",1602],[3,"ListingOptions",1618],[8,"AsRef",1582],[4,"VarType",1619],[8,"VarProvider",1619],[8,"FnOnce",1587],[6,"SchemaRef",1571],[3,"Utc",1620],[3,"DateTime",1621],[3,"SQLOptions",1610],[3,"RawRwLock",1622],[3,"RwLock",1623],[3,"Weak",1555],[8,"TableProviderFactory",1605],[3,"Extensions",1624],[3,"WriterProperties",1625],[8,"Borrow",1626],[4,"TypeSignature",1291],[8,"Array",1599],[15,"f32"],[15,"u16"],[15,"i16"],[15,"i8"],[15,"f64"],[15,"u32"],[15,"i32"],[15,"i64"],[3,"HyperLogLog",1627],[8,"IntoIterator",1628],[3,"Scalar",1629],[15,"i128"],[13,"After",76],[13,"IntoVector",687],[13,"UnsupportedInputDataType",687],[13,"CreateAccumulator",687],[13,"DowncastVector",687],[13,"BadAccumulatorImpl",687],[13,"InvalidInputType",687],[13,"InvalidFuncArgs",687],[13,"ExecuteFunction",687],[13,"GenerateFunction",687],[13,"GeneralDataFusion",687],[13,"TypeCast",687],[13,"ArrowCompute",687],[13,"PyUdf",687],[13,"UdfTempRecordBatch",687],[13,"FromScalarValue",687],[13,"FromArrowArray",687],[13,"InvalidInputState",687],[13,"InvalidInputCol",687],[13,"ExecuteRepeatedly",687],[13,"ConvertDfRecordBatchStream",687],[13,"ConvertArrowSchema",687],[13,"ExecutePhysicalPlan",687],[13,"ToScalarValue",687],[13,"GetScalarVector",687],[13,"QualifiedWildcard",1018],[8,"AggrFuncTypeStore",905],[8,"PhysicalPlan",1076]],"b":[[70,"impl-Visit-for-AddColumnLocation"],[71,"impl-VisitMut-for-AddColumnLocation"],[306,"impl-Display-for-Error"],[307,"impl-Debug-for-Error"],[825,"impl-Expr"],[826,"impl-PartialEq-for-Expr"],[833,"impl-Debug-for-Expr"],[834,"impl-Display-for-Expr"],[1126,"impl-Debug-for-Partitioning"],[1127,"impl-Display-for-Partitioning"],[1129,"impl-From%3C%26SessionState%3E-for-TaskContext"],[1131,"impl-From%3C%26SessionContext%3E-for-TaskContext"],[1388,"impl-Display-for-ScalarValue"],[1389,"impl-Debug-for-ScalarValue"],[1392,"impl-From%3Cf32%3E-for-ScalarValue"],[1393,"impl-From%3Cu16%3E-for-ScalarValue"],[1394,"impl-From%3Cbool%3E-for-ScalarValue"],[1395,"impl-From%3COption%3Cu8%3E%3E-for-ScalarValue"],[1396,"impl-From%3C%26str%3E-for-ScalarValue"],[1397,"impl-From%3Cu64%3E-for-ScalarValue"],[1398,"impl-From%3Ci16%3E-for-ScalarValue"],[1399,"impl-From%3Ci8%3E-for-ScalarValue"],[1400,"impl-From%3COption%3Cf64%3E%3E-for-ScalarValue"],[1401,"impl-From%3COption%3C%26str%3E%3E-for-ScalarValue"],[1402,"impl-From%3CVec%3C(%26str,+ScalarValue)%3E%3E-for-ScalarValue"],[1403,"impl-From%3Cu32%3E-for-ScalarValue"],[1404,"impl-From%3Cu8%3E-for-ScalarValue"],[1405,"impl-From%3COption%3Cf32%3E%3E-for-ScalarValue"],[1406,"impl-From%3COption%3Ci32%3E%3E-for-ScalarValue"],[1407,"impl-From%3COption%3Ci64%3E%3E-for-ScalarValue"],[1409,"impl-From%3Ci64%3E-for-ScalarValue"],[1410,"impl-From%3COption%3Ci16%3E%3E-for-ScalarValue"],[1411,"impl-From%3Cf64%3E-for-ScalarValue"],[1412,"impl-From%3COption%3Cu64%3E%3E-for-ScalarValue"],[1413,"impl-From%3Ci32%3E-for-ScalarValue"],[1414,"impl-From%3C%26HyperLogLog%3CT%3E%3E-for-ScalarValue"],[1415,"impl-From%3COption%3Cu32%3E%3E-for-ScalarValue"],[1416,"impl-From%3COption%3Cu16%3E%3E-for-ScalarValue"],[1417,"impl-From%3COption%3Ci8%3E%3E-for-ScalarValue"],[1418,"impl-From%3COption%3Cbool%3E%3E-for-ScalarValue"],[1491,"impl-TryFrom%3CDataType%3E-for-ScalarValue"],[1492,"impl-TryFrom%3C%26DataType%3E-for-ScalarValue"]]},\
"common_recordbatch":{"doc":"","t":"DGDDDIDDGDALMLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLALLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMLLMLLLLLLLAMKLLLLLMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLDEDNGDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLMLLLLMMLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNENDNDNDNDNNDNDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLFF","n":["DfRecordBatch","DfSendableRecordBatchStream","EmptyRecordBatchStream","OrderOption","RecordBatch","RecordBatchStream","RecordBatchStreamAdaptor","RecordBatches","SendableRecordBatchStream","SimpleRecordBatchStream","adapter","as_stream","batches","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","column","column_by_name","columns","columns","columns","df_record_batch","empty","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","get_array_memory_size","index","index","inner","into","into","into","into","into","into","into_df_stream","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","into_streaming_request","iter","name","new","new","new_empty","num_columns","num_rows","options","output_ordering","output_ordering","output_ordering","poll_next","poll_next","poll_next","pretty_print","project","record_output","record_output","recordbatch","row_count","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","slice","stream","take","to_owned","to_owned","try_collect","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_from_iter","try_from_iter_with_nullable","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new_with_options","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","with_schema","AsyncRecordBatchStreamAdapter","AsyncRecordBatchStreamAdapterState","DfRecordBatchStreamAdapter","Failed","FutureStream","ParquetRecordBatchStreamAdapter","Ready","RecordBatchStreamAdapter","Uninit","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","into_streaming_request","into_streaming_request","metrics","new","new","new","output_schema","poll_next","poll_next","poll_next","poll_next","projection","schema","schema","schema","schema","schema","schema","size_hint","size_hint","size_hint","size_hint","state","stream","stream","stream","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","try_new_with_metrics","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CastVector","CastVectorSnafu","ColumnNotExists","ColumnNotExistsSnafu","CreateRecordBatches","CreateRecordBatchesSnafu","DataTypes","DataTypesSnafu","Err","Error","External","ExternalSnafu","Format","FormatSnafu","InitRecordbatchStream","InitRecordbatchStreamSnafu","NewDfRecordBatch","NewDfRecordBatchSnafu","Ok","PollStream","PollStreamSnafu","ProjectArrowRecordBatch","ProjectArrowRecordBatchSnafu","Result","SchemaConversion","SchemaConversionSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_type","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","next","projection","reason","schema","source","status_code","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","error","error","error","error","error","from_type","location","location","location","location","location","location","location","location","location","location","location","projection","reason","schema","source","source","source","source","table_name","to_type","RecordBatch","RecordBatchRowIterator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column","column_by_name","column_vectors","columns","columns","columns","df_record_batch","df_record_batch","eq","fmt","from","from","from_ref","into","into","into_df_record_batch","into_iter","into_request","into_request","new","new","next","num_columns","num_rows","pretty_print","record_batch","row_cursor","rows","rows","schema","serialize","to_owned","try_from","try_from","try_from_df_record_batch","try_into","try_into","try_project","type_id","type_id","vzip","vzip","collect","collect_batches"],"q":[[0,"common_recordbatch"],[150,"common_recordbatch::adapter"],[238,"common_recordbatch::error"],[461,"common_recordbatch::error::Error"],[488,"common_recordbatch::recordbatch"],[538,"common_recordbatch::util"],[540,"arrow_array::array"],[541,"alloc::alloc"],[542,"alloc::sync"],[543,"core::option"],[544,"core::fmt"],[545,"core::fmt"],[546,"arrow_array::array::struct_array"],[547,"tonic::request"],[548,"core::iter::traits::iterator"],[549,"datatypes::schema"],[550,"arrow_schema::schema"],[551,"futures_core::stream"],[552,"core::marker"],[553,"core::pin"],[554,"core::task::wake"],[555,"core::task::poll"],[556,"alloc::string"],[557,"arrow_schema::error"],[558,"datafusion_physical_plan::metrics::baseline"],[559,"alloc::vec"],[560,"core::iter::traits::collect"],[561,"arrow_array::record_batch"],[562,"core::any"],[563,"arrow_schema::schema"],[564,"parquet::arrow::async_reader"],[565,"alloc::boxed"],[566,"core::any"],[567,"snafu::backtrace_inert"],[568,"core::convert"],[569,"core::clone"],[570,"core::fmt"],[571,"common_error::ext"],[572,"common_error::status_code"],[573,"datatypes::vectors"],[574,"std::collections::hash::map"],[575,"serde::ser"]],"d":["A two-dimensional batch of column-oriented data with a …","Trait for a <code>Stream</code> of <code>RecordBatch</code>es","EmptyRecordBatchStream can be used to create a …","","A two-dimensional batch of column-oriented data with a …","","Adapt a Stream of RecordBatch to a RecordBatchStream.","","","","","","","","","","","","","","","","","","","","","","","Get a reference to a column’s array by index.","Get a reference to a column’s array by name.","Get a reference to all columns in the record batch.","","","","","","","","","","","","Error of record batch.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the total number of bytes of memory occupied …","Get a reference to a column’s array by name.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create an empty RecordBatchStream","Creates a RecordBatchStreamAdaptor without output ordering …","Creates a new empty <code>RecordBatch</code>.","Returns the number of columns in the record batch.","Returns the number of rows in each column.","","","","","","","","","Projects the schema onto the specified columns","","","","","","","","","","Returns the <code>Schema</code> of the record batch.","Schema wrapped by Arc","","","","","Return a new RecordBatch where each column is sliced …","","","","","","","","","","","","","Create a <code>RecordBatch</code> from an iterable list of pairs of the …","Create a <code>RecordBatch</code> from an iterable list of tuples of the","","","","","","","","Creates a <code>RecordBatch</code> from a schema and columns.","Creates a <code>RecordBatch</code> from a schema and columns, with …","","","","","","","","","","","","","","","","","Override the schema of this <code>RecordBatch</code>","","","Greptime SendableRecordBatchStream -&gt; DataFusion …","","","ParquetRecordBatchStream -&gt; DataFusion RecordBatchStream","","DataFusion SendableRecordBatchStream -&gt; Greptime …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::CastVector</code> variant","","SNAFU context selector for the <code>Error::ColumnNotExists</code> …","","SNAFU context selector for the <code>Error::CreateRecordBatches</code> …","","SNAFU context selector for the <code>Error::DataTypes</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::Format</code> variant","","SNAFU context selector for the <code>Error::InitRecordbatchStream</code>…","","SNAFU context selector for the <code>Error::NewDfRecordBatch</code> …","Contains the success value","","SNAFU context selector for the <code>Error::PollStream</code> variant","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::SchemaConversion</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A two-dimensional batch of column-oriented data with a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a new <code>RecordBatch</code> from <code>schema</code> and <code>columns</code>.","","","","Pretty display this record batch like a table","","","Create an iterator to traverse the data by row","","","","","","","Create a new <code>RecordBatch</code> from <code>schema</code> and <code>df_record_batch</code>.","","","","","","","","Collect all the items from the stream into a vector of …","Collect all the items from the stream into RecordBatches."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,23,31,24,3,1,4,23,31,24,3,1,4,3,4,3,4,4,4,4,36,4,36,1,3,1,4,3,3,3,3,0,3,1,4,23,31,24,3,1,4,4,4,3,4,4,4,31,31,23,31,24,3,1,4,1,1,23,31,24,3,1,4,23,31,24,1,3,23,24,4,4,4,3,76,24,24,23,31,24,1,4,4,4,0,4,76,23,31,24,1,4,23,24,36,1,4,4,24,1,3,4,1,23,31,24,3,1,4,1,4,4,23,31,24,3,1,4,1,4,4,23,31,24,23,31,24,3,1,4,0,23,31,24,3,1,4,4,0,0,0,77,0,0,77,0,77,43,46,50,77,49,43,46,50,77,49,43,46,50,77,49,43,46,50,77,49,43,46,50,77,49,43,46,50,49,50,43,46,49,43,43,46,50,49,43,43,46,50,49,50,49,43,46,50,49,49,43,46,50,43,46,50,77,49,43,46,50,77,49,50,50,43,46,50,49,43,46,50,77,49,43,46,50,77,49,51,0,51,0,51,0,51,0,33,0,51,0,51,0,51,0,51,0,33,51,0,51,0,0,51,0,51,51,51,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,51,55,57,51,58,59,60,55,62,63,64,65,66,57,67,58,59,60,55,62,63,64,65,66,57,67,57,51,51,55,57,58,59,60,55,62,63,64,65,66,57,67,51,51,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,67,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,58,59,60,55,62,63,64,65,66,57,67,51,51,66,55,66,51,51,57,58,59,60,55,62,63,64,65,66,57,67,51,67,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,51,58,59,60,55,62,63,64,65,66,57,67,51,78,79,80,81,82,83,84,79,85,86,87,88,80,81,82,83,78,84,83,87,83,85,86,88,84,78,84,0,0,74,36,74,36,36,36,36,36,36,36,74,36,36,36,36,36,74,36,36,74,36,36,74,74,36,74,36,74,36,36,36,74,74,36,74,36,36,36,74,36,36,74,36,36,74,36,74,36,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[4,6],[[9,[7,8]]]],[[4,10],[[11,[[9,[7,8]]]]]],[4,[[12,[[9,[7,8]]]]]],0,0,0,[[],1],[[3,3],13],[[1,1],13],[[4,4],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[3,14],15],[[1,14],15],[[4,14],[[17,[5,16]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,4],[-1,-1,[]],[18,4],[-1,-1,[]],[-1,-1,[]],[4,6],[[4,10]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,19],[1],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[1,[[0,[21]]]],0,[22,23],[[22,-1],[[24,[-1]]],[]],[[[9,[25,8]]],4],[4,6],[4,6],0,[-1,[[11,[[12,[3]]]]],[]],[[[24,[-1]]],[[11,[[12,[3]]]]],[26,27]],0,[[[28,[23]],29],[[30,[11]]]],[[[28,[31]],29],[[30,[11]]]],[[[28,[[24,[-1]]]],29],[[30,[11]]],[26,27]],[1,[[33,[32]]]],[[4,[12,[6]]],[[17,[4,34]]]],[[4,35],4],[[4,35],4],0,0,[-1,22,[]],[23,22],[31,22],[[[24,[-1]]],22,[26,27]],[1,22],[4,[[9,[25,8]]]],0,0,0,0,0,[[4,6,6],4],0,[1,[[37,[36]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[33,[1]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[22,-1],[[33,[1]]],38],[-1,[[17,[4,34]]],38],[-1,[[17,[4,34]]],38],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[22,[37,[36]]],[[33,[1]]]],[[[9,[25,8]],[37,[[9,[7,8]],8]]],[[17,[4,34]]]],[[[9,[25,8]],[37,[[9,[7,8]],8]],39],[[17,[4,34]]]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,[9,[25,8]]],[[17,[4,34]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],0,[[41,[42,[-1]],[11,[[37,[6]]]]],[[43,[-1]]],[27,44,45]],[2,46],[[22,[28,[[48,[47]]]]],49],0,[[[28,[[43,[-1]]]],29],[[30,[11]]],[27,44,45]],[[[28,[46]],29],[[30,[11]]]],[[[28,[50]],29],[[30,[11]]]],[[[28,[49]],29],[[30,[11]]]],0,[[[43,[-1]]],41,[27,44,45]],[46,41],[50,22],[49,22],0,0,[[[43,[-1]]],[[5,[6,[11,[6]]]]],[27,44,45]],[46,[[5,[6,[11,[6]]]]]],[50,[[5,[6,[11,[6]]]]]],[49,[[5,[6,[11,[6]]]]]],0,0,0,0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[19,[[33,[50]]]],[[19,35],[[33,[50]]]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[[[28,[-1]],29],[[30,[[11,[17]]]]],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,52],[-1,53,[]],[51,[[11,[54]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],51,[[56,[32]]]],[[[57,[-1,-2]]],51,[[56,[32]]],[[56,[32]]]],[51,[[11,[53]]]],[58,58],[59,59],[60,60],[[[55,[-1]]],[[55,[-1]]],61],[62,62],[63,63],[64,64],[65,65],[[[66,[-1,-2]]],[[66,[-1,-2]]],61,61],[[[57,[-1,-2]]],[[57,[-1,-2]]],61,61],[[[67,[-1,-2]]],[[67,[-1,-2]]],61,61],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[51,6,[37,[32]]],5],[51,10],[[[55,[-1]]],[[17,[-2,51]]],[[56,[32]]],[]],[[[57,[-1,-2]]],[[17,[-3,51]]],[[56,[32]]],[[56,[32]]],[]],[[58,14],15],[[59,14],15],[[60,14],15],[[[55,[-1]],14],15,68],[[62,14],15],[[63,14],15],[[64,14],15],[[65,14],15],[[[66,[-1,-2]],14],15,68,68],[[[57,[-1,-2]],14],15,68,68],[[[67,[-1,-2]],14],15,68,68],[[51,14],15],[[51,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,51],[59,51],[60,51],[[[55,[-1]]],51,[[56,[32]]]],[62,51],[63,51],[64,51],[65,51],[[[66,[-1,-2]]],51,[[56,[22]]],[[56,[[37,[6]]]]]],[[[57,[-1,-2]]],51,[[56,[32]]],[[56,[32]]]],[[[67,[-1,-2]]],51,[[56,[69]]],[[56,[69]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[51,[[11,[70]]]],0,0,0,[51,[[11,[53]]]],[51,71],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],5,[],[]],[[36,6],72],[[36,10],[[11,[72]]]],[[36,10,22],[[33,[[73,[32,72]]]]]],[36,[[12,[72]]]],0,0,[36,4],0,[[36,36],13],[[36,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[36,74],[[22,-1],[[33,[36]]],38],[74,11],[36,6],[36,6],[36,32],0,0,[36,74],0,0,[[36,-1],17,75],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[22,4],[[33,[36]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[36,[12,[6]]],[[33,[36]]]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[33,[[37,[36]]]]]],[2,[[33,[1]]]]],"c":[],"p":[[3,"RecordBatches",0],[6,"SendableRecordBatchStream",0],[3,"OrderOption",0],[3,"DfRecordBatch",0],[15,"tuple"],[15,"usize"],[8,"Array",540],[3,"Global",541],[3,"Arc",542],[15,"str"],[4,"Option",543],[15,"slice"],[15,"bool"],[3,"Formatter",544],[6,"Result",544],[3,"Error",544],[4,"Result",545],[3,"StructArray",546],[6,"DfSendableRecordBatchStream",0],[3,"Request",547],[8,"Iterator",548],[6,"SchemaRef",549],[3,"EmptyRecordBatchStream",0],[3,"RecordBatchStreamAdaptor",0],[3,"Schema",550],[8,"Stream",551],[8,"Unpin",552],[3,"Pin",553],[3,"Context",554],[4,"Poll",555],[3,"SimpleRecordBatchStream",0],[3,"String",556],[6,"Result",238],[4,"ArrowError",557],[3,"BaselineMetrics",558],[3,"RecordBatch",488],[3,"Vec",559],[8,"IntoIterator",560],[3,"RecordBatchOptions",561],[3,"TypeId",562],[6,"SchemaRef",550],[3,"ParquetRecordBatchStream",563],[3,"ParquetRecordBatchStreamAdapter",150],[8,"AsyncFileReader",563],[8,"Send",552],[3,"DfRecordBatchStreamAdapter",150],[8,"Future",564],[3,"Box",565],[3,"AsyncRecordBatchStreamAdapter",150],[3,"RecordBatchStreamAdapter",150],[4,"Error",238],[8,"Any",562],[8,"Error",566],[3,"Backtrace",567],[3,"CreateRecordBatchesSnafu",238],[8,"Into",568],[3,"ColumnNotExistsSnafu",238],[3,"NewDfRecordBatchSnafu",238],[3,"DataTypesSnafu",238],[3,"ExternalSnafu",238],[8,"Clone",569],[3,"SchemaConversionSnafu",238],[3,"PollStreamSnafu",238],[3,"FormatSnafu",238],[3,"InitRecordbatchStreamSnafu",238],[3,"ProjectArrowRecordBatchSnafu",238],[3,"CastVectorSnafu",238],[8,"Debug",544],[4,"ConcreteDataType",570],[8,"StackError",571],[4,"StatusCode",572],[6,"VectorRef",573],[3,"HashMap",574],[3,"RecordBatchRowIterator",488],[8,"Serializer",575],[8,"RecordBatchStream",0],[4,"AsyncRecordBatchStreamAdapterState",150],[13,"ColumnNotExists",461],[13,"NewDfRecordBatch",461],[13,"PollStream",461],[13,"Format",461],[13,"InitRecordbatchStream",461],[13,"ProjectArrowRecordBatch",461],[13,"CastVector",461],[13,"DataTypes",461],[13,"External",461],[13,"CreateRecordBatches",461],[13,"SchemaConversion",461]],"b":[[52,"impl-From%3CStructArray%3E-for-RecordBatch"],[54,"impl-From%3C%26StructArray%3E-for-RecordBatch"],[94,"impl-RecordOutput-for-%26RecordBatch"],[95,"impl-RecordOutput-for-RecordBatch"],[332,"impl-Debug-for-Error"],[333,"impl-Display-for-Error"]]},\
"common_runtime":{"doc":"","t":"GCDDDCIMLLLFFFFLLLLKMFLALLLLLAMFMMMLLLLLLLLLAKMLMFAMAFFFFFFMLLLLLLLLLLLLFNDNENDNGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMRHDHDRRMFMMFLFLFLLLLLFLOOLLFLLLLLFMMFLFLFLFLFLFLLLLLLLLLFMMDDRMMLLLLLLLLLLLLLLLLLLLLGDIDLLLLKMLLLLLMMMLLLLKMLLLMLMMLLLLLLLLLLDDDDHDMMLLLLLLLLLMLLMLLLLLLLLMMLLLLLLLLMFFFFMMLMLLLLMLLLLLLLLLLLLLL","n":["BoxedTaskFunction","Builder","JoinError","JoinHandle","RepeatedTask","Runtime","TaskFunction","_p","abort","abort_handle","as_error_source","bg_runtime","block_on_bg","block_on_read","block_on_write","borrow","borrow","borrow_mut","borrow_mut","call","cancel_token","create_runtime","drop","error","fmt","fmt","fmt","from","from","global","id","init_global_runtimes","initial_delay","inner","interval","into","into","into_future","into_panic","into_request","into_request","is_cancelled","is_finished","is_panic","metrics","name","name","poll","raw","read_runtime","repeated_task","repr","runtime","spawn_bg","spawn_blocking_bg","spawn_blocking_read","spawn_blocking_write","spawn_read","spawn_write","started","to_string","trace","try_from","try_from","try_into","try_into","try_into_panic","try_poll","type_id","type_id","vzip","vzip","write_runtime","BuildRuntime","BuildRuntimeSnafu","Err","Error","IllegalState","IllegalStateSnafu","Ok","Result","WaitGcTaskStop","WaitGcTaskStopSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","into","into","into","into","into_error","into_error","into_error","into_request","into_request","into_request","into_request","location_opt","name","name","next","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","error","error","location","location","location","name","name","BG_WORKERS","CONFIG_RUNTIMES","ConfigRuntimes","GLOBAL_RUNTIMES","GlobalRuntimes","READ_WORKERS","WRITE_WORKERS","already_init","bg_runtime","bg_runtime","bg_runtime","block_on_bg","block_on_bg","block_on_read","block_on_read","block_on_write","block_on_write","borrow","borrow","borrow_mut","borrow_mut","create_runtime","default","define_global_runtime_spawn","define_spawn","from","from","init_global_runtimes","into","into","into_request","into_request","new","read_runtime","read_runtime","read_runtime","spawn_bg","spawn_bg","spawn_blocking_bg","spawn_blocking_bg","spawn_blocking_read","spawn_blocking_read","spawn_blocking_write","spawn_blocking_write","spawn_read","spawn_read","spawn_write","spawn_write","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_runtime","write_runtime","write_runtime","METRIC_RUNTIME_THREADS_ALIVE","METRIC_RUNTIME_THREADS_IDLE","THREAD_NAME_LABEL","__private_field","__private_field","borrow","borrow","borrow_mut","borrow_mut","deref","deref","from","from","into","into","into_request","into_request","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BoxedTaskFunction","RepeatedTask","TaskFunction","TaskInner","borrow","borrow","borrow_mut","borrow_mut","call","cancel_token","drop","fmt","fmt","from","from","initial_delay","inner","interval","into","into","into_request","into_request","name","name","new","start","started","started","stop","task_fn","task_handle","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_initial_delay","Builder","Dropper","JoinError","JoinHandle","RUNTIME_ID","Runtime","_dropper","_p","block_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","builder","clone","clone_into","close","default","drop","fmt","fmt","from","from","from","from_ref","handle","id","into","into","into","into_request","into_request","into_request","max_blocking_threads","name","name","on_thread_park","on_thread_start","on_thread_stop","on_thread_unpark","raw","repr","runtime_name","runtime_name","spawn","spawn_blocking","thread_keep_alive","thread_name","thread_name","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","worker_threads"],"q":[[0,"common_runtime"],[73,"common_runtime::error"],[153,"common_runtime::error::Error"],[160,"common_runtime::global"],[219,"common_runtime::metrics"],[244,"common_runtime::repeated_task"],[285,"common_runtime::runtime"],[352,"tokio::runtime::task::abort"],[353,"core::error"],[354,"core::future::future"],[355,"alloc::boxed"],[356,"core::pin"],[357,"core::fmt"],[358,"core::fmt"],[359,"core::fmt"],[360,"core::any"],[361,"alloc::alloc"],[362,"tonic::request"],[363,"core::task::wake"],[364,"core::task::poll"],[365,"core::marker"],[366,"core::ops::function"],[367,"alloc::string"],[368,"tracing::span"],[369,"tracing::instrument"],[370,"core::any"],[371,"core::convert"],[372,"core::clone"],[373,"alloc::vec"],[374,"core::fmt"],[375,"common_error::ext"],[376,"prometheus::gauge"],[377,"core::time"],[378,"common_error::ext"]],"d":["","","Task failed to execute to completion.","An owned permission to join on a task (await its …","","","Task to execute repeatedly.","","Abort the task associated with the handle.","Returns a new <code>AbortHandle</code> that can be used to remotely …","","Returns the global <code>bg</code> thread pool.","Run a future to complete in <code>bg</code> thread pool.","Run a future to complete in <code>read</code> thread pool.","Run a future to complete in <code>write</code> thread pool.","","","","","Invoke the task.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Global runtimes","","Initialize the global runtimes","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the join error, returning the object with which …","","","Returns true if the error was caused by the task being …","Checks if the task associated with this <code>JoinHandle</code> has …","Returns true if the error was caused by the task panicking.","Runtime metrics","Name of the task.","","","","Returns the global <code>read</code> thread pool.","","","","Spawn a future and execute it in <code>bg</code> thread pool.","Run the blocking operation in <code>bg</code> thread pool.","Run the blocking operation in <code>read</code> thread pool.","Run the blocking operation in <code>write</code> thread pool.","Spawn a future and execute it in <code>read</code> thread pool.","Spawn a future and execute it in <code>write</code> thread pool.","","","","","","","","Consumes the join error, returning the object with which …","","","","","","Returns the global <code>write</code> thread pool.","","SNAFU context selector for the <code>Error::BuildRuntime</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::IllegalState</code> variant","Contains the success value","","","SNAFU context selector for the <code>Error::WaitGcTaskStop</code> …","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the global <code>bg</code> thread pool.","","","Run a future to complete in <code>bg</code> thread pool.","","Run a future to complete in <code>read</code> thread pool.","","Run a future to complete in <code>write</code> thread pool.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the global runtimes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the global <code>read</code> thread pool.","","","Spawn a future and execute it in <code>bg</code> thread pool.","","Run the blocking operation in <code>bg</code> thread pool.","","Run the blocking operation in <code>read</code> thread pool.","","Run the blocking operation in <code>write</code> thread pool.","","Spawn a future and execute it in <code>read</code> thread pool.","","Spawn a future and execute it in <code>write</code> thread pool.","","","","","","","","","","Returns the global <code>write</code> thread pool.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Task to execute repeatedly.","","","","","","Invoke the task.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Name of the task.","","Creates a new repeated task. The <code>initial_delay</code> is the …","","","","","The task_fn to run. This is Some if the task is not …","The repeated task handle. This handle is Some if the task …","","","","","","","","","","","","Dropping the dropper will cause runtime to shutdown.","Task failed to execute to completion.","An owned permission to join on a task (await its …","","A runtime to run future tasks","","","Run a future to complete, this is the runtime’s entry …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Specifies the limit for additional threads spawned by the …","","","","","","","","","","","Spawn a future and execute it in this thread pool","Run the provided function on an executor dedicated to …","Sets a custom timeout for a thread in the blocking pool.","Sets name of threads spawned by the Runtime thread pool","","","","","","","","","","","","","","","Sets the number of worker threads the Runtime will use."],"i":[0,0,0,0,0,0,0,1,1,1,11,0,0,0,0,11,1,11,1,53,45,0,1,0,11,11,1,11,1,0,11,0,45,45,45,11,1,1,11,11,1,11,1,11,0,53,45,1,1,0,0,11,0,0,0,0,0,0,0,45,11,1,11,1,11,1,11,1,11,1,11,1,0,29,0,49,0,29,0,49,0,29,0,29,29,29,33,31,35,29,33,31,35,29,31,29,33,31,35,33,31,35,29,29,31,33,31,35,29,29,33,31,35,29,33,31,35,33,31,35,29,33,31,35,33,31,35,29,29,31,35,29,29,33,31,35,29,33,31,35,29,33,31,35,29,33,31,35,29,33,31,35,29,54,55,54,56,55,56,55,0,0,0,0,0,0,0,41,0,40,41,0,40,0,40,0,40,40,41,40,41,0,41,0,0,40,41,0,40,41,40,41,40,0,40,41,0,40,0,40,0,40,0,40,0,40,0,40,40,41,40,41,40,41,40,41,0,40,41,0,0,0,42,44,42,44,42,44,42,44,42,44,42,44,42,44,42,44,42,44,42,44,42,44,0,0,0,0,57,45,57,45,53,45,45,45,45,57,45,45,45,45,57,45,57,45,53,45,45,45,45,45,45,57,57,45,57,45,57,45,57,45,57,45,45,0,0,0,0,0,0,5,1,5,50,5,51,50,5,51,50,5,50,5,5,51,50,51,5,51,50,5,51,5,5,11,50,5,51,50,5,51,50,5,5,0,0,0,0,1,11,50,50,5,5,50,50,50,5,50,5,51,50,5,51,50,5,51,50,5,51,50],"f":[0,0,0,0,0,0,0,0,[[[1,[-1]]],2,[]],[[[1,[-1]]],3,[]],[-1,4,[]],[[],5],[-1,[],6],[-1,[],6],[-1,[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[[7,[6]]]]],[]],0,[[9,9,10],5],[[[1,[-1]]],2,[]],0,[[11,12],[[14,[2,13]]]],[[11,12],[[14,[2,13]]]],[[[1,[-1]],12],[[14,[2,13]]],15],[-1,-1,[]],[-1,-1,[]],0,0,[[[16,[5]],[16,[5]],[16,[5]]],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[11,[[7,[17,18]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[11,20],[[[1,[-1]]],20,[]],[11,20],0,[-1,9,[]],0,[[[8,[[1,[-1]]]],21],22,[]],0,[[],5],0,0,0,[-1,1,[6,23]],[-1,[[1,[-2]]],[24,23],23],[-1,[[1,[-2]]],[24,23],23],[-1,[[1,[-2]]],[24,23],23],[-1,1,[6,23]],[-1,1,[6,23]],0,[-1,25,[]],[[-1,26],[[27,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[11,[[14,[[7,[17,18]],11]]]],[[[8,[-1]],21],22,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],0,0,0,0,0,0,0,0,0,0,[29,17],[-1,4,[]],[29,[[16,[30]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]]],29,[[32,[25]]]],[29,[[16,[4]]]],[33,33],[[[31,[-1]]],[[31,[-1]]],34],[[[35,[-1]]],[[35,[-1]]],34],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[29,10,[36,[25]]],2],[29,9],[[[31,[-1]]],[[14,[-2,29]]],[[32,[25]]],[]],[[33,12],37],[[[31,[-1]],12],37,15],[[[35,[-1]],12],37,15],[[29,12],37],[[29,12],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,29],[[[31,[-1]]],29,[[32,[25]]]],[[[35,[-1]]],29,[[32,[25]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[29,[[16,[38]]]],0,0,[29,[[16,[39]]]],[29,[[16,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],0,0,[-1,[],6],[[40,-1],[],6],[-1,[],6],[[40,-1],[],6],[-1,[],6],[[40,-1],[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,9,10],5],[[],41],0,0,[-1,-1,[]],[-1,-1,[]],[[[16,[5]],[16,[5]],[16,[5]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[[16,[5]],[16,[5]],[16,[5]]],40],[[],5],0,0,[-1,1,[6,23]],[[40,-1],1,[6,23]],[-1,[[1,[-2]]],[24,23],23],[[40,-1],[[1,[-2]]],[24,23],23],[-1,[[1,[-2]]],[24,23],23],[[40,-1],[[1,[-2]]],[24,23],23],[-1,[[1,[-2]]],[24,23],23],[[40,-1],[[1,[-2]]],[24,23],23],[-1,1,[6,23]],[[40,-1],1,[6,23]],[-1,1,[6,23]],[[40,-1],1,[6,23]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,43],[44,43],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[[7,[6]]]]],[]],0,[[[45,[-1]]],2,[]],[[[45,[-1]],12],37,[]],[[[45,[-1]],12],37,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,9,[]],0,[[46,[47,[-1]]],[[45,[-1]]],48],[[[45,[-1]],5],[[49,[2]]],48],[[[45,[-1]]],20,48],0,[[[45,[-1]]],[[49,[2]]],48],0,0,[-1,25,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[45,[-1]],[16,[46]]],[[45,[-1]]],48],0,0,0,0,0,0,0,0,[[5,-1],[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,[[49,[5]]]],[[],50],0,[5,5],[[-1,-2],2,[],[]],0,[[],50],[51,2],[[5,12],37],[[51,12],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[50,10],50],[5,9],0,[25,[[0,[52]]]],[25,[[0,[52]]]],[25,[[0,[52]]]],[25,[[0,[52]]]],0,0,[[50,-1],50,[[32,[25]]]],0,[[5,-1],1,[6,23]],[[5,-1],[[1,[-2]]],[24,23],23],[[50,46],50],[[50,-1],50,[[32,[25]]]],0,[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[50,10],50]],"c":[],"p":[[3,"JoinHandle",0],[15,"tuple"],[3,"AbortHandle",352],[8,"Error",353],[3,"Runtime",285],[8,"Future",354],[3,"Box",355],[3,"Pin",356],[15,"str"],[15,"usize"],[3,"JoinError",0],[3,"Formatter",357],[3,"Error",357],[4,"Result",358],[8,"Debug",357],[4,"Option",359],[8,"Any",360],[3,"Global",361],[3,"Request",362],[15,"bool"],[3,"Context",363],[4,"Poll",364],[8,"Send",365],[8,"FnOnce",366],[3,"String",367],[3,"Span",368],[3,"Instrumented",369],[3,"TypeId",360],[4,"Error",73],[3,"Backtrace",370],[3,"IllegalStateSnafu",73],[8,"Into",371],[3,"BuildRuntimeSnafu",73],[8,"Clone",372],[3,"WaitGcTaskStopSnafu",73],[3,"Vec",373],[6,"Result",357],[3,"Location",374],[8,"StackError",375],[3,"GlobalRuntimes",160],[3,"ConfigRuntimes",160],[3,"METRIC_RUNTIME_THREADS_ALIVE",219],[6,"IntGaugeVec",376],[3,"METRIC_RUNTIME_THREADS_IDLE",219],[3,"RepeatedTask",244],[3,"Duration",377],[6,"BoxedTaskFunction",244],[8,"ErrorExt",375],[6,"Result",73],[3,"Builder",285],[3,"Dropper",285],[8,"Fn",366],[8,"TaskFunction",244],[13,"BuildRuntime",153],[13,"WaitGcTaskStop",153],[13,"IllegalState",153],[3,"TaskInner",244]],"b":[[24,"impl-Debug-for-JoinError"],[25,"impl-Display-for-JoinError"],[108,"impl-Display-for-Error"],[109,"impl-Debug-for-Error"],[255,"impl-Display-for-RepeatedTask%3CE%3E"],[256,"impl-Debug-for-RepeatedTask%3CE%3E"]]},\
"common_telemetry":{"doc":"","t":"COCOOCCOAAAAFOCAORRHDDLLLLLLOLLLMMLLLLLOLLLLOFFLLLLMMLLOMLLLLLLLLOFDMLLLLLLFLLLLIGDGMLMLLLLLLLLLLLLLLLLKLLLL","n":["common_error","debug","dump_metrics","error","info","init_default_ut_logging","init_global_logging","log","logging","macros","metric","panic_hook","set_panic_hook","trace","tracing","tracing_context","warn","DEFAULT_LOG_TARGETS","DEFAULT_OTLP_ENDPOINT","GLOBAL_UT_LOG_GUARD","LoggingOptions","TracingOptions","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","debug","default","default","deserialize","dir","enable_otlp_tracing","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","from","from","from_ref","info","init_default_ut_logging","init_global_logging","into","into","into_request","into_request","level","otlp_endpoint","serialize","to_owned","trace","tracing_sample_ratio","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","warn","dump_metrics","PANIC_COUNTER","__private_field","borrow","borrow_mut","deref","from","into","into_request","set_panic_hook","try_from","try_into","type_id","vzip","FutureExt","Propagator","TracingContext","W3cTrace","_private","attach","base","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_current_span","from_ref","from_span","from_w3c","into","into_request","new","to_owned","to_w3c","trace","try_from","try_into","type_id","vzip"],"q":[[0,"common_telemetry"],[17,"common_telemetry::logging"],[66,"common_telemetry::metric"],[67,"common_telemetry::panic_hook"],[80,"common_telemetry::tracing_context"],[108,"core::result"],[109,"serde::de"],[110,"core::fmt"],[111,"core::fmt"],[112,"core::option"],[113,"tracing_appender::non_blocking"],[114,"alloc::vec"],[115,"tonic::request"],[116,"serde::ser"],[117,"core::any"],[118,"prometheus::counter"],[119,"tracing::span"],[120,"tracing::instrument"]],"d":["","Logs a message at the debug level.","","Logs a message at the error level.","Logs a message at the info level.","","","The standard logging macro.","logging stuffs, inspired by databend","","","","","Logs a message at the trace level.","","tracing stuffs, inspired by RisingWave","Logs a message at the warn level.","","","","","","","","","","","","Logs a message at the debug level.","","","","","","","","","","","Logs a message at the error level.","","Returns the argument unchanged.","Returns the argument unchanged.","","Logs a message at the info level.","Init tracing for unittest. Write logs to file <code>unittest</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Logs a message at the trace level.","","","","","","","","","","Logs a message at the warn level.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Context for tracing used for propagating tracing …","","","Attach the given span as a child of the context. Returns …","","","","","","","","Returns the argument unchanged.","Create a new tracing context from the current tracing span …","","Create a new tracing context from a tracing span.","Create a new tracing context from the W3C trace context …","Calls <code>U::from(self)</code>.","","Create a no-op tracing context.","","Convert the tracing context to the W3C trace context …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,2,2,0,2,3,2,2,2,2,2,2,2,2,0,2,2,3,2,0,0,0,2,3,2,3,2,2,2,2,0,2,2,3,2,3,2,3,2,3,0,0,0,17,17,17,17,17,17,17,0,17,17,17,17,0,0,0,0,23,19,21,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,24,19,19,19,19],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],1,[],[]],0,[[],2],[[],3],[-1,[[4,[2]]],5],0,0,[[2,2],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],0,[[2,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],1],[[9,2,3,[11,[10]]],[[13,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],0,0,[[2,-1],4,15],[-1,-2,[],[]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],[[4,[10,10]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[17,18],[-1,-1,[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[[],1],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,0,0,0,0,[[19,20],20],0,[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],1,[],[]],[[],19],[[19,7],8],[-1,-1,[]],[[],19],[-1,-1,[]],[20,19],[21,19],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[[],19],[-1,-2,[],[]],[19,21],[[-1,20],[[22,[-1]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"LoggingOptions",17],[3,"TracingOptions",17],[4,"Result",108],[8,"Deserializer",109],[15,"bool"],[3,"Formatter",110],[6,"Result",110],[15,"str"],[3,"String",111],[4,"Option",112],[3,"WorkerGuard",113],[3,"Vec",114],[3,"Request",115],[8,"Serializer",116],[3,"TypeId",117],[3,"PANIC_COUNTER",67],[6,"IntCounter",118],[3,"TracingContext",80],[3,"Span",119],[6,"W3cTrace",80],[3,"Instrumented",120],[6,"Propagator",80],[8,"FutureExt",80]],"b":[]},\
"common_test_util":{"doc":"","t":"HFAAHFDDLLLLLLLLLLLLFFLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["WORKSPACE_ROOT","find_workspace_path","ports","temp_dir","PORTS","get_port","NamedTempFile","TempDir","as_fd","as_file","as_file_mut","as_raw_fd","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","close","close","create_named_temp_file","create_temp_dir","drop","file","flush","flush","fmt","fmt","from","from","from","from_parts","into","into","into_file","into_parts","into_path","into_temp_path","keep","new","new","new_in","new_in","path","path","path","path","persist","persist_noclobber","read","read","read_exact","read_exact","read_to_end","read_to_end","read_to_string","read_to_string","read_vectored","read_vectored","reopen","seek","seek","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_prefix","with_prefix","with_prefix_in","with_prefix_in","write","write","write_all","write_all","write_fmt","write_fmt","write_vectored","write_vectored"],"q":[[0,"common_test_util"],[4,"common_test_util::ports"],[6,"common_test_util::temp_dir"],[82,"std::path"],[83,"std::os::fd::owned"],[84,"std::os::fd::owned"],[85,"std::path"],[86,"core::result"],[87,"std::fs"],[88,"std::io"],[89,"core::fmt"],[90,"core::fmt"],[91,"tempfile::file"],[92,"std::io"],[93,"alloc::vec"],[94,"alloc::string"],[95,"std::io"],[96,"std::ffi::os_str"],[97,"core::fmt"]],"d":["","Find the absolute path to a file or a directory in the …","","","","Return a unique port(in runtime) for test","A named temporary file.","A directory in the filesystem that is automatically …","","Get a reference to the underlying file.","Get a mutable reference to the underlying file.","","","","","","","","Closes and removes the temporary directory, returning a …","Close and remove the temporary file.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a <code>NamedTempFile</code> from its constituent parts.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the temporary file into a <code>std::fs::File</code>.","Converts the named temporary file into its constituent …","Persist the temporary directory to disk, returning the …","Closes the file, leaving only the temporary file path.","Keep the temporary file from being deleted. This function …","Attempts to make a temporary directory inside of …","Create a new named temporary file.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new named temporary file in the specified …","Accesses the <code>Path</code> to the temporary directory.","Get the temporary file’s path.","","","Persist the temporary file at the target path.","Persist the temporary file at the target path if and only …","","","","","","","","","","","Securely reopen the temporary file.","","","","","","","","","","","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,4,4,4,4,9,4,9,4,9,4,9,4,0,0,9,4,4,4,9,4,9,4,4,4,9,4,4,4,9,4,4,9,4,9,4,9,4,9,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,9,4,9,4,9,4,9,4,9,4,4,4,4,4,4,4,4,4],"f":[0,[1,2],0,0,0,[[],3],0,0,[[[4,[-1]]],5,6],[[[4,[-1]]],-1,[]],[[[4,[-1]]],-1,[]],[[[4,[-1]]],7,8],[9,10],[[[4,[-1]]],10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,[[13,[11,12]]]],[[[4,[-1]]],[[13,[11,12]]],[]],[[],4],[1,9],[9,11],0,[[[4,[14]]],[[13,[11,12]]]],[[[4,[-1]]],[[13,[11,12]]],15],[[9,16],[[13,[11,17]]]],[[[4,[-1]],16],[[13,[11,17]]],[]],[-1,-1,[]],[-1,-1,[]],[[[18,[-1]]],[[4,[-1]]],[]],[[-1,19],[[4,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],-1,[]],[[[4,[-1]]],[[11,[-1,19]]],[]],[9,2],[[[4,[-1]]],19,[]],[[[4,[-1]]],[[13,[[11,[-1,2]],[18,[-1]]]]],[]],[[],[[13,[9,12]]]],[[],[[13,[[4,[14]],12]]]],[-1,[[13,[9,12]]],[[20,[10]]]],[-1,[[13,[[4,[14]],12]]],[[20,[10]]]],[9,10],[[[4,[-1]]],10,[]],0,0,[[[4,[-1]],-2],[[13,[-1,[18,[-1]]]]],[],[[20,[10]]]],[[[4,[-1]],-2],[[13,[-1,[18,[-1]]]]],[],[[20,[10]]]],[[[4,[14]],[22,[21]]],[[13,[3,12]]]],[[[4,[-1]],[22,[21]]],[[13,[3,12]]],23],[[[4,[-1]],[22,[21]]],[[13,[11,12]]],23],[[[4,[14]],[22,[21]]],[[13,[11,12]]]],[[[4,[-1]],[25,[21,24]]],[[13,[3,12]]],23],[[[4,[14]],[25,[21,24]]],[[13,[3,12]]]],[[[4,[-1]],26],[[13,[3,12]]],23],[[[4,[14]],26],[[13,[3,12]]]],[[[4,[-1]],[22,[27]]],[[13,[3,12]]],23],[[[4,[14]],[22,[27]]],[[13,[3,12]]]],[[[4,[14]]],[[13,[14,12]]]],[[[4,[-1]],28],[[13,[29,12]]],30],[[[4,[14]],28],[[13,[29,12]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[9,12]]],[[20,[32]]]],[-1,[[13,[[4,[14]],12]]],[[20,[32]]]],[[-1,-2],[[13,[9,12]]],[[20,[32]]],[[20,[10]]]],[[-1,-2],[[13,[[4,[14]],12]]],[[20,[32]]],[[20,[10]]]],[[[4,[14]],[22,[21]]],[[13,[3,12]]]],[[[4,[-1]],[22,[21]]],[[13,[3,12]]],15],[[[4,[-1]],[22,[21]]],[[13,[11,12]]],15],[[[4,[14]],[22,[21]]],[[13,[11,12]]]],[[[4,[-1]],33],[[13,[11,12]]],15],[[[4,[14]],33],[[13,[11,12]]]],[[[4,[-1]],[22,[34]]],[[13,[3,12]]],15],[[[4,[14]],[22,[34]]],[[13,[3,12]]]]],"c":[],"p":[[15,"str"],[3,"PathBuf",82],[15,"usize"],[3,"NamedTempFile",6],[3,"BorrowedFd",83],[8,"AsFd",83],[15,"i32"],[8,"AsRawFd",84],[3,"TempDir",6],[3,"Path",82],[15,"tuple"],[3,"Error",85],[4,"Result",86],[3,"File",87],[8,"Write",88],[3,"Formatter",89],[3,"Error",89],[3,"PersistError",90],[3,"TempPath",90],[8,"AsRef",91],[15,"u8"],[15,"slice"],[8,"Read",88],[3,"Global",92],[3,"Vec",93],[3,"String",94],[3,"IoSliceMut",88],[4,"SeekFrom",88],[15,"u64"],[8,"Seek",88],[3,"TypeId",95],[3,"OsStr",96],[3,"Arguments",89],[3,"IoSlice",88]],"b":[[24,"impl-Write-for-%26NamedTempFile"],[25,"impl-Write-for-NamedTempFile%3CF%3E"],[49,"impl-Read-for-%26NamedTempFile"],[50,"impl-Read-for-NamedTempFile%3CF%3E"],[51,"impl-Read-for-NamedTempFile%3CF%3E"],[52,"impl-Read-for-%26NamedTempFile"],[53,"impl-Read-for-NamedTempFile%3CF%3E"],[54,"impl-Read-for-%26NamedTempFile"],[55,"impl-Read-for-NamedTempFile%3CF%3E"],[56,"impl-Read-for-%26NamedTempFile"],[57,"impl-Read-for-NamedTempFile%3CF%3E"],[58,"impl-Read-for-%26NamedTempFile"],[60,"impl-Seek-for-NamedTempFile%3CF%3E"],[61,"impl-Seek-for-%26NamedTempFile"],[74,"impl-Write-for-%26NamedTempFile"],[75,"impl-Write-for-NamedTempFile%3CF%3E"],[76,"impl-Write-for-NamedTempFile%3CF%3E"],[77,"impl-Write-for-%26NamedTempFile"],[78,"impl-Write-for-NamedTempFile%3CF%3E"],[79,"impl-Write-for-%26NamedTempFile"],[80,"impl-Write-for-NamedTempFile%3CF%3E"],[81,"impl-Write-for-%26NamedTempFile"]]},\
"common_time":{"doc":"","t":"CCCCCCCCAAAAAAAAAAADRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMNDNENDNDNNDNDNDNDNDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMRNDDDESSNRRRRRRNLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLMLLLLLLLLMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDGGLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMISSSDKKLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLFLLLLLFFFFFFF","n":["Date","DateTime","Duration","Interval","RangeMillis","TimeZone","Timestamp","TimestampMillis","date","datetime","duration","error","interval","range","time","timestamp","timestamp_millis","timezone","util","Date","UNIX_EPOCH_FROM_CE","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_str","hash","into","new","partial_cmp","serialize","to_chrono_date","to_owned","to_secs","to_string","try_from","try_into","type_id","val","DATETIME_FORMAT","DATETIME_FORMAT_WITH_TZ","DateTime","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_str","hash","into","new","partial_cmp","serialize","to_chrono_datetime","to_chrono_datetime_with_timezone","to_date","to_owned","to_string","try_from","try_into","type_id","val","Duration","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","into","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","split","to_owned","to_std_duration","to_string","try_from","try_into","type_id","unit","unit","value","value","ArithmeticOverflow","ArithmeticOverflowSnafu","Err","Error","InvalidDateStr","InvalidDateStrSnafu","InvalidTimeZoneOffset","InvalidTimeZoneOffsetSnafu","Ok","ParseDateStr","ParseDateStrSnafu","ParseInterval","ParseIntervalSnafu","ParseOffsetStr","ParseOffsetStrSnafu","ParseTimeZoneName","ParseTimeZoneNameSnafu","ParseTimestamp","ParseTimestampSnafu","Result","TimestampOverflow","TimestampOverflowSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hours","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","location_opt","minutes","msg","next","raw","raw","raw","raw","raw","raw","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","error","error","error","hours","location","location","location","location","location","location","location","location","minutes","msg","raw","raw","raw","raw","raw","raw","DAYS_PER_MONTH","DayTime","Interval","IntervalCompare","IntervalFormat","IntervalUnit","MAX","MIN","MonthDayNano","NANOS_PER_DAY","NANOS_PER_HOUR","NANOS_PER_MICRO","NANOS_PER_MILLI","NANOS_PER_MONTH","NANOS_PER_SEC","YearMonth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_mul_int","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","days","days","default","default","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_day_time","from_i128","from_i32","from_i64","from_month_day_nano","from_year_month","get_postgres_time_part","get_time_part","get_year_month","has_day","has_time_part","has_time_part_positive","has_year_month","hash","hash","hash","hours","into","into","into","into","is_positive","is_zero","is_zero","justified_interval","microseconds","minutes","months","months","nsecs","padding_i64","partial_cmp","partial_cmp","partial_cmp","seconds","serialize","serialize","serialize","to_i128","to_i32","to_i64","to_iso8601_string","to_iso8601_string","to_month_day_nano","to_nanosecond","to_owned","to_owned","to_owned","to_postgres_string","to_postgres_string","to_sql_standard_string","to_sql_standard_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","unit","years","GenericRange","RangeMillis","TimestampRange","and","borrow","borrow_mut","clone","clone_into","contains","deserialize","empty","end","end","end","end","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_optional","from_start","from_start","hash","intersects","into","is_empty","min_to_max","new","new_inclusive","new_inclusive","or","serialize","single","single","start","start","start","start","to_owned","to_string","try_from","try_into","type_id","until_end","until_end","with_unit","with_unit","Time","as_formatted_string","borrow","borrow_mut","clone","clone_into","cmp","compare","convert_to","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","from","hash","into","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","split","to_chrono_time","to_iso8601_string","to_local_string","to_owned","to_timezone_aware_string","try_from","try_into","type_id","unit","unit","value","value","Microsecond","Millisecond","Nanosecond","Second","TimeUnit","Timestamp","align_by_bucket","align_to_ceil_by_bucket","as_arrow_time_unit","as_formatted_string","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","convert_to","convert_to_ceil","current_millis","current_time","default","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","factor","fmt","fmt","fmt","from","from","from","from","from","from_chrono_date","from_chrono_datetime","from_splits","from_str","hash","into","into","naive_datetime_to_timestamp","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","serialize","short_name","split","sub","sub_duration","to_chrono_date","to_chrono_datetime","to_chrono_datetime_with_timezone","to_chrono_time","to_iso8601_string","to_local_string","to_owned","to_owned","to_string","to_timezone_aware_string","try_from","try_from","try_into","try_into","type_id","type_id","unit","unit","value","value","BucketAligned","INF","MAX","MIN","TimestampMillis","align_by_bucket","align_to_ceil_by_bucket","as_i64","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","hash","into","new","partial_cmp","partial_cmp","to_owned","try_from","try_into","type_id","Named","Offset","TimeZone","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_tz_string","hours_mins_opt","into","system_time_zone_name","to_owned","to_string","try_from","try_into","type_id","current_time_millis","current_time_rfc3339","div_ceil","find_tz_from_env","format_utc_datetime","local_datetime_to_utc","yesterday_rfc3339"],"q":[[0,"common_time"],[19,"common_time::date"],[52,"common_time::datetime"],[88,"common_time::duration"],[126,"common_time::error"],[297,"common_time::error::Error"],[317,"common_time::interval"],[455,"common_time::range"],[505,"common_time::time"],[545,"common_time::timestamp"],[630,"common_time::timestamp_millis"],[662,"common_time::timezone"],[685,"common_time::util"],[692,"core::cmp"],[693,"core::result"],[694,"serde::de"],[695,"core::fmt"],[696,"core::fmt"],[697,"core::hash"],[698,"core::option"],[699,"serde::ser"],[700,"alloc::string"],[701,"core::any"],[702,"chrono::naive::datetime"],[703,"core::time"],[704,"core::any"],[705,"snafu::backtrace_inert"],[706,"core::convert"],[707,"core::clone"],[708,"alloc::vec"],[709,"core::fmt"],[710,"common_error::ext"],[711,"common_error::status_code"],[712,"core::convert"],[713,"core::marker"],[714,"core::cmp"],[715,"serde::de"],[716,"arrow_schema::datatype"],[717,"chrono_tz::timezones"],[718,"chrono::offset"]],"d":["","","","","","","","","","","","","","","","","","","","ISO 8601 Date values. The inner representation is a signed …","","","","","","","","","","","","","","Date is formatted according to ISO-8601 standard.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","DateTime represents the <strong>milliseconds elapsed since “</strong>…","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Create a new DateTime from milliseconds elapsed since “…","","","Convert to NaiveDateTime.","","Convert to [common_time::date].","","","","","","Get the milliseconds elapsed since “1970-01-01 00:00:00 …","Duration represents the elapsed time in either seconds, …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new Duration with value and TimeUnit.","Create a new Duration in microsecond.","Create a new Duration in millisecond.","Create a new Duration in nanosecond.","Create a new Duration in second.","","","Split a Duration into seconds part and nanoseconds part. …","","Convert to std::time::Duration.","","","","","Return the TimeUnit of current Duration.","","Return the value of current Duration.","","","SNAFU context selector for the <code>Error::ArithmeticOverflow</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::InvalidDateStr</code> …","","SNAFU context selector for the <code>Error::InvalidTimeZoneOffset</code>…","Contains the success value","","SNAFU context selector for the <code>Error::ParseDateStr</code> variant","","SNAFU context selector for the <code>Error::ParseInterval</code> variant","","SNAFU context selector for the <code>Error::ParseOffsetStr</code> …","","SNAFU context selector for the <code>Error::ParseTimeZoneName</code> …","","SNAFU context selector for the <code>Error::ParseTimestamp</code> …","","","SNAFU context selector for the <code>Error::TimestampOverflow</code> …","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the number of elapsed days and milliseconds, …","Interval Type represents a period of time. It is composed …","IntervalCompare is used to compare two intervals It makes …","…","","Largest interval value.","Smallest interval value.","A triple of the number of elapsed months, days, and …","","","","","","","Indicates the number of elapsed whole months, stored as …","","","","","","","","","Multiple Interval by an integer with overflow check. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new interval from days and milliseconds.","Interval Type and i128 IntervalUnit::MonthDayNano Convert …","<code>Interval</code> Type and i32 IntervalUnit::YearMonth Convert v …","<code>Interval</code> Type and i64 IntervalUnit::DayTime Convert v …","Creates a new interval from months, days and nanoseconds. …","Creates a new interval from months.","get postgres time part(include hours, minutes, seconds, …","get time part string","get year month string","Determine if day exists","","Determine time part(includes hours, minutes, seconds, …","Determine if year or month exist","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert Interval to nanoseconds, to check whether Interval …","is_zero","All the field in the interval is 0","Returns the justified interval. allows you to adjust the …","","","","","","padding i64 to string with 2 digits","","","","","","","","","","","Convert Interval to ISO 8601 string","Convert IntervalFormat to iso8601 format string ISO …","Return a tuple(months, days, nanoseconds) from the …","Converts the interval to nanoseconds.","","","","Convert Interval to postgres verbose string","Convert IntervalFormat to postgres format string postgres …","Convert Interval to sql_standard string","Convert IntervalFormat to sql standard format string SQL …","","","","","","","","","","","","","","get unit","","","A half-open time range.","Time range in milliseconds.","","Computes the AND’ed range with other.  ","","","","","Returns true if <code>timestamp</code> is contained in the range.","","Create an empty range.","Returns the upper bound of the range (exclusive).","","","","","","","","","","Returns the argument unchanged.","Create GenericRange from optional start and end. If the …","Create a range <code>[start, INF)</code>.","Create a range <code>[start, INF)</code>.","","Checks if current range intersect with target.","Calls <code>U::from(self)</code>.","Returns true if the range contains no timestamps.","Return a range containing all possible values.","Creates a new range that contains values in <code>[start, end)</code>.","Create a TimestampRange with optional inclusive end …","Create a TimestampRange with optional inclusive end …","Compute the OR’ed range of two ranges. Notice: this …","","Create a range that containing only given <code>ts</code>.","Create a range that containing only given <code>ts</code>.","Returns the lower bound of the range (inclusive).","","","","","","","","","Create a range <code>[-INF, end)</code>.","Create a range <code>[-INF, end)</code>.","Shortcut method to create a timestamp range with given …","Shortcut method to create a timestamp range with given …","Time value, represents the elapsed time since midnight in …","","","","","","","","Convert a time to given time unit. Return <code>None</code> if …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates the time by value and <code>TimeUnit</code>.","Creates the time in microsecond.","Creates the time in millisecond.","Creates the time in nanosecond.","Creates the time in second.","","","Split a Time into seconds part and nanoseconds part. …","Cast the Time into chrono NaiveDateTime","Format Time to ISO8601 string. If the time exceeds what …","Format Time for local timezone.","","Format Time for given timezone. When timezone is None, …","","","","Returns the <code>TimeUnit</code> of the time.","","Returns the value of the time.","","","","","","","Timestamp represents the value of …","","","","","","","","","","","","","","","Convert a timestamp to given time unit. Conversion from a …","Convert a timestamp to given time unit. Conversion from a …","Creates current timestamp in millisecond.","Creates current timestamp in specific time <code>unit</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Creates a new Timestamp instance from seconds and …","Accepts a string in RFC3339 / ISO8601 standard format and …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the naive datetime (which has no specific …","","","","","","","","","","Split a Timestamp into seconds part and nanoseconds part. …","Subtracts current timestamp with another timestamp, …","Subtracts a duration from timestamp.","Convert timestamp to chrono date.","","","Convert timestamp to chrono time.","Format timestamp to ISO8601 string. If the timestamp …","","","","","Format timestamp for given timezone. When timezone is …","","","","","","","","","","","","Positive infinity.","Maximum value of a timestamp.","Minimum value of a timestamp.","Unix timestamp in millisecond resolution.","Aligns the value by <code>bucket_duration</code> or <code>None</code> if underflow …","Aligns the value by <code>bucket_duration</code> to ceil or <code>None</code> if …","Returns the timestamp value as i64.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new timestamp from unix timestamp in milliseconds.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Parse timezone offset string and return None if given …","Compute timezone from given offset hours and minutes …","Calls <code>U::from(self)</code>.","","","","","","","Returns the time duration since UNIX_EPOCH in milliseconds.","Returns the current time in rfc3339 format.","Port of rust unstable features <code>int_roundings</code>.","","","","Returns the yesterday time in rfc3339 format."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,26,0,12,0,26,0,26,0,12,26,0,26,0,26,0,26,0,26,0,0,26,0,26,26,26,37,30,32,33,39,34,35,40,36,26,37,30,32,33,39,34,35,40,36,26,30,32,33,34,35,36,26,37,30,32,33,39,34,35,40,36,37,30,32,33,39,34,35,40,36,26,26,30,32,33,34,35,36,37,30,32,33,39,34,35,40,36,26,26,37,30,32,33,39,34,35,40,36,26,35,37,30,32,33,39,34,35,40,36,26,37,30,32,33,39,34,35,40,36,26,35,34,26,37,30,32,33,40,36,26,26,37,30,32,33,39,34,35,40,36,26,37,30,32,33,39,34,35,40,36,26,37,30,32,33,39,34,35,40,36,26,37,30,32,33,39,34,35,40,36,26,71,72,73,74,75,76,77,72,78,74,73,79,74,78,71,75,76,77,73,79,0,49,0,0,0,0,47,47,49,0,0,0,0,0,0,49,49,47,50,51,49,47,50,51,47,49,47,50,49,47,50,49,47,51,49,47,51,47,50,49,47,50,49,47,50,49,47,51,49,49,49,47,47,47,51,51,51,49,47,47,50,49,49,49,47,47,50,50,51,51,47,47,47,47,47,47,50,0,0,50,50,50,50,49,47,51,50,49,47,50,51,47,47,50,47,50,50,47,50,47,50,49,47,51,50,49,47,50,47,47,47,47,50,47,47,49,47,50,47,50,47,50,47,49,47,50,51,49,47,50,51,49,47,50,51,47,47,50,0,0,0,54,54,54,54,54,54,54,54,54,60,80,54,54,54,54,54,60,54,54,54,60,54,54,54,54,54,54,54,60,54,54,54,60,54,54,60,80,54,54,54,54,54,54,60,54,60,54,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,24,24,24,24,0,0,61,61,24,61,61,24,61,24,61,24,61,24,61,61,61,61,61,61,61,24,61,24,61,24,61,61,61,24,24,24,24,61,24,24,61,61,24,24,24,61,61,61,61,61,61,24,0,61,61,61,61,61,61,61,24,24,61,61,61,61,61,61,61,61,61,61,24,24,61,61,24,61,24,61,24,61,61,61,61,0,68,68,68,0,81,81,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,21,21,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[[-1,-2],3,[],[]],[[],1],[-1,[[4,[1]]],5],[[1,1],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[1,7],8],[[1,7],8],[-1,-1,[]],[9,1],[10,1],[11,[[12,[1]]]],[[1,-1],2,13],[-1,-2,[],[]],[10,1],[[1,1],[[14,[3]]]],[[1,-1],4,15],[1,[[14,[9]]]],[-1,-2,[],[]],[1,16],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[1,10],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],2,[],[]],[[19,19],3],[[-1,-2],3,[],[]],[[],19],[-1,[[4,[19]]],5],[[19,19],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[19,7],8],[[19,7],8],[20,19],[1,19],[-1,-1,[]],[16,19],[11,[[12,[19]]]],[[19,-1],2,13],[-1,-2,[],[]],[16,19],[[19,19],[[14,[3]]]],[[19,-1],4,15],[19,[[14,[20]]]],[[19,[14,[21]]],[[14,[20]]]],[19,[[14,[1]]]],[-1,-2,[],[]],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[19,16],0,[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],2,[],[]],[[22,22],3],[[-1,-2],3,[],[]],[[],22],[-1,[[4,[22]]],5],[[22,22],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[22,7],8],[[22,7],8],[16,22],[23,22],[-1,-1,[]],[[22,-1],2,13],[-1,-2,[],[]],[[16,24],22],[16,22],[16,22],[16,22],[16,22],[[22,22],[[14,[3]]]],[[22,-1],4,15],[22,[[2,[16,25]]]],[-1,-2,[],[]],[22,23],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[22,24],0,[22,16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,27],[-1,28,[]],[26,[[14,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1]]],26,[[31,[17]]]],[[[32,[-1]]],26,[[31,[17]]]],[[[33,[-1]]],26,[[31,[17]]]],[[[34,[-1]]],26,[[31,[17]]]],[[[35,[-1,-2]]],26,[[31,[10]]],[[31,[25]]]],[[[36,[-1]]],26,[[31,[17]]]],[26,[[14,[28]]]],[[[37,[-1]]],[[37,[-1]]],38],[[[30,[-1]]],[[30,[-1]]],38],[[[32,[-1]]],[[32,[-1]]],38],[[[33,[-1]]],[[33,[-1]]],38],[39,39],[[[34,[-1]]],[[34,[-1]]],38],[[[35,[-1,-2]]],[[35,[-1,-2]]],38,38],[[[40,[-1]]],[[40,[-1]]],38],[[[36,[-1]]],[[36,[-1]]],38],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[26,41,[42,[17]]],2],[26,11],[[[30,[-1]]],[[4,[-2,26]]],[[31,[17]]],[]],[[[32,[-1]]],[[4,[-2,26]]],[[31,[17]]],[]],[[[33,[-1]]],[[4,[-2,26]]],[[31,[17]]],[]],[[[34,[-1]]],[[4,[-2,26]]],[[31,[17]]],[]],[[[35,[-1,-2]]],[[4,[-3,26]]],[[31,[10]]],[[31,[25]]],[]],[[[36,[-1]]],[[4,[-2,26]]],[[31,[17]]],[]],[[[37,[-1]],7],8,43],[[[30,[-1]],7],8,43],[[[32,[-1]],7],8,43],[[[33,[-1]],7],8,43],[[39,7],8],[[[34,[-1]],7],8,43],[[[35,[-1,-2]],7],8,43,43],[[[40,[-1]],7],8,43],[[[36,[-1]],7],8,43],[[26,7],8],[[26,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1]]],26,[[31,[17]]]],[[[30,[-1]]],26,[[31,[17]]]],[[[32,[-1]]],26,[[31,[17]]]],[[[33,[-1]]],26,[[31,[17]]]],[39,26],[[[34,[-1]]],26,[[31,[17]]]],[[[35,[-1,-2]]],26,[[31,[10]]],[[31,[25]]]],[[[40,[-1]]],26,[[31,[17]]]],[[[36,[-1]]],26,[[31,[17]]]],[26,[[14,[44]]]],0,0,[26,[[14,[45]]]],0,0,0,0,0,0,[26,[[14,[28]]]],[26,46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,-1],[[14,[47]]],[[48,[10]]]],[49,49],[47,47],[50,50],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[49,49],3],[[47,47],3],[[51,51],3],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,[[],49],[[],47],[[],50],[-1,[[4,[49]]],5],[-1,[[4,[47]]],5],[-1,[[4,[50]]],5],[[49,49],6],[[47,47],6],[[51,51],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[49,7],8],[[47,7],8],[[47,7],8],[[50,7],8],[52,49],[52,49],[-1,-1,[]],[-1,-1,[]],[53,47],[47,50],[-1,-1,[]],[-1,-1,[]],[47,51],[[10,10],47],[53,47],[10,47],[16,47],[[10,10,16],47],[10,47],[50,17],[[16,16,16,16,6,6],17],[[10,10,6],17],[50,6],[50,6],[50,6],[50,6],[[49,-1],2,13],[[47,-1],2,13],[[51,-1],2,13],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,6],[47,6],[50,6],[47,47],0,0,0,0,0,[16,17],[[49,49],[[14,[3]]]],[[47,47],[[14,[3]]]],[[51,51],[[14,[3]]]],0,[[49,-1],4,15],[[47,-1],4,15],[[50,-1],4,15],[47,53],[47,10],[47,16],[47,17],[50,17],[47,[[2,[10,10,16]]]],[47,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,17],[50,17],[47,17],[50,17],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[47,49],0,0,0,0,0,[[[54,[-1]],[54,[-1]]],[[54,[-1]]],[55,56,57]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1]]],[[54,[-1]]],38],[[-1,-2],2,[],[]],[[[54,[-1]],-2],6,[],[[56,[-1]]]],[-1,[[4,[[54,[-2]]]]],5,58],[[],[[54,[-1]]],[55,56,57]],[[[54,[-1]]],[[14,[-1]]],[]],0,0,0,[[[54,[-1]],[54,[-1]]],6,59],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[60,7],8],[[[54,[-1]],7],8,43],[-1,-1,[]],[[[14,[-1]],[14,[-1]]],[[54,[-1]]],[55,56,57]],[61,60],[61,[[54,[61]]]],[[[54,[-1]],-2],2,62,13],[[[54,[-1]],[54,[-1]]],6,[55,56,57]],[-1,-2,[],[]],[[[54,[-1]]],6,56],[[],[[54,[-1]]],[]],[[-2,-2],[[14,[[54,[-1]]]]],[],[56,[31,[-1]]]],[[[14,[61]],[14,[61]]],60],[[[14,[61]],[14,[61]]],[[54,[61]]]],[[[54,[-1]],[54,[-1]]],[[54,[-1]]],[55,56,57]],[[[54,[-1]],-2],4,63,15],[61,60],[61,[[54,[61]]]],[[[54,[-1]]],[[14,[-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[[61,6],60],[[61,6],[[54,[61]]]],[[16,16,24],[[14,[60]]]],[[16,16,24],[[14,[[54,[61]]]]]],0,[[64,11,[14,[21]]],17],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[[-1,-2],2,[],[]],[[64,64],3],[[-1,-2],3,[],[]],[[64,24],[[14,[64]]]],[[],64],[-1,[[4,[64]]],5],[[64,64],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[64,7],8],[16,64],[-1,-1,[]],[[64,-1],2,13],[-1,-2,[],[]],[[16,24],64],[16,64],[16,64],[16,64],[16,64],[[64,64],[[14,[3]]]],[[64,-1],4,15],[64,[[2,[16,25]]]],[64,[[14,[65]]]],[64,17],[64,17],[-1,-2,[],[]],[[64,[14,[21]]],17],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[64,24],0,[64,16],0,0,0,0,0,0,0,[[61,16],[[14,[61]]]],[[61,16],[[14,[61]]]],[24,66],[[61,11,[14,[21]]],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,61],[24,24],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[61,61],3],[[-1,-2],3,[],[]],[[61,24],[[14,[61]]]],[[61,24],[[14,[61]]]],[[],61],[24,61],[[],61],[[],24],[-1,[[4,[61]]],5],[-1,[[4,[24]]],5],[[61,61],6],[[24,24],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[24,25],[[61,7],8],[[24,7],8],[[24,7],8],[-1,-1,[]],[16,61],[-1,-1,[]],[66,24],[66,24],[9,[[14,[61]]]],[20,[[14,[61]]]],[[16,25],[[14,[61]]]],[11,[[4,[61]]]],[[61,-1],2,13],[-1,-2,[],[]],[-1,-2,[],[]],[[11,20],[[12,[61]]]],[[16,24],61],[16,61],[16,61],[16,61],[16,61],[[61,61],[[14,[3]]]],[[61,-1],4,15],[[24,-1],4,15],[24,11],[61,[[2,[16,25]]]],[[61,61],[[14,[67]]]],[[61,23],[[12,[61]]]],[61,[[14,[9]]]],[61,[[14,[20]]]],[[61,[14,[21]]],[[14,[20]]]],[61,[[14,[65]]]],[61,17],[61,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[[61,[14,[21]]],17],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[61,24],0,[61,16],0,0,0,0,0,0,[[-1,16],[[14,[-1]]],[]],[[-1,16],[[14,[-1]]],[]],[68,16],[-1,-2,[],[]],[-1,-2,[],[]],[68,68],[[-1,-2],2,[],[]],[[68,68],3],[[-1,-2],3,[],[]],[[],68],[[68,16],6],[[68,68],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[68,7],8],[16,68],[-1,-1,[]],[[68,-1],2,13],[-1,-2,[],[]],[16,68],[[68,16],[[14,[3]]]],[[68,68],[[14,[3]]]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[[-1,-2],2,[],[]],[[21,21],6],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[21,7],8],[[21,7],8],[-1,-1,[]],[11,[[12,[[14,[21]]]]]],[[10,25],[[12,[21]]]],[-1,-2,[],[]],[[],17],[-1,-2,[],[]],[-1,17,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,18,[]],[[],16],[[],17],[[16,16],16],[[],[[14,[69]]]],[[20,11],17],[20,[[70,[20]]]],[[],17]],"c":[],"p":[[3,"Date",19],[15,"tuple"],[4,"Ordering",692],[4,"Result",693],[8,"Deserializer",694],[15,"bool"],[3,"Formatter",695],[6,"Result",695],[3,"NaiveDate",696],[15,"i32"],[15,"str"],[6,"Result",126],[8,"Hasher",697],[4,"Option",698],[8,"Serializer",699],[15,"i64"],[3,"String",700],[3,"TypeId",701],[3,"DateTime",52],[3,"NaiveDateTime",702],[4,"TimeZone",662],[3,"Duration",88],[3,"Duration",703],[4,"TimeUnit",545],[15,"u32"],[4,"Error",126],[8,"Any",701],[8,"Error",704],[3,"Backtrace",705],[3,"InvalidDateStrSnafu",126],[8,"Into",706],[3,"ParseTimestampSnafu",126],[3,"ParseIntervalSnafu",126],[3,"ArithmeticOverflowSnafu",126],[3,"InvalidTimeZoneOffsetSnafu",126],[3,"ParseTimeZoneNameSnafu",126],[3,"ParseDateStrSnafu",126],[8,"Clone",707],[3,"TimestampOverflowSnafu",126],[3,"ParseOffsetStrSnafu",126],[15,"usize"],[3,"Vec",708],[8,"Debug",695],[3,"Location",709],[8,"StackError",710],[4,"StatusCode",711],[3,"Interval",317],[8,"TryInto",706],[4,"IntervalUnit",317],[3,"IntervalFormat",317],[3,"IntervalCompare",317],[4,"IntervalUnit",712],[15,"i128"],[3,"GenericRange",455],[8,"Copy",713],[8,"PartialOrd",692],[8,"Default",714],[8,"Deserialize",694],[8,"PartialEq",692],[6,"TimestampRange",455],[3,"Timestamp",545],[8,"Hash",697],[8,"Serialize",699],[3,"Time",505],[3,"NaiveTime",715],[4,"TimeUnit",712],[3,"Duration",716],[3,"TimestampMillis",630],[4,"Tz",717],[4,"LocalResult",718],[13,"ParseDateStr",297],[13,"TimestampOverflow",297],[13,"ParseOffsetStr",297],[13,"InvalidTimeZoneOffset",297],[13,"InvalidDateStr",297],[13,"ParseTimestamp",297],[13,"ParseInterval",297],[13,"ArithmeticOverflow",297],[13,"ParseTimeZoneName",297],[6,"RangeMillis",455],[8,"BucketAligned",630]],"b":[[33,"impl-Display-for-Date"],[34,"impl-Debug-for-Date"],[36,"impl-From%3CNaiveDate%3E-for-Date"],[37,"impl-From%3Ci32%3E-for-Date"],[67,"impl-Display-for-DateTime"],[68,"impl-Debug-for-DateTime"],[69,"impl-From%3CNaiveDateTime%3E-for-DateTime"],[70,"impl-From%3CDate%3E-for-DateTime"],[72,"impl-From%3Ci64%3E-for-DateTime"],[101,"impl-Display-for-Duration"],[102,"impl-Debug-for-Duration"],[103,"impl-From%3Ci64%3E-for-Duration"],[104,"impl-From%3CDuration%3E-for-Duration"],[213,"impl-Debug-for-Error"],[214,"impl-Display-for-Error"],[375,"impl-Display-for-Interval"],[376,"impl-Debug-for-Interval"],[378,"impl-From%3CIntervalUnit%3E-for-IntervalUnit"],[379,"impl-From%3C%26IntervalUnit%3E-for-IntervalUnit"],[583,"impl-Display-for-TimeUnit"],[584,"impl-Debug-for-TimeUnit"],[588,"impl-From%3CTimeUnit%3E-for-TimeUnit"],[589,"impl-From%3C%26TimeUnit%3E-for-TimeUnit"],[645,"impl-PartialEq%3Ci64%3E-for-TimestampMillis"],[646,"impl-PartialEq-for-TimestampMillis"],[656,"impl-PartialOrd%3Ci64%3E-for-TimestampMillis"],[657,"impl-PartialOrd-for-TimestampMillis"],[673,"impl-Debug-for-TimeZone"],[674,"impl-Display-for-TimeZone"]]},\
"common_version":{"doc":"","t":"RF","n":["DEFAULT_VALUE","setup_git_versions"],"q":[[0,"common_version"]],"d":["",""],"i":[0,0],"f":[0,[[],1]],"c":[],"p":[[15,"tuple"]],"b":[]},\
"datanode":{"doc":"","t":"AAAAAAAAAAEDDRDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLNDRRDNNDNDNDENDDENDDLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMRDDRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLMMLLMLLLLMMMLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNNDDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNDEIGDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLMLDLLLLLLLLLLLLLLLALMLLLLLLMFMMLMMFMMLMMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDDNEDDDNIGLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLMMMLLLMLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFFAAFAAFFFFF","n":["alive_keeper","config","datanode","error","event_listener","greptimedb_telemetry","heartbeat","metrics","region_server","store","CountdownCommand","CountdownTask","CountdownTaskHandle","MAX_CLOSE_RETRY_TIMES","RegionAliveKeeper","Reset","Start","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close_region","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deregister_region","drop","drop","drop","drop","drop","epoch","epoch","find_handle","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","handle","handler","heartbeat_interval_millis","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","is_in_subset","keep_lived","lift_into","lift_into","lift_into","lift_into","new","new","or","or","or","or","region_id","region_id","region_server","region_server","register_region","reset_deadline","run","rx","sculpt","sculpt","sculpt","sculpt","start","start","started","subset","subset","subset","subset","tasks","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Azblob","AzblobConfig","DEFAULT_DATA_HOME","DEFAULT_OBJECT_STORE_CACHE_SIZE","DatanodeOptions","File","File","FileConfig","Gcs","GcsConfig","Mito","ObjectStorageCacheConfig","ObjectStoreConfig","Oss","OssConfig","ProcedureConfig","RegionEngineConfig","S3","S3Config","StorageConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_key_id","access_key_id","access_key_secret","account_key","account_name","and","and","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","bucket","cache","cache","cache","cache","cache_capacity","cache_path","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","container","credential_path","data_home","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_telemetry","endpoint","endpoint","endpoint","endpoint","env_list_keys","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","global_ttl","heartbeat","http","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","logging","max_retry_times","meta_client","mode","node_id","or","or","or","or","or","or","or","or","or","or","region","region_engine","require_lease_before_startup","retry_delay","root","root","root","root","rpc_addr","rpc_hostname","rpc_max_recv_message_size","rpc_max_send_message_size","rpc_runtime_size","sas_token","scope","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","secret_access_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","storage","store","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_toml_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wal","DATANODE_HTTP_SERVICE_NAME","Datanode","DatanodeBuilder","OPEN_REGION_PARALLELISM","ProcedureConfig","REGION_SERVER_SERVICE_NAME","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_log_store","build_store_engines","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_datanode_services","create_http_service","create_region_server_service","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","enable_http_service","enable_http_service","enable_region_server_service","enable_region_server_service","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","greptimedb_telemetry_task","heartbeat_task","init","init","init","initialize_region_server","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","leases_notifier","lift_into","lift_into","lift_into","max_retry_times","meta_client","new","new_region_server","opts","or","or","or","plugins","plugins","plugins","region_event_receiver","region_server","region_server","retry_delay","sculpt","sculpt","sculpt","serialize","services","shutdown","shutdown_services","start","start_heartbeat","start_services","start_telemetry","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_coordinated","with_kv_backend","with_meta_client","BuildRegionRequests","BuildRegionRequestsSnafu","BumpTableId","BumpTableIdSnafu","Catalog","CatalogNotFound","CatalogNotFoundSnafu","CatalogSnafu","ColumnDataType","ColumnDataTypeSnafu","ColumnDefaultValue","ColumnDefaultValueSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ColumnValuesNumberMismatch","ColumnValuesNumberMismatchSnafu","ConstraintNotSupported","ConstraintNotSupportedSnafu","CreateDir","CreateDirSnafu","CreateTable","CreateTableSnafu","DatabaseNotFound","DatabaseNotFoundSnafu","DecodeLogicalPlan","DecodeLogicalPlanSnafu","Delete","DeleteExprToRequest","DeleteExprToRequestSnafu","DeleteSnafu","DropTable","DropTableSnafu","EncodeJson","EncodeJsonSnafu","EngineProcedureNotFound","EngineProcedureNotFoundSnafu","Err","Error","ExecuteLogicalPlan","ExecuteLogicalPlanSnafu","ExecuteSql","ExecuteSqlSnafu","ExecuteStatement","ExecuteStatementSnafu","FlushTable","FlushTableSnafu","GetMetadata","GetMetadataSnafu","GetRegionMetadata","GetRegionMetadataSnafu","HandleHeartbeatResponse","HandleHeartbeatResponseSnafu","HandleRegionRequest","HandleRegionRequestSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","IncorrectInternalState","IncorrectInternalStateSnafu","InitBackend","InitBackendSnafu","Insert","InsertData","InsertDataSnafu","InsertSnafu","InvalidSql","InvalidSqlSnafu","JoinTask","JoinTaskSnafu","KeyColumnNotFound","KeyColumnNotFoundSnafu","MetaClientInit","MetaClientInitSnafu","MissingInsertBody","MissingInsertBodySnafu","MissingKvBackend","MissingKvBackendSnafu","MissingNodeId","MissingNodeIdSnafu","MissingRequiredField","MissingRequiredFieldSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","MissingWalDirConfig","MissingWalDirConfigSnafu","NotSupportSql","NotSupportSqlSnafu","Ok","OpenLogStore","OpenLogStoreSnafu","ParseAddr","ParseAddrSnafu","ParseSql","ParseSqlSnafu","PayloadNotExist","PayloadNotExistSnafu","PlanStatement","PlanStatementSnafu","PrepareImmutableTable","PrepareImmutableTableSnafu","RegionEngineNotFound","RegionEngineNotFoundSnafu","RegionNotFound","RegionNotFoundSnafu","RegisterSchema","RegisterSchemaSnafu","RemoveDir","RemoveDirSnafu","Result","RuntimeResource","RuntimeResourceSnafu","SchemaExists","SchemaExistsSnafu","SchemaNotFound","SchemaNotFoundSnafu","ShutdownInstance","ShutdownInstanceSnafu","ShutdownServer","ShutdownServerSnafu","StartServer","StartServerSnafu","StopRegionEngine","StopRegionEngineSnafu","SubmitProcedure","SubmitProcedureSnafu","TableEngineNotFound","TableEngineNotFoundSnafu","TableIdProviderNotFound","TableIdProviderNotFoundSnafu","TableNotFound","TableNotFoundSnafu","Unexpected","UnexpectedSnafu","UnrecognizedTableOption","UnrecognizedTableOptionSnafu","UnsupportedGrpcRequest","UnsupportedGrpcRequestSnafu","UnsupportedOutput","UnsupportedOutputSnafu","WaitForGrpcServing","WaitForGrpcServingSnafu","WaitProcedure","WaitProcedureSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column_name","columns","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","constraint","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dir","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine_name","engine_name","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","msg","name","name","name","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","procedure_id","procedure_id","region_id","region_id","region_id","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","state","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_name","table_name","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","catalog","column","column","column_name","columns","constraint","dir","dir","engine","engine_name","engine_name","error","error","error","error","error","error","expected","kind","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","msg","name","name","name","name","name","name","name","procedure_id","procedure_id","region_id","region_id","region_id","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","state","table_name","table_name","table_name","table_name","table_name","table_name","table_name","values","violated","Deregistered","NoopRegionServerEventListener","RegionServerEvent","RegionServerEventListener","RegionServerEventListenerRef","RegionServerEventReceiver","RegionServerEventSender","Registered","__clone_box","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","new_region_server_event_channel","on_region_deregistered","on_region_deregistered","on_region_registered","on_region_registered","or","or","or","or","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","StandaloneGreptimeDBTelemetryCollector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_greptimedb_telemetry_task","get_mode","get_nodes","get_retry","get_uuid_cache","inc_retry","init","into","into_request","into_request","is_in_subset","lift_into","or","retry","sculpt","set_uuid_cache","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","uuid","vzip","HeartbeatTask","and","borrow","borrow_mut","close","compat","compat_mut","compat_ref","create_streams","deref","deref_mut","drop","drop","from","from_subset","handle_response","handler","init","interval","into","into_request","into_request","is_in_subset","lift_into","load_region_stats","meta_client","new_metasrv_client","node_epoch","node_id","or","region_alive_keeper","region_server","resolve_addr","resp_handler_executor","running","sculpt","server_addr","server_hostname","start","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","RegionHeartbeatResponseHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fill_reply","from","from_ref","from_subset","handle","init","instruction_to_request","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","new","or","region_ident_to_region_id","region_server","reply_template_from_instruction","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HANDLE_REGION_REQUEST_ELAPSED","REGION_REQUEST_TYPE","__private_field","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Deregisters","DummyCatalogList","DummyCatalogProvider","DummySchemaProvider","DummyTableProvider","DummyTableProviderFactory","None","RegionChange","RegionServer","RegionServerInner","RegionStat","Register","TableProviderFactory","TableProviderFactoryRef","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","alloc","and","and","and","and","and","and","and","and","and","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","catalog_names","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","create","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_get","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","engines","event_listener","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","handle_read","handle_read","handle_request","handle_request","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","metadata","new","new","opened_regions","or","or","or","or","or","or","or","or","or","phantom","ptr","query_engine","region_disk_usage","region_id","region_id","region_map","register_catalog","register_engine","register_engine","role","runtime","runtime","scan","scan_request","schema","schema","schema","schema_names","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_writable","stop","stop","subset","subset","subset","subset","subset","subset","subset","subset","subset","supports_filters_pushdown","table","table","table_exist","table_names","table_provider_factory","table_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_table_provider","with_table_provider","azblob","build_http_client","clean_temp_dir","create_object_store_with_cache","fs","gcs","new_object_store","oss","s3","new_azblob_object_store","new_fs_object_store","new_gcs_object_store","new_oss_object_store","new_s3_object_store"],"q":[[0,"datanode"],[10,"datanode::alive_keeper"],[152,"datanode::config"],[592,"datanode::datanode"],[730,"datanode::error"],[3385,"datanode::error::Error"],[3531,"datanode::event_listener"],[3658,"datanode::greptimedb_telemetry"],[3695,"datanode::heartbeat"],[3743,"datanode::heartbeat::handler"],[3784,"datanode::metrics"],[3815,"datanode::region_server"],[4153,"datanode::store"],[4162,"datanode::store::azblob"],[4163,"datanode::store::fs"],[4164,"datanode::store::gcs"],[4165,"datanode::store::oss"],[4166,"datanode::store::s3"],[4167,"tower_http::follow_redirect::policy::and"],[4168,"tower_http::follow_redirect::policy"],[4169,"async_compat"],[4170,"store_api::storage::descriptors"],[4171,"tokio::time::instant"],[4172,"alloc::sync"],[4173,"core::option"],[4174,"core::fmt"],[4175,"core::fmt"],[4176,"core::future::future"],[4177,"alloc::boxed"],[4178,"core::pin"],[4179,"tonic::request"],[4180,"tonic::request"],[4181,"core::ops::function"],[4182,"core::marker"],[4183,"tower_http::follow_redirect::policy::or"],[4184,"store_api::region_engine"],[4185,"frunk_core::hlist"],[4186,"frunk_core::coproduct"],[4187,"core::result"],[4188,"core::any"],[4189,"dyn_clone::sealed"],[4190,"serde::de"],[4191,"serde::ser"],[4192,"alloc::string"],[4193,"log_store::raft_engine::log_store"],[4194,"object_store::manager"],[4195,"store_api::region_engine"],[4196,"store_api::logstore"],[4197,"servers::server"],[4198,"servers::server"],[4199,"common_base"],[4200,"meta_client::client"],[4201,"core::any"],[4202,"snafu::backtrace_inert"],[4203,"core::convert"],[4204,"core::clone"],[4205,"core::fmt"],[4206,"common_error::ext"],[4207,"common_error::status_code"],[4208,"servers"],[4209,"common_greptimedb_telemetry"],[4210,"common_greptimedb_telemetry"],[4211,"common_meta::heartbeat::handler"],[4212,"tokio::sync::notify"],[4213,"meta_client::client::heartbeat"],[4214,"greptime_proto::v1::meta"],[4215,"common_meta::instruction"],[4216,"common_query"],[4217,"common_meta::instruction"],[4218,"common_meta::error"],[4219,"common_meta::instruction"],[4220,"datafusion::catalog"],[4221,"arrow_flight::gen"],[4222,"greptime_proto::v1::region::region_request"],[4223,"greptime_proto::v1::region"],[4224,"common_recordbatch"],[4225,"query::query_engine"],[4226,"common_runtime::runtime"],[4227,"datafusion::execution::context"],[4228,"datafusion_expr::expr"],[4229,"datafusion::catalog::schema"],[4230,"arrow_schema::schema"],[4231,"datafusion_expr::table_source"],[4232,"datafusion_common::error"],[4233,"datafusion_expr::table_source"],[4234,"opendal::raw::http_util::client"],[4235,"opendal::types::operator::operator"]],"d":["","Datanode configurations","Datanode implementation.","","","","","","","object storage utilities","","","","","RegionAliveKeeper manages all <code>CountdownTaskHandles</code>.","Reset countdown deadline to the given instance. (NextRole, …","Start this countdown task. The first deadline will be set …","","","","","","","","","","","","","Returns if the region is closed successfully.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The epoch when RegionAliveKeeper is created. It’s used …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates a new CountdownTaskHandle and starts the countdown …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default data home in file storage","","","","","","","","","","Object storage config","","","","","","","Storage engine config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The cache capacity in bytes","The local file cache directory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Retention period for all tables.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max retry times of procedure.","","","","","","","","","","","","","","","Options for different store engines.","","Initial retry delay of procedures, increases exponentially.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Datanode service.","","","","","","","","","","","","","","","","Build RaftEngineLogStore","Build RegionEngineRef from <code>store_engine</code> section in <code>opts</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Open all regions belong to this datanode.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Max retry times of procedure.","","<code>kv_backend</code> is optional. If absent, the builder will try to …","","","","","","","","","","","","Initial retry delay of procedures, increases exponentially.","","","","","","","","","","Start services of datanode. This method call will block …","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>leases_notifier</code> exists, it waits until leases have been …","","","","SNAFU context selector for the <code>Error::BuildRegionRequests</code> …","","SNAFU context selector for the <code>Error::BumpTableId</code> variant","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ColumnDefaultValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::CreateDir</code> variant","","SNAFU context selector for the <code>Error::CreateTable</code> variant","","SNAFU context selector for the <code>Error::DatabaseNotFound</code> …","","SNAFU context selector for the <code>Error::DecodeLogicalPlan</code> …","","","SNAFU context selector for the <code>Error::DeleteExprToRequest</code> …","SNAFU context selector for the <code>Error::Delete</code> variant","","SNAFU context selector for the <code>Error::DropTable</code> variant","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","SNAFU context selector for the …","Contains the error value","Business error of datanode.","","SNAFU context selector for the <code>Error::ExecuteLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteSql</code> variant","","SNAFU context selector for the <code>Error::ExecuteStatement</code> …","","SNAFU context selector for the <code>Error::FlushTable</code> variant","","SNAFU context selector for the <code>Error::GetMetadata</code> variant","","SNAFU context selector for the <code>Error::GetRegionMetadata</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::HandleRegionRequest</code> …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InitBackend</code> variant","","","SNAFU context selector for the <code>Error::InsertData</code> variant","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::KeyColumnNotFound</code> …","","SNAFU context selector for the <code>Error::MetaClientInit</code> …","","SNAFU context selector for the <code>Error::MissingInsertBody</code> …","","SNAFU context selector for the <code>Error::MissingKvBackend</code> …","","SNAFU context selector for the <code>Error::MissingNodeId</code> variant","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingWalDirConfig</code> …","","SNAFU context selector for the <code>Error::NotSupportSql</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::OpenLogStore</code> variant","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::PayloadNotExist</code> …","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the <code>Error::PrepareImmutableTable</code>…","","SNAFU context selector for the <code>Error::RegionEngineNotFound</code> …","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","SNAFU context selector for the <code>Error::RegisterSchema</code> …","","SNAFU context selector for the <code>Error::RemoveDir</code> variant","","","SNAFU context selector for the <code>Error::RuntimeResource</code> …","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::ShutdownInstance</code> …","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::StartServer</code> variant","","SNAFU context selector for the <code>Error::StopRegionEngine</code> …","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","SNAFU context selector for the <code>Error::TableEngineNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedOutput</code> …","","SNAFU context selector for the <code>Error::WaitForGrpcServing</code> …","","SNAFU context selector for the <code>Error::WaitProcedure</code> variantonsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Called <em>after</em> a region was closed.","","Called <em>after</em> a new region was created/opened.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Create metasrv client instance and spawn heartbeat loop.","","","","","","Resolves hostname:port address for meta registration","","","","","","Start heartbeat task, spawn background task.","","","","","","","Create a new heartbeat task instance.","","","Handler for Instruction::OpenRegion and …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The elapsed time of handling a request in the …","Region request type label.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Resolve to the given region (specified by RegionId) …","For DummyCatalogList.","For DummyCatalogList.","For TableProvider and DummyCatalogList","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Keeping a mutable request makes it possible to change in …","","","","","","","","","","","","","","","","Stop the region server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,7,10,3,14,7,10,3,14,7,10,3,14,3,7,10,3,14,7,10,3,14,7,10,3,14,7,10,3,14,7,10,3,14,7,7,10,10,3,14,7,7,7,14,7,10,3,14,7,10,3,14,7,10,7,7,10,3,14,7,10,3,14,7,7,10,10,3,3,14,14,7,7,10,3,14,7,7,10,3,14,7,10,7,10,3,14,10,3,7,3,7,10,3,3,7,10,3,14,7,10,7,7,10,3,14,7,7,10,3,14,7,10,3,14,7,10,3,14,7,7,10,10,3,3,14,14,10,7,10,3,14,7,10,3,14,38,0,0,0,0,38,47,0,38,0,47,0,0,38,0,0,0,38,0,0,38,39,40,41,42,43,44,45,46,47,42,43,43,44,44,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,42,43,45,42,43,44,45,41,41,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,44,45,39,38,39,40,41,42,43,44,45,46,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,46,42,43,44,45,46,40,47,40,40,40,40,47,47,47,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,39,46,46,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,46,59,46,46,46,38,39,40,41,42,43,44,45,46,47,42,46,46,59,42,43,44,45,46,46,46,46,46,44,45,38,39,40,41,42,43,44,45,46,47,42,38,39,40,41,42,43,44,45,46,47,46,39,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,46,38,39,40,41,42,43,44,45,46,47,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,38,39,40,41,42,43,44,45,46,47,38,39,40,41,42,43,44,45,46,47,46,0,0,0,0,0,0,59,53,52,59,53,52,59,53,52,59,52,52,52,59,59,53,52,59,53,52,59,53,52,59,52,52,52,59,53,52,59,53,52,59,59,53,52,59,52,52,52,52,59,59,59,59,59,59,53,52,59,59,53,52,59,53,53,53,52,59,52,53,52,59,53,53,52,52,59,59,53,52,59,52,53,53,52,59,59,52,52,52,52,53,52,59,53,53,52,53,53,53,59,53,52,59,59,53,53,53,53,53,53,53,53,52,59,59,53,52,59,53,52,59,53,52,59,53,53,52,52,59,59,53,52,59,53,52,59,53,52,52,67,0,67,0,67,67,0,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,67,0,0,67,0,67,0,67,0,33,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,67,0,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,33,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,67,0,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,116,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,67,67,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,89,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,130,90,76,78,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,84,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,67,117,118,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,140,108,109,97,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,98,98,99,99,100,100,101,101,102,102,103,103,104,104,71,71,73,73,74,74,106,106,107,107,108,108,109,109,75,75,76,76,77,77,78,78,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,79,79,80,80,81,81,82,82,83,83,84,84,122,122,85,85,123,123,124,124,125,125,126,126,127,127,128,128,86,86,129,129,87,87,88,88,89,89,130,130,90,90,131,131,132,132,133,133,134,134,135,135,136,136,91,91,92,92,137,137,138,138,93,93,139,139,94,94,95,95,96,96,97,97,140,140,141,141,142,142,67,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,96,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,80,81,83,73,74,82,85,88,95,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,132,133,139,94,140,89,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,67,71,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,106,107,75,76,111,112,113,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,98,98,99,99,100,100,101,101,102,102,103,103,104,104,71,71,73,73,74,74,106,106,107,107,108,108,109,109,75,75,76,76,77,77,78,78,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,79,79,80,80,81,81,82,82,83,83,84,84,122,122,85,85,123,123,124,124,125,125,126,126,127,127,128,128,86,86,129,129,87,87,88,88,89,89,130,130,90,90,131,131,132,132,133,133,134,134,135,135,136,136,91,91,92,92,137,137,138,138,93,93,139,139,94,94,95,95,96,96,97,97,140,140,141,141,142,142,67,67,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,78,93,98,99,100,101,102,103,104,71,73,74,106,107,108,109,75,76,77,78,110,111,112,113,114,115,116,117,118,119,120,121,79,80,81,82,83,84,122,85,123,124,125,126,127,128,86,129,87,88,89,130,90,131,132,133,134,135,136,91,92,137,138,93,139,94,95,96,97,140,141,142,67,196,197,198,199,200,201,202,203,204,205,206,207,196,203,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,206,207,225,226,227,228,229,230,231,232,233,208,234,235,236,237,202,238,239,240,241,242,243,244,245,246,247,248,249,198,199,250,251,252,253,254,209,255,256,210,257,258,259,260,261,212,211,205,262,263,264,265,237,221,222,236,239,249,261,263,251,252,259,260,205,197,213,214,215,216,217,218,219,223,224,206,207,227,228,229,230,231,232,233,234,238,240,241,242,243,244,245,247,198,250,251,252,253,254,257,259,205,262,263,220,223,224,225,200,228,229,230,201,258,266,0,0,0,0,0,0,266,147,266,267,32,147,266,267,32,147,266,267,32,147,147,147,266,267,32,147,266,267,32,147,266,267,32,147,266,267,32,147,266,267,32,147,266,267,32,147,147,266,267,32,147,147,266,267,32,147,266,267,32,147,266,267,32,147,266,266,267,267,32,32,147,147,266,267,32,147,266,267,32,147,0,268,147,268,147,266,267,32,147,266,267,32,147,266,267,32,147,147,266,267,32,147,266,267,32,147,266,267,32,147,266,266,267,267,32,32,147,147,266,267,32,147,266,267,32,147,0,150,150,150,150,150,150,150,150,150,150,150,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,153,153,153,153,153,153,153,153,153,0,153,153,153,153,153,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,269,0,0,0,0,0,269,0,0,0,0,269,0,0,25,170,171,172,173,183,184,178,269,175,25,170,171,172,173,170,171,172,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,170,170,170,25,170,171,172,173,25,170,171,172,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,270,175,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,25,184,178,269,175,25,170,171,172,173,184,173,178,178,184,178,269,175,25,170,171,172,173,25,170,171,172,173,184,178,269,175,25,170,171,172,173,25,178,25,178,25,184,178,269,175,25,170,171,172,173,25,184,178,269,175,25,170,171,172,173,184,184,178,178,269,269,175,175,25,25,170,170,171,171,172,172,173,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,173,178,25,25,184,178,269,175,25,170,171,172,173,183,183,178,25,184,173,178,170,178,25,184,25,178,173,173,171,173,171,171,184,178,269,175,25,170,171,172,173,25,178,25,184,178,269,175,25,170,171,172,173,173,172,172,172,172,178,173,25,170,171,172,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,184,184,178,178,269,269,175,175,25,25,170,170,171,171,172,172,173,173,184,178,269,175,25,170,171,172,173,184,178,269,175,25,170,171,172,173,25,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[7,8],9],[6,9],[10,9],[6,9],[6,9],[6,9],[7,11],0,[[7,8],[[13,[[12,[10]]]]]],[[14,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,17],[[20,[[19,[18]]]]]],0,0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[7,17],4],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[7,[24,[23]],11],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,26],7],[[25,8,-1],10,[27,28]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,[[7,8],9],[[10,30,11],9],[3,[[13,[4]]]],0,[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[[[12,[7]],[13,[32]]],[[33,[9]]]],[[10,26],9],0,[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],0,0,0,[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[35,[38]]],48],[-1,[[35,[39]]],48],[-1,[[35,[40]]],48],[-1,[[35,[41]]],48],[-1,[[35,[42]]],48],[-1,[[35,[43]]],48],[-1,[[35,[44]]],48],[-1,[[35,[45]]],48],[-1,[[35,[46]]],48],[-1,[[35,[47]]],48],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],0,0,0,0,0,[[],[[13,[[24,[49]]]]]],[[40,40],4],[[47,47],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[38,15],16],[[39,15],16],[[40,15],16],[[41,15],16],[[42,15],16],[[43,15],16],[[44,15],16],[[45,15],16],[[46,15],16],[[47,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],0,[[38,-1],35,50],[[39,-1],35,50],[[40,-1],35,50],[[41,-1],35,50],[[42,-1],35,50],[[43,-1],35,50],[[44,-1],35,50],[[45,-1],35,50],[[46,-1],35,50],[[47,-1],35,50],0,0,[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,51],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,37],9,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,[[33,[53]]]],[46,[[33,[[12,[54]]]]]],[[46,[12,[-1]],55],[[33,[[57,[56]]]]],58],[59,59],[[-1,-2],9,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[52,25],[[33,[60]]]],[52,[[33,[61]]]],[[52,25],[[33,[61]]]],[[],59],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[35,[59]]],48],[6,9],[6,9],[6,9],[52,52],0,[52,52],0,[[59,59],4],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[59,15],[[35,[9,62]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],6],[[],6],[[],6],[[52,25,63,4],[[33,[9]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[46,64],52],[[52,[12,[54]],65],[[33,[25]]]],0,[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[53,64],0,0,0,[53,25],0,0,[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[[59,-1],35,50],0,[53,[[33,[9]]]],[53,[[33,[9]]]],[53,[[33,[9]]]],[53,[[33,[9]]]],[53,[[33,[9]]]],[53,9],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,9],[[52,63],52],[[52,66],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[67,68],[-1,69,[]],[67,[[13,[70]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[71,[-1]]],67,[[72,[51]]]],[[[73,[-1]]],67,[[72,[51]]]],[[[74,[-1]]],67,[[72,[51]]]],[[[75,[-1]]],67,[[72,[51]]]],[[[76,[-1,-2]]],67,[[72,[51]]],[[72,[51]]]],[77,67],[[[78,[-1,-2]]],67,[[72,[6]]],[[72,[6]]]],[79,67],[[[80,[-1]]],67,[[72,[51]]]],[[[81,[-1]]],67,[[72,[51]]]],[[[82,[-1]]],67,[[72,[51]]]],[[[83,[-1]]],67,[[72,[51]]]],[[[84,[-1]]],67,[[72,[51]]]],[[[85,[-1]]],67,[[72,[51]]]],[86,67],[87,67],[[[88,[-1]]],67,[[72,[51]]]],[[[89,[-1,-2]]],67,[[72,[51]]],[[72,[51]]]],[[[90,[-1]]],67,[[72,[51]]]],[91,67],[92,67],[[[93,[-1]]],67,[[72,[51]]]],[[[94,[-1]]],67,[[72,[8]]]],[[[95,[-1]]],67,[[72,[51]]]],[[[96,[-1]]],67,[[72,[51]]]],[[[97,[-1]]],67,[[72,[51]]]],0,[67,[[13,[69]]]],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[[[71,[-1]]],[[71,[-1]]],105],[[[73,[-1]]],[[73,[-1]]],105],[[[74,[-1]]],[[74,[-1]]],105],[[[106,[-1]]],[[106,[-1]]],105],[[[107,[-1]]],[[107,[-1]]],105],[[[108,[-1]]],[[108,[-1]]],105],[[[109,[-1]]],[[109,[-1]]],105],[[[75,[-1]]],[[75,[-1]]],105],[[[76,[-1,-2]]],[[76,[-1,-2]]],105,105],[77,77],[[[78,[-1,-2]]],[[78,[-1,-2]]],105,105],[110,110],[[[111,[-1]]],[[111,[-1]]],105],[[[112,[-1]]],[[112,[-1]]],105],[[[113,[-1]]],[[113,[-1]]],105],[114,114],[115,115],[[[116,[-1]]],[[116,[-1]]],105],[[[117,[-1]]],[[117,[-1]]],105],[[[118,[-1]]],[[118,[-1]]],105],[119,119],[120,120],[121,121],[79,79],[[[80,[-1]]],[[80,[-1]]],105],[[[81,[-1]]],[[81,[-1]]],105],[[[82,[-1]]],[[82,[-1]]],105],[[[83,[-1]]],[[83,[-1]]],105],[[[84,[-1]]],[[84,[-1]]],105],[122,122],[[[85,[-1]]],[[85,[-1]]],105],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[86,86],[129,129],[87,87],[[[88,[-1]]],[[88,[-1]]],105],[[[89,[-1,-2]]],[[89,[-1,-2]]],105,105],[[[130,[-1]]],[[130,[-1]]],105],[[[90,[-1]]],[[90,[-1]]],105],[131,131],[[[132,[-1]]],[[132,[-1]]],105],[[[133,[-1]]],[[133,[-1]]],105],[134,134],[135,135],[136,136],[91,91],[92,92],[137,137],[138,138],[[[93,[-1]]],[[93,[-1]]],105],[[[139,[-1]]],[[139,[-1]]],105],[[[94,[-1]]],[[94,[-1]]],105],[[[95,[-1]]],[[95,[-1]]],105],[[[96,[-1]]],[[96,[-1]]],105],[[[97,[-1]]],[[97,[-1]]],105],[[[140,[-1,-2]]],[[140,[-1,-2]]],105,105],[141,141],[[[142,[-1]]],[[142,[-1]]],105],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,0,0,0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],0,[[67,6,[57,[51]]],9],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[67,49],0,0,[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],0,0,0,0,[[[71,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[73,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[74,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[75,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[76,[-1,-2]]],[[35,[-3,67]]],[[72,[51]]],[[72,[51]]],[]],[77,[[35,[-1,67]]],[]],[[[78,[-1,-2]]],[[35,[-3,67]]],[[72,[6]]],[[72,[6]]],[]],[79,[[35,[-1,67]]],[]],[[[80,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[81,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[82,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[83,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[84,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[85,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[86,[[35,[-1,67]]],[]],[87,[[35,[-1,67]]],[]],[[[88,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[89,[-1,-2]]],[[35,[-3,67]]],[[72,[51]]],[[72,[51]]],[]],[[[90,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[91,[[35,[-1,67]]],[]],[92,[[35,[-1,67]]],[]],[[[93,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[94,[-1]]],[[35,[-2,67]]],[[72,[8]]],[]],[[[95,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[96,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[[97,[-1]]],[[35,[-2,67]]],[[72,[51]]],[]],[[98,15],16],[[99,15],16],[[100,15],16],[[101,15],16],[[102,15],16],[[103,15],16],[[104,15],16],[[[71,[-1]],15],16,143],[[[73,[-1]],15],16,143],[[[74,[-1]],15],16,143],[[[106,[-1]],15],16,143],[[[107,[-1]],15],16,143],[[[108,[-1]],15],16,143],[[[109,[-1]],15],16,143],[[[75,[-1]],15],16,143],[[[76,[-1,-2]],15],16,143,143],[[77,15],16],[[[78,[-1,-2]],15],16,143,143],[[110,15],16],[[[111,[-1]],15],16,143],[[[112,[-1]],15],16,143],[[[113,[-1]],15],16,143],[[114,15],16],[[115,15],16],[[[116,[-1]],15],16,143],[[[117,[-1]],15],16,143],[[[118,[-1]],15],16,143],[[119,15],16],[[120,15],16],[[121,15],16],[[79,15],16],[[[80,[-1]],15],16,143],[[[81,[-1]],15],16,143],[[[82,[-1]],15],16,143],[[[83,[-1]],15],16,143],[[[84,[-1]],15],16,143],[[122,15],16],[[[85,[-1]],15],16,143],[[123,15],16],[[124,15],16],[[125,15],16],[[126,15],16],[[127,15],16],[[128,15],16],[[86,15],16],[[129,15],16],[[87,15],16],[[[88,[-1]],15],16,143],[[[89,[-1,-2]],15],16,143,143],[[[130,[-1]],15],16,143],[[[90,[-1]],15],16,143],[[131,15],16],[[[132,[-1]],15],16,143],[[[133,[-1]],15],16,143],[[134,15],16],[[135,15],16],[[136,15],16],[[91,15],16],[[92,15],16],[[137,15],16],[[138,15],16],[[[93,[-1]],15],16,143],[[[139,[-1]],15],16,143],[[[94,[-1]],15],16,143],[[[95,[-1]],15],16,143],[[[96,[-1]],15],16,143],[[[97,[-1]],15],16,143],[[[140,[-1,-2]],15],16,143,143],[[141,15],16],[[[142,[-1]],15],16,143],[[67,15],16],[[67,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,67],[99,67],[100,67],[101,67],[102,67],[103,67],[104,67],[[[71,[-1]]],67,[[72,[51]]]],[[[73,[-1]]],67,[[72,[51]]]],[[[74,[-1]]],67,[[72,[51]]]],[[[106,[-1]]],67,[[72,[51]]]],[[[107,[-1]]],67,[[72,[51]]]],[[[108,[-1]]],67,[[72,[51]]]],[[[109,[-1]]],67,[[72,[51]]]],[[[75,[-1]]],67,[[72,[51]]]],[[[76,[-1,-2]]],67,[[72,[51]]],[[72,[51]]]],[77,67],[[[78,[-1,-2]]],67,[[72,[6]]],[[72,[6]]]],[110,67],[[[111,[-1]]],67,[[72,[51]]]],[[[112,[-1]]],67,[[72,[51]]]],[[[113,[-1]]],67,[[72,[51]]]],[114,67],[115,67],[[[116,[-1]]],67,[[72,[51]]]],[[[117,[-1]]],67,[[72,[51]]]],[[[118,[-1]]],67,[[72,[51]]]],[119,67],[120,67],[121,67],[79,67],[[[80,[-1]]],67,[[72,[51]]]],[[[81,[-1]]],67,[[72,[51]]]],[[[82,[-1]]],67,[[72,[51]]]],[[[83,[-1]]],67,[[72,[51]]]],[[[84,[-1]]],67,[[72,[51]]]],[122,67],[[[85,[-1]]],67,[[72,[51]]]],[123,67],[124,67],[125,67],[126,67],[127,67],[128,67],[86,67],[129,67],[87,67],[[[88,[-1]]],67,[[72,[51]]]],[[[89,[-1,-2]]],67,[[72,[51]]],[[72,[51]]]],[[[130,[-1]]],67,[[72,[51]]]],[[[90,[-1]]],67,[[72,[51]]]],[131,67],[[[132,[-1]]],67,[[72,[144]]]],[[[133,[-1]]],67,[[72,[144]]]],[134,67],[135,67],[136,67],[91,67],[92,67],[137,67],[138,67],[[[93,[-1]]],67,[[72,[51]]]],[[[139,[-1]]],67,[[72,[8]]]],[[[94,[-1]]],67,[[72,[8]]]],[[[95,[-1]]],67,[[72,[51]]]],[[[96,[-1]]],67,[[72,[51]]]],[[[97,[-1]]],67,[[72,[51]]]],[[[140,[-1,-2]]],67,[[72,[51]]],[[72,[8]]]],[141,67],[[[142,[-1]]],67,[[72,[51]]]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[67,[[13,[145]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,0,0,[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[67,[[13,[69]]]],0,[67,146],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,51,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,37],9,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[147,147],[[-1,-2],9,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,9],[6,9],[6,9],[6,9],[[147,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[9,[147,32]]]],[[-1,8],9,[]],[[147,8],9],[[-1,8],9,[]],[[147,8],9],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,9],[-1,-1,[]],[-1,-2,[],[]],[[[13,[51]],148,4],[[12,[149]]]],[150,151],[150,[[20,[[19,[18]]]]]],[150,152],[150,[[13,[51]]]],[150,9],[[],6],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,4,[]],[-1,-2,[],[]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[9,[31]]],[]],[[150,51],9],[-1,[[35,[34]]],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],0,[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[153,[[33,[9]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[66,[12,[154]],155,156,[13,[[12,[157]]]],[12,[157]]],[[33,[158]]]],[6,-1,[]],[6,-1,[]],[153,9],[6,9],[-1,-1,[]],[-1,-2,[],[]],[[17,155],[[33,[9]]]],0,[[],6],0,[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,4,[]],[-1,-2,[],[]],[25,[[57,[159]]]],0,[[26,160],[[33,[66]]]],0,0,[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[[49,[13,[51]]],51],0,0,[-1,[[9,[31]]],[]],0,0,[[153,32,[13,[[12,[157]]]]],[[33,[9]]]],[-1,[[35,[34]]],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[[46,25,66],[[33,[153]]]],[-1,36,[]],[-1,-2,[],[]],0,[[-1,37],9,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[161,161],[[-1,-2],9,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,9],[[162,[33,[163]]],162],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[161,17],[[20,[[19,[18]]]]]],[[],6],[164,[[166,[[9,[8,165]]]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[161,17],4],[-1,4,[]],[-1,-2,[],[]],[25,161],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[167,8],0,[164,162],[-1,[[9,[31]]],[]],[-1,[[35,[34]]],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,-2,[],[]],0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[168,169],[6,-1,[]],[6,-1,[]],[6,9],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,4,[]],[-1,-2,[],[]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[9,[31]]],[]],[-1,[[35,[34]]],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],[[-1,37],9,[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[170,68],[171,68],[172,68],[173,68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[170,49],[[13,[[12,[174]]]]]],0,[170,[[57,[51]]]],[25,25],[170,170],[171,171],[172,172],[173,173],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[-1,8,56],[[20,[[19,[18]]]]],[]],[[175,8,56],[[20,[[19,[18]]]]]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[25,[21,[176]]],[[20,[[19,[18]]]]]],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],[6,9],0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,177],[[20,[[19,[18]]]]]],[[178,179],[[33,[180]]]],[[25,179],[[33,[180]]]],[[178,8,165],[[33,[163]]]],[[25,8,165],[[33,[163]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[181,[12,[182]],65,183],178],[[181,[12,[182]],65],25],[25,[[57,[184]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[29,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,[[25,8],[[13,[185]]]],0,0,0,[[170,51,[12,[174]]],[[13,[[12,[174]]]]]],[[178,56],9],[[25,56],9],0,[25,[[12,[182]]]],0,[[173,186,[13,[[57,[6]]]],[24,[187]],[13,[6]]],[[20,[[19,[18]]]]]],0,[[171,49],[[13,[[12,[188]]]]]],[173,189],0,[171,[[57,[51]]]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[-1,[[9,[31]]],[]],[[25,8,4],[[33,[9]]]],[178,[[33,[9]]]],[25,[[33,[9]]]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[-1,[[35,[34]]],[]],[[173,[24,[187]]],[[191,[[57,[190]]]]]],[[172,49],[[20,[[19,[18]]]]]],0,[[172,49],4],[172,[[57,[51]]]],0,[173,192],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[181,[12,[182]],65,183],25],[[[12,[193]]],170],0,[[],[[33,[194]]]],[49,[[33,[9]]]],[[195,38],[[33,[195]]]],0,0,[46,[[33,[195]]]],0,0,[44,[[33,[195]]]],[[49,40],[[33,[195]]]],[45,[[33,[195]]]],[43,[[33,[195]]]],[42,[[33,[195]]]]],"c":[],"p":[[3,"And",4167],[8,"Policy",4168],[3,"CountdownTask",10],[15,"bool"],[3,"Compat",4169],[15,"usize"],[3,"RegionAliveKeeper",10],[3,"RegionId",4170],[15,"tuple"],[3,"CountdownTaskHandle",10],[3,"Instant",4171],[3,"Arc",4172],[4,"Option",4173],[4,"CountdownCommand",10],[3,"Formatter",4174],[6,"Result",4174],[3,"HeartbeatResponseHandlerContext",4175],[8,"Future",4176],[3,"Box",4177],[3,"Pin",4178],[3,"Request",4179],[3,"Request",4179],[3,"GrantedRegion",4180],[15,"slice"],[3,"RegionServer",3815],[15,"u64"],[8,"FnOnce",4181],[8,"Send",4182],[3,"Or",4183],[4,"RegionRole",4184],[3,"HNil",4185],[3,"RegionServerEventReceiver",3531],[6,"Result",730],[4,"CNil",4186],[4,"Result",4187],[3,"TypeId",4188],[3,"Private",4189],[4,"ObjectStoreConfig",152],[3,"StorageConfig",152],[3,"FileConfig",152],[3,"ObjectStorageCacheConfig",152],[3,"S3Config",152],[3,"OssConfig",152],[3,"AzblobConfig",152],[3,"GcsConfig",152],[3,"DatanodeOptions",152],[4,"RegionEngineConfig",152],[8,"Deserializer",4190],[15,"str"],[8,"Serializer",4191],[3,"String",4192],[3,"DatanodeBuilder",592],[3,"Datanode",592],[3,"RaftEngineLogStore",4193],[6,"ObjectStoreManagerRef",4194],[6,"RegionEngineRef",4184],[3,"Vec",4195],[8,"LogStore",4196],[3,"ProcedureConfig",592],[6,"ServerHandlers",4197],[6,"ServerHandler",4197],[3,"Error",4174],[6,"KvBackendRef",4198],[3,"Plugins",4199],[6,"RegionServerEventListenerRef",3531],[3,"MetaClient",4200],[4,"Error",730],[8,"Any",4188],[8,"Error",4201],[3,"Backtrace",4202],[3,"IncorrectInternalStateSnafu",730],[8,"Into",4203],[3,"CatalogNotFoundSnafu",730],[3,"SchemaNotFoundSnafu",730],[3,"TableNotFoundSnafu",730],[3,"ColumnNotFoundSnafu",730],[3,"MissingTimestampColumnSnafu",730],[3,"ColumnValuesNumberMismatchSnafu",730],[3,"MissingKvBackendSnafu",730],[3,"InvalidSqlSnafu",730],[3,"NotSupportSqlSnafu",730],[3,"KeyColumnNotFoundSnafu",730],[3,"IllegalPrimaryKeysDefSnafu",730],[3,"ConstraintNotSupportedSnafu",730],[3,"SchemaExistsSnafu",730],[3,"TableIdProviderNotFoundSnafu",730],[3,"MissingNodeIdSnafu",730],[3,"MissingRequiredFieldSnafu",730],[3,"DatabaseNotFoundSnafu",730],[3,"ColumnNoneDefaultValueSnafu",730],[3,"PayloadNotExistSnafu",730],[3,"MissingWalDirConfigSnafu",730],[3,"UnexpectedSnafu",730],[3,"RegionNotFoundSnafu",730],[3,"RegionEngineNotFoundSnafu",730],[3,"UnsupportedGrpcRequestSnafu",730],[3,"UnsupportedOutputSnafu",730],[3,"HandleHeartbeatResponseSnafu",730],[3,"GetMetadataSnafu",730],[3,"ExecuteSqlSnafu",730],[3,"PlanStatementSnafu",730],[3,"ExecuteStatementSnafu",730],[3,"ExecuteLogicalPlanSnafu",730],[3,"DecodeLogicalPlanSnafu",730],[8,"Clone",4204],[3,"CreateTableSnafu",730],[3,"DropTableSnafu",730],[3,"TableEngineNotFoundSnafu",730],[3,"EngineProcedureNotFoundSnafu",730],[3,"MissingInsertBodySnafu",730],[3,"InsertSnafu",730],[3,"DeleteSnafu",730],[3,"FlushTableSnafu",730],[3,"StartServerSnafu",730],[3,"WaitForGrpcServingSnafu",730],[3,"ParseAddrSnafu",730],[3,"CreateDirSnafu",730],[3,"RemoveDirSnafu",730],[3,"OpenLogStoreSnafu",730],[3,"InitBackendSnafu",730],[3,"RuntimeResourceSnafu",730],[3,"RegisterSchemaSnafu",730],[3,"DeleteExprToRequestSnafu",730],[3,"ParseSqlSnafu",730],[3,"PrepareImmutableTableSnafu",730],[3,"CatalogSnafu",730],[3,"MetaClientInitSnafu",730],[3,"InsertDataSnafu",730],[3,"BumpTableIdSnafu",730],[3,"ColumnDefaultValueSnafu",730],[3,"UnrecognizedTableOptionSnafu",730],[3,"SubmitProcedureSnafu",730],[3,"WaitProcedureSnafu",730],[3,"ShutdownServerSnafu",730],[3,"ShutdownInstanceSnafu",730],[3,"EncodeJsonSnafu",730],[3,"JoinTaskSnafu",730],[3,"ColumnDataTypeSnafu",730],[3,"HandleRegionRequestSnafu",730],[3,"GetRegionMetadataSnafu",730],[3,"BuildRegionRequestsSnafu",730],[3,"StopRegionEngineSnafu",730],[8,"Debug",4174],[3,"ProcedureId",4205],[8,"StackError",4206],[4,"StatusCode",4207],[3,"RegionServerEventSender",3531],[4,"Mode",4208],[4,"GreptimeDBTelemetryTask",4209],[3,"StandaloneGreptimeDBTelemetryCollector",3658],[4,"Mode",4209],[15,"i32"],[3,"HeartbeatTask",3695],[3,"AtomicBool",4210],[6,"HeartbeatResponseHandlerExecutorRef",4175],[6,"MailboxRef",4211],[3,"Notify",4212],[3,"HeartbeatSender",4213],[3,"RegionStat",4180],[3,"MetaClientOptions",4214],[3,"RegionHeartbeatResponseHandler",3743],[4,"InstructionReply",4215],[4,"Output",4216],[4,"Instruction",4215],[4,"RegionRequest",4217],[6,"Result",4218],[3,"RegionIdent",4215],[3,"HANDLE_REGION_REQUEST_ELAPSED",3784],[6,"HistogramVec",4219],[3,"DummyCatalogList",3815],[3,"DummyCatalogProvider",3815],[3,"DummySchemaProvider",3815],[3,"DummyTableProvider",3815],[8,"CatalogProvider",4220],[3,"DummyTableProviderFactory",3815],[3,"Ticket",4221],[4,"Body",4222],[3,"RegionServerInner",3815],[3,"QueryRequest",4223],[6,"SendableRecordBatchStream",4224],[6,"QueryEngineRef",4225],[3,"Runtime",4226],[6,"TableProviderFactoryRef",3815],[3,"RegionStat",3815],[15,"i64"],[3,"SessionState",4227],[4,"Expr",4228],[8,"SchemaProvider",4229],[6,"SchemaRef",4230],[4,"TableProviderFilterPushDown",4231],[6,"Result",4232],[4,"TableType",4231],[8,"TableProvider",4233],[3,"HttpClient",4234],[3,"Operator",4235],[13,"ParseAddr",3385],[13,"DatabaseNotFound",3385],[13,"ColumnDefaultValue",3385],[13,"ColumnNoneDefaultValue",3385],[13,"ColumnNotFound",3385],[13,"ColumnValuesNumberMismatch",3385],[13,"ConstraintNotSupported",3385],[13,"CreateDir",3385],[13,"RemoveDir",3385],[13,"GetRegionMetadata",3385],[13,"TableEngineNotFound",3385],[13,"EngineProcedureNotFound",3385],[13,"InitBackend",3385],[13,"EncodeJson",3385],[13,"JoinTask",3385],[13,"UnsupportedOutput",3385],[13,"UnsupportedGrpcRequest",3385],[13,"HandleHeartbeatResponse",3385],[13,"GetMetadata",3385],[13,"ExecuteSql",3385],[13,"PlanStatement",3385],[13,"ExecuteStatement",3385],[13,"ExecuteLogicalPlan",3385],[13,"DecodeLogicalPlan",3385],[13,"IncorrectInternalState",3385],[13,"CatalogNotFound",3385],[13,"SchemaNotFound",3385],[13,"CreateTable",3385],[13,"DropTable",3385],[13,"TableNotFound",3385],[13,"MissingTimestampColumn",3385],[13,"MissingInsertBody",3385],[13,"Insert",3385],[13,"Delete",3385],[13,"FlushTable",3385],[13,"StartServer",3385],[13,"WaitForGrpcServing",3385],[13,"OpenLogStore",3385],[13,"RuntimeResource",3385],[13,"MissingKvBackend",3385],[13,"KeyColumnNotFound",3385],[13,"IllegalPrimaryKeysDef",3385],[13,"RegisterSchema",3385],[13,"SchemaExists",3385],[13,"DeleteExprToRequest",3385],[13,"ParseSql",3385],[13,"PrepareImmutableTable",3385],[13,"Catalog",3385],[13,"MetaClientInit",3385],[13,"InsertData",3385],[13,"TableIdProviderNotFound",3385],[13,"BumpTableId",3385],[13,"MissingNodeId",3385],[13,"MissingRequiredField",3385],[13,"UnrecognizedTableOption",3385],[13,"SubmitProcedure",3385],[13,"WaitProcedure",3385],[13,"ShutdownServer",3385],[13,"ShutdownInstance",3385],[13,"PayloadNotExist",3385],[13,"MissingWalDirConfig",3385],[13,"ColumnDataType",3385],[13,"Unexpected",3385],[13,"HandleRegionRequest",3385],[13,"RegionNotFound",3385],[13,"RegionEngineNotFound",3385],[13,"BuildRegionRequests",3385],[13,"StopRegionEngine",3385],[13,"InvalidSql",3385],[13,"NotSupportSql",3385],[4,"RegionServerEvent",3531],[3,"NoopRegionServerEventListener",3531],[8,"RegionServerEventListener",3531],[4,"RegionChange",3815],[8,"TableProviderFactory",3815]],"b":[[1864,"impl-Display-for-Error"],[1865,"impl-Debug-for-Error"]]},\
"datatypes":{"doc":"","t":"CCCAAAAOAAAAAAAAAAAAOGGGGMMMMMMMMMMMMMMNNEIGNNNNNNNNNNNNNNNNNNNNNMKLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLKLKLLLLMMLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNDNENDNDNDNDNNDNDGNDNDNDNDNDNDNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCCQQQQQIIQIIQQKKLLLLKFOKKKKKRCDDSGDDDGRRLMLMMLLLLLLLLLFLLALLMMMALMLMLLLLLMMLLLLLLLLLLLLMMLMMMMMMLLMMALLMMMMLLLLLLLLLLLLLLFLLLLFLLMMMLLLRDRGRMLLLLLLLMLMLLLLLLLLLLLLMLMLMLMLLLLLLLLLLLLRRENRNLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLLLLMLLLLMLIKDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLQDDDDNDDDDDDEDDDDDDDDEDQDIQNNNNNNNNNNQQIDDNNNDDDDDEDDDDEDDDDQINAAKACKKCAAAAAKAKMMAAMAMAAAKMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLDLLFFFLLLLLLLLLLLLLLLFLMLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLDDDDENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQDDDDDDQIQQQIDDDDDQILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRNNRNRNDDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRNNRNRNDDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNDNNLLLLLLLLLLNNNNNNNNNNNNNNNLLLLNNDENNGGDLNLNNNNNNNNNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMDDDDDGGGGDDGGGGGGGGGGGGDGGGGGGGGGGGGGGDDDIDDDDDDDGGGGGGGGGGGGGGGGGGGGGGGGDIGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMKKKAAAKKAAAAALKKKAMOOOOOALLLKMMMMKKMMAKMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMKMLAMMAMKLMKAAAKKKLKAKMMMKDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLGGMMGGMMDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGMMMMMMMMFODLLLLLLLLLLLLLLLLLLLGGGGGGMMMMMMDDDDLLLMLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLIAKAKAKOAKAKOOFFFFOGGGGGGGGGGGGDDDGGGGGGGGMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMMMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGMMMMMMMMGGGGGGGGMMMMMMMMNNNDELLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMM","n":["Error","Result","arrow","arrow_array","data_type","duration","error","for_all_primitive_types","interval","macros","prelude","scalars","schema","serialize","time","timestamp","type_id","types","value","vectors","with_match_primitive_type_id","BinaryArray","MutableBinaryArray","MutableStringArray","StringArray","data_type","data_type","null_buffer_builder","null_buffer_builder","nulls","nulls","offsets_builder","offsets_builder","value_builder","value_builder","value_data","value_data","value_offsets","value_offsets","Binary","Boolean","ConcreteDataType","DataType","DataTypeRef","Date","DateTime","Decimal128","Dictionary","Duration","Float32","Float64","Int16","Int32","Int64","Int8","Interval","List","Null","String","Time","Timestamp","UInt16","UInt32","UInt64","UInt8","alloc","as_arrow_type","as_arrow_type","as_decimal128","as_duration","as_list","as_time","as_timestamp","binary_datatype","boolean_datatype","borrow","borrow_mut","can_arrow_type_cast_to","clone","clone_into","cmp","compare","create_mutable_vector","create_mutable_vector","date_datatype","datetime_datatype","decimal128_datatype","decimal128_default_datatype","default_value","default_value","deserialize","dictionary_datatype","duration_datatype","duration_microsecond_datatype","duration_millisecond_datatype","duration_nanosecond_datatype","duration_second_datatype","eq","equivalent","equivalent","equivalent","equivalent","float32_datatype","float64_datatype","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow_interval_unit","from_arrow_time_unit","from_arrow_type","from_ref","get_hash","hash","impl_new_concrete_type_functions","int16_datatype","int32_datatype","int64_datatype","int8_datatype","interval_datatype","interval_day_time_datatype","interval_month_day_nano_datatype","interval_year_month_datatype","into","into_request","is_boolean","is_decimal","is_float","is_null","is_numeric","is_signed","is_string","is_stringifiable","is_timestamp","is_unsigned","list_datatype","logical_type_id","logical_type_id","name","name","null_datatype","numerics","partial_cmp","phantom","ptr","serialize","string_datatype","time_datatype","time_microsecond_datatype","time_millisecond_datatype","time_nanosecond_datatype","time_second_datatype","timestamp_datatype","timestamp_microsecond_datatype","timestamp_millisecond_datatype","timestamp_nanosecond_datatype","timestamp_second_datatype","to_owned","to_string","try_cast","try_cast","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","uint16_datatype","uint32_datatype","uint64_datatype","uint8_datatype","vzip","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_duration_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_native","into_native","into_native","into_native","into_request","into_request","into_request","into_request","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","ArrowCompute","ArrowComputeSnafu","BadArrayAccess","BadArrayAccessSnafu","CastTimeType","CastTimeTypeSnafu","CastType","CastTypeSnafu","Conversion","ConversionSnafu","DefaultValueType","DefaultValueTypeSnafu","Deserialize","DeserializeSnafu","DuplicateColumn","DuplicateColumnSnafu","DuplicateMeta","DuplicateMetaSnafu","Err","Error","InvalidPrecisionOrScale","InvalidPrecisionOrScaleSnafu","InvalidTimestampIndex","InvalidTimestampIndexSnafu","InvalidTimestampPrecision","InvalidTimestampPrecisionSnafu","NullDefault","NullDefaultSnafu","Ok","ParseSchemaVersion","ParseSchemaVersionSnafu","ProjectArrowSchema","ProjectArrowSchemaSnafu","Result","Serialize","SerializeSnafu","ToScalarValue","ToScalarValueSnafu","TryFromValue","TryFromValueSnafu","UnknownVector","UnknownVectorSnafu","UnsupportedArrowType","UnsupportedArrowTypeSnafu","UnsupportedDefaultExpr","UnsupportedDefaultExprSnafu","UnsupportedOperation","UnsupportedOperationSnafu","ValueExceedsPrecision","ValueExceedsPrecisionSnafu","arrow_type","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","debug_fmt","description","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","json","key","msg","msg","next","op","precision","precision","precision","reason","reason","reason","scale","size","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vector_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","arrow_type","column","error","error","error","error","error","error","error","error","expr","from","index","index","json","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","precision","precision","precision","reason","reason","reason","scale","size","value","vector_type","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","define_interval_with_unit","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_native","from_native","from_native","from_ref","from_ref","from_ref","into","into","into","into_native","into_native","into_native","into_request","into_request","into_request","new","new","new","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","ConcreteDataType","DataType","DataTypeRef","LogicalPrimitiveType","LogicalTypeId","MutableVector","Scalar","ScalarRef","ScalarVector","ScalarVectorBuilder","Validity","Value","ValueRef","Vector","VectorRef","WrapperType","Builder","Iter","OwnedItem","RefItem","RefType","Scalar","ScalarRef","ScalarType","ScalarVector","ScalarVectorBuilder","VectorType","VectorType","as_scalar_ref","finish","from_iterator","from_owned_iterator","from_slice","from_vec","get_data","get_iter_capacity","impl_scalar_for_native","iter_data","push","to_owned_scalar","upcast_gat","with_capacity","COMMENT_KEY","ColumnDefaultConstraint","ColumnSchema","FieldsAndIndices","INITIAL_VERSION","Metadata","RawSchema","Schema","SchemaBuilder","SchemaRef","TIME_INDEX_KEY","VERSION_KEY","add_metadata","alloc","arrow_schema","arrow_schema","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","collect_fields","column_index_by_name","column_name_by_index","column_schema","column_schema_by_name","column_schemas","column_schemas","column_schemas","column_schemas","constraint","contains_column","data_type","default","default_constraint","eq","equivalent","equivalent","equivalent","equivalent","fields","fields","fmt","from","from","from","from_ref","into","into","into","into_request","into_request","into_request","is_empty","is_nullable","is_time_index","metadata","metadata","metadata","name","name_to_index","name_to_index","name_to_index","new","num_columns","phantom","ptr","raw","timestamp_column","timestamp_index","timestamp_index","timestamp_index","timestamp_index","timestamp_index","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_into","try_into","try_into","try_new","try_parse_version","try_project","type_id","type_id","type_id","validate_timestamp_index","version","version","version","version","version","vzip","vzip","vzip","COMMENT_KEY","ColumnSchema","DEFAULT_CONSTRAINT_KEY","Metadata","TIME_INDEX_KEY","base","borrow","borrow_mut","clone","clone_into","create_default","create_default_vector","create_default_vector_for_padding","data_type","default_constraint","default_constraint","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","into","into_request","is_nullable","is_nullable","is_time_index","is_time_index","metadata","metadata","mut_metadata","name","new","serialize","to_owned","try_from","try_from","try_into","type_id","vzip","with_default_constraint","with_metadata","with_nullable_set","with_time_index","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP_FN","ColumnDefaultConstraint","Function","NOW_FN","Value","borrow","borrow_mut","clone","clone_into","create_current_timestamp","create_current_timestamp_vector","create_default","create_default_vector","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from_ref","into","into_request","maybe_null","null_value","serialize","to_owned","to_string","try_from","try_from","try_into","type_id","validate","vzip","RawSchema","borrow","borrow_mut","clone","clone_into","column_schemas","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","into","into_request","new","serialize","timestamp_index","to_owned","try_from","try_into","type_id","version","vzip","Serializable","serialize_to_json","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_time_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_native","into_native","into_native","into_native","into_request","into_request","into_request","into_request","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_timestamp_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into_native","into_native","into_native","into_native","into_request","into_request","into_request","into_request","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","Binary","Boolean","Date","DateTime","Decimal128","Dictionary","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Float32","Float64","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","List","LogicalTypeId","Null","String","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","UInt16","UInt32","UInt64","UInt8","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","into","into_request","to_owned","try_from","try_into","type_id","vzip","ArrowPrimitive","BinaryType","BooleanType","DateTimeType","DateType","DayTime","Decimal128Type","DictionaryType","DurationMicrosecondType","DurationMillisecondType","DurationNanosecondType","DurationSecondType","DurationType","Float32Type","Float64Type","Int16Type","Int32Type","Int64Type","Int8Type","IntervalDayTimeType","IntervalMonthDayNanoType","IntervalType","IntervalYearMonthType","LargestType","ListType","LogicalPrimitiveType","LogicalType","Microsecond","Microsecond","Microsecond","Millisecond","Millisecond","Millisecond","MonthDayNano","Nanosecond","Nanosecond","Nanosecond","Native","Native","NativeType","NullType","OrdPrimitive","Second","Second","Second","StringType","TimeMicrosecondType","TimeMillisecondType","TimeNanosecondType","TimeSecondType","TimeType","TimestampMicrosecondType","TimestampMillisecondType","TimestampNanosecondType","TimestampSecondType","TimestampType","UInt16Type","UInt32Type","UInt64Type","UInt8Type","Wrapper","WrapperType","YearMonth","binary_type","boolean_type","build_data_type","cast","cast","cast_value_ref","cast_vector","cast_with_opt","date_type","datetime_type","decimal_type","dictionary_type","duration_type","from_native","interval_type","into_native","item_type","key_type","list_type","null_type","precision","primitive_type","scale","string_type","time_type","timestamp_type","type_name","value_type","BinaryType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","BooleanType","arc","as_arrow_type","bool_to_numeric","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","numeric_to_bool","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","CastOption","borrow","borrow_mut","can_cast_type","cast","cast_with_opt","clone","clone_into","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","invalid_type_cast","is_strict","strict","to_owned","try_from","try_into","type_id","vzip","DateType","as_arrow_type","borrow","borrow_mut","build_data_type","cast_value_ref","cast_vector","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","type_name","vzip","DateTimeType","as_arrow_type","borrow","borrow_mut","build_data_type","cast_value_ref","cast_vector","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","type_name","vzip","Decimal128Type","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","new","partial_cmp","precision","precision","scale","scale","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","DictionaryType","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","key_type","key_type","logical_type_id","name","new","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","value_type","value_type","vzip","DurationMicrosecondType","DurationMillisecondType","DurationNanosecondType","DurationSecondType","DurationType","Microsecond","Millisecond","Nanosecond","Second","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_unit","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","impl_data_type_for_duration","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","DayTime","IntervalDayTimeType","IntervalMonthDayNanoType","IntervalType","IntervalYearMonthType","MonthDayNano","YearMonth","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","impl_data_type_for_interval","into","into","into","into","into_request","into_request","into_request","into_request","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","ListType","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","item_type","item_type","logical_type_id","name","new","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","NullType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","ArrowPrimitive","Float32Type","Float64Type","Int16Type","Int32Type","Int64Type","Int8Type","LargestType","LogicalPrimitiveType","LogicalType","Native","Native","NativeType","OrdPrimitive","UInt16Type","UInt32Type","UInt64Type","UInt8Type","Wrapper","WrapperType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_primitive","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default","default","default","default","default","default","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","define_logical_primitive_type","define_non_timestamp_primitive","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_native","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","impl_native_type","impl_wrapper","into","into","into","into","into","into","into","into","into","into","into","into_native","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","StringType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","get_hash","hash","into","into_request","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","MICROSECOND_VARIATION","MILLISECOND_VARIATION","Microsecond","Millisecond","NANOSECOND_VARIATION","Nanosecond","SECOND_VARIATION","Second","TimeMicrosecondType","TimeMillisecondType","TimeNanosecondType","TimeSecondType","TimeType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_unit","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","impl_data_type_for_time","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precision","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","MICROSECOND_VARIATION","MILLISECOND_VARIATION","Microsecond","Millisecond","NANOSECOND_VARIATION","Nanosecond","SECOND_VARIATION","Second","TimestampMicrosecondType","TimestampMillisecondType","TimestampNanosecondType","TimestampSecondType","TimestampType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_timestamp","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","impl_data_type_for_timestamp","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precision","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","Binary","Binary","Boolean","Boolean","Date","Date","DateTime","DateTime","Decimal128","Decimal128","DictionaryValue","Duration","Duration","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float32","Float32","Float64","Float64","Indexed","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Interval","Interval","LN_10","LN_2","LOG10_E","LOG2_E","List","List","ListValue","ListValueRef","Null","Null","OrderedF32","OrderedF64","OrderedFloat","PI","Ref","SQRT_2","String","String","Time","Time","Timestamp","Timestamp","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","Value","ValueRef","abs","abs","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acos","acos","acosh","acosh","acosh","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arg","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_binary","as_boolean","as_date","as_date","as_datetime","as_datetime","as_decimal128","as_duration","as_f32","as_f64","as_i16","as_i32","as_i64","as_i8","as_interval","as_list","as_list","as_mut","as_ref","as_scalar_ref","as_string","as_time","as_time","as_timestamp","as_timestamp","as_u16","as_u32","as_u64","as_u8","as_value_ref","asin","asin","asin","asinh","asinh","asinh","atan","atan","atan","atan2","atan2","atanh","atanh","atanh","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","ceil","ceil","ceil","classify","classify","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","conj","cos","cos","cos","cosh","cosh","cosh","data_size","data_type","datatype","datatype","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","duration_to_scalar_value","epsilon","epsilon","epsilon","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_size","exp","exp","exp","exp2","exp2","exp2","exp_m1","exp_m1","expf","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f32","from_f64","from_i16","from_i32","from_i64","from_i8","from_isize","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str_radix","from_u16","from_u32","from_u64","from_u8","from_usize","ge","get_hash","get_hash","get_hash","gt","hash","hash","hash","hypot","hypot","im","impl_as_for_value_ref","impl_ord_for_value_like","impl_try_from_value","impl_value_from","impl_value_ref_from","infinity","infinity","integer_decode","integer_decode","into","into","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","is_finite","is_finite","is_finite","is_infinite","is_infinite","is_infinite","is_nan","is_nan","is_nan","is_negative","is_normal","is_normal","is_normal","is_null","is_null","is_positive","is_sign_negative","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_sign_positive","is_zero","items","items","key_type","l1_norm","le","ln","ln","ln","ln_1p","ln_1p","log","log","log","log10","log10","log10","log2","log2","log2","logical_type_id","lt","max","max","max_value","max_value","max_value","max_value","max_value","min","min","min_positive_value","min_positive_value","min_positive_value","min_value","min_value","min_value","min_value","min_value","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","nan","nan","neg","neg","neg_infinity","neg_infinity","neg_zero","neg_zero","new","new_item_field","one","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powc","powf","powf","powf","powi","powi","powi","powi","product","product","re","recip","recip","recip","recip","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","round","round","scalar_value_to_interval","scalar_value_to_timestamp","serialize","serialize","serialize","serialize","signum","signum","signum","signum","sin","sin","sin","sin_cos","sin_cos","sinh","sinh","sinh","sqrt","sqrt","sqrt","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","tan","tan","tan","tanh","tanh","tanh","time_to_scalar_value","timestamp_to_scalar_value","to_degrees","to_degrees","to_degrees","to_f32","to_f64","to_i16","to_i32","to_i64","to_i8","to_isize","to_null_scalar_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_radians","to_radians","to_radians","to_string","to_string","to_u16","to_u32","to_u64","to_u8","to_usize","to_value","trunc","trunc","trunc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_to_scalar_value","try_to_scalar_value","type_id","type_id","type_id","type_id","type_id","type_id","upcast_gat","value_type","vzip","vzip","vzip","vzip","vzip","vzip","zero","idx","val","vector","BinaryVector","BinaryVectorBuilder","BooleanVector","BooleanVectorBuilder","ConstantVector","DateTimeVector","DateTimeVectorBuilder","DateVector","DateVectorBuilder","Decimal128Vector","Decimal128VectorBuilder","DurationMicrosecondVector","DurationMicrosecondVectorBuilder","DurationMillisecondVector","DurationMillisecondVectorBuilder","DurationNanosecondVector","DurationNanosecondVectorBuilder","DurationSecondVector","DurationSecondVectorBuilder","Float32Vector","Float32VectorBuilder","Float64Vector","Float64VectorBuilder","Helper","Int16Vector","Int16VectorBuilder","Int32Vector","Int32VectorBuilder","Int64Vector","Int64VectorBuilder","Int8Vector","Int8VectorBuilder","IntervalDayTimeVector","IntervalDayTimeVectorBuilder","IntervalMonthDayNanoVector","IntervalMonthDayNanoVectorBuilder","IntervalYearMonthVector","IntervalYearMonthVectorBuilder","ListIter","ListVector","ListVectorBuilder","MutableVector","NullVector","NullVectorBuilder","PrimitiveIter","PrimitiveVector","PrimitiveVectorBuilder","StringVector","StringVectorBuilder","TimeMicrosecondVector","TimeMicrosecondVectorBuilder","TimeMillisecondVector","TimeMillisecondVectorBuilder","TimeNanosecondVector","TimeNanosecondVectorBuilder","TimeSecondVector","TimeSecondVectorBuilder","TimestampMicrosecondVector","TimestampMicrosecondVectorBuilder","TimestampMillisecondVector","TimestampMillisecondVectorBuilder","TimestampNanosecondVector","TimestampNanosecondVectorBuilder","TimestampSecondVector","TimestampSecondVectorBuilder","UInt16Vector","UInt16VectorBuilder","UInt32Vector","UInt32VectorBuilder","UInt64Vector","UInt64VectorBuilder","UInt8Vector","UInt8VectorBuilder","Validity","Vector","VectorRef","alloc","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","array","as_any","as_any","as_mut_any","binary","boolean","constant","data_type","data_type","date","datetime","decimal","duration","eq","eq","extend_slice_of","get","get_ref","helper","idx","impl_extend_for_builder","impl_get_for_vector","impl_get_ref_for_vector","impl_try_from_arrow_array_for_vector","impl_validity_for_vector","interval","is_const","is_empty","is_empty","is_null","item_type","item_type","iter","kind","len","len","length","length","list","memory_size","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","null","null_buffer_builder","null_count","offsets_builder","only_null","operations","phantom","precision","primitive","ptr","push_null","push_value_ref","scale","slice","string","time","timestamp","to_arrow_array","to_boxed_arrow_array","to_vector","try_get","try_push_value_ref","validity","validity","values_builder","vector","vector","vector_type_name","BinaryVector","BinaryVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","get","get_data","get_ref","into","into","into_request","into_request","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","BooleanVector","BooleanVectorBuilder","array","as_any","as_any","as_arrow","as_boolean_array","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","false_count","filter","find_unique","finish","fmt","from","from","from","from","from","from_iter","get","get_data","get_ref","into","into","into_request","into_request","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","ConstantVector","as_any","borrow","borrow_mut","cast","cast_vector","clone","clone_into","data_type","filter","filter_vector","find_unique","fmt","from","from_ref","get","get_constant_ref","get_ref","inner","into","into_request","is_const","is_null","len","length","memory_size","new","null_count","only_null","replicate","replicate_vector","serialize_to_json","slice","take","take_vector","to_arrow_array","to_boxed_arrow_array","to_owned","try_from","try_into","type_id","validity","vector","vector_type_name","vzip","DateVector","DateVectorBuilder","array","mutable_array","DateTimeVector","DateTimeVectorBuilder","array","mutable_array","Decimal128Iter","Decimal128Vector","Decimal128VectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","from_slice","from_values","from_wrapper_slice","get","get_data","get_decimal128_value_from_array","get_ref","get_slice","into","into","into","into_iter","into_request","into_request","into_request","is_null","iter","iter_data","len","len","memory_size","mutable_array","new","next","null_count","null_if_overflow_precision","precision","precision","precision","push","push_null","replicate","scale","scale","scale","serialize_to_json","size_hint","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from","try_from_arrow_array","try_into","try_into","try_into","try_push_value_ref","type_id","type_id","type_id","validate_decimal_precision","validity","value_as_string","vector_type_name","vzip","vzip","vzip","with_capacity","with_precision_and_scale","with_precision_and_scale","with_precision_and_scale_to_null","DurationMicrosecondVector","DurationMicrosecondVectorBuilder","DurationMillisecondVector","DurationMillisecondVectorBuilder","DurationNanosecondVector","DurationNanosecondVectorBuilder","DurationSecondVector","DurationSecondVectorBuilder","array","array","array","array","mutable_array","mutable_array","mutable_array","mutable_array","equal","is_vector_eq","Helper","borrow","borrow_mut","check_get","check_get_mutable_vector","check_get_scalar","check_get_scalar_vector","from","into","into_request","like_utf8","like_utf8_filter","static_cast","try_from","try_from_scalar_value","try_into","try_into_vector","try_into_vectors","type_id","vzip","IntervalDayTimeVector","IntervalDayTimeVectorBuilder","IntervalMonthDayNanoVector","IntervalMonthDayNanoVectorBuilder","IntervalYearMonthVector","IntervalYearMonthVectorBuilder","array","array","array","mutable_array","mutable_array","mutable_array","ListIter","ListVector","ListVectorBuilder","NullBufferBuilder","append","append_non_null","append_null","array","as_any","as_any","as_arrow","as_mut_any","bitmap_builder","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","finish","finish_list","fmt","fmt","from","from","from","from","from","get","get_data","get_ref","idx","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","is_null","item_type","item_type","iter_data","len","len","len","len","materialize","materialize_if_needed","memory_size","new","new","next","null_buffer_builder","null_count","offsets_builder","push","push_list_value","push_null","replicate","serialize_to_json","size_hint","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from","try_from","try_from_arrow_array","try_into","try_into","try_into","try_into","try_push_value_ref","type_id","type_id","type_id","type_id","validity","values_builder","values_iter","vector","vector_type_name","vzip","vzip","vzip","vzip","with_capacity","with_type_capacity","NullVector","NullVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","default","eq","extend_slice_of","filter","find_unique","fmt","from","from","from","get","get_ref","into","into","into_request","into_request","is_null","len","len","length","memory_size","new","null_count","only_null","push_null","replicate","replicate_null","serialize_to_json","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","VectorOp","cast","cast","filter","filter","find_unique","find_unique","impl_scalar_vector_op","replicate","replicate","take","take","cast_non_constant","filter_non_constant","find_unique_constant","find_unique_null","find_unique_scalar","replicate_scalar","take_indices","Float32Vector","Float32VectorBuilder","Float64Vector","Float64VectorBuilder","Int16Vector","Int16VectorBuilder","Int32Vector","Int32VectorBuilder","Int64Vector","Int64VectorBuilder","Int8Vector","Int8VectorBuilder","PrimitiveIter","PrimitiveVector","PrimitiveVectorBuilder","UInt16Vector","UInt16VectorBuilder","UInt32Vector","UInt32VectorBuilder","UInt64Vector","UInt64VectorBuilder","UInt8Vector","UInt8VectorBuilder","array","array","array","array","array","array","array","array","array","array","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","from_iter_values","from_slice","from_values","from_vec","from_wrapper_slice","get","get_data","get_ref","get_slice","into","into","into","into_iter","into_request","into_request","into_request","is_null","iter","iter_data","len","len","memory_size","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","mutable_array","new","next","null_count","push","push_null","replicate","replicate_primitive","serialize_to_json","size_hint","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from","try_from_arrow_array","try_into","try_into","try_into","try_push_value_ref","type_id","type_id","type_id","validity","vector_type_name","vzip","vzip","vzip","with_capacity","StringVector","StringVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","from","from","from","from","get","get_data","get_ref","into","into","into_request","into_request","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","TimeMicrosecondVector","TimeMicrosecondVectorBuilder","TimeMillisecondVector","TimeMillisecondVectorBuilder","TimeNanosecondVector","TimeNanosecondVectorBuilder","TimeSecondVector","TimeSecondVectorBuilder","array","array","array","array","mutable_array","mutable_array","mutable_array","mutable_array","TimestampMicrosecondVector","TimestampMicrosecondVectorBuilder","TimestampMillisecondVector","TimestampMillisecondVectorBuilder","TimestampNanosecondVector","TimestampNanosecondVectorBuilder","TimestampSecondVector","TimestampSecondVectorBuilder","array","array","array","array","mutable_array","mutable_array","mutable_array","mutable_array","AllNull","AllValid","Slots","Validity","ValidityKind","all_null","all_valid","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","from_array_data","into","into","into_request","into_request","is_all_null","is_all_valid","is_set","kind","null_count","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bitmap","len","len","len","null_count"],"q":[[0,"datatypes"],[21,"datatypes::arrow_array"],[39,"datatypes::data_type"],[216,"datatypes::duration"],[337,"datatypes::error"],[804,"datatypes::error::Error"],[856,"datatypes::interval"],[947,"datatypes::prelude"],[963,"datatypes::scalars"],[989,"datatypes::schema"],[1096,"datatypes::schema::column_schema"],[1143,"datatypes::schema::constraint"],[1180,"datatypes::schema::raw"],[1207,"datatypes::serialize"],[1209,"datatypes::time"],[1330,"datatypes::timestamp"],[1451,"datatypes::type_id"],[1505,"datatypes::types"],[1596,"datatypes::types::binary_type"],[1631,"datatypes::types::boolean_type"],[1668,"datatypes::types::cast"],[1697,"datatypes::types::date_type"],[1735,"datatypes::types::datetime_type"],[1773,"datatypes::types::decimal_type"],[1812,"datatypes::types::dictionary_type"],[1851,"datatypes::types::duration_type"],[2051,"datatypes::types::interval_type"],[2209,"datatypes::types::list_type"],[2246,"datatypes::types::null_type"],[2281,"datatypes::types::primitive_type"],[2704,"datatypes::types::string_type"],[2739,"datatypes::types::time_type"],[2944,"datatypes::types::timestamp_type"],[3150,"datatypes::value"],[3935,"datatypes::value::ListValueRef"],[3938,"datatypes::vectors"],[4148,"datatypes::vectors::binary"],[4209,"datatypes::vectors::boolean"],[4273,"datatypes::vectors::constant"],[4318,"datatypes::vectors::date"],[4322,"datatypes::vectors::datetime"],[4326,"datatypes::vectors::decimal"],[4418,"datatypes::vectors::duration"],[4434,"datatypes::vectors::eq"],[4436,"datatypes::vectors::helper"],[4456,"datatypes::vectors::interval"],[4468,"datatypes::vectors::list"],[4573,"datatypes::vectors::null"],[4631,"datatypes::vectors::operations"],[4643,"datatypes::vectors::operations::cast"],[4644,"datatypes::vectors::operations::filter"],[4645,"datatypes::vectors::operations::find_unique"],[4648,"datatypes::vectors::operations::replicate"],[4649,"datatypes::vectors::operations::take"],[4650,"datatypes::vectors::primitive"],[4772,"datatypes::vectors::string"],[4837,"datatypes::vectors::time"],[4853,"datatypes::vectors::timestamp"],[4869,"datatypes::vectors::validity"],[4904,"datatypes::vectors::validity::ValidityKind"],[4909,"arrow_schema::datatype"],[4910,"core::option"],[4911,"core::cmp"],[4912,"alloc::boxed"],[4913,"core::result"],[4914,"serde::de"],[4915,"common_time::timestamp"],[4916,"core::fmt"],[4917,"core::fmt"],[4918,"core::marker"],[4919,"core::hash"],[4920,"tonic::request"],[4921,"alloc::string"],[4922,"alloc::vec"],[4923,"serde::ser"],[4924,"core::any"],[4925,"core::any"],[4926,"snafu::backtrace_inert"],[4927,"core::convert"],[4928,"core::clone"],[4929,"core::fmt"],[4930,"common_error::status_code"],[4931,"core::iter::traits::iterator"],[4932,"arrow_schema::schema"],[4933,"alloc::sync"],[4934,"std::collections::hash::map"],[4935,"datafusion_common::dfschema"],[4936,"arrow_schema::field"],[4937,"serde_json::value"],[4938,"num_traits"],[4939,"core::default"],[4940,"common_time::date"],[4941,"core::cmp"],[4942,"num_traits::float"],[4943,"common_time::datetime"],[4944,"common_decimal::decimal128"],[4945,"common_time::duration"],[4946,"common_time::interval"],[4947,"core::num"],[4948,"serde::de"],[4949,"core::fmt"],[4950,"num_traits::cast"],[4951,"common_base::bytes"],[4952,"num_traits::identities"],[4953,"num_traits::bounds"],[4954,"core::ops::arith"],[4955,"num_traits::identities"],[4956,"serde::ser"],[4957,"arrow_array::array"],[4958,"core::convert"],[4959,"core::iter::traits::collect"],[4960,"arrow_array::array::primitive_array"],[4961,"arrow_buffer::buffer::immutable"],[4962,"arrow_array::array::list_array"],[4963,"arrow_array::array::null_array"],[4964,"arrow_array::array::primitive_array"]],"d":["","","","","","","","Apply the macro rules to all primitive types.","","Some helper macros for datatypes, copied from databend.","","","","","","","","","","","Match the logical type and apply <code>$body</code> to all primitive …","","","","","","","","","","","","","","","","","","","","","","Data type abstraction.","","","","","","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","Convert this type as arrow::datatypes::DataType.","","Try to cast data type as a <code>DurationType</code>.","Try to cast the type as a <code>ListType</code>.","Try to cast data type as a <code>TimeType</code>.","Try to cast data type as a <code>TimestampType</code>.","","","","","Checks if the data type can cast to another data type.","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","Returns the default value of this type.","Returns the default value of this type.","","","","Creates a [Duration(DurationMicrosecondType)] datatype.","Creates a [Duration(DurationMillisecondType)] datatype.","Creates a [Duration(DurationNanosecondType)] datatype.","Creates a [Duration(DurationSecondType)] datatype.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Converts from arrow timestamp unit to","Convert arrow data type to ConcreteDataType.","","","","","","","","","","Creates a [Interval(IntervalDayTimeType)] datatype.","Creates a [Interval(IntervalMonthDayNanoType)] datatype.","Creates a [Interval(IntervalYearMonthType)] datatype.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns id of the Logical data type.","Returns id of the Logical data type.","Name of this data type.","Name of this data type.","","","","","","","","Returns the time data type with <code>TimeUnit</code>.","Creates a [Time(TimeMicrosecond)] datatype.","Creates a [Time(TimeMillisecondType)] datatype.","Creates a [Time(TimeNanosecond)] datatype.","Creates a [Time(TimeSecondType)] datatype.","","","","","","","","Casts the value to specific DataType. Return None if cast …","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ArrowCompute</code> variant","","SNAFU context selector for the <code>Error::BadArrayAccess</code> …","","SNAFU context selector for the <code>Error::CastTimeType</code> variant","","SNAFU context selector for the <code>Error::CastType</code> variant","","SNAFU context selector for the <code>Error::Conversion</code> variant","","SNAFU context selector for the <code>Error::DefaultValueType</code> …","","SNAFU context selector for the <code>Error::Deserialize</code> variant","","SNAFU context selector for the <code>Error::DuplicateColumn</code> …","","SNAFU context selector for the <code>Error::DuplicateMeta</code> variant","Contains the error value","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidTimestampIndex</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NullDefault</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::ParseSchemaVersion</code> …","","SNAFU context selector for the <code>Error::ProjectArrowSchema</code> …","","","SNAFU context selector for the <code>Error::Serialize</code> variant","","SNAFU context selector for the <code>Error::ToScalarValue</code> variant","","SNAFU context selector for the <code>Error::TryFromValue</code> variant","","SNAFU context selector for the <code>Error::UnknownVector</code> variant","","SNAFU context selector for the <code>Error::UnsupportedArrowType</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedOperation</code> …","","SNAFU context selector for the <code>Error::ValueExceedsPrecision</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder type to build this vector.","Iterator type of this vector.","","The reference item of this vector.","","Owned scalar value e.g. primitive types, bool, <code>Vec&lt;u8&gt;</code> …","","The corresponding <code>Scalar</code> type.","A sub trait of Vector to add scalar operation support.","A trait over all vector builders.","","","Get a reference of the current value.","Finish build and return a new vector.","","","","","Returns the reference to an element at given position.","","","Returns iterator of current vector.","Push a value into the builder.","Convert the reference into an owned value.","Upcast GAT type’s lifetime.","Create a new builder with initial <code>capacity</code>.","","","Schema of a column, used as an immutable struct.","","Initial version of the schema.","","Struct used to serialize and deserialize <code>Schema</code>.","A common schema, should be immutable.","","","Key used to store whether the column is time index in …","Key used to store version number of the schema in metadata.","Add key value pair to metadata.","","","","","","","","","","","","","","","","Retrieve the column’s name by index","","","","Schema of columns.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a schema from a vector of ColumnSchema.","","","","","","Returns index of the timestamp key column.","","Index of the timestamp column.","Index of the timestamp key column.","","","","","","","","","","","","","","","Try to Create a schema from a vector of ColumnSchema.","","Generate a new projected schema","","","","","","","Schema version.","Version of the schema.","","","","","","Schema of a column, used as an immutable struct.","Key used to store default constraint in arrow field’s …","","Key used to store whether the column is time index in …","","","","","","Creates a default value for this column.","Creates a vector with default value for this column.","Creates a vector for padding.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Set default constraint.","Creates a new <code>ColumnSchema</code> with given metadata.","Set the nullablity to <code>true</code> of the column.","","","","Column’s default constraint.","","","","","","","","","","Create a default value for given <code>data_type</code>.","Create a vector that contains <code>num_rows</code> default values for …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Returns true if this constraint might creates NULL.","Returns a default null constraint.","","","","","","","","Check whether the constraint is valid for columns with …","","Struct used to serialize and deserialize <code>Schema</code>.","","","","","Schema of columns.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates a new RawSchema from specific <code>column_schemas</code>.","","Index of the timestamp column.","","","","","Schema version.","","","Serialize a column of value with given type to JSON value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date representing the elapsed time since UNIX epoch …","Datetime representing the elapsed time since UNIX epoch …","","","","","","A 64-bit duration representing the elapsed time in either …","","","","","","","A 64-bit interval representing the elapsed time in days …","A 128-bit interval representing the elapsed time in …","A 32-bit interval representing the elapsed time in months.","","Unique identifier for logical data type.","","","","","","A 64-bit time representing the elapsed time since midnight …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Arrow primitive type of this logical type.","","","Data type for <code>DateTime</code>.","Data type for Date (YYYY-MM-DD).","","Decimal type with precision and scale information.","Used to represent the Dictionary datatype.","","","","","","","","","","","","","","The “calendar” interval is a type of time interval …","","Largest type this primitive type can cast to.","Used to represent the List datatype.","Trait bridging the logical primitive type with …","Logical primitive type that this wrapper type belongs to.","","","","","","","","","","","The underlying native type.","Native (physical) type of this logical type.","Data types that can be used as arrow’s native type.","","A new type for WrapperType, complement the <code>Ord</code> feature for …","","","","","","","","","","","","","","","","","","","Wrapper type that the vector returns.","Represents the wrapper type that wraps a native type using …","","","","Construct the data type struct.","","","Cast value ref to the primitive type.","Dynamic cast the vector to the concrete vector type.","","","","","","","Convert native type into this wrapper type.","","Convert this wrapper type into native type.","The type of List’s item.","The type of Dictionary key.","","","","","","","TimeType represents the elapsed time since midnight in the …","","Return the name of the type.","The type of Dictionary value.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Cast options for cast functions.","","","Return true if the src_value can be casted to dest_type, …","Used to cast the value to dest ConcreteDataType …","Cast the value to dest_type with CastOption.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","decide how to handle cast failures, either return NULL …","","","","","","Data type for Date (YYYY-MM-DD).","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Data type for <code>DateTime</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Decimal type with precision and scale information.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Used to represent the Dictionary datatype.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Returns the key data type.","The type of Dictionary key.","","","Create a new <code>DictionaryType</code> whose item’s data type is …","","","","","","","","Returns the value data type.","The type of Dictionary value.","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates time type from <code>TimeUnit</code>.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TimeUnit</code> of this type.","","","","","","","","","The “calendar” interval is a type of time interval …","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns id of the Logical data type.","","","","Name of this data type.","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","Returns the unit of the interval.","","","","","Used to represent the List datatype.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Returns the item data type.","The type of List’s item.","","","Create a new <code>ListType</code> whose item’s data type is <code>item_type</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Arrow primitive type of this logical type.","","","","","","","Largest type this primitive type can cast to.","Trait bridging the logical primitive type with …","Logical primitive type that this wrapper type belongs to.","The underlying native type.","Native (physical) type of this logical type.","Data types that can be used as arrow’s native type.","A new type for WrapperType, complement the <code>Ord</code> feature for …","","","","","Wrapper type that the vector returns.","Represents the wrapper type that wraps a native type using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct the data type struct.","","","","","","","","","","","Cast value ref to the primitive type.","","","","","","","","","","","Dynamic cast the vector to the concrete vector type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert native type into this wrapper type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this wrapper type into native type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the name of the type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates time type from <code>TimeUnit</code>.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","Returns the time type’s precision.","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the time type’s <code>TimeUnit</code>.","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","Convert fractional timestamp precision to timestamp types. …","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TimeUnit</code> of this type.","","","","","","","","","","","","","","","","Dictionary value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List value.","Reference to a ListValue.","","","","","A wrapper around floats providing implementations of <code>Eq</code>, …","","","","","","","","","","","","","","","","","","Value holds a single arbitrary value of any DataType.","Reference to Value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast itself to binary slice.","Cast itself to boolean.","Cast Value to Date. Return None if value is not a valid …","Cast itself to Date.","Cast Value to DateTime. Return None if value is not a …","Cast itself to DateTime.","Cast itself to Decimal128.","","","","","","","","Cast itself to Interval.","Cast itself to ListValue.","Cast itself to ListValueRef.","","","","Cast itself to string slice.","Cast Value to Time. Return None if value is not a valid …","Cast itself to Time.","Cast Value to timestamp. Return None if value is not a …","Cast itself to Timestamp.","","","","","Cast itself to ValueRef.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size of the underlying data in bytes, The size …","Returns data type of the value.","","Inner values datatype, to distinguish empty lists of …","","","","","","","","","","","","","","","","","","","","Cast the 64-bit duration into the arrow ScalarValue with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","use ‘the first item size’ * ‘length of items’ to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Convert a &amp;str to <code>OrderedFloat</code>. Returns an error if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the value out.","","","","","","","","","","","","","","","","","","","","Returns true if this is a null value.","Returns true if this is null.","","","","","","","","","","List of nested Values (boxed to reduce size_of(Value))","Inner values datatypes","","","","","","","","","","","","","","","","","Returns the logical type of the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert ScalarValue to Interval.","Convert ScalarValue to Timestamp. Return <code>None</code> if given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast the 64-bit elapsed time into the arrow ScalarValue by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert self to Value. This method would clone the …","","","","","","","","","","","","","","","","","","","Convert the value into <code>ScalarValue</code> according to the …","","","","","","","","","","","","","","","","","","","","Vector of binary strings.","","Vector of boolean.","","","Vector of <code>DateTime</code>","Builder for <code>DateTimeVector</code>.","","","Decimal128Vector is a vector keep i128 values with …","","","","","","","","","","","","","","Helper functions for <code>Vector</code>.","","","","","","","","","","","","","","","","Vector of Lists, basically backed by Arrow’s <code>ListArray</code>.","ListVector builder.","Mutable vector that could be used to build an immutable …","A vector where all elements are nulls.","","","Vector for primitive data types.","Builder to build a primitive vector.","Vector of strings.","","","","","","","","","","","","","","","","","","","","","","","","","","Validity of a vector.","Vector of data values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the vector as Any so that it can be downcast to a …","Convert to Any, to enable dynamic casting.","Convert to mutable Any, to enable dynamic casting.","","","","Returns the data type of the vector.","Returns the data type of the vector.","","","","","","","Extend this mutable vector by slice of <code>vector</code>.","Returns the clone of value at <code>index</code>.","Returns the reference of value at <code>index</code>.","Vector helper functions, inspired by databend Series mod","","","","","Helper to define …","","","Returns true when it’s a ConstantColumn","Returns whether the vector is empty.","Returns whether the vector is empty.","Returns whether row is null.","","The datatype of the items in the list.","","","Returns number of elements in the vector.","Returns the length of the vector.","","","","Returns the memory size of vector.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of null slots on this <code>Vector</code>.","","If the vector only contains NULL.","","","","","","","Push value ref to this mutable vector.","","Slices the <code>Vector</code>, returning a new <code>VectorRef</code>.","","","","Convert this vector to a new arrow ArrayRef.","Convert this vector to a new boxed arrow Array.","Convert <code>self</code> to an (immutable) VectorRef and reset <code>self</code>.","Returns the clone of value at <code>index</code> or error if <code>index</code> is …","Try to push value ref to this mutable vector.","","Returns the validity of the Array.","","","","","Vector of binary strings.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of boolean.","","","","","","Get the inner boolean array.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the constant value.","","","Calls <code>U::from(self)</code>.","","","","","","","Create a new ConstantVector.","","","","","","","","","","","","","","","","","","","","","","","Vector of <code>DateTime</code>","Builder for <code>DateTimeVector</code>.","","","","Decimal128Vector is a vector keep i128 values with …","","","","","Return decimal128 vector inner array","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Construct Vector from i128 values slice","Construct Vector from i128 values","Construct Vector from Wrapper(Decimal128) values slice","","","Get decimal128 Value from array by index.","","Get decimal128 value from vector by offset and length.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","New a Decimal128Vector from Arrow Decimal128Array","","","Values that exceed the precision bounds will be casted to …","Return decimal128 vector precision","","","","","","Return decimal128 vector scale","","","","","","","","","","","","","","","","","","","","","Validate decimal precision, if precision is invalid, …","","Return decimal value as string","","","","","","Change the precision and scale of the …","Returns a Decimal vector with the same data as self, with …","Returns a Decimal vector with the same data as self, with …","","","","","","","","","","","","","","","","","","","Helper functions for <code>Vector</code>.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Perform SQL like operation on <code>names</code> and a scalar <code>s</code>.","","Get a pointer to the underlying data of this vectors. Can …","","Try to cast an arrow scalar value into vector","","Try to cast an arrow array into vector","Try to cast slice of <code>arrays</code> to vectors.","","","","","","","","","","","","","","","","Vector of Lists, basically backed by Arrow’s <code>ListArray</code>.","ListVector builder.","Builder for creating the null bit buffer. This builder …","Appends a boolean value into the builder.","Appends a <code>true</code> into the builder to indicate that this item …","Appends a <code>false</code> into the builder to indicate that this …","","","","","","","","","","","","","","","","","","","","","","","","Builds the null buffer and resets the builder. Returns <code>None</code>…","Finish the current variable-length list vector slot.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The datatype of the items in the list.","","","","","Store the length of the buffer before materializing.","","","","","Creates a new empty builder. <code>capacity</code> is the number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate elements as VectorRef.","","","","","","","","Creates a new <code>ListVectorBuilder</code>. <code>item_type</code> is the data …","A vector where all elements are nulls.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a new <code>NullVector</code> with <code>n</code> elements.","","","","","","","","","","","","","","","","","","","","","","","","Vector compute operations.","","Cast vector to the provided data type and return a new …","","Filters the vector, returns elements matching the <code>filter</code> …","","Mark <code>i-th</code> bit of <code>selected</code> to <code>true</code> if the <code>i-th</code> element of …","","","Copies each element according <code>offsets</code> parameter.","","Take elements from the vector by the given indices.","","","","","","","","","","","","","","","","","","","","","Vector for primitive data types.","Builder to build a primitive vector.","","","","","","","","","","","","","","","","","","","","","","Get the inner arrow array.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Slice the vector, returning a new vector.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of strings.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All slots are null.","All slots are valid.","Whether the array slot is valid or not (null).","Validity of a vector.","","Returns <code>Validity</code> that all elements are null.","Returns <code>Validity</code> that all elements are valid.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Validity</code> from <code>ArrayData</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if all bits are null.","Returns true if all bits are valid.","Returns whether <code>i-th</code> bit is set.","","The number of null slots.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,224,227,228,197,224,227,228,227,228,197,224,197,224,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,127,229,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,229,2,2,2,2,2,229,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,229,2,229,2,2,2,2,127,127,2,2,2,2,2,2,2,2,2,2,2,2,2,2,229,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,0,56,57,58,59,56,57,58,59,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,56,57,58,59,56,56,57,57,58,58,59,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,56,57,58,59,61,0,61,0,61,0,61,0,61,0,61,0,61,0,61,0,61,0,54,0,61,0,61,0,61,0,61,0,54,61,0,61,0,0,61,0,61,0,61,0,61,0,61,0,61,0,61,0,61,0,69,61,61,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,79,61,61,73,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,65,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,67,71,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,82,76,68,72,61,70,78,88,89,75,77,80,88,67,61,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,84,70,81,82,65,67,68,69,70,84,71,72,85,86,87,73,74,75,76,77,78,79,80,88,89,61,230,231,232,233,234,235,236,237,238,239,240,241,242,243,233,244,232,233,241,242,245,230,246,234,243,247,235,236,237,240,248,249,244,250,251,231,252,238,239,245,247,246,251,238,239,249,250,252,238,242,234,246,0,0,0,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,0,94,95,96,94,95,96,94,94,94,94,95,95,95,95,96,96,96,96,94,95,96,94,94,95,95,96,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,94,95,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,217,217,217,253,0,0,254,0,0,253,255,253,255,217,217,217,217,217,0,0,217,255,254,253,255,0,0,0,0,102,0,0,0,0,0,0,0,101,256,102,102,113,106,102,101,106,102,101,101,102,102,0,102,102,0,102,102,109,102,101,0,102,105,101,105,102,102,102,102,102,106,101,102,106,102,101,102,106,102,101,106,102,101,102,105,105,102,105,101,105,106,102,101,102,102,256,256,0,102,102,106,109,102,101,102,106,102,102,102,102,102,101,101,101,106,102,101,102,0,102,106,102,101,0,102,101,109,102,101,106,102,101,0,0,0,0,0,113,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,112,0,112,112,112,112,112,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,257,0,0,0,0,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,0,116,117,118,119,116,117,118,119,116,116,116,116,117,117,117,117,118,118,118,118,119,119,119,119,116,117,118,119,116,116,117,117,118,118,119,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,116,117,118,119,0,0,0,0,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,0,120,121,122,123,120,121,122,123,120,120,120,120,121,121,121,121,122,122,122,122,123,123,123,123,120,121,122,123,120,120,121,121,122,122,123,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,120,121,122,123,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,218,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,0,0,141,5,7,8,5,7,8,33,5,7,8,141,218,0,0,0,5,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,0,33,0,0,218,0,0,218,218,0,0,0,0,0,0,141,0,141,6,32,0,0,3,0,3,0,0,0,218,32,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,0,130,130,0,0,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,5,5,5,5,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,133,134,135,136,133,134,135,136,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,5,5,5,133,133,133,133,134,134,134,134,135,135,135,135,136,136,136,136,5,133,134,135,136,5,5,5,5,5,133,134,135,136,5,133,134,135,136,5,5,133,134,135,136,5,133,134,135,136,0,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,133,134,135,136,5,5,5,5,5,133,134,135,136,5,133,134,135,136,133,134,135,136,5,5,133,134,135,136,33,0,0,0,0,33,33,33,137,138,139,33,137,138,139,33,137,138,139,137,138,139,137,138,139,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,33,33,33,137,137,137,137,138,138,138,138,139,139,139,139,33,137,138,139,33,33,33,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,0,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,137,138,139,33,33,33,33,137,138,139,33,137,138,139,137,138,139,33,33,137,138,139,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,218,0,0,0,0,0,0,218,0,141,141,218,0,0,0,0,0,0,218,0,36,35,23,28,24,40,39,29,30,31,140,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,218,36,35,23,28,24,40,39,29,30,31,218,36,35,23,28,24,40,39,29,30,31,218,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,0,0,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,140,140,140,36,36,36,36,35,35,35,35,23,23,23,23,28,28,28,28,24,24,24,24,40,40,40,40,39,39,39,39,29,29,29,29,30,30,30,30,31,31,31,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,141,140,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,0,0,140,36,35,23,28,24,40,39,29,30,31,141,140,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,218,36,35,23,28,24,40,39,29,30,31,140,36,35,23,28,24,40,39,29,30,31,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,7,7,0,7,0,7,0,0,0,0,0,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,147,148,149,150,147,148,149,150,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,7,7,7,147,147,147,147,148,148,148,148,149,149,149,149,150,150,150,150,7,147,148,149,150,7,7,7,7,7,147,148,149,150,7,147,148,149,150,7,7,147,148,149,150,7,147,148,149,150,0,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,147,148,149,150,7,7,7,7,7,147,148,149,150,7,147,148,149,150,147,148,149,150,7,7,147,148,149,150,0,0,8,8,0,8,0,8,0,0,0,0,0,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,151,152,153,154,151,152,153,154,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,8,8,8,151,151,151,151,152,152,152,152,153,153,153,153,154,154,154,154,8,151,152,153,154,8,8,8,8,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,0,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,8,151,152,153,154,8,151,152,153,154,8,151,152,153,154,8,8,151,152,153,154,8,8,8,8,8,151,152,153,154,8,151,152,153,154,151,152,153,154,8,8,151,152,153,154,17,124,17,124,17,124,17,124,17,124,0,17,124,156,156,156,156,156,156,156,156,156,156,17,124,17,124,166,17,124,17,124,17,124,17,124,17,124,156,156,156,156,17,124,0,0,17,124,0,0,0,156,166,156,17,124,17,124,17,124,17,124,17,124,17,124,17,124,0,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,124,124,17,124,17,124,124,124,124,124,124,124,124,124,124,17,124,156,156,165,124,17,124,17,124,124,124,124,124,17,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,17,165,169,124,166,156,17,165,169,124,166,156,156,156,156,156,156,156,156,156,17,165,169,124,166,156,17,165,169,124,166,156,17,165,124,166,156,17,165,124,166,156,156,156,156,156,156,156,124,17,165,165,156,165,156,156,156,17,165,169,156,156,156,156,156,156,156,156,156,156,156,0,156,156,156,156,156,17,165,169,124,166,156,156,156,156,17,17,17,17,165,165,165,165,169,169,169,169,124,124,124,124,166,166,166,166,165,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,17,17,165,169,124,166,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,165,169,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,166,156,156,156,156,156,156,156,156,17,165,169,124,166,156,156,156,156,156,156,156,156,156,17,165,156,156,17,165,156,156,156,0,0,0,0,0,156,156,156,156,156,17,165,169,124,166,156,156,17,165,169,124,166,156,156,156,156,156,156,156,156,156,156,156,156,156,17,124,156,156,156,156,156,156,156,156,165,165,169,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,17,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,165,0,156,156,17,165,124,166,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,156,17,165,169,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,156,156,156,156,156,156,156,156,156,156,0,156,17,165,169,124,166,166,156,156,156,156,17,156,156,156,156,156,166,156,156,156,156,178,181,17,17,165,169,124,166,156,17,165,169,124,166,17,165,156,17,165,169,124,166,165,169,156,17,165,169,124,166,156,258,259,258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,132,260,261,262,263,264,265,266,267,268,269,198,270,271,272,273,274,275,276,126,277,278,279,280,281,282,283,284,194,195,205,210,214,223,125,13,13,0,0,0,125,13,0,0,0,0,0,125,13,125,125,0,213,0,0,0,0,0,0,125,125,13,125,209,210,221,192,125,13,203,215,0,125,193,200,285,286,204,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,219,222,304,305,306,307,308,309,310,311,0,209,125,209,125,0,111,204,0,111,13,13,204,125,0,0,0,125,125,13,125,13,0,125,209,213,203,125,0,0,194,193,194,194,193,193,194,193,194,194,193,194,194,193,194,194,193,194,193,194,194,194,194,194,194,194,193,194,193,194,194,194,193,194,194,193,194,193,193,194,194,194,194,194,194,193,193,194,194,193,194,193,193,194,194,194,193,194,193,0,0,195,200,195,195,195,200,200,195,200,195,195,200,195,195,200,195,195,195,200,195,200,195,195,195,195,195,195,195,195,200,195,200,195,195,195,200,195,195,200,195,200,200,195,195,195,195,195,195,200,200,195,195,200,195,200,200,195,195,195,200,195,200,0,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,0,0,132,285,0,0,260,286,0,0,0,205,204,205,205,204,207,204,205,207,204,205,205,204,205,205,204,205,205,204,205,207,204,205,205,205,205,205,205,205,205,205,205,205,207,204,205,207,207,204,205,205,207,205,204,205,205,204,205,207,205,205,205,207,204,204,204,205,205,207,204,205,207,205,205,205,205,204,207,204,205,205,207,204,205,204,207,204,205,205,205,205,205,207,204,205,204,204,205,205,0,0,0,0,0,0,0,0,261,262,263,264,287,288,289,290,0,0,0,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,0,0,0,0,0,0,265,266,267,291,292,293,0,0,0,0,208,208,208,210,209,210,210,209,208,213,209,210,208,213,209,210,208,208,210,209,210,210,209,210,210,209,208,209,210,208,213,209,210,210,208,210,210,210,213,213,209,210,208,213,213,209,210,208,210,209,210,210,209,210,208,208,208,208,210,213,208,213,209,210,209,209,209,209,210,210,213,210,210,210,210,209,213,209,210,208,210,213,209,210,208,209,213,209,210,208,210,209,210,213,210,213,209,210,208,209,209,0,0,214,214,215,214,215,214,215,214,215,214,214,215,215,214,215,214,214,214,214,214,215,214,214,214,215,214,215,214,214,215,215,214,214,214,214,215,214,0,214,214,214,214,214,215,214,215,214,214,215,215,214,215,214,214,214,215,0,0,313,0,313,0,313,0,0,313,0,313,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,268,269,198,270,271,272,273,274,275,276,126,126,219,126,219,126,221,219,126,221,219,126,126,219,126,219,126,126,219,126,126,126,126,221,219,126,126,126,126,126,126,126,126,126,126,221,219,221,126,221,219,126,221,126,126,219,126,294,295,296,297,298,299,300,301,302,303,219,126,221,126,219,219,126,0,126,221,126,126,126,126,219,126,221,219,126,126,221,219,219,126,221,219,126,126,126,221,219,219,0,0,223,222,223,223,222,222,223,222,223,223,222,223,223,222,223,223,222,223,222,223,223,223,223,223,223,223,223,223,223,223,222,223,222,223,223,223,222,223,223,222,223,222,222,223,223,223,223,223,223,222,222,223,223,222,223,222,222,223,223,223,222,223,222,0,0,0,0,0,0,0,0,277,278,279,280,304,305,306,307,0,0,0,0,0,0,0,0,281,282,283,284,308,309,310,311,225,225,225,0,0,192,192,225,192,225,192,225,192,225,192,225,192,192,225,192,225,192,192,192,192,192,192,225,192,225,192,225,192,225,192,314,314,315,316,314],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[2,1],[2,[[4,[3]]]],[2,[[4,[5]]]],[2,[[4,[6]]]],[2,[[4,[7]]]],[2,[[4,[8]]]],[[],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[2,2],9],[2,2],[[-1,-2],10,[],[]],[[2,2],11],[[-1,-2],11,[],[]],[[-1,12],[[14,[13]]],[]],[[2,12],[[14,[13]]]],[[],2],[[],2],[[15,16],2],[[],2],[-1,17,[]],[2,17],[-1,[[18,[2]]],19],[[2,2],2],[20,2],[[],2],[[],2],[[],2],[[],2],[[2,2],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[],2],[[],2],[[2,21],22],[[2,21],22],[2,2],[23,2],[5,2],[24,2],[25,2],[26,2],[27,2],[28,2],[6,2],[29,2],[30,2],[31,2],[32,2],[33,2],[34,2],[-1,-1,[]],[3,2],[7,2],[35,2],[36,2],[8,2],[37,2],[38,2],[39,2],[40,2],[41,2],[42,2],[1,2],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[2,-1],10,47],0,[[],2],[[],2],[[],2],[[],2],[48,2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[2,9],[2,9],[2,9],[2,9],[2,9],[2,9],[2,9],[2,9],[2,9],[2,9],[2,2],[-1,50,[]],[2,50],[-1,51,[]],[2,51],[[],2],[[],[[52,[2]]]],[[2,2],[[4,[11]]]],0,0,[[2,-1],18,53],[[],2],[20,2],[[],2],[[],2],[[],2],[[],2],[20,2],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],[-1,51,[]],[[-1,17],[[4,[17]]],[]],[[2,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[1,[[54,[2]]]],[2,[[18,[29]]]],[2,[[18,[26]]]],[2,[[18,[6]]]],[2,[[18,[30]]]],[2,[[18,[35]]]],[2,[[18,[37]]]],[2,[[18,[40]]]],[2,[[18,[36]]]],[2,[[18,[7]]]],[2,[[18,[23]]]],[2,[[18,[5]]]],[2,[[18,[8]]]],[2,[[18,[28]]]],[2,[[18,[39]]]],[2,[[18,[3]]]],[2,[[18,[31]]]],[2,[[18,[32]]]],[2,[[18,[33]]]],[2,[[18,[25]]]],[2,[[18,[24]]]],[2,[[18,[27]]]],[2,[[18,[34]]]],[-1,[[18,[-2]]],[],[]],[2,[[18,[38]]]],[-1,55,[]],[[],2],[[],2],[[],2],[[],2],[-1,-2,[],[]],0,0,0,0,[56],[57],[58],[59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[57,57],[58,58],[59,59],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[],56],[[],57],[[],58],[[],59],0,[-1,[[18,[56]]],19],[-1,[[18,[57]]],19],[-1,[[18,[58]]],19],[-1,[[18,[59]]],19],[[56,56],9],[[57,57],9],[[58,58],9],[[59,59],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[56,21],22],[[57,21],22],[[58,21],22],[[59,21],22],[-1,-1,[]],[60,56],[60,57],[-1,-1,[]],[60,58],[-1,-1,[]],[60,59],[-1,-1,[]],[[],56],[[],57],[[],58],[[],59],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56],[57],[58],[59],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[60,56],[60,57],[60,58],[60,59],[[56,-1],18,53],[[57,-1],18,53],[[58,-1],18,53],[[59,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56],[57],[58],[59],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,62],[-1,63,[]],[61,[[4,[64]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1]]],61,[[66,[51]]]],[[[67,[-1,-2]]],61,[[66,[12]]],[[66,[12]]]],[[[68,[-1]]],61,[[66,[51]]]],[[[69,[-1]]],61,[[66,[1]]]],[[[70,[-1,-2]]],61,[[66,[51]]],[[66,[51]]]],[[[71,[-1]]],61,[[66,[12]]]],[[[72,[-1]]],61,[[66,[51]]]],[[[73,[-1]]],61,[[66,[51]]]],[74,61],[[[75,[-1]]],61,[[66,[51]]]],[[[76,[-1]]],61,[[66,[51]]]],[[[77,[-1]]],61,[[66,[51]]]],[[[78,[-1]]],61,[[66,[43]]]],[[[79,[-1]]],61,[[66,[51]]]],[[[80,[-1]]],61,[[66,[51]]]],[61,[[4,[63]]]],[81,81],[[[82,[-1]]],[[82,[-1]]],83],[[[65,[-1]]],[[65,[-1]]],83],[[[67,[-1,-2]]],[[67,[-1,-2]]],83,83],[[[68,[-1]]],[[68,[-1]]],83],[[[69,[-1]]],[[69,[-1]]],83],[[[70,[-1,-2]]],[[70,[-1,-2]]],83,83],[[[84,[-1]]],[[84,[-1]]],83],[[[71,[-1]]],[[71,[-1]]],83],[[[72,[-1]]],[[72,[-1]]],83],[85,85],[86,86],[87,87],[[[73,[-1]]],[[73,[-1]]],83],[74,74],[[[75,[-1]]],[[75,[-1]]],83],[[[76,[-1]]],[[76,[-1]]],83],[[[77,[-1]]],[[77,[-1]]],83],[[[78,[-1]]],[[78,[-1]]],83],[[[79,[-1]]],[[79,[-1]]],83],[[[80,[-1]]],[[80,[-1]]],83],[[[88,[-1,-2]]],[[88,[-1,-2]]],83,83],[[[89,[-1]]],[[89,[-1]]],83],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[[61,12,[52,[51]]],10],[61,90],0,[[[65,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[67,[-1,-2]]],[[18,[-3,61]]],[[66,[12]]],[[66,[12]]],[]],[[[68,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[69,[-1]]],[[18,[-2,61]]],[[66,[1]]],[]],[[[70,[-1,-2]]],[[18,[-3,61]]],[[66,[51]]],[[66,[51]]],[]],[[[71,[-1]]],[[18,[-2,61]]],[[66,[12]]],[]],[[[72,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[73,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[74,[[18,[-1,61]]],[]],[[[75,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[76,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[77,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[78,[-1]]],[[18,[-2,61]]],[[66,[43]]],[]],[[[79,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[[80,[-1]]],[[18,[-2,61]]],[[66,[51]]],[]],[[81,21],22],[[[82,[-1]],21],22,91],[[[65,[-1]],21],22,91],[[[67,[-1,-2]],21],22,91,91],[[[68,[-1]],21],22,91],[[[69,[-1]],21],22,91],[[[70,[-1,-2]],21],22,91,91],[[[84,[-1]],21],22,91],[[[71,[-1]],21],22,91],[[[72,[-1]],21],22,91],[[85,21],22],[[86,21],22],[[87,21],22],[[[73,[-1]],21],22,91],[[74,21],22],[[[75,[-1]],21],22,91],[[[76,[-1]],21],22,91],[[[77,[-1]],21],22,91],[[[78,[-1]],21],22,91],[[[79,[-1]],21],22,91],[[[80,[-1]],21],22,91],[[[88,[-1,-2]],21],22,91,91],[[[89,[-1]],21],22,91],[[61,21],22],[[61,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,61],[[[82,[-1]]],61,[[66,[51]]]],[[[65,[-1]]],61,[[66,[51]]]],[[[67,[-1,-2]]],61,[[66,[12]]],[[66,[12]]]],[[[68,[-1]]],61,[[66,[51]]]],[[[69,[-1]]],61,[[66,[1]]]],[[[70,[-1,-2]]],61,[[66,[51]]],[[66,[51]]]],[[[84,[-1]]],61,[[66,[51]]]],[[[71,[-1]]],61,[[66,[12]]]],[[[72,[-1]]],61,[[66,[51]]]],[85,61],[86,61],[87,61],[[[73,[-1]]],61,[[66,[51]]]],[74,61],[[[75,[-1]]],61,[[66,[51]]]],[[[76,[-1]]],61,[[66,[51]]]],[[[77,[-1]]],61,[[66,[51]]]],[[[78,[-1]]],61,[[66,[43]]]],[[[79,[-1]]],61,[[66,[51]]]],[[[80,[-1]]],61,[[66,[51]]]],[[[88,[-1,-2]]],61,[[66,[15]]],[[66,[16]]]],[[[89,[-1]]],61,[[66,[15]]]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],0,0,0,0,[61,[[4,[92]]]],0,0,0,0,0,0,0,0,0,[61,[[4,[63]]]],[61,93],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,51,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94],[95],[96],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[95,95],[96,96],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[],94],[[],95],[[],96],0,[-1,[[18,[94]]],19],[-1,[[18,[95]]],19],[-1,[[18,[96]]],19],[[94,94],9],[[95,95],9],[[96,96],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[94,21],22],[[95,21],22],[[96,21],22],[97,94],[-1,-1,[]],[60,95],[-1,-1,[]],[98,96],[-1,-1,[]],[[],94],[[],95],[[],96],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94],[95],[96],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[97,94],[60,95],[98,96],[[94,-1],18,53],[[95,-1],18,53],[[96,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94],[95],[96],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[],[]],[-1,[],[]],[-1,-2,99,[]],[-1,-2,99,[]],[100,-1,[]],[[[52,[-1]]],-2,66,[]],[[-1,12],4,[]],[-1,12,99],0,[-1,[],[]],[[-1,4],10,[]],[-1,[],[]],[[]],[12,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[101,-1,-2],101,[[66,[51]]],[[66,[51]]]],0,[102,[[104,[103]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[101,[[54,[102]]]],[102,102],[[-1,-2],10,[],[]],[[[100,[105]]],[[54,[106]]]],[[102,90],[[4,[12]]]],[[102,12],90],0,[[102,90],[[4,[105]]]],[102,[[100,[105]]]],0,0,0,0,[[102,90],9],0,[[],101],0,[[102,102],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,0,[[102,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[102,9],0,0,[102,[[107,[51,51]]]],0,0,0,0,0,0,[[[52,[105]]],102],[102,12],0,0,0,[102,[[4,[105]]]],[102,[[4,[12]]]],0,0,0,0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[[[104,[103]]],[[54,[102]]]],[-1,[[18,[-2]]],[],[]],[103,[[54,[102]]]],[108,[[54,[102]]]],[109,[[54,[102]]]],[[[52,[105]]],[[54,[101]]]],[-1,[[18,[-2]]],[],[]],[[[52,[105]]],[[54,[101]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[[52,[105]]],[[54,[102]]]],[[[107,[51,51]],90],[[54,[110]]]],[[102,[100,[12]]],[[54,[102]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[[100,[105]],12],[[54,[10]]]],[102,110],[[101,110],101],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[[-1,-2],10,[],[]],[105,[[54,[[4,[17]]]]]],[[105,12],[[54,[[4,[111]]]]]],[[105,12],111],0,[105,[[4,[112]]]],0,[-1,[[18,[105]]],19],[[105,105],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[105,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[105,9],0,[105,9],0,[105,113],0,[105,113],0,[[-1,2,9],105,[[66,[51]]]],[[105,-1],18,53],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[114,[[54,[105]]]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],[[105,[4,[112]]],[[54,[105]]]],[[105,113],105],[105,105],[[105,9],105],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[112,112],[[-1,-2],10,[],[]],[2,[[54,[17]]]],[[2,12],[[54,[111]]]],[[112,2,9],[[54,[17]]]],[[112,2,9,12],[[54,[111]]]],[-1,[[18,[112]]],19],[[112,112],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[112,21],22],[[112,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[112,9],[[],112],[[112,-1],18,53],[-1,-2,[],[]],[-1,51,[]],[[[100,[15]]],[[54,[112]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[[112,2,9],[[54,[10]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[109,109],[[-1,-2],10,[],[]],0,[-1,[[18,[109]]],19],[[109,109],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[109,21],22],[102,109],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[[[52,[105]]],109],[[109,-1],18,53],0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],0,[-1,-2,[],[]],0,[-1,[[54,[[52,[115]]]]],[]],0,0,0,0,[116],[117],[118],[119],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,116],[117,117],[118,118],[119,119],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[],116],[[],117],[[],118],[[],119],0,[-1,[[18,[116]]],19],[-1,[[18,[117]]],19],[-1,[[18,[118]]],19],[-1,[[18,[119]]],19],[[116,116],9],[[117,117],9],[[118,118],9],[[119,119],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[116,21],22],[[117,21],22],[[118,21],22],[[119,21],22],[60,116],[-1,-1,[]],[60,117],[-1,-1,[]],[-1,-1,[]],[60,118],[60,119],[-1,-1,[]],[[],116],[[],117],[[],118],[[],119],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116],[117],[118],[119],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[60,116],[60,117],[60,118],[60,119],[[116,-1],18,53],[[117,-1],18,53],[[118,-1],18,53],[[119,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116],[117],[118],[119],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[120],[121],[122],[123],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,120],[121,121],[122,122],[123,123],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[],120],[[],121],[[],122],[[],123],0,[-1,[[18,[120]]],19],[-1,[[18,[121]]],19],[-1,[[18,[122]]],19],[-1,[[18,[123]]],19],[[120,120],9],[[121,121],9],[[122,122],9],[[123,123],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[120,21],22],[[121,21],22],[[122,21],22],[[123,21],22],[60,120],[-1,-1,[]],[-1,-1,[]],[60,121],[-1,-1,[]],[60,122],[60,123],[-1,-1,[]],[[],120],[[],121],[[],122],[[],123],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120],[121],[122],[123],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[60,120],[60,121],[60,122],[60,123],[[120,-1],18,53],[[121,-1],18,53],[[122,-1],18,53],[[123,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120],[121],[122],[123],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[]],[[]],[[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[[-1,-2],10,[],[]],[[50,50],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[50,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,0,[124,[[54,[4]]]],[125,[[54,[[126,[-1]]]]],[]],0,0,0,0,0,0,[[],-1,[]],0,[-1,[],[]],0,0,0,0,0,0,0,0,0,0,[[],90],0,0,[[],127],[38,1],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[[-1,-2],10,[],[]],[[38,38],11],[[-1,-2],11,[],[]],[[38,12],[[14,[13]]]],[[],38],[38,17],[-1,[[18,[38]]],19],[[38,38],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[38,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[38,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[38,50],[38,51],[[38,38],[[4,[11]]]],[[38,-1],18,53],[-1,-2,[],[]],[[38,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,[[],127],[37,1],[9,[[4,[-1]]],128],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[-1,-2],10,[],[]],[[37,37],11],[[-1,-2],11,[],[]],[[37,12],[[14,[13]]]],[[],37],[37,17],[-1,[[18,[37]]],19],[[37,37],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[37,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[37,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[37,50],[37,51],[-1,[[4,[17]]],[128,129]],[[37,37],[[4,[11]]]],[[37,-1],18,53],[-1,-2,[],[]],[[37,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[17,2],9],[[17,2],[[54,[17]]]],[[17,2,130],[[54,[17]]]],[130,130],[[-1,-2],10,[],[]],[[],130],[[130,130],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[130,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[130,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[[17,2],61],[130,9],0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,[27,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[124,[[54,[[4,[131]]]]]],[125,[[54,[132]]]],[27,27],[[-1,-2],10,[],[]],[[27,27],11],[[-1,-2],11,[],[]],[[27,12],[[14,[13]]]],[[],27],[27,17],[-1,[[18,[27]]],19],[[27,27],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[27,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[27,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[27,50],[27,51],[[27,27],[[4,[11]]]],[[27,-1],18,53],[-1,-2,[],[]],[[27,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[[],90],[-1,-2,[],[]],0,[25,1],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[124,[[54,[4]]]],[125,[[54,[[126,[25]]]]]],[25,25],[[-1,-2],10,[],[]],[[25,25],11],[[-1,-2],11,[],[]],[[25,12],[[14,[13]]]],[[],25],[25,17],[-1,[[18,[25]]],19],[[25,25],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[25,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[25,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[25,50],[25,51],[[25,25],[[4,[11]]]],[[25,-1],18,53],[-1,-2,[],[]],[[25,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[[],90],[-1,-2,[],[]],0,[3,1],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],10,[],[]],[[3,3],11],[[-1,-2],11,[],[]],[[3,12],[[14,[13]]]],[[],3],[3,17],[-1,[[18,[3]]],19],[[3,3],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[3,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[3,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[3,50],[3,51],[[15,16],3],[[3,3],[[4,[11]]]],[3,15],0,[3,16],0,[[3,-1],18,53],[-1,-2,[],[]],[[3,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,[32,1],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[[-1,-2],10,[],[]],[[32,32],11],[[-1,-2],11,[],[]],[[32,12],[[14,[13]]]],[[],32],[32,17],[-1,[[18,[32]]],19],[[32,32],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[32,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[32,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[32,2],0,[32,50],[32,51],[[2,2],32],[[32,32],[[4,[11]]]],[[32,-1],18,53],[-1,-2,[],[]],[[32,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[32,2],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[5,1],[133,1],[134,1],[135,1],[136,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[125,[[54,[[126,[133]]]]]],[125,[[54,[[126,[134]]]]]],[125,[[54,[[126,[135]]]]]],[125,[[54,[[126,[136]]]]]],[5,5],[133,133],[134,134],[135,135],[136,136],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[5,5],11],[[133,133],11],[[134,134],11],[[135,135],11],[[136,136],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[5,12],[[14,[13]]]],[[133,12],[[14,[13]]]],[[134,12],[[14,[13]]]],[[135,12],[[14,[13]]]],[[136,12],[[14,[13]]]],[[],133],[[],134],[[],135],[[],136],[5,17],[133,17],[134,17],[135,17],[136,17],[-1,[[18,[5]]],19],[-1,[[18,[133]]],19],[-1,[[18,[134]]],19],[-1,[[18,[135]]],19],[-1,[[18,[136]]],19],[[5,5],9],[[133,133],9],[[134,134],9],[[135,135],9],[[136,136],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[5,21],22],[[133,21],22],[[134,21],22],[[135,21],22],[[136,21],22],[133,5],[135,5],[136,5],[134,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,5],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[5,-1],10,47],[[133,-1],10,47],[[134,-1],10,47],[[135,-1],10,47],[[136,-1],10,47],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[5,50],[133,50],[134,50],[135,50],[136,50],[5,51],[133,51],[134,51],[135,51],[136,51],[[5,5],[[4,[11]]]],[[133,133],[[4,[11]]]],[[134,134],[[4,[11]]]],[[135,135],[[4,[11]]]],[[136,136],[[4,[11]]]],[[5,-1],18,53],[[133,-1],18,53],[[134,-1],18,53],[[135,-1],18,53],[[136,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,17],[[4,[17]]]],[[133,17],[[4,[17]]]],[[134,17],[[4,[17]]]],[[135,17],[[4,[17]]]],[[136,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[5,[[18,[134]]]],[5,[[18,[135]]]],[5,[[18,[136]]]],[5,[[18,[133]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[],90],[[],90],[[],90],[[],90],[5,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[33,1],[137,1],[138,1],[139,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[125,[[54,[[126,[137]]]]]],[125,[[54,[[126,[138]]]]]],[125,[[54,[[126,[139]]]]]],[33,33],[137,137],[138,138],[139,139],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[33,33],11],[[137,137],11],[[138,138],11],[[139,139],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[33,12],[[14,[13]]]],[[137,12],[[14,[13]]]],[[138,12],[[14,[13]]]],[[139,12],[[14,[13]]]],[[],137],[[],138],[[],139],[33,17],[137,17],[138,17],[139,17],[-1,[[18,[33]]],19],[-1,[[18,[137]]],19],[-1,[[18,[138]]],19],[-1,[[18,[139]]],19],[[33,33],9],[[137,137],9],[[138,138],9],[[139,139],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[33,21],22],[[137,21],22],[[138,21],22],[[139,21],22],[137,33],[-1,-1,[]],[138,33],[139,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[33,-1],10,47],[[137,-1],10,47],[[138,-1],10,47],[[139,-1],10,47],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[33,50],[137,50],[138,50],[139,50],[33,51],[137,51],[138,51],[139,51],[[33,33],[[4,[11]]]],[[137,137],[[4,[11]]]],[[138,138],[[4,[11]]]],[[139,139],[[4,[11]]]],[[33,-1],18,53],[[137,-1],18,53],[[138,-1],18,53],[[139,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,17],[[4,[17]]]],[[137,17],[[4,[17]]]],[[138,17],[[4,[17]]]],[[139,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[33,[[18,[138]]]],[33,[[18,[139]]]],[33,[[18,[137]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[],90],[[],90],[[],90],[33,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,1],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],10,[],[]],[[6,6],11],[[-1,-2],11,[],[]],[[6,12],[[14,[13]]]],[[],6],[6,17],[-1,[[18,[6]]],19],[[6,6],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[6,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[6,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[6,2],0,[6,50],[6,51],[2,6],[[6,6],[[4,[11]]]],[[6,-1],18,53],[-1,-2,[],[]],[[6,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,[[],127],[34,1],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[-1,-2],10,[],[]],[[34,34],11],[[-1,-2],11,[],[]],[[34,12],[[14,[13]]]],[[],34],[34,17],[-1,[[18,[34]]],19],[[34,34],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[34,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[34,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[34,50],[34,51],[[34,34],[[4,[11]]]],[[34,-1],18,53],[-1,-2,[],[]],[[34,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,1],[35,1],[23,1],[28,1],[24,1],[40,1],[39,1],[29,1],[30,1],[31,1],[[[140,[-1]]],[],141],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[124,[[54,[4]]]],[124,[[54,[[4,[15]]]]]],[124,[[54,[[4,[142]]]]]],[124,[[54,[[4,[110]]]]]],[124,[[54,[[4,[43]]]]]],[124,[[54,[[4,[16]]]]]],[124,[[54,[[4,[143]]]]]],[124,[[54,[[4,[144]]]]]],[124,[[54,[[4,[145]]]]]],[124,[[54,[[4,[60]]]]]],[124,[[54,[[4,[97]]]]]],[125,[[54,[[126,[-1]]]]],[]],[125,[[54,[[126,[36]]]]]],[125,[[54,[[126,[35]]]]]],[125,[[54,[[126,[23]]]]]],[125,[[54,[[126,[28]]]]]],[125,[[54,[[126,[24]]]]]],[125,[[54,[[126,[40]]]]]],[125,[[54,[[126,[39]]]]]],[125,[[54,[[126,[29]]]]]],[125,[[54,[[126,[30]]]]]],[125,[[54,[[126,[31]]]]]],[[[140,[-1]]],[[140,[-1]]],[83,141]],[36,36],[35,35],[23,23],[28,28],[24,24],[40,40],[39,39],[29,29],[30,30],[31,31],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[140,[-1]],[140,[-1]]],11,141],[[36,36],11],[[35,35],11],[[23,23],11],[[28,28],11],[[24,24],11],[[40,40],11],[[39,39],11],[[29,29],11],[[30,30],11],[[31,31],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[36,12],[[14,[13]]]],[[35,12],[[14,[13]]]],[[23,12],[[14,[13]]]],[[28,12],[[14,[13]]]],[[24,12],[[14,[13]]]],[[40,12],[[14,[13]]]],[[39,12],[[14,[13]]]],[[29,12],[[14,[13]]]],[[30,12],[[14,[13]]]],[[31,12],[[14,[13]]]],[[],36],[[],35],[[],23],[[],28],[[],24],[[],40],[[],39],[[],29],[[],30],[[],31],[36,17],[35,17],[23,17],[28,17],[24,17],[40,17],[39,17],[29,17],[30,17],[31,17],0,0,[-1,[[18,[36]]],19],[-1,[[18,[35]]],19],[-1,[[18,[23]]],19],[-1,[[18,[28]]],19],[-1,[[18,[24]]],19],[-1,[[18,[40]]],19],[-1,[[18,[39]]],19],[-1,[[18,[29]]],19],[-1,[[18,[30]]],19],[-1,[[18,[31]]],19],[[[140,[-1]],[140,[-1]]],9,[146,141]],[[36,36],9],[[35,35],9],[[23,23],9],[[28,28],9],[[24,24],9],[[40,40],9],[[39,39],9],[[29,29],9],[[30,30],9],[[31,31],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[[140,[-1]],21],22,[91,141]],[[36,21],22],[[35,21],22],[[23,21],22],[[28,21],22],[[24,21],22],[[40,21],22],[[39,21],22],[[29,21],22],[[30,21],22],[[31,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[36,-1],10,47],[[35,-1],10,47],[[23,-1],10,47],[[28,-1],10,47],[[24,-1],10,47],[[40,-1],10,47],[[39,-1],10,47],[[29,-1],10,47],[[30,-1],10,47],[[31,-1],10,47],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[36,50],[35,50],[23,50],[28,50],[24,50],[40,50],[39,50],[29,50],[30,50],[31,50],[36,51],[35,51],[23,51],[28,51],[24,51],[40,51],[39,51],[29,51],[30,51],[31,51],[[[140,[-1]],[140,[-1]]],[[4,[11]]],141],[[36,36],[[4,[11]]]],[[35,35],[[4,[11]]]],[[23,23],[[4,[11]]]],[[28,28],[[4,[11]]]],[[24,24],[[4,[11]]]],[[40,40],[[4,[11]]]],[[39,39],[[4,[11]]]],[[29,29],[[4,[11]]]],[[30,30],[[4,[11]]]],[[31,31],[[4,[11]]]],[[36,-1],18,53],[[35,-1],18,53],[[23,-1],18,53],[[28,-1],18,53],[[24,-1],18,53],[[40,-1],18,53],[[39,-1],18,53],[[29,-1],18,53],[[30,-1],18,53],[[31,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,17],[[4,[17]]]],[[35,17],[[4,[17]]]],[[23,17],[[4,[17]]]],[[28,17],[[4,[17]]]],[[24,17],[[4,[17]]]],[[40,17],[[4,[17]]]],[[39,17],[[4,[17]]]],[[29,17],[[4,[17]]]],[[30,17],[[4,[17]]]],[[31,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[[],90],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],127],[26,1],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[-1,-2],10,[],[]],[[26,26],11],[[-1,-2],11,[],[]],[[26,12],[[14,[13]]]],[[],26],[26,17],[-1,[[18,[26]]],19],[[26,26],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[26,21],22],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[26,-1],10,47],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[26,50],[26,51],[[26,26],[[4,[11]]]],[[26,-1],18,53],[-1,-2,[],[]],[[26,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[7,1],[147,1],[148,1],[149,1],[150,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[125,[[54,[[126,[147]]]]]],[125,[[54,[[126,[148]]]]]],[125,[[54,[[126,[149]]]]]],[125,[[54,[[126,[150]]]]]],[7,7],[147,147],[148,148],[149,149],[150,150],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[7,7],11],[[147,147],11],[[148,148],11],[[149,149],11],[[150,150],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[7,12],[[14,[13]]]],[[147,12],[[14,[13]]]],[[148,12],[[14,[13]]]],[[149,12],[[14,[13]]]],[[150,12],[[14,[13]]]],[[],147],[[],148],[[],149],[[],150],[7,17],[147,17],[148,17],[149,17],[150,17],[-1,[[18,[7]]],19],[-1,[[18,[147]]],19],[-1,[[18,[148]]],19],[-1,[[18,[149]]],19],[-1,[[18,[150]]],19],[[7,7],9],[[147,147],9],[[148,148],9],[[149,149],9],[[150,150],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[7,21],22],[[147,21],22],[[148,21],22],[[149,21],22],[[150,21],22],[148,7],[150,7],[149,7],[-1,-1,[]],[147,7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,7],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[7,-1],10,47],[[147,-1],10,47],[[148,-1],10,47],[[149,-1],10,47],[[150,-1],10,47],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[7,50],[147,50],[148,50],[149,50],[150,50],[7,51],[147,51],[148,51],[149,51],[150,51],[[7,7],[[4,[11]]]],[[147,147],[[4,[11]]]],[[148,148],[[4,[11]]]],[[149,149],[[4,[11]]]],[[150,150],[[4,[11]]]],[7,43],[[7,-1],18,53],[[147,-1],18,53],[[148,-1],18,53],[[149,-1],18,53],[[150,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,17],[[4,[17]]]],[[147,17],[[4,[17]]]],[[148,17],[[4,[17]]]],[[149,17],[[4,[17]]]],[[150,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[7,[[18,[149]]]],[7,[[18,[147]]]],[7,[[18,[148]]]],[7,[[18,[150]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[],90],[[],90],[[],90],[[],90],[7,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[8,1],[151,1],[152,1],[153,1],[154,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[[],2],[[],2],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[124,[[54,[4]]]],[125,[[54,[[126,[151]]]]]],[125,[[54,[[126,[152]]]]]],[125,[[54,[[126,[153]]]]]],[125,[[54,[[126,[154]]]]]],[8,8],[151,151],[152,152],[153,153],[154,154],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[8,8],11],[[151,151],11],[[152,152],11],[[153,153],11],[[154,154],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[8,12],[[14,[13]]]],[[151,12],[[14,[13]]]],[[152,12],[[14,[13]]]],[[153,12],[[14,[13]]]],[[154,12],[[14,[13]]]],[[8,60],155],[[],151],[[],152],[[],153],[[],154],[8,17],[151,17],[152,17],[153,17],[154,17],[-1,[[18,[8]]],19],[-1,[[18,[151]]],19],[-1,[[18,[152]]],19],[-1,[[18,[153]]],19],[-1,[[18,[154]]],19],[[8,8],9],[[151,151],9],[[152,152],9],[[153,153],9],[[154,154],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[8,21],22],[[151,21],22],[[152,21],22],[[153,21],22],[[154,21],22],[153,8],[-1,-1,[]],[154,8],[151,8],[152,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[8,-1],10,47],[[151,-1],10,47],[[152,-1],10,47],[[153,-1],10,47],[[154,-1],10,47],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[8,50],[151,50],[152,50],[153,50],[154,50],[8,51],[151,51],[152,51],[153,51],[154,51],[[8,8],[[4,[11]]]],[[151,151],[[4,[11]]]],[[152,152],[[4,[11]]]],[[153,153],[[4,[11]]]],[[154,154],[[4,[11]]]],[8,43],[[8,-1],18,53],[[151,-1],18,53],[[152,-1],18,53],[[153,-1],18,53],[[154,-1],18,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,17],[[4,[17]]]],[[151,17],[[4,[17]]]],[[152,17],[[4,[17]]]],[[153,17],[[4,[17]]]],[[154,17],[[4,[17]]]],[-1,[[18,[-2]]],[],[]],[43,[[18,[8]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[8,[[18,[154]]]],[8,[[18,[153]]]],[8,[[18,[152]]]],[-1,[[18,[-2]]],[],[]],[8,[[18,[151]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[],90],[[],90],[[],90],[[],90],[8,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],[[],[[156,[-1]]],157],0,0,0,0,0,0,0,0,0,[[],[[156,[-1]]],157],0,[[],[[156,[-1]]],157],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],[158,159]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],[158,159]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],-1],10,[]],[-1,[],[]],[[[156,[145]]],12],[[[156,[145]]],142],[[[156,[144]]],143],[[[156,[145]]],16],[[[156,[144]]],110],[[[156,[144]]],160],[[[156,[144]]],[[156,[144]]]],[[[156,[144]]],[[156,[145]]]],[[[156,[144]]],142],[[[156,[145]]],144],[[[156,[144]]],144],[[[156,[145]]],43],[[[156,[144]]],16],[[[156,[145]]],110],[[[156,[145]]],145],[[[156,[144]]],15],[[[156,[145]]],15],[[[156,[145]]],[[156,[145]]]],[[[156,[144]]],145],[[[156,[145]]],143],[[[156,[145]]],97],[[[156,[145]]],[[156,[144]]]],[[[156,[144]]],60],[[[156,[144]]],97],[[[156,[145]]],160],[[[156,[145]]],60],[[[156,[144]]],43],[[[156,[144]]],12],[124,[[54,[[4,[[100,[15]]]]]]]],[124,[[54,[[4,[9]]]]]],[17,[[4,[131]]]],[124,[[54,[[4,[131]]]]]],[17,[[4,[161]]]],[124,[[54,[[4,[161]]]]]],[124,[[54,[[4,[162]]]]]],[124,[[54,[[4,[163]]]]]],[124,[[54,[[4,[144]]]]]],[124,[[54,[[4,[145]]]]]],[124,[[54,[[4,[143]]]]]],[124,[[54,[[4,[97]]]]]],[124,[[54,[[4,[60]]]]]],[124,[[54,[[4,[16]]]]]],[124,[[54,[[4,[164]]]]]],[17,[[54,[[4,[165]]]]]],[124,[[54,[[4,[166]]]]]],[[[156,[-1]]],-1,158],[[[156,[-1]]],-1,158],[165],[124,[[54,[[4,[90]]]]]],[17,[[4,[167]]]],[124,[[54,[[4,[167]]]]]],[17,[[4,[155]]]],[124,[[54,[[4,[155]]]]]],[124,[[54,[[4,[142]]]]]],[124,[[54,[[4,[110]]]]]],[124,[[54,[[4,[43]]]]]],[124,[[54,[[4,[15]]]]]],[17,124],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],168,158],[[[156,[-1]]],168,158],[[[156,[-1]]],[[156,[-1]]],83],[17,17],[165,165],[169,169],[124,124],[166,166],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[156,[-1]],[156,[-1]]],11,158],[[17,17],11],[[165,165],11],[[124,124],11],[[166,166],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[124,12],[17,2],[165,2],0,[[],[[156,[-1]]],129],[[],165],[[[156,[-1]]],[],158],[[[156,[-1]]],[],158],[-1,[[18,[[156,[-2]]]]],19,[158,170]],[-1,[[18,[17]]],19],[-1,[[18,[165]]],19],[-1,[[18,[169]]],19],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],-1],10,[]],[[20,[4,[60]]],171],[[],-1,[]],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[[156,[-1]],-1],9,158],[[[156,[-1]],[156,[-1]]],9,158],[[17,17],9],[[165,165],9],[[169,169],9],[[124,124],9],[[166,166],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[165,12],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]],21],[[18,[10,172]]],[158,173]],[[[156,[-1]],21],[[18,[10,172]]],[158,174]],[[[156,[-1]],21],[[18,[10,172]]],[158,175]],[[[156,[-1]],21],[[18,[10,172]]],91],[[17,21],22],[[17,21],22],[[165,21],22],[[169,21],22],[[124,21],22],[[166,21],22],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[143,[[156,[144]]]],[15,[[156,[145]]]],[9,[[156,[144]]]],[-1,[[156,[-1]]],158],[142,[[156,[144]]]],[16,[[156,[144]]]],[9,[[156,[145]]]],[15,[[156,[144]]]],[97,[[156,[145]]]],[142,[[156,[145]]]],[-1,-1,[]],[-1,[[156,[-1]]],158],[-1,[[4,[[156,[-2]]]]],176,177],[110,[[156,[145]]]],[16,[[156,[145]]]],[143,[[156,[145]]]],[-1,[[156,[-1]]],158],[9,17],[[[4,[163]]],17],[[[100,[15]]],17],[[[4,[15]]],17],[162,17],[143,17],[178,17],[117,17],[124,17],[122,17],[51,17],[90,17],[95,17],[96,17],[[[4,[167]]],17],[144,17],[[[4,[145]]],17],[164,17],[167,17],[120,17],[[[4,[144]]],17],[[[4,[161]]],17],[59,17],[[[4,[179]]],17],[180,17],[[[4,[178]]],17],[163,17],[145,17],[[[4,[9]]],17],[57,17],[94,17],[[[4,[51]]],17],[118,17],[[[4,[164]]],17],[[[4,[60]]],17],[15,17],[[[4,[43]]],17],[110,17],[[[4,[16]]],17],[[[4,[180]]],17],[131,17],[-1,-1,[]],[[[4,[97]]],17],[[[4,[162]]],17],[16,17],[56,17],[43,17],[58,17],[119,17],[60,17],[123,17],[116,17],[161,17],[[[4,[142]]],17],[181,17],[142,17],[[[4,[110]]],17],[[[4,[131]]],17],[[[52,[15]]],17],[179,17],[[[4,[143]]],17],[[[4,[155]]],17],[155,17],[[[4,[181]]],17],[97,17],[121,17],[[[140,[-1]]],17,141],[-1,-1,[]],[-1,-1,[]],[57,124],[97,124],[116,124],[16,124],[95,124],[162,124],[[[4,[142]]],124],[60,124],[123,124],[[[4,[144]]],124],[[[4,[9]]],124],[[[4,[110]]],124],[[[4,[161]]],124],[117,124],[9,124],[145,124],[[[4,[166]]],124],[[[4,[43]]],124],[[[4,[60]]],124],[[[4,[16]]],124],[155,124],[90,124],[[[4,[15]]],124],[[[4,[163]]],124],[167,124],[163,124],[131,124],[[[4,[145]]],124],[[[4,[131]]],124],[[[4,[155]]],124],[110,124],[96,124],[164,124],[94,124],[43,124],[142,124],[[[4,[143]]],124],[58,124],[[[4,[167]]],124],[59,124],[161,124],[[[4,[97]]],124],[[[100,[15]]],124],[118,124],[-1,-1,[]],[143,124],[[[4,[162]]],124],[122,124],[120,124],[[[4,[164]]],124],[119,124],[56,124],[121,124],[144,124],[15,124],[-1,-1,[]],[144,[[4,[[156,[-1]]]]],182],[145,[[4,[[156,[-1]]]]],182],[143,[[4,[[156,[-1]]]]],182],[97,[[4,[[156,[-1]]]]],182],[60,[[4,[[156,[-1]]]]],182],[16,[[4,[[156,[-1]]]]],182],[160,[[4,[[156,[-1]]]]],182],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[90,[[18,[[156,[-1]]]]],183],[[90,110],[[18,[[156,[-1]]]]],[158,128]],[142,[[4,[[156,[-1]]]]],182],[110,[[4,[[156,[-1]]]]],182],[43,[[4,[[156,[-1]]]]],182],[15,[[4,[[156,[-1]]]]],182],[12,[[4,[[156,[-1]]]]],182],[[[156,[-1]],[156,[-1]]],9,158],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[-1,-2],43,[44,45],46],[[[156,[-1]],[156,[-1]]],9,158],[[[156,[-1]],-2],10,158,47],[[17,-1],10,47],[[165,-1],10,47],[[-1,-2],-2,[],[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[-1,[],[]],0,0,0,0,0,[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[[156,[-1]]],[[10,[43,143,16]]],158],[[[156,[-1]]],[[10,[43,143,16]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],-1,158],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[[156,[-1]]],9,158],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[[[156,[-1]]],9,[158,159]],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[17,9],[124,9],[[[156,[-1]]],9,[158,159]],[[[156,[-1]]],9,158],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[-1,9,[]],[[[156,[-1]]],9,158],[[[156,[-1]]],9,184],[165,[[4,[[14,[[52,[17]]]]]]]],0,0,[-1,[],[]],[[[156,[-1]],[156,[-1]]],9,158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[-1,-2],-2,[],[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[17,50],[[[156,[-1]],[156,[-1]]],9,158],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[[],[[156,[-1]]],185],[[],-1,[]],[[],[[156,[-1]]],158],[[],-1,[]],[[],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[],-1,[]],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[],[[156,[-1]]],185],[[],-1,[]],[[],-1,[]],[[],[[156,[-1]]],158],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[-1,-2,-2],-2,[],[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[[156,[-1]]],[],[]],[[[156,[-1]]],[],186],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[],[[156,[-1]]],158],[[[4,[[14,[[52,[17]]]]]],2],165],[1,114],[[],[[156,[-1]]],187],[[[156,[-1]],[156,[-1]]],[[4,[11]]],158],[[17,17],[[4,[11]]]],[[165,165],[[4,[11]]]],[[124,124],[[4,[11]]]],[[166,166],[[4,[11]]]],[[[156,[145]],143],[[156,[145]]]],[[[156,[145]],144],[[156,[145]]]],[[[156,[144]],15],[[156,[144]]]],[[[156,[145]],143],[[156,[145]]]],[[[156,[144]],144],[[156,[144]]]],[[[156,[145]],144],[[156,[145]]]],[[[156,[145]],145],[[156,[145]]]],[[[156,[144]],143],[[156,[144]]]],[[[156,[145]],97],[[156,[145]]]],[[[156,[145]],[156,[144]]],[[156,[145]]]],[[[156,[144]],143],[[156,[144]]]],[[[156,[144]],15],[[156,[144]]]],[[[156,[145]],97],[[156,[145]]]],[[[156,[145]],142],[[156,[145]]]],[[[156,[145]],16],[[156,[145]]]],[[[156,[144]],142],[[156,[144]]]],[[[156,[145]],142],[[156,[145]]]],[[[156,[145]],15],[[156,[145]]]],[[[156,[145]],[156,[144]]],[[156,[145]]]],[[[156,[144]],144],[[156,[144]]]],[[[156,[144]],143],[[156,[144]]]],[[[156,[145]],[156,[145]]],[[156,[145]]]],[[[156,[145]],15],[[156,[145]]]],[[[156,[144]],16],[[156,[144]]]],[[[156,[145]],[156,[145]]],[[156,[145]]]],[[[156,[144]],97],[[156,[144]]]],[[[156,[144]],[156,[144]]],[[156,[144]]]],[[[156,[145]],16],[[156,[145]]]],[[[156,[144]],144],[[156,[144]]]],[[[156,[145]],16],[[156,[145]]]],[[[156,[145]],145],[[156,[145]]]],[[[156,[144]],15],[[156,[144]]]],[[[156,[145]],[156,[145]]],[[156,[145]]]],[[[156,[145]],[156,[145]]],[[156,[145]]]],[[[156,[145]],[156,[144]]],[[156,[145]]]],[[[156,[144]],144],[[156,[144]]]],[[[156,[144]],[156,[144]]],[[156,[144]]]],[[[156,[145]],97],[[156,[145]]]],[[[156,[144]],142],[[156,[144]]]],[[[156,[145]],142],[[156,[145]]]],[[[156,[145]],145],[[156,[145]]]],[[[156,[144]],[156,[144]]],[[156,[144]]]],[[[156,[145]],143],[[156,[145]]]],[[[156,[144]],16],[[156,[144]]]],[[[156,[145]],144],[[156,[145]]]],[[[156,[144]],97],[[156,[144]]]],[[[156,[145]],15],[[156,[145]]]],[[[156,[145]],143],[[156,[145]]]],[[[156,[145]],15],[[156,[145]]]],[[[156,[144]],97],[[156,[144]]]],[[[156,[145]],97],[[156,[145]]]],[[[156,[144]],143],[[156,[144]]]],[[[156,[144]],15],[[156,[144]]]],[[[156,[145]],[156,[144]]],[[156,[145]]]],[[[156,[145]],144],[[156,[145]]]],[[[156,[144]],142],[[156,[144]]]],[[[156,[145]],16],[[156,[145]]]],[[[156,[145]],142],[[156,[145]]]],[[[156,[144]],16],[[156,[144]]]],[[[156,[144]],[156,[144]]],[[156,[144]]]],[[[156,[144]],142],[[156,[144]]]],[[[156,[144]],97],[[156,[144]]]],[[[156,[144]],16],[[156,[144]]]],[[[156,[145]],145],[[156,[145]]]],[[-1,188],188,[]],[[[156,[-1]],[156,[-1]]],[[156,[-1]]],158],[[-1,-2],-2,[],[]],[[-1,-2],-2,[],[]],[[[156,[-1]],97],[[156,[-1]]],158],[[-1,97],-2,[],[]],[[[156,[-1]],97],[[156,[-1]]],158],[[-1,97],-2,[],[]],[-1,[[156,[-2]]],99,[]],[-1,[[156,[-2]]],99,[]],[-1,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[171,[[4,[164]]]],[171,[[4,[155]]]],[[[156,[-1]],-2],18,[158,189],53],[[17,-1],18,53],[[165,-1],18,53],[[169,-1],18,53],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],[158,159]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[10,[[156,[-1]],[156,[-1]]]]],158],[-1,[[10,[-2,-2]]],[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],[156,[-1]]],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],-1],[],[]],[[[156,[-1]],[156,[-1]]],10,[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],-1],10,[]],[[[156,[-1]],[156,[-1]]],10,[]],[-1,[[156,[-2]]],99,[]],[-1,[[156,[-2]]],99,[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[20,[4,[60]]],[[54,[171]]]],[[20,[4,[60]]],171],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[4,[144]]],176],[[[156,[-1]]],[[4,[145]]],176],[[[156,[-1]]],[[4,[143]]],176],[[[156,[-1]]],[[4,[97]]],176],[[[156,[-1]]],[[4,[60]]],176],[[[156,[-1]]],[[4,[16]]],176],[[[156,[-1]]],[[4,[160]]],176],[2,[[54,[171]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[166],[[[156,[-1]]],[[156,[-1]]],158],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[-1,51,[]],[-1,51,[]],[[[156,[-1]]],[[4,[142]]],176],[[[156,[-1]]],[[4,[110]]],176],[[[156,[-1]]],[[4,[43]]],176],[[[156,[-1]]],[[4,[15]]],176],[[[156,[-1]]],[[4,[12]]],176],[166,17],[-1,-2,[],[]],[[[156,[-1]]],[[156,[-1]]],158],[[[156,[-1]]],[[156,[-1]]],158],[-1,[[18,[-2]]],[],[]],[17,[[18,[178]]]],[17,[[18,[181]]]],[171,[[54,[17]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[17,2],[[54,[171]]]],[[165,6],[[54,[171]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[156,[-1]]],184],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,0,[-1,2,[]],[-1,2,[]],0,0,0,0,0,[[125,125],9],[[-1,125,12,12],[[54,[10]]],[]],[[-1,12],17,[]],[[-1,12],124,[]],0,0,0,0,0,0,0,0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[[-1,12],9,[]],0,0,0,0,[-1,12,[]],[-1,12,[]],0,0,0,[-1,12,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,12,[]],0,[-1,9,[]],0,0,0,0,0,[-1,10,[]],[[-1,124],10,[]],0,[[-1,12,12],111,[]],0,0,0,[-1,190,[]],[-1,[[14,[191]]],[]],[-1,111,[]],[[-1,12],[[54,[17]]],[]],[[-1,124],[[54,[10]]],[]],0,[-1,192,[]],0,0,0,[-1,51,[]],0,0,0,[193,62],[194,62],[194,191],[193,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[194,2],[[54,[111]]]],[193,2],[194,2],[[194,194],9],[[193,125,12,12],[[54,[10]]]],[[194,195],[[54,[111]]]],[[194,196,[4,[125]]],10],[193],[[194,21],22],[-1,-1,[]],[-1,-1,[]],[197,194],[[[52,[[52,[15]]]]],194],[[[52,[[4,[[52,[15]]]]]]],194],[[194,12],17],[[194,12],4],[[194,12],124],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[194,12],9],[194],[193,12],[194,12],[194,12],0,[194,12],[[193,4],10],[193,10],[[194,[100,[12]]],111],[194,[[54,[[52,[115]]]]]],[[194,12,12],111],[[194,198],[[54,[111]]]],[194,190],[194,[[14,[191]]]],[193,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[194]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[193,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[194,192],[194,51],[-1,-2,[],[]],[-1,-2,[],[]],[12,193],0,0,0,[200,62],[195,62],[195,191],[195,201],[200,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[195,2],[[54,[111]]]],[200,2],[195,2],[[195,195],9],[[200,125,12,12],[[54,[10]]]],[195,12],[[195,195],[[54,[111]]]],[[195,196,[4,[125]]],10],[200],[[195,21],22],[-1,-1,[]],[-1,-1,[]],[[[52,[[4,[9]]]]],195],[[[52,[9]]],195],[201,195],[-1,195,202],[[195,12],17],[[195,12],4],[[195,12],124],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[195,12],9],[195],[200,12],[195,12],[195,12],0,[195,12],[[200,4],10],[200,10],[[195,[100,[12]]],111],[195,[[54,[[52,[115]]]]]],[[195,12,12],111],[[195,198],[[54,[111]]]],[195,190],[195,[[14,[191]]]],[200,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[195]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[200,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[195,192],[195,51],[-1,-2,[],[]],[-1,-2,[],[]],[12,200],0,[203,62],[-1,-2,[],[]],[-1,-2,[],[]],[[203,2],[[54,[111]]]],[[203,2],[[54,[111]]]],[203,203],[[-1,-2],10,[],[]],[203,2],[[203,195],[[54,[111]]]],[[203,195],[[54,[111]]]],[[203,196,[4,[125]]],10],[[203,21],22],[-1,-1,[]],[-1,-1,[]],[[203,12],17],[203,124],[[203,12],124],[203,111],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[203,9],[[203,12],9],[203,12],0,[203,12],[[111,12],203],[203,12],[203,9],[[203,[100,[12]]],111],[[203,[100,[12]]],111],[203,[[54,[[52,[115]]]]]],[[203,12,12],111],[[203,198],[[54,[111]]]],[[203,198],[[54,[111]]]],[203,190],[203,[[14,[191]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[203,192],0,[203,51],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[204,62],[205,62],[205,191],[204,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[205,2],[[54,[111]]]],[204,2],[205,2],[[205,205],9],[[204,125,12,12],[[54,[10]]]],[[205,195],[[54,[111]]]],[[205,196,[4,[125]]],10],[204],[[205,21],22],[-1,-1,[]],[-1,-1,[]],[206,205],[-1,-1,[]],[[[52,[[4,[98]]]]],205],[-1,205,[[199,[[100,[98]]]]]],[-1,205,202],[-1,205,[[199,[[100,[162]]]]]],[[205,12],17],[[205,12],4],[[205,12],[[4,[162]]]],[[205,12],124],[[205,12,12],205],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[205,12],9],0,[205],[204,12],[205,12],[205,12],0,[206,205],[207,4],[205,12],[[205,15],205],[205,15],0,0,[[204,4],10],[204,10],[[205,[100,[12]]],111],[205,16],0,0,[205,[[54,[[52,[115]]]]]],[207,[[10,[12,[4,[12]]]]]],[[205,12,12],111],[[205,198],[[54,[111]]]],[205,190],[205,[[14,[191]]]],[204,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[205]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[204,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[205,15],[[54,[10]]]],[205,192],[[205,12],51],[205,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,204],[[204,15,16],[[54,[204]]]],[[205,15,16],[[54,[205]]]],[[205,15,16],[[54,[205]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[125,125],9],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[111,[[54,[-1]]],125],[13,[[54,[-1]]],13],[111,54],[111,54],[-1,-1,[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[[[52,[51]],90],[[54,[111]]]],[[[52,[51]],90],[[54,[[10,[111,195]]]]]],[111,-1,62],[-1,[[18,[-2]]],[],[]],[[171,12],[[54,[111]]]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[111]]],[[199,[191]]]],[[[100,[190]]],[[54,[[52,[111]]]]]],[-1,55,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[208,9],10],[208,10],[208,10],0,[209,62],[210,62],[210,191],[209,62],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[210,2],[[54,[111]]]],[209,2],[210,2],[[210,210],9],[[209,125,12,12],[[54,[10]]]],[[210,195],[[54,[111]]]],[[210,196,[4,[125]]],10],[209],[208,[[4,[211]]]],[[209,9],10],[[210,21],22],[[208,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[212,210],[-1,-1,[]],[[210,12],17],[[210,12],4],[[210,12],124],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[210,12],9],0,0,[210],[209,12],[210,12],[208,12],0,[208,10],[208,10],[210,12],[210,213],[12,208],[213,4],0,[210,12],0,[[209,4],10],[[209,165],[[54,[10]]]],[209,10],[[210,[100,[12]]],111],[210,[[54,[[52,[115]]]]]],[213,[[10,[12,[4,[12]]]]]],[[210,12,12],111],[[210,198],[[54,[111]]]],[210,190],[210,[[14,[191]]]],[209,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[210]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[209,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[210,192],0,[210,[[0,[99]]]],0,[210,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,209],[[2,12],209],0,0,0,[214,62],[215,62],[214,191],[215,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[214,2],[[54,[111]]]],[214,2],[215,2],[[],215],[[214,214],9],[[215,125,12,12],[[54,[10]]]],[[214,195],[[54,[111]]]],[[214,196,[4,[125]]],10],[[214,21],22],[216,214],[-1,-1,[]],[-1,-1,[]],[[214,12],17],[[214,12],124],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[214,12],9],[214,12],[215,12],0,[214,12],[12,214],[214,12],[214,9],[215,10],[[214,[100,[12]]],111],[[214,[100,[12]]],111],[214,[[54,[[52,[115]]]]]],[[214,12,12],111],[[214,198],[[54,[111]]]],[214,190],[214,[[14,[191]]]],[215,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[214]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[215,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[214,192],[214,51],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,2],[[54,[111]]],[]],0,[[-1,195],[[54,[111]]],[]],0,[[-1,196,[4,[125]]],10,[]],0,0,[[-1,[100,[12]]],111,[]],0,[[-1,198],[[54,[111]]],[]],0,0,[[203,196,[4,[203]]],10],[[214,196,[4,[214]]],10],[[-1,196,[4,[-1]]],10,217],[[-1,[100,[12]]],111,217],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[126,[-1]]],62,218],[[[219,[-1]]],62,218],[[[126,[-1]]],220,218],[[[219,[-1]]],62,218],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[126,[-1]],2],[[54,[111]]],218],[[[126,[-1]]],2,218],[[[219,[-1]]],2,218],[[[126,[-1]],[126,[-1]]],9,218],[[[219,[-1]],125,12,12],[[54,[10]]],218],[[[126,[-1]],195],[[54,[111]]],218],[[[126,[-1]],196,[4,[125]]],10,218],[[[219,[-1]]],[],218],[[[126,[-1]],21],22,218],[-1,-1,[]],[[[52,[4]]],[[126,[-1]]],218],[220,[[126,[-1]]],218],[-1,-1,[]],[-1,-1,[]],[-1,[[126,[-2]]],202,218],[-1,[[126,[-2]]],[[199,[100]]],218],[-1,[[126,[-2]]],202,218],[52,[[126,[-1]]],218],[-1,[[126,[-2]]],[[199,[100]]],218],[[[126,[-1]],12],17,218],[[[126,[-1]],12],4,218],[[[126,[-1]],12],124,218],[[[126,[-1]],12,12],[[126,[-1]]],218],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[[126,[-1]],12],9,218],0,[[[126,[-1]]],[],218],[[[126,[-1]]],12,218],[[[219,[-1]]],12,218],[[[126,[-1]]],12,218],0,0,0,0,0,0,0,0,0,0,0,[220,[[126,[-1]]],218],[[[221,[-1]]],[[4,[4]]],218],[[[126,[-1]]],12,218],[[[219,[-1]],4],10,218],[[[219,[-1]]],10,218],[[[126,[-1]],[100,[12]]],111,218],[[[126,[-1]],[100,[12]]],[[126,[-1]]],218],[[[126,[-1]]],[[54,[[52,[115]]]]],218],[[[221,[-1]]],[[10,[12,[4,[12]]]]],218],[[[126,[-1]],12,12],111,218],[[[126,[-1]],198],[[54,[111]]],218],[[[126,[-1]]],190,218],[[[126,[-1]]],[[14,[191]]],218],[[[219,[-1]]],111,218],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[[126,[-2]]]]],[[199,[191]]],218],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[[219,[-1]],124],[[54,[10]]],218],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[[126,[-1]]],192,218],[[[126,[-1]]],51,218],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[219,[-1]]],218],0,0,0,[222,62],[223,62],[223,191],[222,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[223,2],[[54,[111]]]],[222,2],[223,2],[[223,223],9],[[222,125,12,12],[[54,[10]]]],[[223,195],[[54,[111]]]],[[223,196,[4,[125]]],10],[222],[[223,21],22],[-1,-1,[]],[[[52,[51]]],223],[-1,-1,[]],[224,223],[[[52,[[4,[51]]]]],223],[[[52,[90]]],223],[[[100,[[4,[90]]]]],223],[[[100,[[4,[51]]]]],223],[[[52,[[4,[90]]]]],223],[[223,12],17],[[223,12],4],[[223,12],124],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[[223,12],9],[223],[222,12],[223,12],[223,12],0,[223,12],[[222,4],10],[222,10],[[223,[100,[12]]],111],[223,[[54,[[52,[115]]]]]],[[223,12,12],111],[[223,198],[[54,[111]]]],[223,190],[223,[[14,[191]]]],[222,111],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[54,[223]]],[[199,[191]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[222,124],[[54,[10]]]],[-1,55,[]],[-1,55,[]],[223,192],[223,51],[-1,-2,[],[]],[-1,-2,[],[]],[12,222],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[12,192],[12,192],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[225,225],9],[[192,192],9],[[225,21],22],[[192,21],22],[-1,-1,[]],[-1,-1,[]],[226,192],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[49,[-2]]],[],[]],[-1,[[49,[-2]]],[],[]],[192,9],[192,9],[[192,12],9],0,[192,12],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0],"c":[],"p":[[4,"DataType",4909],[4,"ConcreteDataType",39],[3,"Decimal128Type",1773],[4,"Option",4910],[4,"DurationType",1851],[3,"ListType",2209],[4,"TimeType",2739],[4,"TimestampType",2944],[15,"bool"],[15,"tuple"],[4,"Ordering",4911],[15,"usize"],[8,"MutableVector",3938],[3,"Box",4912],[15,"u8"],[15,"i8"],[4,"Value",3150],[4,"Result",4913],[8,"Deserializer",4914],[4,"TimeUnit",4915],[3,"Formatter",4916],[6,"Result",4916],[3,"UInt32Type",2281],[3,"Int8Type",2281],[3,"DateTimeType",1735],[3,"StringType",2704],[3,"DateType",1697],[3,"UInt64Type",2281],[3,"Float64Type",2281],[3,"Int64Type",2281],[3,"Int32Type",2281],[3,"DictionaryType",1812],[4,"IntervalType",2051],[3,"NullType",2246],[3,"UInt16Type",2281],[3,"UInt8Type",2281],[3,"BooleanType",1631],[3,"BinaryType",1596],[3,"Float32Type",2281],[3,"Int16Type",2281],[4,"IntervalUnit",4909],[4,"TimeUnit",4909],[15,"u64"],[8,"Hash",4917],[8,"Sized",4918],[8,"BuildHasher",4917],[8,"Hasher",4917],[4,"IntervalUnit",4919],[3,"Request",4920],[4,"LogicalTypeId",1451],[3,"String",4921],[3,"Vec",4922],[8,"Serializer",4923],[6,"Result",337],[3,"TypeId",4924],[3,"DurationSecond",216],[3,"DurationMillisecond",216],[3,"DurationMicrosecond",216],[3,"DurationNanosecond",216],[15,"i64"],[4,"Error",337],[8,"Any",4924],[8,"Error",4925],[3,"Backtrace",4926],[3,"ConversionSnafu",337],[8,"Into",4927],[3,"BadArrayAccessSnafu",337],[3,"UnknownVectorSnafu",337],[3,"UnsupportedArrowTypeSnafu",337],[3,"UnsupportedOperationSnafu",337],[3,"InvalidTimestampIndexSnafu",337],[3,"CastTypeSnafu",337],[3,"UnsupportedDefaultExprSnafu",337],[3,"NullDefaultSnafu",337],[3,"DefaultValueTypeSnafu",337],[3,"DuplicateMetaSnafu",337],[3,"ToScalarValueSnafu",337],[3,"InvalidTimestampPrecisionSnafu",337],[3,"DuplicateColumnSnafu",337],[3,"TryFromValueSnafu",337],[3,"SerializeSnafu",337],[3,"DeserializeSnafu",337],[8,"Clone",4928],[3,"ParseSchemaVersionSnafu",337],[3,"CastTimeTypeSnafu",337],[3,"ArrowComputeSnafu",337],[3,"ProjectArrowSchemaSnafu",337],[3,"InvalidPrecisionOrScaleSnafu",337],[3,"ValueExceedsPrecisionSnafu",337],[15,"str"],[8,"Debug",4916],[8,"StackError",4929],[4,"StatusCode",4930],[3,"IntervalYearMonth",856],[3,"IntervalDayTime",856],[3,"IntervalMonthDayNano",856],[15,"i32"],[15,"i128"],[8,"Iterator",4931],[15,"slice"],[3,"SchemaBuilder",989],[3,"Schema",989],[3,"Schema",4932],[3,"Arc",4933],[3,"ColumnSchema",1096],[3,"FieldsAndIndices",989],[3,"HashMap",4934],[6,"DFSchemaRef",4935],[3,"RawSchema",1180],[15,"u32"],[6,"VectorRef",3938],[4,"ColumnDefaultConstraint",1143],[6,"Metadata",1096],[3,"Field",4936],[4,"Value",4937],[3,"TimeSecond",1209],[3,"TimeMillisecond",1209],[3,"TimeMicrosecond",1209],[3,"TimeNanosecond",1209],[3,"TimestampSecond",1330],[3,"TimestampMillisecond",1330],[3,"TimestampMicrosecond",1330],[3,"TimestampNanosecond",1330],[4,"ValueRef",3150],[8,"Vector",3938],[3,"PrimitiveVector",4650],[6,"DataTypeRef",39],[8,"Num",4938],[8,"Default",4939],[3,"CastOption",1668],[3,"Date",4940],[6,"DateVector",4318],[3,"DurationSecondType",1851],[3,"DurationMillisecondType",1851],[3,"DurationMicrosecondType",1851],[3,"DurationNanosecondType",1851],[3,"IntervalYearMonthType",2051],[3,"IntervalDayTimeType",2051],[3,"IntervalMonthDayNanoType",2051],[3,"OrdPrimitive",2281],[8,"WrapperType",2281],[15,"u16"],[15,"i16"],[15,"f32"],[15,"f64"],[8,"PartialEq",4911],[3,"TimeSecondType",2739],[3,"TimeMillisecondType",2739],[3,"TimeNanosecondType",2739],[3,"TimeMicrosecondType",2739],[3,"TimestampNanosecondType",2944],[3,"TimestampSecondType",2944],[3,"TimestampMillisecondType",2944],[3,"TimestampMicrosecondType",2944],[3,"Timestamp",4915],[3,"OrderedFloat",3150],[8,"FloatConst",4941],[8,"Float",4941],[8,"Signed",4942],[15,"isize"],[3,"DateTime",4943],[3,"Decimal128",4944],[3,"Duration",4945],[3,"Interval",4919],[3,"ListValue",3150],[4,"ListValueRef",3150],[3,"Time",4946],[4,"FpCategory",4947],[3,"DictionaryValue",3150],[8,"Deserialize",4914],[4,"ScalarValue",4948],[3,"Error",4916],[8,"Display",4916],[8,"UpperExp",4916],[8,"LowerExp",4916],[8,"ToPrimitive",4949],[8,"NumCast",4949],[6,"OrderedF32",3150],[3,"StringBytes",4950],[3,"Bytes",4950],[6,"OrderedF64",3150],[8,"FromPrimitive",4949],[8,"FromStr",4951],[8,"Zero",4952],[8,"Bounded",4953],[8,"Neg",4954],[8,"One",4952],[3,"Complex",4955],[8,"Serialize",4923],[6,"ArrayRef",4956],[8,"Array",4956],[3,"Validity",4869],[3,"BinaryVectorBuilder",4148],[3,"BinaryVector",4148],[3,"BooleanVector",4209],[6,"BitVec",4957],[6,"BinaryArray",21],[6,"UInt32Vector",4650],[8,"AsRef",4927],[3,"BooleanVectorBuilder",4209],[3,"BooleanArray",4958],[8,"IntoIterator",4959],[3,"ConstantVector",4273],[3,"Decimal128VectorBuilder",4326],[3,"Decimal128Vector",4326],[6,"Decimal128Array",4960],[3,"Decimal128Iter",4326],[3,"NullBufferBuilder",4468],[3,"ListVectorBuilder",4468],[3,"ListVector",4468],[3,"Buffer",4961],[6,"ListArray",4962],[3,"ListIter",4468],[3,"NullVector",4573],[3,"NullVectorBuilder",4573],[3,"NullArray",4963],[8,"ScalarVector",963],[8,"LogicalPrimitiveType",2281],[3,"PrimitiveVectorBuilder",4650],[3,"PrimitiveArray",4960],[3,"PrimitiveIter",4650],[3,"StringVectorBuilder",4772],[3,"StringVector",4772],[6,"StringArray",21],[4,"ValidityKind",4869],[3,"ArrayData",4964],[6,"MutableBinaryArray",21],[6,"MutableStringArray",21],[8,"DataType",39],[13,"UnsupportedArrowType",804],[13,"DuplicateColumn",804],[13,"Serialize",804],[13,"Deserialize",804],[13,"ParseSchemaVersion",804],[13,"CastTimeType",804],[13,"ArrowCompute",804],[13,"ProjectArrowSchema",804],[13,"InvalidPrecisionOrScale",804],[13,"ValueExceedsPrecision",804],[13,"UnsupportedDefaultExpr",804],[13,"Conversion",804],[13,"BadArrayAccess",804],[13,"InvalidTimestampIndex",804],[13,"DuplicateMeta",804],[13,"UnknownVector",804],[13,"UnsupportedOperation",804],[13,"CastType",804],[13,"NullDefault",804],[13,"DefaultValueType",804],[13,"ToScalarValue",804],[13,"InvalidTimestampPrecision",804],[13,"TryFromValue",804],[8,"Scalar",963],[8,"ScalarRef",963],[8,"ScalarVectorBuilder",963],[6,"SchemaRef",989],[8,"Serializable",1207],[13,"Indexed",3935],[13,"Ref",3935],[6,"DateTimeVector",4322],[6,"DurationSecondVector",4418],[6,"DurationMillisecondVector",4418],[6,"DurationMicrosecondVector",4418],[6,"DurationNanosecondVector",4418],[6,"IntervalYearMonthVector",4456],[6,"IntervalMonthDayNanoVector",4456],[6,"IntervalDayTimeVector",4456],[6,"UInt8Vector",4650],[6,"UInt16Vector",4650],[6,"UInt64Vector",4650],[6,"Int8Vector",4650],[6,"Int16Vector",4650],[6,"Int32Vector",4650],[6,"Int64Vector",4650],[6,"Float32Vector",4650],[6,"Float64Vector",4650],[6,"TimeSecondVector",4837],[6,"TimeMillisecondVector",4837],[6,"TimeMicrosecondVector",4837],[6,"TimeNanosecondVector",4837],[6,"TimestampSecondVector",4853],[6,"TimestampMillisecondVector",4853],[6,"TimestampMicrosecondVector",4853],[6,"TimestampNanosecondVector",4853],[6,"DateVectorBuilder",4318],[6,"DateTimeVectorBuilder",4322],[6,"DurationSecondVectorBuilder",4418],[6,"DurationMillisecondVectorBuilder",4418],[6,"DurationMicrosecondVectorBuilder",4418],[6,"DurationNanosecondVectorBuilder",4418],[6,"IntervalYearMonthVectorBuilder",4456],[6,"IntervalMonthDayNanoVectorBuilder",4456],[6,"IntervalDayTimeVectorBuilder",4456],[6,"UInt8VectorBuilder",4650],[6,"UInt16VectorBuilder",4650],[6,"UInt32VectorBuilder",4650],[6,"UInt64VectorBuilder",4650],[6,"Int8VectorBuilder",4650],[6,"Int16VectorBuilder",4650],[6,"Int32VectorBuilder",4650],[6,"Int64VectorBuilder",4650],[6,"Float32VectorBuilder",4650],[6,"Float64VectorBuilder",4650],[6,"TimeSecondVectorBuilder",4837],[6,"TimeMillisecondVectorBuilder",4837],[6,"TimeMicrosecondVectorBuilder",4837],[6,"TimeNanosecondVectorBuilder",4837],[6,"TimestampSecondVectorBuilder",4853],[6,"TimestampMillisecondVectorBuilder",4853],[6,"TimestampMicrosecondVectorBuilder",4853],[6,"TimestampNanosecondVectorBuilder",4853],[3,"Helper",4436],[8,"VectorOp",4631],[13,"Slots",4904],[13,"AllValid",4904],[13,"AllNull",4904]],"b":[[104,"impl-Debug-for-ConcreteDataType"],[105,"impl-Display-for-ConcreteDataType"],[106,"impl-From%3C%26ConcreteDataType%3E-for-ConcreteDataType"],[107,"impl-From%3CUInt32Type%3E-for-ConcreteDataType"],[108,"impl-From%3CDurationType%3E-for-ConcreteDataType"],[109,"impl-From%3CInt8Type%3E-for-ConcreteDataType"],[110,"impl-From%3CDateTimeType%3E-for-ConcreteDataType"],[111,"impl-From%3CStringType%3E-for-ConcreteDataType"],[112,"impl-From%3CDateType%3E-for-ConcreteDataType"],[113,"impl-From%3CUInt64Type%3E-for-ConcreteDataType"],[114,"impl-From%3CListType%3E-for-ConcreteDataType"],[115,"impl-From%3CFloat64Type%3E-for-ConcreteDataType"],[116,"impl-From%3CInt64Type%3E-for-ConcreteDataType"],[117,"impl-From%3CInt32Type%3E-for-ConcreteDataType"],[118,"impl-From%3CDictionaryType%3E-for-ConcreteDataType"],[119,"impl-From%3CIntervalType%3E-for-ConcreteDataType"],[120,"impl-From%3CNullType%3E-for-ConcreteDataType"],[122,"impl-From%3CDecimal128Type%3E-for-ConcreteDataType"],[123,"impl-From%3CTimeType%3E-for-ConcreteDataType"],[124,"impl-From%3CUInt16Type%3E-for-ConcreteDataType"],[125,"impl-From%3CUInt8Type%3E-for-ConcreteDataType"],[126,"impl-From%3CTimestampType%3E-for-ConcreteDataType"],[127,"impl-From%3CBooleanType%3E-for-ConcreteDataType"],[128,"impl-From%3CBinaryType%3E-for-ConcreteDataType"],[129,"impl-From%3CFloat32Type%3E-for-ConcreteDataType"],[130,"impl-From%3CInt16Type%3E-for-ConcreteDataType"],[186,"impl-TryInto%3CFloat64Type%3E-for-ConcreteDataType"],[187,"impl-TryInto%3CStringType%3E-for-ConcreteDataType"],[188,"impl-TryInto%3CListType%3E-for-ConcreteDataType"],[189,"impl-TryInto%3CInt64Type%3E-for-ConcreteDataType"],[190,"impl-TryInto%3CUInt16Type%3E-for-ConcreteDataType"],[191,"impl-TryInto%3CBooleanType%3E-for-ConcreteDataType"],[192,"impl-TryInto%3CInt16Type%3E-for-ConcreteDataType"],[193,"impl-TryInto%3CUInt8Type%3E-for-ConcreteDataType"],[194,"impl-TryInto%3CTimeType%3E-for-ConcreteDataType"],[195,"impl-TryInto%3CUInt32Type%3E-for-ConcreteDataType"],[196,"impl-TryInto%3CDurationType%3E-for-ConcreteDataType"],[197,"impl-TryInto%3CTimestampType%3E-for-ConcreteDataType"],[198,"impl-TryInto%3CUInt64Type%3E-for-ConcreteDataType"],[199,"impl-TryInto%3CFloat32Type%3E-for-ConcreteDataType"],[200,"impl-TryInto%3CDecimal128Type%3E-for-ConcreteDataType"],[201,"impl-TryInto%3CInt32Type%3E-for-ConcreteDataType"],[202,"impl-TryInto%3CDictionaryType%3E-for-ConcreteDataType"],[203,"impl-TryInto%3CIntervalType%3E-for-ConcreteDataType"],[204,"impl-TryInto%3CDateTimeType%3E-for-ConcreteDataType"],[205,"impl-TryInto%3CInt8Type%3E-for-ConcreteDataType"],[206,"impl-TryInto%3CDateType%3E-for-ConcreteDataType"],[207,"impl-TryInto%3CNullType%3E-for-ConcreteDataType"],[209,"impl-TryInto%3CBinaryType%3E-for-ConcreteDataType"],[543,"impl-Debug-for-Error"],[544,"impl-Display-for-Error"],[1070,"impl-TryFrom%3CArc%3CSchema%3E%3E-for-Schema"],[1072,"impl-TryFrom%3CSchema%3E-for-Schema"],[1073,"impl-TryFrom%3CArc%3CDFSchema%3E%3E-for-Schema"],[1074,"impl-TryFrom%3CRawSchema%3E-for-Schema"],[1163,"impl-Display-for-ColumnDefaultConstraint"],[1164,"impl-Debug-for-ColumnDefaultConstraint"],[1956,"impl-From%3CDurationSecondType%3E-for-DurationType"],[1957,"impl-From%3CDurationMicrosecondType%3E-for-DurationType"],[1958,"impl-From%3CDurationNanosecondType%3E-for-DurationType"],[1959,"impl-From%3CDurationMillisecondType%3E-for-DurationType"],[2028,"impl-TryInto%3CDurationMillisecondType%3E-for-DurationType"],[2029,"impl-TryInto%3CDurationMicrosecondType%3E-for-DurationType"],[2030,"impl-TryInto%3CDurationNanosecondType%3E-for-DurationType"],[2031,"impl-TryInto%3CDurationSecondType%3E-for-DurationType"],[2134,"impl-From%3CIntervalYearMonthType%3E-for-IntervalType"],[2136,"impl-From%3CIntervalDayTimeType%3E-for-IntervalType"],[2137,"impl-From%3CIntervalMonthDayNanoType%3E-for-IntervalType"],[2191,"impl-TryInto%3CIntervalDayTimeType%3E-for-IntervalType"],[2192,"impl-TryInto%3CIntervalMonthDayNanoType%3E-for-IntervalType"],[2193,"impl-TryInto%3CIntervalYearMonthType%3E-for-IntervalType"],[2848,"impl-From%3CTimeMillisecondType%3E-for-TimeType"],[2849,"impl-From%3CTimeMicrosecondType%3E-for-TimeType"],[2850,"impl-From%3CTimeNanosecondType%3E-for-TimeType"],[2852,"impl-From%3CTimeSecondType%3E-for-TimeType"],[2920,"impl-TryInto%3CTimeNanosecondType%3E-for-TimeType"],[2921,"impl-TryInto%3CTimeSecondType%3E-for-TimeType"],[2922,"impl-TryInto%3CTimeMillisecondType%3E-for-TimeType"],[2923,"impl-TryInto%3CTimeMicrosecondType%3E-for-TimeType"],[3054,"impl-From%3CTimestampMillisecondType%3E-for-TimestampType"],[3056,"impl-From%3CTimestampMicrosecondType%3E-for-TimestampType"],[3057,"impl-From%3CTimestampNanosecondType%3E-for-TimestampType"],[3058,"impl-From%3CTimestampSecondType%3E-for-TimestampType"],[3126,"impl-TryInto%3CTimestampMicrosecondType%3E-for-TimestampType"],[3127,"impl-TryInto%3CTimestampMillisecondType%3E-for-TimestampType"],[3128,"impl-TryInto%3CTimestampSecondType%3E-for-TimestampType"],[3130,"impl-TryInto%3CTimestampNanosecondType%3E-for-TimestampType"],[3222,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3223,"impl-Signed-for-OrderedFloat%3CT%3E"],[3224,"impl-Float-for-OrderedFloat%3CT%3E"],[3225,"impl-Float-for-OrderedFloat%3CT%3E"],[3227,"impl-Signed-for-OrderedFloat%3CT%3E"],[3234,"impl-Add%3COrderedFloat%3CT%3E%3E-for-%26OrderedFloat%3CT%3E"],[3235,"impl-Add%3CT%3E-for-%26OrderedFloat%3CT%3E"],[3236,"impl-Add%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3237,"impl-Add%3CT%3E-for-OrderedFloat%3CT%3E"],[3238,"impl-Add%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3239,"impl-Add-for-OrderedFloat%3CT%3E"],[3240,"impl-Add%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3241,"impl-AddAssign-for-OrderedFloat%3CT%3E"],[3242,"impl-AddAssign%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3243,"impl-AddAssign%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3244,"impl-AddAssign%3CT%3E-for-OrderedFloat%3CT%3E"],[3246,"impl-AsPrimitive%3Cusize%3E-for-OrderedFloat%3Cf64%3E"],[3247,"impl-AsPrimitive%3Cu16%3E-for-OrderedFloat%3Cf64%3E"],[3248,"impl-AsPrimitive%3Ci16%3E-for-OrderedFloat%3Cf32%3E"],[3249,"impl-AsPrimitive%3Ci8%3E-for-OrderedFloat%3Cf64%3E"],[3250,"impl-AsPrimitive%3Cu32%3E-for-OrderedFloat%3Cf32%3E"],[3251,"impl-AsPrimitive%3Cisize%3E-for-OrderedFloat%3Cf32%3E"],[3252,"impl-AsPrimitive%3COrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf32%3E"],[3253,"impl-AsPrimitive%3COrderedFloat%3Cf64%3E%3E-for-OrderedFloat%3Cf32%3E"],[3254,"impl-AsPrimitive%3Cu16%3E-for-OrderedFloat%3Cf32%3E"],[3255,"impl-AsPrimitive%3Cf32%3E-for-OrderedFloat%3Cf64%3E"],[3256,"impl-AsPrimitive%3Cf32%3E-for-OrderedFloat%3Cf32%3E"],[3257,"impl-AsPrimitive%3Cu64%3E-for-OrderedFloat%3Cf64%3E"],[3258,"impl-AsPrimitive%3Ci8%3E-for-OrderedFloat%3Cf32%3E"],[3259,"impl-AsPrimitive%3Cu32%3E-for-OrderedFloat%3Cf64%3E"],[3260,"impl-AsPrimitive%3Cf64%3E-for-OrderedFloat%3Cf64%3E"],[3261,"impl-AsPrimitive%3Cu8%3E-for-OrderedFloat%3Cf32%3E"],[3262,"impl-AsPrimitive%3Cu8%3E-for-OrderedFloat%3Cf64%3E"],[3263,"impl-AsPrimitive%3COrderedFloat%3Cf64%3E%3E-for-OrderedFloat%3Cf64%3E"],[3264,"impl-AsPrimitive%3Cf64%3E-for-OrderedFloat%3Cf32%3E"],[3265,"impl-AsPrimitive%3Ci16%3E-for-OrderedFloat%3Cf64%3E"],[3266,"impl-AsPrimitive%3Ci32%3E-for-OrderedFloat%3Cf64%3E"],[3267,"impl-AsPrimitive%3COrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf64%3E"],[3268,"impl-AsPrimitive%3Ci64%3E-for-OrderedFloat%3Cf32%3E"],[3269,"impl-AsPrimitive%3Ci32%3E-for-OrderedFloat%3Cf32%3E"],[3270,"impl-AsPrimitive%3Cisize%3E-for-OrderedFloat%3Cf64%3E"],[3271,"impl-AsPrimitive%3Ci64%3E-for-OrderedFloat%3Cf64%3E"],[3272,"impl-AsPrimitive%3Cu64%3E-for-OrderedFloat%3Cf32%3E"],[3273,"impl-AsPrimitive%3Cusize%3E-for-OrderedFloat%3Cf32%3E"],[3333,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3334,"impl-Float-for-OrderedFloat%3CT%3E"],[3336,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3337,"impl-Float-for-OrderedFloat%3CT%3E"],[3379,"impl-Div%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3380,"impl-Div%3CT%3E-for-%26OrderedFloat%3CT%3E"],[3381,"impl-Div%3COrderedFloat%3CT%3E%3E-for-%26OrderedFloat%3CT%3E"],[3382,"impl-Div-for-OrderedFloat%3CT%3E"],[3383,"impl-Div%3CT%3E-for-OrderedFloat%3CT%3E"],[3384,"impl-Div%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3385,"impl-Div%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3386,"impl-DivAssign%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3387,"impl-DivAssign%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3388,"impl-DivAssign-for-OrderedFloat%3CT%3E"],[3389,"impl-DivAssign%3CT%3E-for-OrderedFloat%3CT%3E"],[3392,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3393,"impl-Float-for-OrderedFloat%3CT%3E"],[3394,"impl-PartialEq%3CT%3E-for-OrderedFloat%3CT%3E"],[3395,"impl-PartialEq-for-OrderedFloat%3CT%3E"],[3436,"impl-Float-for-OrderedFloat%3CT%3E"],[3437,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3438,"impl-Display-for-OrderedFloat%3CT%3E"],[3439,"impl-UpperExp-for-OrderedFloat%3CT%3E"],[3440,"impl-LowerExp-for-OrderedFloat%3CT%3E"],[3441,"impl-Debug-for-OrderedFloat%3CT%3E"],[3442,"impl-Display-for-Value"],[3443,"impl-Debug-for-Value"],[3449,"impl-Float-for-OrderedFloat%3CT%3E"],[3450,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3451,"impl-From%3Ci16%3E-for-OrderedFloat%3Cf32%3E"],[3452,"impl-From%3Cu8%3E-for-OrderedFloat%3Cf64%3E"],[3453,"impl-From%3Cbool%3E-for-OrderedFloat%3Cf32%3E"],[3454,"impl-From%3C%26mut+T%3E-for-%26mut+OrderedFloat%3CT%3E"],[3455,"impl-From%3Cu16%3E-for-OrderedFloat%3Cf32%3E"],[3456,"impl-From%3Ci8%3E-for-OrderedFloat%3Cf32%3E"],[3457,"impl-From%3Cbool%3E-for-OrderedFloat%3Cf64%3E"],[3458,"impl-From%3Cu8%3E-for-OrderedFloat%3Cf32%3E"],[3459,"impl-From%3Ci32%3E-for-OrderedFloat%3Cf64%3E"],[3460,"impl-From%3Cu16%3E-for-OrderedFloat%3Cf64%3E"],[3462,"impl-From%3CT%3E-for-OrderedFloat%3CT%3E"],[3463,"impl-NumCast-for-OrderedFloat%3CT%3E"],[3464,"impl-From%3Cu32%3E-for-OrderedFloat%3Cf64%3E"],[3465,"impl-From%3Ci8%3E-for-OrderedFloat%3Cf64%3E"],[3466,"impl-From%3Ci16%3E-for-OrderedFloat%3Cf64%3E"],[3467,"impl-From%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3468,"impl-From%3Cbool%3E-for-Value"],[3469,"impl-From%3COption%3CDuration%3E%3E-for-Value"],[3470,"impl-From%3C%26%5Bu8%5D%3E-for-Value"],[3471,"impl-From%3COption%3Cu8%3E%3E-for-Value"],[3472,"impl-From%3CDecimal128%3E-for-Value"],[3473,"impl-From%3Ci16%3E-for-Value"],[3474,"impl-From%3COrderedFloat%3Cf32%3E%3E-for-Value"],[3475,"impl-From%3CTimeMillisecond%3E-for-Value"],[3476,"impl-From%3CValueRef%3C\'_%3E%3E-for-Value"],[3477,"impl-From%3CTimestampMicrosecond%3E-for-Value"],[3478,"impl-From%3CString%3E-for-Value"],[3479,"impl-From%3C%26str%3E-for-Value"],[3480,"impl-From%3CIntervalDayTime%3E-for-Value"],[3481,"impl-From%3CIntervalMonthDayNano%3E-for-Value"],[3482,"impl-From%3COption%3CTime%3E%3E-for-Value"],[3483,"impl-From%3Cf32%3E-for-Value"],[3484,"impl-From%3COption%3Cf64%3E%3E-for-Value"],[3485,"impl-From%3CInterval%3E-for-Value"],[3486,"impl-From%3CTime%3E-for-Value"],[3487,"impl-From%3CTimestampSecond%3E-for-Value"],[3488,"impl-From%3COption%3Cf32%3E%3E-for-Value"],[3489,"impl-From%3COption%3CDateTime%3E%3E-for-Value"],[3490,"impl-From%3CDurationNanosecond%3E-for-Value"],[3491,"impl-From%3COption%3CStringBytes%3E%3E-for-Value"],[3492,"impl-From%3CBytes%3E-for-Value"],[3493,"impl-From%3COption%3COrderedFloat%3Cf32%3E%3E%3E-for-Value"],[3494,"impl-From%3CDuration%3E-for-Value"],[3495,"impl-From%3Cf64%3E-for-Value"],[3496,"impl-From%3COption%3Cbool%3E%3E-for-Value"],[3497,"impl-From%3CDurationMillisecond%3E-for-Value"],[3498,"impl-From%3CIntervalYearMonth%3E-for-Value"],[3499,"impl-From%3COption%3CString%3E%3E-for-Value"],[3500,"impl-From%3CTimeMicrosecond%3E-for-Value"],[3501,"impl-From%3COption%3CInterval%3E%3E-for-Value"],[3502,"impl-From%3COption%3Ci64%3E%3E-for-Value"],[3503,"impl-From%3Cu8%3E-for-Value"],[3504,"impl-From%3COption%3Cu64%3E%3E-for-Value"],[3505,"impl-From%3Cu32%3E-for-Value"],[3506,"impl-From%3COption%3Ci8%3E%3E-for-Value"],[3507,"impl-From%3COption%3CBytes%3E%3E-for-Value"],[3508,"impl-From%3CDate%3E-for-Value"],[3510,"impl-From%3COption%3Ci32%3E%3E-for-Value"],[3511,"impl-From%3COption%3CDecimal128%3E%3E-for-Value"],[3512,"impl-From%3Ci8%3E-for-Value"],[3513,"impl-From%3CDurationSecond%3E-for-Value"],[3514,"impl-From%3Cu64%3E-for-Value"],[3515,"impl-From%3CDurationMicrosecond%3E-for-Value"],[3516,"impl-From%3CTimeNanosecond%3E-for-Value"],[3517,"impl-From%3Ci64%3E-for-Value"],[3518,"impl-From%3CTimestampNanosecond%3E-for-Value"],[3519,"impl-From%3CTimeSecond%3E-for-Value"],[3520,"impl-From%3CDateTime%3E-for-Value"],[3521,"impl-From%3COption%3Cu16%3E%3E-for-Value"],[3522,"impl-From%3COrderedFloat%3Cf64%3E%3E-for-Value"],[3523,"impl-From%3Cu16%3E-for-Value"],[3524,"impl-From%3COption%3Cu32%3E%3E-for-Value"],[3525,"impl-From%3COption%3CDate%3E%3E-for-Value"],[3526,"impl-From%3CVec%3Cu8%3E%3E-for-Value"],[3527,"impl-From%3CStringBytes%3E-for-Value"],[3528,"impl-From%3COption%3Ci16%3E%3E-for-Value"],[3529,"impl-From%3COption%3CTimestamp%3E%3E-for-Value"],[3530,"impl-From%3CTimestamp%3E-for-Value"],[3531,"impl-From%3COption%3COrderedFloat%3Cf64%3E%3E%3E-for-Value"],[3532,"impl-From%3Ci32%3E-for-Value"],[3533,"impl-From%3CTimestampMillisecond%3E-for-Value"],[3534,"impl-From%3COrdPrimitive%3CT%3E%3E-for-Value"],[3537,"impl-From%3CDurationMillisecond%3E-for-ValueRef%3C\'static%3E"],[3538,"impl-From%3Ci32%3E-for-ValueRef%3C\'_%3E"],[3539,"impl-From%3CTimeSecond%3E-for-ValueRef%3C\'static%3E"],[3540,"impl-From%3Ci8%3E-for-ValueRef%3C\'_%3E"],[3541,"impl-From%3CIntervalDayTime%3E-for-ValueRef%3C\'static%3E"],[3542,"impl-From%3CDecimal128%3E-for-ValueRef%3C\'_%3E"],[3543,"impl-From%3COption%3Cu16%3E%3E-for-ValueRef%3C\'_%3E"],[3544,"impl-From%3Ci64%3E-for-ValueRef%3C\'_%3E"],[3545,"impl-From%3CTimestampNanosecond%3E-for-ValueRef%3C\'static%3E"],[3546,"impl-From%3COption%3Cf32%3E%3E-for-ValueRef%3C\'_%3E"],[3547,"impl-From%3COption%3Cbool%3E%3E-for-ValueRef%3C\'_%3E"],[3548,"impl-From%3COption%3Cu32%3E%3E-for-ValueRef%3C\'_%3E"],[3549,"impl-From%3COption%3CDateTime%3E%3E-for-ValueRef%3C\'_%3E"],[3550,"impl-From%3CTimeMillisecond%3E-for-ValueRef%3C\'static%3E"],[3551,"impl-From%3Cbool%3E-for-ValueRef%3C\'_%3E"],[3552,"impl-From%3Cf64%3E-for-ValueRef%3C\'_%3E"],[3553,"impl-From%3COption%3CListValueRef%3C\'a%3E%3E%3E-for-ValueRef%3C\'a%3E"],[3554,"impl-From%3COption%3Cu64%3E%3E-for-ValueRef%3C\'_%3E"],[3555,"impl-From%3COption%3Ci64%3E%3E-for-ValueRef%3C\'_%3E"],[3556,"impl-From%3COption%3Ci8%3E%3E-for-ValueRef%3C\'_%3E"],[3557,"impl-From%3CTimestamp%3E-for-ValueRef%3C\'_%3E"],[3558,"impl-From%3C%26str%3E-for-ValueRef%3C\'a%3E"],[3559,"impl-From%3COption%3Cu8%3E%3E-for-ValueRef%3C\'_%3E"],[3560,"impl-From%3COption%3CDuration%3E%3E-for-ValueRef%3C\'_%3E"],[3561,"impl-From%3CTime%3E-for-ValueRef%3C\'_%3E"],[3562,"impl-From%3CDuration%3E-for-ValueRef%3C\'_%3E"],[3563,"impl-From%3CDate%3E-for-ValueRef%3C\'_%3E"],[3564,"impl-From%3COption%3Cf64%3E%3E-for-ValueRef%3C\'_%3E"],[3565,"impl-From%3COption%3CDate%3E%3E-for-ValueRef%3C\'_%3E"],[3566,"impl-From%3COption%3CTimestamp%3E%3E-for-ValueRef%3C\'_%3E"],[3567,"impl-From%3Cu32%3E-for-ValueRef%3C\'_%3E"],[3568,"impl-From%3CIntervalMonthDayNano%3E-for-ValueRef%3C\'static%3E"],[3569,"impl-From%3CInterval%3E-for-ValueRef%3C\'_%3E"],[3570,"impl-From%3CIntervalYearMonth%3E-for-ValueRef%3C\'static%3E"],[3571,"impl-From%3Cu64%3E-for-ValueRef%3C\'_%3E"],[3572,"impl-From%3Cu16%3E-for-ValueRef%3C\'_%3E"],[3573,"impl-From%3COption%3Ci16%3E%3E-for-ValueRef%3C\'_%3E"],[3574,"impl-From%3CDurationMicrosecond%3E-for-ValueRef%3C\'static%3E"],[3575,"impl-From%3COption%3CTime%3E%3E-for-ValueRef%3C\'_%3E"],[3576,"impl-From%3CDurationNanosecond%3E-for-ValueRef%3C\'static%3E"],[3577,"impl-From%3CDateTime%3E-for-ValueRef%3C\'_%3E"],[3578,"impl-From%3COption%3Ci32%3E%3E-for-ValueRef%3C\'_%3E"],[3579,"impl-From%3C%26%5Bu8%5D%3E-for-ValueRef%3C\'a%3E"],[3580,"impl-From%3CTimeMicrosecond%3E-for-ValueRef%3C\'static%3E"],[3582,"impl-From%3Ci16%3E-for-ValueRef%3C\'_%3E"],[3583,"impl-From%3COption%3CDecimal128%3E%3E-for-ValueRef%3C\'_%3E"],[3584,"impl-From%3CTimestampMicrosecond%3E-for-ValueRef%3C\'static%3E"],[3585,"impl-From%3CTimestampSecond%3E-for-ValueRef%3C\'static%3E"],[3586,"impl-From%3COption%3CInterval%3E%3E-for-ValueRef%3C\'_%3E"],[3587,"impl-From%3CTimeNanosecond%3E-for-ValueRef%3C\'static%3E"],[3588,"impl-From%3CDurationSecond%3E-for-ValueRef%3C\'static%3E"],[3589,"impl-From%3CTimestampMillisecond%3E-for-ValueRef%3C\'static%3E"],[3590,"impl-From%3Cf32%3E-for-ValueRef%3C\'_%3E"],[3591,"impl-From%3Cu8%3E-for-ValueRef%3C\'_%3E"],[3629,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3630,"impl-Float-for-OrderedFloat%3CT%3E"],[3631,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3632,"impl-Float-for-OrderedFloat%3CT%3E"],[3646,"impl-Float-for-OrderedFloat%3CT%3E"],[3647,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3649,"impl-Float-for-OrderedFloat%3CT%3E"],[3651,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3652,"impl-Float-for-OrderedFloat%3CT%3E"],[3654,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3656,"impl-Float-for-OrderedFloat%3CT%3E"],[3658,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3662,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3663,"impl-Float-for-OrderedFloat%3CT%3E"],[3665,"impl-Float-for-OrderedFloat%3CT%3E"],[3667,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3692,"impl-Bounded-for-OrderedFloat%3CT%3E"],[3694,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3696,"impl-Float-for-OrderedFloat%3CT%3E"],[3699,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3701,"impl-Float-for-OrderedFloat%3CT%3E"],[3702,"impl-Float-for-OrderedFloat%3CT%3E"],[3703,"impl-Bounded-for-OrderedFloat%3CT%3E"],[3706,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3707,"impl-Mul%3CT%3E-for-%26OrderedFloat%3CT%3E"],[3708,"impl-Mul-for-OrderedFloat%3CT%3E"],[3709,"impl-Mul%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3710,"impl-Mul%3COrderedFloat%3CT%3E%3E-for-%26OrderedFloat%3CT%3E"],[3711,"impl-Mul%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3712,"impl-Mul%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3713,"impl-Mul%3CT%3E-for-OrderedFloat%3CT%3E"],[3716,"impl-MulAssign%3CT%3E-for-OrderedFloat%3CT%3E"],[3717,"impl-MulAssign-for-OrderedFloat%3CT%3E"],[3718,"impl-MulAssign%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3719,"impl-MulAssign%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3720,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3721,"impl-Float-for-OrderedFloat%3CT%3E"],[3722,"impl-Neg-for-%26OrderedFloat%3CT%3E"],[3723,"impl-Neg-for-OrderedFloat%3CT%3E"],[3724,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3725,"impl-Float-for-OrderedFloat%3CT%3E"],[3726,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3727,"impl-Float-for-OrderedFloat%3CT%3E"],[3736,"impl-Pow%3Ci16%3E-for-OrderedFloat%3Cf64%3E"],[3737,"impl-Pow%3Cf32%3E-for-OrderedFloat%3Cf64%3E"],[3738,"impl-Pow%3Cu8%3E-for-OrderedFloat%3Cf32%3E"],[3739,"impl-Pow%3Ci16%3E-for-%26OrderedFloat%3Cf64%3E"],[3740,"impl-Pow%3C%26f32%3E-for-OrderedFloat%3Cf32%3E"],[3741,"impl-Pow%3C%26f32%3E-for-OrderedFloat%3Cf64%3E"],[3742,"impl-Pow%3C%26f64%3E-for-OrderedFloat%3Cf64%3E"],[3743,"impl-Pow%3Ci16%3E-for-OrderedFloat%3Cf32%3E"],[3744,"impl-Pow%3Ci32%3E-for-OrderedFloat%3Cf64%3E"],[3745,"impl-Pow%3C%26OrderedFloat%3Cf32%3E%3E-for-%26OrderedFloat%3Cf64%3E"],[3746,"impl-Pow%3Ci16%3E-for-%26OrderedFloat%3Cf32%3E"],[3747,"impl-Pow%3C%26u8%3E-for-OrderedFloat%3Cf32%3E"],[3748,"impl-Pow%3C%26i32%3E-for-OrderedFloat%3Cf64%3E"],[3749,"impl-Pow%3C%26u16%3E-for-%26OrderedFloat%3Cf64%3E"],[3750,"impl-Pow%3C%26i8%3E-for-%26OrderedFloat%3Cf64%3E"],[3751,"impl-Pow%3Cu16%3E-for-OrderedFloat%3Cf32%3E"],[3752,"impl-Pow%3C%26u16%3E-for-OrderedFloat%3Cf64%3E"],[3753,"impl-Pow%3C%26u8%3E-for-OrderedFloat%3Cf64%3E"],[3754,"impl-Pow%3COrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf64%3E"],[3755,"impl-Pow%3Cf32%3E-for-%26OrderedFloat%3Cf32%3E"],[3756,"impl-Pow%3C%26i16%3E-for-%26OrderedFloat%3Cf32%3E"],[3757,"impl-Pow%3C%26OrderedFloat%3Cf64%3E%3E-for-OrderedFloat%3Cf64%3E"],[3758,"impl-Pow%3C%26u8%3E-for-%26OrderedFloat%3Cf64%3E"],[3759,"impl-Pow%3Ci8%3E-for-%26OrderedFloat%3Cf32%3E"],[3760,"impl-Pow%3COrderedFloat%3Cf64%3E%3E-for-OrderedFloat%3Cf64%3E"],[3761,"impl-Pow%3Ci32%3E-for-OrderedFloat%3Cf32%3E"],[3762,"impl-Pow%3C%26OrderedFloat%3Cf32%3E%3E-for-%26OrderedFloat%3Cf32%3E"],[3763,"impl-Pow%3C%26i8%3E-for-OrderedFloat%3Cf64%3E"],[3764,"impl-Pow%3C%26f32%3E-for-%26OrderedFloat%3Cf32%3E"],[3765,"impl-Pow%3Ci8%3E-for-OrderedFloat%3Cf64%3E"],[3766,"impl-Pow%3Cf64%3E-for-%26OrderedFloat%3Cf64%3E"],[3767,"impl-Pow%3Cu8%3E-for-%26OrderedFloat%3Cf32%3E"],[3768,"impl-Pow%3C%26OrderedFloat%3Cf64%3E%3E-for-%26OrderedFloat%3Cf64%3E"],[3769,"impl-Pow%3COrderedFloat%3Cf64%3E%3E-for-%26OrderedFloat%3Cf64%3E"],[3770,"impl-Pow%3C%26OrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf64%3E"],[3771,"impl-Pow%3Cf32%3E-for-OrderedFloat%3Cf32%3E"],[3772,"impl-Pow%3C%26OrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf32%3E"],[3773,"impl-Pow%3C%26i32%3E-for-%26OrderedFloat%3Cf64%3E"],[3774,"impl-Pow%3C%26u16%3E-for-%26OrderedFloat%3Cf32%3E"],[3775,"impl-Pow%3Cu16%3E-for-OrderedFloat%3Cf64%3E"],[3776,"impl-Pow%3Cf64%3E-for-OrderedFloat%3Cf64%3E"],[3777,"impl-Pow%3COrderedFloat%3Cf32%3E%3E-for-OrderedFloat%3Cf32%3E"],[3778,"impl-Pow%3C%26i16%3E-for-%26OrderedFloat%3Cf64%3E"],[3779,"impl-Pow%3Ci8%3E-for-OrderedFloat%3Cf32%3E"],[3780,"impl-Pow%3C%26f32%3E-for-%26OrderedFloat%3Cf64%3E"],[3781,"impl-Pow%3Ci32%3E-for-%26OrderedFloat%3Cf32%3E"],[3782,"impl-Pow%3Cu8%3E-for-%26OrderedFloat%3Cf64%3E"],[3783,"impl-Pow%3C%26i16%3E-for-OrderedFloat%3Cf64%3E"],[3784,"impl-Pow%3Cu8%3E-for-OrderedFloat%3Cf64%3E"],[3785,"impl-Pow%3C%26i32%3E-for-%26OrderedFloat%3Cf32%3E"],[3786,"impl-Pow%3Ci32%3E-for-%26OrderedFloat%3Cf64%3E"],[3787,"impl-Pow%3C%26i16%3E-for-OrderedFloat%3Cf32%3E"],[3788,"impl-Pow%3C%26u8%3E-for-%26OrderedFloat%3Cf32%3E"],[3789,"impl-Pow%3COrderedFloat%3Cf32%3E%3E-for-%26OrderedFloat%3Cf64%3E"],[3790,"impl-Pow%3Cf32%3E-for-%26OrderedFloat%3Cf64%3E"],[3791,"impl-Pow%3C%26u16%3E-for-OrderedFloat%3Cf32%3E"],[3792,"impl-Pow%3Ci8%3E-for-%26OrderedFloat%3Cf64%3E"],[3793,"impl-Pow%3Cu16%3E-for-%26OrderedFloat%3Cf64%3E"],[3794,"impl-Pow%3C%26i8%3E-for-%26OrderedFloat%3Cf32%3E"],[3795,"impl-Pow%3COrderedFloat%3Cf32%3E%3E-for-%26OrderedFloat%3Cf32%3E"],[3796,"impl-Pow%3Cu16%3E-for-%26OrderedFloat%3Cf32%3E"],[3797,"impl-Pow%3C%26i32%3E-for-OrderedFloat%3Cf32%3E"],[3798,"impl-Pow%3C%26i8%3E-for-OrderedFloat%3Cf32%3E"],[3799,"impl-Pow%3C%26f64%3E-for-%26OrderedFloat%3Cf64%3E"],[3804,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3806,"impl-Float-for-OrderedFloat%3CT%3E"],[3808,"impl-Product-for-OrderedFloat%3CT%3E"],[3809,"impl-Product%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3812,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3814,"impl-Float-for-OrderedFloat%3CT%3E"],[3815,"impl-Rem%3CT%3E-for-%26OrderedFloat%3CT%3E"],[3816,"impl-Rem%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3817,"impl-Rem-for-OrderedFloat%3CT%3E"],[3818,"impl-Rem%3CT%3E-for-OrderedFloat%3CT%3E"],[3819,"impl-Rem%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3820,"impl-Rem%3COrderedFloat%3CT%3E%3E-for-%26OrderedFloat%3CT%3E"],[3821,"impl-Rem%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3822,"impl-RemAssign%3CT%3E-for-OrderedFloat%3CT%3E"],[3823,"impl-RemAssign-for-OrderedFloat%3CT%3E"],[3824,"impl-RemAssign%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3825,"impl-RemAssign%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3826,"impl-Float-for-OrderedFloat%3CT%3E"],[3828,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3836,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3837,"impl-Float-for-OrderedFloat%3CT%3E"],[3838,"impl-Signed-for-OrderedFloat%3CT%3E"],[3850,"impl-Sub%3C%26T%3E-for-%26OrderedFloat%3CT%3E"],[3851,"impl-Sub%3CT%3E-for-OrderedFloat%3CT%3E"],[3852,"impl-Sub%3COrderedFloat%3CT%3E%3E-for-%26OrderedFloat%3CT%3E"],[3853,"impl-Sub%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3854,"impl-Sub-for-OrderedFloat%3CT%3E"],[3855,"impl-Sub%3CT%3E-for-%26OrderedFloat%3CT%3E"],[3856,"impl-Sub%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3857,"impl-SubAssign%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3858,"impl-SubAssign%3C%26T%3E-for-OrderedFloat%3CT%3E"],[3859,"impl-SubAssign%3CT%3E-for-OrderedFloat%3CT%3E"],[3860,"impl-SubAssign-for-OrderedFloat%3CT%3E"],[3861,"impl-Sum-for-OrderedFloat%3CT%3E"],[3862,"impl-Sum%3C%26OrderedFloat%3CT%3E%3E-for-OrderedFloat%3CT%3E"],[3872,"impl-Float-for-OrderedFloat%3CT%3E"],[3873,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3889,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[3891,"impl-Float-for-OrderedFloat%3CT%3E"],[3901,"impl-Float-for-OrderedFloat%3CT%3E"],[3902,"impl-FloatCore-for-OrderedFloat%3CT%3E"],[4170,"impl-From%3CGenericByteArray%3CGenericBinaryType%3Ci64%3E%3E%3E-for-BinaryVector"],[4171,"impl-From%3CVec%3CVec%3Cu8%3E%3E%3E-for-BinaryVector"],[4172,"impl-From%3CVec%3COption%3CVec%3Cu8%3E%3E%3E%3E-for-BinaryVector"],[4233,"impl-From%3CVec%3COption%3Cbool%3E%3E%3E-for-BooleanVector"],[4234,"impl-From%3CVec%3Cbool%3E%3E-for-BooleanVector"],[4235,"impl-From%3CBooleanArray%3E-for-BooleanVector"],[4351,"impl-From%3CPrimitiveArray%3CDecimal128Type%3E%3E-for-Decimal128Vector"],[4353,"impl-From%3CVec%3COption%3Ci128%3E%3E%3E-for-Decimal128Vector"],[4704,"impl-From%3CVec%3COption%3C%3CT+as+LogicalPrimitiveType%3E::Native%3E%3E%3E-for-PrimitiveVector%3CT%3E"],[4705,"impl-From%3CPrimitiveArray%3C%3CT+as+LogicalPrimitiveType%3E::ArrowPrimitive%3E%3E-for-PrimitiveVector%3CT%3E"],[4793,"impl-From%3CVec%3CString%3E%3E-for-StringVector"],[4795,"impl-From%3CGenericByteArray%3CGenericStringType%3Ci32%3E%3E%3E-for-StringVector"],[4796,"impl-From%3CVec%3COption%3CString%3E%3E%3E-for-StringVector"],[4797,"impl-From%3CVec%3C%26str%3E%3E-for-StringVector"],[4798,"impl-From%3C%26%5BOption%3C%26str%3E%5D%3E-for-StringVector"],[4799,"impl-From%3C%26%5BOption%3CString%3E%5D%3E-for-StringVector"],[4800,"impl-From%3CVec%3COption%3C%26str%3E%3E%3E-for-StringVector"]]},\
"file_engine":{"doc":"","t":"DLLLLLLLALLLLAAMMLLLLLLLLLAAALLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLNDNDNNDDNDNDNDNDNDNENDNDNDNDNDNDNNDNDNDNDNDNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLMLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLLLLLLDLLLLLLLLLLLLAMLLLLLLLLLLLMLLLLLLLLLDRDLLLLFFFFLLLLLLLLLLFLLLLLLLMMMLLLLLLLLLLLLLLLLLLMFFFFMMLLLLLLLLLLLLLLDGMLLLLLLLLLLMLLMLLLLLLLLMLMMLMLMLLLLLLML","n":["FileOptions","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","config","deref","deref_mut","deserialize","drop","engine","error","file_column_schemas","files","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","manifest","query","region","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","EngineConfig","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","EngineInner","EngineInnerRef","FileRegionEngine","alloc","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","exists","from","from","from_subset","from_subset","get_metadata","get_region","handle_close","handle_create","handle_drop","handle_open","handle_query","handle_request","handle_request","init","init","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","name","new","new","object_store","phantom","ptr","region_disk_usage","region_mutex","regions","role","set_readonly_gracefully","set_writable","set_writable","state","stop","stop","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BuildBackend","BuildBackendSnafu","BuildCsvConfig","BuildCsvConfigSnafu","BuildStream","BuildStreamAdapter","BuildStreamAdapterSnafu","BuildStreamSnafu","CheckObject","CheckObjectSnafu","CreateDefault","CreateDefaultSnafu","DecodeJson","DecodeJsonSnafu","DeleteRegionManifest","DeleteRegionManifestSnafu","EncodeJson","EncodeJsonSnafu","Err","Error","ExtractColumnFromFilter","ExtractColumnFromFilterSnafu","InvalidMetadata","InvalidMetadataSnafu","LoadRegionManifest","LoadRegionManifestSnafu","ManifestExists","ManifestExistsSnafu","MissingColumnNoDefault","MissingColumnNoDefaultSnafu","MissingRequiredField","MissingRequiredFieldSnafu","Ok","ParquetScanPlan","ParquetScanPlanSnafu","ParseFileFormat","ParseFileFormatSnafu","ProjectArrowSchema","ProjectArrowSchemaSnafu","ProjectSchema","ProjectSchemaSnafu","ProjectionOutOfBounds","ProjectionOutOfBoundsSnafu","RegionNotFound","RegionNotFoundSnafu","Result","StoreRegionManifest","StoreRegionManifestSnafu","UnexpectedEngine","UnexpectedEngineSnafu","Unsupported","UnsupportedSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column_index","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","next","operation","path","path","region_id","region_id","region_id","region_id","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bounds","column","column","column_index","engine","error","error","error","error","error","error","error","error","error","error","error","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","operation","path","path","region_id","region_id","region_id","region_id","source","source","source","source","source","source","FileRegionManifest","borrow","borrow_mut","column_metadatas","compat","compat_mut","compat_ref","decode","delete","deref","deref_mut","deserialize","drop","encode","file_options","fmt","format","from","from_subset","get_option","init","into","into_request","into_request","is_in_subset","load","metadata","options","primary_key","region_id","region_manifest_path","serialize","store","to_subset","to_subset_unchecked","try_from","try_into","type_id","url","vzip","FileToScanRegionStream","backfill_column","borrow","borrow_mut","cast_column_type","compat","compat_mut","compat_ref","convert_record_batch","create_default_vector","deref","deref_mut","drop","file_stream","file_stream","from","from_subset","init","into","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","new","poll_next","scan_schema","schema","schema_eq","to_subset","to_subset_unchecked","try_from","try_into","try_poll_next","type_id","vzip","CreateScanPlanContext","DEFAULT_BATCH_SIZE","ScanPlanConfig","borrow","borrow","borrow_mut","borrow_mut","build_csv_opener","build_json_opener","build_orc_opener","build_record_batch_stream","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_stream","default","deref","deref","deref_mut","deref_mut","drop","drop","file_schema","files","filters","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","limit","new_csv_stream","new_json_stream","new_orc_stream","new_parquet_stream_with_exec_plan","projection","store","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FileRegion","FileRegionRef","alloc","borrow","borrow_mut","compat","compat_mut","compat_ref","create","deref","deref_mut","drop","drop","file_options","filters_pushdown_to_file","fmt","format","from","from_subset","init","into","into_request","into_request","is_in_subset","metadata","metadata","open","options","phantom","projection_pushdown_to_file","ptr","query","region_dir","scan_schema","to_subset","to_subset_unchecked","try_from","try_into","type_id","url","vzip"],"q":[[0,"file_engine"],[37,"file_engine::config"],[72,"file_engine::engine"],[145,"file_engine::error"],[905,"file_engine::error::Error"],[959,"file_engine::manifest"],[999,"file_engine::query"],[1035,"file_engine::query::file_stream"],[1106,"file_engine::region"],[1147,"async_compat"],[1148,"core::result"],[1149,"serde::de"],[1150,"core::fmt"],[1151,"core::fmt"],[1152,"tonic::request"],[1153,"core::option"],[1154,"core::any"],[1155,"store_api::storage::descriptors"],[1156,"core::future::future"],[1157,"alloc::boxed"],[1158,"core::pin"],[1159,"alloc::sync"],[1160,"store_api::region_request"],[1161,"common_query"],[1162,"store_api::region_request"],[1163,"store_api::region_request"],[1164,"store_api::region_engine"],[1165,"common_error::ext"],[1166,"core::any"],[1167,"snafu::backtrace_inert"],[1168,"alloc::string"],[1169,"core::convert"],[1170,"core::clone"],[1171,"alloc::vec"],[1172,"core::fmt"],[1173,"common_datasource::file_format"],[1174,"store_api::metadata"],[1175,"datatypes::schema::column_schema"],[1176,"datatypes::vectors"],[1177,"common_recordbatch::error"],[1178,"datatypes::data_type"],[1179,"common_recordbatch::recordbatch"],[1180,"datatypes::schema"],[1181,"common_recordbatch"],[1182,"core::task::wake"],[1183,"core::task::poll"],[1184,"arrow_schema::schema"],[1185,"common_datasource::file_format::csv"],[1186,"common_datasource::file_format::csv"],[1187,"common_datasource::file_format::json"],[1188,"datafusion::datasource::physical_plan::file_stream"],[1189,"core::marker"],[1190,"common_datasource::file_format::orc"],[1191,"common_query::logical_plan::expr"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Region mutex is used to protect the operations such as …","All regions opened by the engine.","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildCsvConfig</code> …","","","SNAFU context selector for the <code>Error::BuildStreamAdapter</code> …","SNAFU context selector for the <code>Error::BuildStream</code> variant","","SNAFU context selector for the <code>Error::CheckObject</code> variant","","SNAFU context selector for the <code>Error::CreateDefault</code> variant","","SNAFU context selector for the <code>Error::DecodeJson</code> variant","","SNAFU context selector for the <code>Error::DeleteRegionManifest</code> …","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","Contains the error value","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidMetadata</code> …","","SNAFU context selector for the <code>Error::LoadRegionManifest</code> …","","SNAFU context selector for the <code>Error::ManifestExists</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParquetScanPlan</code> …","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ProjectArrowSchema</code> …","","SNAFU context selector for the <code>Error::ProjectSchema</code> variant","","SNAFU context selector for the <code>Error::ProjectionOutOfBounds</code>…","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","","SNAFU context selector for the <code>Error::StoreRegionManifest</code> …","","SNAFU context selector for the <code>Error::UnexpectedEngine</code> …","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a RecordBatch from file schema to scan schema.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,99,18,16,18,16,18,16,18,16,18,16,18,16,18,16,18,16,16,18,16,18,16,18,16,16,16,16,16,18,18,16,18,16,18,18,16,18,18,16,16,18,16,18,18,16,16,99,99,18,16,16,18,18,18,16,16,18,16,18,16,18,16,18,16,18,16,18,16,18,16,36,0,36,0,36,36,0,0,36,0,36,0,36,0,36,0,36,0,26,0,36,0,36,0,36,0,36,0,36,0,36,0,26,36,0,36,0,36,0,36,0,36,0,36,0,0,36,0,36,0,36,0,36,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,47,40,43,44,45,46,47,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,66,48,47,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,43,40,43,44,45,46,47,48,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,40,40,43,43,50,50,44,44,51,51,52,52,53,53,54,54,55,55,56,56,45,45,46,46,57,57,58,58,59,59,60,60,61,61,62,62,63,63,64,64,47,47,65,65,66,66,48,48,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,46,36,40,51,45,44,54,55,56,36,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,40,43,50,44,51,52,53,54,55,56,45,46,57,58,59,60,61,62,63,64,47,65,66,48,36,100,101,102,100,103,104,105,106,107,108,109,110,111,112,113,114,115,103,116,117,104,105,106,107,108,109,118,119,120,110,111,112,121,122,123,113,100,114,101,102,119,115,104,118,117,107,108,109,116,120,121,122,123,101,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,73,73,73,73,73,73,73,73,73,0,80,80,80,80,80,80,80,80,80,80,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,0,95,87,95,87,0,0,0,0,95,87,95,87,95,87,95,87,95,87,0,95,95,87,95,87,95,87,87,87,87,95,87,95,87,95,87,95,87,95,87,95,87,95,95,87,87,95,87,87,0,0,0,0,87,87,95,87,95,87,95,87,95,87,95,87,95,87,95,87,0,0,124,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,124,22,124,22,22,22,22,22,22,22,22,22,22],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[4,-1,[]],[4,-1,[]],[-1,[[5,[1]]],6],[4,2],0,0,0,0,[[1,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,0,0,[[1,-1],5,12],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[15,15],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[],15],[4,-1,[]],[4,-1,[]],[-1,[[5,[15]]],6],[4,2],[[15,15],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[15,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[15,-1],5,12],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[[16,17],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,17],[[21,[[20,[19]]]]]],[[16,17],[[13,[[23,[22]]]]]],[[16,17,24],[[26,[25]]]],[[16,17,27],[[26,[25]]]],[[16,17,28],[[26,[25]]]],[[16,17,29],[[26,[25]]]],[[18,17,30],[[21,[[20,[19]]]]]],[[18,17,31],[[21,[[20,[19]]]]]],[[16,17,31],[[26,[25]]]],[[],4],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[18,32],[[15,33],18],[33,16],0,0,0,[[18,17],[[21,[[20,[19]]]]]],0,0,[[18,17],[[13,[34]]]],[[18,17],[[21,[[20,[19]]]]]],[[18,17,11],[[5,[2,35]]]],[[16,17,11],[[26,[2]]]],[[16,17],[[13,[34]]]],[18,[[21,[[20,[19]]]]]],[16,[[26,[2]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[36,37],[-1,38,[]],[36,[[13,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[40,[-1]]],36,[[42,[41]]]],[[[43,[-1]]],36,[[42,[41]]]],[[[44,[-1]]],36,[[42,[17]]]],[[[45,[-1]]],36,[[42,[41]]]],[[[46,[-1]]],36,[[42,[41]]]],[[[47,[-1,-2]]],36,[[42,[4]]],[[42,[4]]]],[[[48,[-1]]],36,[[42,[41]]]],[36,[[13,[38]]]],[[[40,[-1]]],[[40,[-1]]],49],[[[43,[-1]]],[[43,[-1]]],49],[50,50],[[[44,[-1]]],[[44,[-1]]],49],[[[51,[-1]]],[[51,[-1]]],49],[52,52],[53,53],[[[54,[-1]]],[[54,[-1]]],49],[[[55,[-1]]],[[55,[-1]]],49],[[[56,[-1]]],[[56,[-1]]],49],[[[45,[-1]]],[[45,[-1]]],49],[[[46,[-1]]],[[46,[-1]]],49],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[[47,[-1,-2]]],[[47,[-1,-2]]],49,49],[65,65],[[[66,[-1]]],[[66,[-1]]],49],[[[48,[-1]]],[[48,[-1]]],49],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[36,4,[67,[41]]],2],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[36,32],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],0,[[[40,[-1]]],[[5,[-2,36]]],[[42,[41]]],[]],[[[43,[-1]]],[[5,[-2,36]]],[[42,[41]]],[]],[[[44,[-1]]],[[5,[-2,36]]],[[42,[17]]],[]],[[[45,[-1]]],[[5,[-2,36]]],[[42,[41]]],[]],[[[46,[-1]]],[[5,[-2,36]]],[[42,[41]]],[]],[[[47,[-1,-2]]],[[5,[-3,36]]],[[42,[4]]],[[42,[4]]],[]],[[[48,[-1]]],[[5,[-2,36]]],[[42,[41]]],[]],[[[40,[-1]],7],8,68],[[[43,[-1]],7],8,68],[[50,7],8],[[[44,[-1]],7],8,68],[[[51,[-1]],7],8,68],[[52,7],8],[[53,7],8],[[[54,[-1]],7],8,68],[[[55,[-1]],7],8,68],[[[56,[-1]],7],8,68],[[[45,[-1]],7],8,68],[[[46,[-1]],7],8,68],[[57,7],8],[[58,7],8],[[59,7],8],[[60,7],8],[[61,7],8],[[62,7],8],[[63,7],8],[[64,7],8],[[[47,[-1,-2]],7],8,68,68],[[65,7],8],[[[66,[-1]],7],8,68],[[[48,[-1]],7],8,68],[[36,7],8],[[36,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]]],36,[[42,[41]]]],[[[43,[-1]]],36,[[42,[41]]]],[50,36],[[[44,[-1]]],36,[[42,[17]]]],[[[51,[-1]]],36,[[42,[41]]]],[52,36],[53,36],[[[54,[-1]]],36,[[42,[17]]]],[[[55,[-1]]],36,[[42,[17]]]],[[[56,[-1]]],36,[[42,[17]]]],[[[45,[-1]]],36,[[42,[41]]]],[[[46,[-1]]],36,[[42,[41]]]],[57,36],[58,36],[59,36],[60,36],[61,36],[62,36],[63,36],[64,36],[[[47,[-1,-2]]],36,[[42,[4]]],[[42,[4]]]],[65,36],[[[66,[-1]]],36,[[42,[41]]]],[[[48,[-1]]],36,[[42,[41]]]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[36,[[13,[69]]]],0,0,0,0,0,0,0,[36,[[13,[38]]]],[36,70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[[72,[71]]],[[26,[73]]]],[[17,32,33],[[26,[2]]]],[4,-1,[]],[4,-1,[]],[-1,[[5,[73]]],6],[4,2],[73,[[26,[[67,[71]]]]]],[73,[[26,[1]]]],[[73,7],8],[73,[[26,[74]]]],[-1,-1,[]],[-1,-2,[],[]],[[73,32],[[26,[41]]]],[[],4],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[17,32,33],[[26,[73]]]],[73,[[26,[75]]]],0,0,0,[32,41],[[73,-1],5,12],[[73,32,33],[[26,[2]]]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[73,[[26,[41]]]],[-1,-2,[],[]],0,[[76,4],[[78,[77]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[77,79],[[78,[77]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[80,81],[[78,[81]]]],[[76,4],[[26,[77]]]],[4,-1,[]],[4,-1,[]],[4,2],0,0,[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[82,83],80],[[[21,[80]],84],[[85,[13]]]],0,[80,82],[[80,81],11],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[21,[-1]],84],[[85,[[13,[5]]]]],[]],[-1,14,[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[86]],87,88],[[26,[89]]]],[[[23,[86]],87,90],[[26,[91]]]],[[[23,[86]],87],[[26,[92]]]],[[-1,[23,[86]],[72,[41]],[13,[[67,[4]]]],[13,[4]]],[[26,[83]]],[93,94]],[95,95],[87,87],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[74,95,87],[[26,[83]]]],[[],95],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],0,0,0,[[95,7],8],[[87,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[[95,87,88],[[26,[83]]]],[[95,87,90],[[26,[83]]]],[[95,87,96],[[26,[83]]]],[[95,87,97],[[26,[83]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[17,27,33],[[26,[[23,[22]]]]]],[4,-1,[]],[4,-1,[]],[[22,33],[[26,[2]]]],[4,2],0,[[22,[72,[98]]],[[26,[[67,[98]]]]]],[[22,7],8],0,[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[22,75],0,[[17,29,33],[[26,[[23,[22]]]]]],0,0,[[22,[13,[[67,[4]]]]],[[26,[[13,[[67,[4]]]]]]]],0,[[22,30],[[26,[83]]]],0,[[22,[13,[[67,[4]]]]],[[26,[82]]]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],0,[-1,-2,[],[]]],"c":[],"p":[[3,"FileOptions",0],[15,"tuple"],[3,"Compat",1147],[15,"usize"],[4,"Result",1148],[8,"Deserializer",1149],[3,"Formatter",1150],[6,"Result",1150],[3,"Request",1151],[3,"Request",1151],[15,"bool"],[8,"Serializer",1152],[4,"Option",1153],[3,"TypeId",1154],[3,"EngineConfig",37],[3,"EngineInner",72],[3,"RegionId",1155],[3,"FileRegionEngine",72],[8,"Future",1156],[3,"Box",1157],[3,"Pin",1158],[3,"FileRegion",1106],[3,"Arc",1159],[3,"RegionCloseRequest",1160],[4,"Output",1161],[6,"Result",145],[3,"RegionCreateRequest",1160],[3,"RegionDropRequest",1160],[3,"RegionOpenRequest",1160],[3,"ScanRequest",1162],[4,"RegionRequest",1160],[15,"str"],[3,"Operator",1163],[4,"RegionRole",1164],[3,"BoxedError",1165],[4,"Error",145],[8,"Any",1154],[8,"Error",1166],[3,"Backtrace",1167],[3,"UnsupportedSnafu",145],[3,"String",1168],[8,"Into",1169],[3,"UnexpectedEngineSnafu",145],[3,"RegionNotFoundSnafu",145],[3,"ManifestExistsSnafu",145],[3,"MissingRequiredFieldSnafu",145],[3,"ProjectionOutOfBoundsSnafu",145],[3,"MissingColumnNoDefaultSnafu",145],[8,"Clone",1170],[3,"InvalidMetadataSnafu",145],[3,"CheckObjectSnafu",145],[3,"EncodeJsonSnafu",145],[3,"DecodeJsonSnafu",145],[3,"StoreRegionManifestSnafu",145],[3,"LoadRegionManifestSnafu",145],[3,"DeleteRegionManifestSnafu",145],[3,"BuildBackendSnafu",145],[3,"BuildCsvConfigSnafu",145],[3,"BuildStreamSnafu",145],[3,"ProjectArrowSchemaSnafu",145],[3,"ProjectSchemaSnafu",145],[3,"BuildStreamAdapterSnafu",145],[3,"ParseFileFormatSnafu",145],[3,"ParquetScanPlanSnafu",145],[3,"ExtractColumnFromFilterSnafu",145],[3,"CreateDefaultSnafu",145],[3,"Vec",1171],[8,"Debug",1150],[8,"StackError",1165],[4,"StatusCode",1172],[15,"u8"],[15,"slice"],[3,"FileRegionManifest",959],[4,"Format",1173],[6,"RegionMetadataRef",1174],[3,"ColumnSchema",1175],[6,"VectorRef",1176],[6,"Result",1177],[4,"ConcreteDataType",1178],[3,"FileToScanRegionStream",999],[3,"RecordBatch",1179],[6,"SchemaRef",1180],[6,"SendableRecordBatchStream",1181],[3,"Context",1182],[4,"Poll",1183],[3,"Schema",1184],[3,"ScanPlanConfig",1035],[3,"CsvFormat",1185],[3,"CsvOpener",1185],[3,"JsonFormat",1186],[3,"JsonOpener",1186],[3,"OrcOpener",1187],[8,"FileOpener",1188],[8,"Send",1189],[3,"CreateScanPlanContext",1035],[3,"OrcFormat",1187],[3,"ParquetFormat",1190],[3,"Expr",1191],[6,"EngineInnerRef",72],[13,"ProjectionOutOfBounds",905],[13,"CreateDefault",905],[13,"MissingColumnNoDefault",905],[13,"UnexpectedEngine",905],[13,"CheckObject",905],[13,"EncodeJson",905],[13,"DecodeJson",905],[13,"StoreRegionManifest",905],[13,"LoadRegionManifest",905],[13,"DeleteRegionManifest",905],[13,"BuildCsvConfig",905],[13,"BuildStream",905],[13,"ProjectArrowSchema",905],[13,"ParquetScanPlan",905],[13,"ExtractColumnFromFilter",905],[13,"Unsupported",905],[13,"InvalidMetadata",905],[13,"RegionNotFound",905],[13,"ManifestExists",905],[13,"MissingRequiredField",905],[13,"BuildBackend",905],[13,"ProjectSchema",905],[13,"BuildStreamAdapter",905],[13,"ParseFileFormat",905],[6,"FileRegionRef",1106]],"b":[[494,"impl-Debug-for-Error"],[495,"impl-Display-for-Error"]]},\
"frontend":{"doc":"","t":"AAAAAAAANDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNNDNDNDDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDILLLLLLLLLMLLLLLLLLLLLLLLLMMMMLLLLLLMMMMMMLMMMLLLLLLKLLLLLLMLDLLLLLLLLLLLLLLLLALLLLLLMLLMMMLLLLLLLLLLLLLLADLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGDCGLMMLLLLALLMFLLLLLLMLLLLLLLLLLLLLLLALLLLLLMALLLMLLLLLLLALAFMMLMAMMMLLAAMLMLAKLLMLLLLLLLLLLFLLDLLLMLLLMMLLLLLMLLLLLMLLLMLLLLLLLLLLLLLFRFFFDLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGMMMADDLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLCCCCCCCCAAAAAAAADDLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLMLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["error","frontend","heartbeat","instance","metrics","script","server","service_config","Catalog","CatalogSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ContextValueNotFound","ContextValueNotFoundSnafu","CopyTable","CopyTableSnafu","CreateMetaHeartbeatStream","CreateMetaHeartbeatStreamSnafu","DescribeStatement","DescribeStatementSnafu","EmptyData","EmptyDataSnafu","Err","Error","ExecLogicalPlan","ExecLogicalPlanSnafu","ExecutePromql","ExecutePromqlSnafu","External","ExternalSnafu","FindDatanode","FindDatanodeSnafu","FindTableRoute","FindTableRouteSnafu","HandleHeartbeatResponse","HandleHeartbeatResponseSnafu","IllegalAuthConfig","IllegalAuthConfigSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","IncompleteGrpcRequest","IncompleteGrpcRequestSnafu","InitDdlManager","InitDdlManagerSnafu","Insert","InsertSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidSql","InvalidSqlSnafu","InvalidSystemTableDef","InvalidSystemTableDefSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","InvokeRegionServer","InvokeRegionServerSnafu","LeaderNotFound","LeaderNotFoundSnafu","NotSupported","NotSupportedSnafu","Ok","OpenRaftEngineBackend","OpenRaftEngineBackendSnafu","ParseAddr","ParseAddrSnafu","ParseSql","ParseSqlSnafu","Permission","PermissionSnafu","PlanStatement","PlanStatementSnafu","PromStoreRemoteQueryPlan","PromStoreRemoteQueryPlanSnafu","ReadTable","ReadTableSnafu","RequestQuery","RequestQuerySnafu","Result","RuntimeResource","RuntimeResourceSnafu","SchemaExists","SchemaExistsSnafu","ShutdownServer","ShutdownServerSnafu","SqlExecIntercepted","SqlExecInterceptedSnafu","StartMetaClient","StartMetaClientSnafu","StartScriptManager","StartScriptManagerSnafu","StartServer","StartServerSnafu","Table","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableOperation","TableOperationSnafu","TableSnafu","TomlFormat","TomlFormatSnafu","UnsupportedFormat","UnsupportedFormatSnafu","VectorToGrpcColumn","VectorToGrpcColumnSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","msg","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","query","reason","reason","reason","reason","region","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table","table_id","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","column","err_msg","err_msg","err_msg","error","error","feat","format","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","msg","name","query","reason","reason","reason","reason","region","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table_id","table_name","table_name","table_name","table_name","FrontendOptions","TomlSerializable","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","datanode","default","deref","deref_mut","deserialize","drop","env_list_keys","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","grpc","heartbeat","http","influxdb","init","into","into_request","into_request","is_in_subset","lift_into","logging","meta_client","mode","mysql","node_id","opentsdb","or","otlp","postgres","prom_store","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","to_toml","to_toml","to_toml_string","try_from","try_into","try_into","type_id","user_provider","vzip","HeartbeatTask","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle_response","handler","init","into","into_request","into_request","is_in_subset","lift_into","meta_client","new","or","report_interval","resp_handler_executor","retry_interval","sculpt","start","start_handle_resp_stream","start_heartbeat_report","start_with_retry","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","invalidate_table_cache","InvalidateTableCacheHandler","__clone_box","and","borrow","borrow_mut","cache_invalidator","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","new","or","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FrontendInstance","FrontendInstanceRef","Instance","StandaloneDatanodeManager","StatementExecutorRef","__clone_box","alloc","alloc","and","borrow","borrow_mut","build_servers","builder","catalog_manager","catalog_manager","catalog_manager","check_permission","clone","clone_into","compat","compat_mut","compat_ref","create_meta_client","deleter","deref","deref_mut","do_describe","do_exec_plan","do_promql_query","do_query","do_query","do_query","drop","exec","exec","execute_script","from","from_ref","from_subset","grpc","handle_deletes","handle_inserts","handle_remote_queries","handle_remote_query","handle_row_deletes","handle_row_inserts","heartbeat_task","influxdb","ingest_metrics","init","insert_script","inserter","into","into_request","into_request","is_in_subset","is_valid_schema","lift_into","metrics","opentsdb","or","otlp","parse_stmt","phantom","phantom","plugins","plugins","prom_store","ptr","ptr","query_engine","query_statement","read","region_query","script","script_executor","sculpt","servers","shutdown","standalone","start","start","statement_executor","statement_executor","subset","to_owned","to_subset","to_subset_unchecked","traces","try_build_standalone_components","try_from","try_into","try_into","type_id","validate_param","vzip","write","FrontendBuilder","and","borrow","borrow_mut","cache_invalidator","compat","compat_mut","compat_ref","datanode_manager","ddl_task_executor","deref","deref_mut","drop","from","from_subset","heartbeat_task","init","into","into_request","into_request","is_in_subset","kv_backend","lift_into","new","or","plugins","sculpt","subset","to_subset","to_subset_unchecked","try_build","try_from","try_into","try_into","type_id","vzip","with_cache_invalidator","with_heartbeat_task","with_plugin","fill_catalog_and_schema_from_context","SAMPLES_RESPONSE_TYPE","is_supported","negotiate_response_type","to_query_result","FrontendRegionQueryHandler","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","datanode_manager","deref","deref_mut","do_get","do_get_inner","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionInvoker","StandaloneDatanodeManager","StandaloneTableMetadataCreator","TABLE_ID_SEQ","and","and","and","arc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","datanode","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","handle","handle_inner","handle_query","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","new","or","or","or","region_server","sculpt","sculpt","sculpt","subset","subset","subset","table_id_sequence","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","METRIC_EXEC_PLAN_ELAPSED","METRIC_HANDLE_PROMQL_ELAPSED","METRIC_HANDLE_SCRIPTS_ELAPSED","METRIC_HANDLE_SQL_ELAPSED","METRIC_RUN_SCRIPT_ELAPSED","OTLP_METRICS_ROWS","OTLP_TRACES_ROWS","PROM_STORE_REMOTE_WRITE_SAMPLES","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","or","or","or","or","or","or","or","or","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FrontendGrpcQueryHandlerRef","alloc","phantom","ptr","python","DummyHandler","ScriptExecutor","and","and","arc","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_scripts_table_if_need","create_table_expr","deref","deref","deref_mut","deref_mut","do_query","drop","drop","execute_script","from","from","from_subset","from_subset","grpc_handler","init","init","insert_script","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","or","or","script_manager","sculpt","sculpt","start","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Services","and","borrow","borrow_mut","build","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","parse_addr","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatanodeOptions","GrpcOptions","InfluxdbOptions","MysqlOptions","OpentsdbOptions","OtlpOptions","PostgresOptions","PromStoreOptions","datanode","grpc","influxdb","mysql","opentsdb","otlp","postgres","prom_store","DatanodeClientOptions","DatanodeOptions","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","connect_timeout","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","or","or","sculpt","sculpt","serialize","serialize","subset","subset","tcp_nodelay","timeout","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","GrpcOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","max_recv_message_size","max_send_message_size","or","runtime_size","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InfluxdbOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MysqlOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","reject_no_database","runtime_size","sculpt","serialize","subset","tls","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","OpentsdbOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","runtime_size","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","OtlpOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PostgresOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","runtime_size","sculpt","serialize","subset","tls","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PromStoreOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"frontend"],[8,"frontend::error"],[1912,"frontend::error::Error"],[2012,"frontend::frontend"],[2074,"frontend::heartbeat"],[2118,"frontend::heartbeat::handler"],[2119,"frontend::heartbeat::handler::invalidate_table_cache"],[2156,"frontend::instance"],[2253,"frontend::instance::builder"],[2292,"frontend::instance::grpc"],[2293,"frontend::instance::prom_store"],[2297,"frontend::instance::region_query"],[2330,"frontend::instance::standalone"],[2424,"frontend::metrics"],[2664,"frontend::script"],[2669,"frontend::script::python"],[2736,"frontend::server"],[2766,"frontend::service_config"],[2782,"frontend::service_config::datanode"],[2870,"frontend::service_config::grpc"],[2916,"frontend::service_config::influxdb"],[2959,"frontend::service_config::mysql"],[3006,"frontend::service_config::opentsdb"],[3051,"frontend::service_config::otlp"],[3094,"frontend::service_config::postgres"],[3140,"frontend::service_config::prom_store"],[3183,"dyn_clone::sealed"],[3184,"tower_http::follow_redirect::policy::and"],[3185,"tower_http::follow_redirect::policy"],[3186,"core::any"],[3187,"core::error"],[3188,"snafu::backtrace_inert"],[3189,"core::option"],[3190,"alloc::string"],[3191,"core::convert"],[3192,"store_api::storage::descriptors"],[3193,"common_datasource::file_format"],[3194,"core::clone"],[3195,"async_compat"],[3196,"alloc::vec"],[3197,"core::result"],[3198,"core::fmt"],[3199,"core::fmt"],[3200,"tonic::request"],[3201,"tonic::request"],[3202,"tower_http::follow_redirect::policy::or"],[3203,"frunk_core::hlist"],[3204,"common_error::status_code"],[3205,"frunk_core::coproduct"],[3206,"core::any"],[3207,"serde::ser"],[3208,"common_meta::heartbeat::handler"],[3209,"meta_client::client"],[3210,"alloc::sync"],[3211,"servers::heartbeat_options"],[3212,"common_meta::heartbeat::handler"],[3213,"common_meta::heartbeat::mailbox"],[3214,"meta_client::client::heartbeat"],[3215,"core::time"],[3216,"core::future::future"],[3217,"alloc::boxed"],[3218,"core::pin"],[3219,"common_meta::cache_invalidator"],[3220,"catalog"],[3221,"common_base"],[3222,"sql::statements::statement"],[3223,"session::context"],[3224,"meta_client"],[3225,"query::plan"],[3226,"query::parser"],[3227,"greptime_proto::v1::greptime_request"],[3228,"servers::opentsdb::codec"],[3229,"servers::influxdb"],[3230,"std::collections::hash::map"],[3231,"greptime_proto::v1"],[3232,"common_query"],[3233,"greptime_proto::v1"],[3234,"servers::error"],[3235,"greptime_proto::v1"],[3236,"opentelemetry_proto::proto::tonic::collector::metrics::v1"],[3237,"sqlparser::dialect"],[3238,"greptime_proto::prometheus::remote"],[3239,"opentelemetry_proto::proto::tonic::collector::trace::v1"],[3240,"common_config"],[3241,"common_procedure::options"],[3242,"common_meta::kv_backend"],[3243,"common_procedure::procedure"],[3244,"sqlparser::ast"],[3245,"greptime_proto::prometheus::remote"],[3246,"common_meta::ddl"],[3247,"greptime_proto::v1::ddl_request"],[3248,"greptime_proto::prometheus::remote::read_request"],[3249,"greptime_proto::prometheus::remote"],[3250,"greptime_proto::v1::region"],[3251,"common_recordbatch"],[3252,"datanode::region_server"],[3253,"common_meta::ddl"],[3254,"greptime_proto::v1::meta"],[3255,"common_meta::peer"],[3256,"greptime_proto::v1::region"],[3257,"prometheus::counter"],[3258,"table::requests"],[3259,"greptime_proto::v1"],[3260,"servers::server"],[3261,"core::net::socket_addr"]],"d":["","","","","","","","","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the <code>Error::ContextValueNotFound</code> …","","SNAFU context selector for the <code>Error::CopyTable</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","","SNAFU context selector for the <code>Error::EmptyData</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::ExecLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecutePromql</code> variant","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::FindDatanode</code> variant","","SNAFU context selector for the <code>Error::FindTableRoute</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalAuthConfig</code> …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the <code>Error::IncompleteGrpcRequest</code>…","","SNAFU context selector for the <code>Error::InitDdlManager</code> …","","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the <code>Error::InvalidRegionRequest</code> …","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidSystemTableDef</code>…","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::InvokeRegionServer</code> …","","SNAFU context selector for the <code>Error::LeaderNotFound</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::OpenRaftEngineBackend</code>…","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::Permission</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ReadTable</code> variant","","SNAFU context selector for the <code>Error::RequestQuery</code> variant","","","SNAFU context selector for the <code>Error::RuntimeResource</code> …","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::SqlExecIntercepted</code> …","","SNAFU context selector for the <code>Error::StartMetaClient</code> …","","SNAFU context selector for the <code>Error::StartScriptManager</code> …","","SNAFU context selector for the <code>Error::StartServer</code> variant","","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableOperation</code> …","SNAFU context selector for the <code>Error::Table</code> variant","","SNAFU context selector for the <code>Error::TomlFormat</code> variant","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::VectorToGrpcColumn</code> …onsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Negotiating the content type of the remote read response.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Relative to client::region::RegionRequester","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples count of Prometheus remote write.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A placeholder for the real gRPC handler. It is temporary …","","","","","","","","","","","","","","","","Create scripts table for the specific catalog if it’s …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,88,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,88,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,0,5,0,5,0,5,0,5,0,5,0,5,0,5,0,5,5,0,5,0,5,0,0,5,0,5,0,5,0,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,41,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,10,13,14,15,17,18,19,20,21,22,23,24,25,26,27,29,30,31,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,30,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,13,14,19,10,13,14,15,17,18,19,20,21,22,23,24,25,26,27,29,30,31,25,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,27,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,43,43,10,10,13,13,14,14,15,15,17,17,18,18,19,19,20,20,44,44,45,45,46,46,47,47,21,21,48,48,22,22,49,49,50,50,51,51,52,52,23,23,24,24,25,25,53,53,54,54,55,55,56,56,26,26,57,57,58,58,59,59,27,27,60,60,61,61,29,29,30,30,31,31,62,62,63,63,64,64,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,24,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,22,26,29,21,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,54,10,17,18,31,15,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,23,47,20,50,58,59,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,43,43,10,10,13,13,14,14,15,15,17,17,18,18,19,19,20,20,44,44,45,45,46,46,47,47,21,21,48,48,22,22,49,49,50,50,51,51,52,52,23,23,24,24,25,25,53,53,54,54,55,55,56,56,26,26,57,57,58,58,59,59,27,27,60,60,61,61,29,29,30,30,31,31,62,62,63,63,64,64,5,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,32,33,34,35,36,37,38,39,40,41,43,10,13,14,15,17,18,19,20,44,45,46,47,21,48,22,49,50,51,52,23,24,25,53,54,55,56,26,57,58,59,27,60,61,29,30,31,62,63,64,5,186,187,188,189,190,186,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,188,189,206,207,208,190,209,210,211,212,213,214,215,216,217,218,219,220,194,221,222,223,224,225,226,227,228,193,229,230,231,187,232,215,225,231,213,222,205,207,208,233,206,195,196,197,198,199,200,201,202,203,204,209,210,211,212,214,216,217,218,219,221,222,223,224,226,227,228,229,230,232,234,220,212,235,217,227,228,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,107,84,84,84,84,84,84,84,84,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,106,236,237,106,106,106,106,0,106,106,106,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,0,106,106,106,106,106,106,106,106,106,106,106,0,106,0,0,236,237,106,106,0,236,237,106,106,106,0,0,106,106,106,106,0,175,106,106,106,106,106,106,106,106,106,106,106,106,106,0,106,106,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,0,0,0,0,0,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,0,0,0,0,155,150,151,150,155,150,151,155,150,151,155,150,151,155,150,151,155,150,151,151,155,155,150,151,155,150,151,155,150,151,155,150,151,155,150,151,150,150,150,155,150,151,155,150,151,155,155,150,150,151,151,155,150,151,155,150,151,151,155,150,151,150,155,150,151,155,150,151,151,155,150,151,155,150,151,155,150,151,155,155,150,150,151,151,155,150,151,155,150,151,0,0,0,0,0,0,0,0,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,159,161,161,162,162,163,163,164,164,165,165,167,167,168,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,159,161,161,162,162,163,163,164,164,165,165,167,167,168,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,159,159,161,161,162,162,163,163,164,164,165,165,167,167,168,168,159,161,162,163,164,165,167,168,159,161,162,163,164,165,167,168,0,238,238,238,0,0,0,169,170,169,169,170,169,170,170,169,170,169,170,169,170,170,170,169,170,169,170,169,169,170,170,169,170,169,170,170,169,170,170,169,170,169,169,170,170,169,170,169,170,170,169,170,170,169,170,170,169,170,169,170,169,170,169,170,169,169,170,170,169,170,169,170,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,239,239,239,239,239,239,239,239,239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,178,177,178,177,178,177,178,177,177,178,177,178,177,178,177,178,177,178,178,177,178,177,178,177,178,177,178,177,178,177,178,177,177,177,177,178,178,178,178,177,178,177,178,177,178,177,178,177,178,177,178,177,177,178,178,177,178,177,178,177,178,177,178,177,178,177,178,178,178,177,178,177,178,177,178,177,178,177,177,178,178,177,178,177,178,0,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,0,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[5,6],[-1,7,[]],[5,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],5,[[12,[11]]]],[[[13,[-1]]],5,[[12,[11]]]],[[[14,[-1]]],5,[[12,[11]]]],[[[15,[-1]]],5,[[12,[16]]]],[[[17,[-1]]],5,[[12,[11]]]],[[[18,[-1]]],5,[[12,[11]]]],[[[19,[-1]]],5,[[12,[11]]]],[[[20,[-1]]],5,[[12,[11]]]],[[[21,[-1]]],5,[[12,[11]]]],[[[22,[-1]]],5,[[12,[11]]]],[[[23,[-1]]],5,[[12,[11]]]],[[[24,[-1]]],5,[[12,[11]]]],[[[25,[-1]]],5,[[12,[11]]]],[[[26,[-1]]],5,[[12,[11]]]],[[[27,[-1]]],5,[[12,[28]]]],[[[29,[-1]]],5,[[12,[11]]]],[[[30,[-1]]],5,[[12,[11]]]],[[[31,[-1]]],5,[[12,[11]]]],[5,[[9,[7]]]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[[41,[-1]]],[[41,[-1]]],42],[43,43],[[[10,[-1]]],[[10,[-1]]],42],[[[13,[-1]]],[[13,[-1]]],42],[[[14,[-1]]],[[14,[-1]]],42],[[[15,[-1]]],[[15,[-1]]],42],[[[17,[-1]]],[[17,[-1]]],42],[[[18,[-1]]],[[18,[-1]]],42],[[[19,[-1]]],[[19,[-1]]],42],[[[20,[-1]]],[[20,[-1]]],42],[44,44],[45,45],[46,46],[[[47,[-1]]],[[47,[-1]]],42],[[[21,[-1]]],[[21,[-1]]],42],[48,48],[[[22,[-1]]],[[22,[-1]]],42],[49,49],[[[50,[-1]]],[[50,[-1]]],42],[51,51],[52,52],[[[23,[-1]]],[[23,[-1]]],42],[[[24,[-1]]],[[24,[-1]]],42],[[[25,[-1]]],[[25,[-1]]],42],[53,53],[[[54,[-1]]],[[54,[-1]]],42],[55,55],[56,56],[[[26,[-1]]],[[26,[-1]]],42],[57,57],[[[58,[-1]]],[[58,[-1]]],42],[[[59,[-1]]],[[59,[-1]]],42],[[[27,[-1]]],[[27,[-1]]],42],[60,60],[61,61],[[[29,[-1]]],[[29,[-1]]],42],[[[30,[-1]]],[[30,[-1]]],42],[[[31,[-1]]],[[31,[-1]]],42],[62,62],[63,63],[64,64],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[5,66,[67,[11]]],2],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[5,68],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],0,0,0,[[[10,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[13,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[14,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[15,[-1]]],[[69,[-2,5]]],[[12,[16]]],[]],[[[17,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[18,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[19,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[20,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[21,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[22,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[23,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[24,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[25,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[26,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[27,[-1]]],[[69,[-2,5]]],[[12,[28]]],[]],[[[29,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[30,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],[[[31,[-1]]],[[69,[-2,5]]],[[12,[11]]],[]],0,[[32,70],71],[[33,70],71],[[34,70],71],[[35,70],71],[[36,70],71],[[37,70],71],[[38,70],71],[[39,70],71],[[40,70],71],[[[41,[-1]],70],71,72],[[43,70],71],[[[10,[-1]],70],71,72],[[[13,[-1]],70],71,72],[[[14,[-1]],70],71,72],[[[15,[-1]],70],71,72],[[[17,[-1]],70],71,72],[[[18,[-1]],70],71,72],[[[19,[-1]],70],71,72],[[[20,[-1]],70],71,72],[[44,70],71],[[45,70],71],[[46,70],71],[[[47,[-1]],70],71,72],[[[21,[-1]],70],71,72],[[48,70],71],[[[22,[-1]],70],71,72],[[49,70],71],[[[50,[-1]],70],71,72],[[51,70],71],[[52,70],71],[[[23,[-1]],70],71,72],[[[24,[-1]],70],71,72],[[[25,[-1]],70],71,72],[[53,70],71],[[[54,[-1]],70],71,72],[[55,70],71],[[56,70],71],[[[26,[-1]],70],71,72],[[57,70],71],[[[58,[-1]],70],71,72],[[[59,[-1]],70],71,72],[[[27,[-1]],70],71,72],[[60,70],71],[[61,70],71],[[[29,[-1]],70],71,72],[[[30,[-1]],70],71,72],[[[31,[-1]],70],71,72],[[62,70],71],[[63,70],71],[[64,70],71],[[5,70],71],[[5,70],71],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[73,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,5],[33,5],[34,5],[35,5],[36,5],[37,5],[38,5],[39,5],[40,5],[[[41,[-1]]],5,[[12,[11]]]],[43,5],[[[10,[-1]]],5,[[12,[11]]]],[[[13,[-1]]],5,[[12,[11]]]],[[[14,[-1]]],5,[[12,[11]]]],[[[15,[-1]]],5,[[12,[16]]]],[[[17,[-1]]],5,[[12,[11]]]],[[[18,[-1]]],5,[[12,[11]]]],[[[19,[-1]]],5,[[12,[11]]]],[[[20,[-1]]],5,[[12,[11]]]],[44,5],[45,5],[46,5],[[[47,[-1]]],5,[[12,[74]]]],[[[21,[-1]]],5,[[12,[11]]]],[48,5],[[[22,[-1]]],5,[[12,[11]]]],[49,5],[[[50,[-1]]],5,[[12,[11]]]],[51,5],[52,5],[[[23,[-1]]],5,[[12,[11]]]],[[[24,[-1]]],5,[[12,[11]]]],[[[25,[-1]]],5,[[12,[11]]]],[53,5],[[[54,[-1]]],5,[[12,[11]]]],[55,5],[56,5],[[[26,[-1]]],5,[[12,[11]]]],[57,5],[[[58,[-1]]],5,[[12,[11]]]],[[[59,[-1]]],5,[[12,[11]]]],[[[27,[-1]]],5,[[12,[28]]]],[60,5],[61,5],[[[29,[-1]]],5,[[12,[11]]]],[[[30,[-1]]],5,[[12,[11]]]],[[[31,[-1]]],5,[[12,[11]]]],[62,5],[63,5],[64,5],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[5,[[9,[78]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[5,[[9,[7]]]],[5,81],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],0,[[],84],[66,-1,[]],[66,-1,[]],[-1,[[69,[84]]],85],[66,2],[[],[[9,[[86,[68]]]]]],[[84,84],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[84,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,0,0,[[],66],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[-1,[[2,[80]]],[]],[[84,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[88,[11]]],[]],[84,[[88,[11]]]],[84,11],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],0,[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[89,89],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[66,-1,[]],[66,-1,[]],[66,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[89,90],[[88,[2]]]],0,[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],0,[[[92,[91]],93,94],89],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[-1,[[2,[80]]],[]],[89,[[88,[2]]]],[[89,95,96],2],[[89,97,[99,[98]]],2],[[89,100],2],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[101,101],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[66,-1,[]],[66,-1,[]],[66,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[101,90],[[104,[[103,[102]]]]]],[[],66],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[[101,90],77],[-1,77,[]],[-1,-2,[],[]],[105,101],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,1],2,[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[106,-1],[[88,[2]]],[[12,[84]],107]],0,[106,108],[106,108],0,[[109,110,111],[[88,[2]]]],[106,106],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[112,[[88,[[92,[91]]]]]],0,[66,-1,[]],[66,-1,[]],[[106,110,111],[[104,[[103,[102]]]]]],[[106,113,111],[[104,[[103,[102]]]]]],[[106,114,111],[[104,[[103,[102]]]]]],[[106,68,111],[[104,[[103,[102]]]]]],[[106,115,111],[[104,[[103,[102]]]]]],[[106,114,111],[[104,[[103,[102]]]]]],[66,2],[[106,[67,[116]],111],[[104,[[103,[102]]]]]],[[106,117,111],[[104,[[103,[102]]]]]],[[106,111,68,[118,[11,11]]],[[104,[[103,[102]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[106,119,111],[[88,[120]]]],[[106,121,111],[[88,[120]]]],[[106,111,[86,[122]]],[[123,[[67,[[2,[11,120]]]]]]]],[[106,111,68,68,68,122],[[88,[120]]]],[[106,124,111],[[88,[120]]]],[[106,125,111],[[88,[120]]]],0,0,[[106,126],[[104,[[103,[102]]]]]],[[],66],[[106,111,68,68],[[104,[[103,[102]]]]]],0,[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[[106,68,68],[[104,[[103,[102]]]]]],[-1,-2,[],[]],[[106,127,111],[[104,[[103,[102]]]]]],0,[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[68,128],[[88,[[67,[110]]]]]],0,0,[106,109],0,0,0,0,0,[[106,110,111],[[88,[120]]]],[[106,129,111],[[104,[[103,[102]]]]]],0,0,0,[-1,[[2,[80]]],[]],0,[106,[[88,[2]]]],0,[-1,[[104,[[103,[102]]]]],[]],[106,[[104,[[103,[102]]]]]],[106,[[92,[130]]]],0,[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[[106,131,111],[[104,[[103,[102]]]]]],[[11,132,133],[[88,[[2,[134,135]]]]]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[[136,111],[[88,[2]]]],[-1,-2,[],[]],[[106,137,111],[[104,[[103,[102]]]]]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],0,0,[66,-1,[]],[66,-1,[]],[66,2],[-1,-1,[]],[-1,-2,[],[]],0,[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],0,[-1,-2,[],[]],[[134,138,139],140],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[140,[[88,[106]]]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],[[140,105],140],[[140,89],140],[[140,109],140],[[141,111],2],0,[142,77],[[[86,[142]]],[[123,[143]]]],[[68,120],[[123,[144]]]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[145,138],[[92,[146]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],0,[66,-1,[]],[66,-1,[]],[[146,147],[[104,[[103,[102]]]]]],[[146,147],[[88,[148]]]],[66,2],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[149,[[92,[150]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[151,152,153,[86,[154]]],[[104,[[103,[102]]]]]],[[155,156],[[104,[[103,[102]]]]]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,2],[66,2],[66,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[150,157],[[104,[[103,[102]]]]]],[[150,157],[[88,[158]]]],[[150,147],[[104,[[103,[102]]]]]],[[],66],[[],66],[[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,151],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[66,-1,[]],[159,160],[66,-1,[]],[161,160],[162,160],[66,-1,[]],[163,160],[66,-1,[]],[66,-1,[]],[164,160],[165,166],[66,-1,[]],[66,-1,[]],[167,166],[168,166],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[66,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,83,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[],[[92,[169]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[170,68],[[88,[2]]]],[171,[[88,[172]]]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[[169,115,111],[[104,[[103,[102]]]]]],[66,2],[66,2],[[170,111,68,[118,[11,11]]],[[123,[120]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],66],[[],66],[[170,111,68,68],[[123,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[108,173],[[88,[170]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[[170,106],[[88,[2]]]],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,83,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[92,[-2]],109],[[88,[174]]],[[12,[84]],107],175],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[66,-1,[]],[66,-1,[]],[66,2],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[68,[[88,[176]]]],[-1,[[2,[80]]],[]],[-1,[[69,[82]]],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[177,177],[178,178],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],0,[[],177],[[],178],[66,-1,[]],[66,-1,[]],[66,-1,[]],[66,-1,[]],[-1,[[69,[177]]],85],[-1,[[69,[178]]],85],[66,2],[66,2],[[177,177],77],[[178,178],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[177,70],71],[[178,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],66],[[],66],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[-1,[[2,[80]]],[]],[[177,-1],69,87],[[178,-1],69,87],[-1,[[69,[82]]],[]],[-1,[[69,[82]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,83,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],179],[66,-1,[]],[66,-1,[]],[-1,[[69,[179]]],85],[66,2],[[179,179],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[179,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[[179,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[180,180],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],180],[66,-1,[]],[66,-1,[]],[-1,[[69,[180]]],85],[66,2],0,[[180,180],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[180,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[[180,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[181,181],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],181],[66,-1,[]],[66,-1,[]],[-1,[[69,[181]]],85],[66,2],0,[[181,181],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[181,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[80]]],[]],[[181,-1],69,87],[-1,[[69,[82]]],[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[182,182],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],182],[66,-1,[]],[66,-1,[]],[-1,[[69,[182]]],85],[66,2],0,[[182,182],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[182,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[[182,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[183,183],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],183],[66,-1,[]],[66,-1,[]],[-1,[[69,[183]]],85],[66,2],0,[[183,183],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[183,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[76,[-2]]],[],[]],[-1,[[75,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[[183,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[184,184],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],184],[66,-1,[]],[66,-1,[]],[-1,[[69,[184]]],85],[66,2],0,[[184,184],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[184,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[80]]],[]],[[184,-1],69,87],[-1,[[69,[82]]],[]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[185,185],[[-1,-2],2,[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[-1,[[65,[-2]]],[],[]],[[],185],[66,-1,[]],[66,-1,[]],[-1,[[69,[185]]],85],[66,2],0,[[185,185],77],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[-1,-2],77,[],[]],[[185,70],71],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],66],[-1,-2,[],[]],[-1,[[75,[-2]]],[],[]],[-1,[[76,[-2]]],[],[]],[-1,77,[]],[-1,-2,[],[]],[[-1,-4],[[79,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[80]]],[]],[[185,-1],69,87],[-1,[[69,[82]]],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,[[69,[-2]]],[],[]],[-1,83,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",3183],[15,"tuple"],[3,"And",3184],[8,"Policy",3185],[4,"Error",8],[8,"Any",3186],[8,"Error",3187],[3,"Backtrace",3188],[4,"Option",3189],[3,"VectorToGrpcColumnSnafu",8],[3,"String",3190],[8,"Into",3191],[3,"InvalidSqlSnafu",8],[3,"IncompleteGrpcRequestSnafu",8],[3,"FindDatanodeSnafu",8],[6,"RegionNumber",3192],[3,"InvalidInsertRequestSnafu",8],[3,"InvalidDeleteRequestSnafu",8],[3,"InvalidSystemTableDefSnafu",8],[3,"TableNotFoundSnafu",8],[3,"SchemaExistsSnafu",8],[3,"ColumnNotFoundSnafu",8],[3,"LeaderNotFoundSnafu",8],[3,"ContextValueNotFoundSnafu",8],[3,"NotSupportedSnafu",8],[3,"IllegalPrimaryKeysDefSnafu",8],[3,"UnsupportedFormatSnafu",8],[4,"Format",3193],[3,"EmptyDataSnafu",8],[3,"ColumnNoneDefaultValueSnafu",8],[3,"InvalidRegionRequestSnafu",8],[3,"InitDdlManagerSnafu",8],[3,"InvalidateTableCacheSnafu",8],[3,"OpenRaftEngineBackendSnafu",8],[3,"HandleHeartbeatResponseSnafu",8],[3,"ExternalSnafu",8],[3,"RequestQuerySnafu",8],[3,"RuntimeResourceSnafu",8],[3,"StartServerSnafu",8],[3,"ShutdownServerSnafu",8],[3,"ParseAddrSnafu",8],[8,"Clone",3194],[3,"ParseSqlSnafu",8],[3,"CatalogSnafu",8],[3,"StartMetaClientSnafu",8],[3,"CreateMetaHeartbeatStreamSnafu",8],[3,"FindTableRouteSnafu",8],[3,"TableSnafu",8],[3,"PlanStatementSnafu",8],[3,"ReadTableSnafu",8],[3,"ExecLogicalPlanSnafu",8],[3,"InvokeRegionServerSnafu",8],[3,"SqlExecInterceptedSnafu",8],[3,"ExecutePromqlSnafu",8],[3,"PromStoreRemoteQueryPlanSnafu",8],[3,"DescribeStatementSnafu",8],[3,"StartScriptManagerSnafu",8],[3,"CopyTableSnafu",8],[3,"InsertSnafu",8],[3,"TableMetadataManagerSnafu",8],[3,"PermissionSnafu",8],[3,"TableOperationSnafu",8],[3,"IllegalAuthConfigSnafu",8],[3,"TomlFormatSnafu",8],[3,"Compat",3195],[15,"usize"],[3,"Vec",3196],[15,"str"],[4,"Result",3197],[3,"Formatter",3198],[6,"Result",3198],[8,"Debug",3198],[4,"Error",3199],[15,"u32"],[3,"Request",3200],[3,"Request",3200],[15,"bool"],[8,"StackError",3201],[3,"Or",3202],[3,"HNil",3203],[4,"StatusCode",3204],[4,"CNil",3205],[3,"TypeId",3186],[3,"FrontendOptions",2012],[8,"Deserializer",3206],[15,"slice"],[8,"Serializer",3207],[6,"Result",8],[3,"HeartbeatTask",2074],[3,"HeartbeatResponseHandlerContext",3208],[3,"MetaClient",3209],[3,"Arc",3210],[3,"HeartbeatOptions",3211],[6,"HeartbeatResponseHandlerExecutorRef",3208],[3,"HeartbeatStream",3212],[6,"MailboxRef",3213],[3,"HeartbeatSender",3212],[6,"OutgoingMessage",3213],[3,"Receiver",3214],[3,"Duration",3215],[3,"InvalidateTableCacheHandler",2119],[8,"Future",3216],[3,"Box",3217],[3,"Pin",3218],[6,"CacheInvalidatorRef",3219],[3,"Instance",2156],[8,"TomlSerializable",2012],[6,"CatalogManagerRef",3220],[3,"Plugins",3221],[4,"Statement",3222],[6,"QueryContextRef",3223],[3,"MetaClientOptions",3224],[4,"LogicalPlan",3225],[3,"PromQuery",3226],[4,"Request",3227],[3,"DataPoint",3228],[3,"InfluxdbRequest",3229],[3,"HashMap",3230],[3,"DeleteRequests",3231],[4,"Output",3232],[3,"InsertRequests",3231],[3,"Query",3233],[6,"Result",3234],[3,"RowDeleteRequests",3231],[3,"RowInsertRequests",3231],[3,"Metrics",3235],[3,"ExportMetricsServiceRequest",3236],[8,"Dialect",3237],[3,"ReadRequest",3233],[3,"StatementExecutor",3238],[3,"ExportTraceServiceRequest",3239],[3,"KvBackendConfig",3240],[3,"ProcedureConfig",3241],[6,"KvBackendRef",3242],[6,"ProcedureManagerRef",3243],[3,"ObjectName",3244],[3,"WriteRequest",3233],[6,"DatanodeManagerRef",3245],[6,"DdlTaskExecutorRef",3246],[3,"FrontendBuilder",2253],[4,"Expr",3247],[15,"i32"],[4,"ResponseType",3248],[3,"QueryResult",3233],[6,"PartitionRuleManagerRef",3249],[3,"FrontendRegionQueryHandler",2297],[3,"QueryRequest",3250],[6,"SendableRecordBatchStream",3251],[3,"RegionServer",3252],[3,"RegionInvoker",2330],[3,"StandaloneTableMetadataCreator",2330],[3,"TableMetadataAllocatorContext",3246],[3,"RawTableInfo",3253],[3,"Partition",3254],[3,"StandaloneDatanodeManager",2330],[3,"Peer",3255],[3,"RegionRequest",3250],[3,"RegionResponse",3250],[3,"METRIC_HANDLE_SQL_ELAPSED",2424],[3,"Histogram",3256],[3,"METRIC_HANDLE_PROMQL_ELAPSED",2424],[3,"METRIC_EXEC_PLAN_ELAPSED",2424],[3,"METRIC_HANDLE_SCRIPTS_ELAPSED",2424],[3,"METRIC_RUN_SCRIPT_ELAPSED",2424],[3,"PROM_STORE_REMOTE_WRITE_SAMPLES",2424],[6,"IntCounter",3257],[3,"OTLP_METRICS_ROWS",2424],[3,"OTLP_TRACES_ROWS",2424],[3,"DummyHandler",2669],[3,"ScriptExecutor",2669],[3,"CreateTableRequest",3258],[3,"CreateTableExpr",3231],[6,"QueryEngineRef",3259],[6,"ServerHandlers",3260],[8,"FrontendInstance",2156],[4,"SocketAddr",3261],[3,"DatanodeOptions",2782],[3,"DatanodeClientOptions",2782],[3,"GrpcOptions",2870],[3,"InfluxdbOptions",2916],[3,"MysqlOptions",2959],[3,"OpentsdbOptions",3006],[3,"OtlpOptions",3051],[3,"PostgresOptions",3094],[3,"PromStoreOptions",3140],[13,"ParseAddr",1912],[13,"ColumnNoneDefaultValue",1912],[13,"InvalidSql",1912],[13,"IncompleteGrpcRequest",1912],[13,"InvalidSystemTableDef",1912],[13,"TomlFormat",1912],[13,"NotSupported",1912],[13,"UnsupportedFormat",1912],[13,"ContextValueNotFound",1912],[13,"InitDdlManager",1912],[13,"InvalidateTableCache",1912],[13,"OpenRaftEngineBackend",1912],[13,"HandleHeartbeatResponse",1912],[13,"External",1912],[13,"RequestQuery",1912],[13,"RuntimeResource",1912],[13,"StartServer",1912],[13,"ShutdownServer",1912],[13,"ParseSql",1912],[13,"VectorToGrpcColumn",1912],[13,"FindDatanode",1912],[13,"InvalidInsertRequest",1912],[13,"InvalidDeleteRequest",1912],[13,"Catalog",1912],[13,"StartMetaClient",1912],[13,"CreateMetaHeartbeatStream",1912],[13,"FindTableRoute",1912],[13,"SchemaExists",1912],[13,"Table",1912],[13,"ColumnNotFound",1912],[13,"PlanStatement",1912],[13,"ReadTable",1912],[13,"ExecLogicalPlan",1912],[13,"InvokeRegionServer",1912],[13,"LeaderNotFound",1912],[13,"SqlExecIntercepted",1912],[13,"ExecutePromql",1912],[13,"PromStoreRemoteQueryPlan",1912],[13,"DescribeStatement",1912],[13,"IllegalPrimaryKeysDef",1912],[13,"StartScriptManager",1912],[13,"CopyTable",1912],[13,"Insert",1912],[13,"TableMetadataManager",1912],[13,"Permission",1912],[13,"EmptyData",1912],[13,"TableOperation",1912],[13,"InvalidRegionRequest",1912],[13,"IllegalAuthConfig",1912],[13,"TableNotFound",1912],[6,"FrontendInstanceRef",2156],[6,"StatementExecutorRef",2156],[6,"FrontendGrpcQueryHandlerRef",2664],[3,"Services",2736]],"b":[[819,"impl-Display-for-Error"],[820,"impl-Debug-for-Error"],[2169,"impl-Instance"],[2170,"impl-PrometheusHandler-for-Instance"],[2185,"impl-SqlQueryHandler-for-Instance"],[2186,"impl-GrpcQueryHandler-for-Instance"],[2187,"impl-PrometheusHandler-for-Instance"],[2189,"impl-OpentsdbProtocolHandler-for-Instance"],[2190,"impl-InfluxdbLineProtocolHandler-for-Instance"]]},\
"greptime":{"doc":"What is GreptimeDB","t":"HDENNDNNNNNNNNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMFLLLLFLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ALLOC","APP_VERSION","Application","Cli","Cli","Command","Datanode","Datanode","Frontend","Frontend","Metasrv","Metasrv","Standalone","Standalone","SubCommand","__private_field","and","and","and","and","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","command","command","command_for_update","command_for_update","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","full_version","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","log_dir","log_env_flags","log_level","main","or","or","or","or","print_version","sculpt","sculpt","sculpt","sculpt","short_version","start","stop","subcmd","subset","subset","subset","subset","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top_level_options","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip"],"q":[[0,"greptime"],[160,"tower_http::follow_redirect::policy::and"],[161,"tower_http::follow_redirect::policy"],[162,"clap_builder::builder::command"],[163,"cmd::options"],[164,"cmd::error"],[165,"async_compat"],[166,"prometheus::gauge"],[167,"core::fmt"],[168,"core::fmt"],[169,"clap_builder"],[170,"core::result"],[171,"clap_builder::util::id"],[172,"core::option"],[173,"tonic::request"],[174,"tonic::request"],[175,"frunk_core::hlist"],[176,"frunk_core::coproduct"],[177,"alloc::string"],[178,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,8,0,6,8,6,8,6,8,6,8,0,11,6,11,4,8,4,4,8,8,6,11,4,8,6,11,4,8,4,8,4,8,4,8,6,11,4,8,6,11,4,8,6,11,4,8,6,11,11,4,8,6,11,4,8,6,11,4,8,8,6,11,4,8,4,8,4,8,6,11,4,8,0,4,8,6,11,4,8,6,11,4,8,6,6,11,11,4,4,8,8,6,11,4,8,6,11,4,8,4,8,4,0,4,0,6,11,4,8,0,6,11,4,8,0,6,6,4,6,11,4,8,8,6,11,4,8,6,11,4,8,4,6,11,4,8,6,6,11,11,4,4,8,8,6,11,4,8,4,8,4,8,6,11,4,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[3,3],[3,3],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5],[[7,[6]]]],[[8,5],[[7,[6]]]],[[],3],[[],3],[[],3],[[],3],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[10,-1,[]],[10,-1,[]],[11,12],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,13],[10,13],[10,13],[10,13],[[8,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,[[18,[4,17]]]],[16,[[18,[8,17]]]],[16,[[18,[4,17]]]],[16,[[18,[8,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],[[21,[20]]]],[19,22],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,[[7,[5]]]],[[8,25],[[7,[5]]]],0,[[],13],0,[[],[[7,[13]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[],19],[-1,[[13,[27]]],[]],[-1,[[13,[27]]],[]],[-1,[[13,[27]]],[]],[-1,[[13,[27]]],[]],[[],19],[6,[[7,[13]]]],[6,[[7,[13]]]],0,[-1,[[18,[28]]],[]],[-1,[[18,[28]]],[]],[-1,[[18,[28]]],[]],[-1,[[18,[28]]],[]],[-1,29,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,25],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[4,16],[[18,[13,17]]]],[[8,16],[[18,[13,17]]]],[[4,16],[[18,[13,17]]]],[[8,16],[[18,[13,17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"And",160],[8,"Policy",161],[3,"Command",162],[3,"Command",0],[4,"Options",163],[4,"Application",0],[6,"Result",164],[4,"SubCommand",0],[3,"Compat",165],[15,"usize"],[3,"APP_VERSION",0],[6,"IntGaugeVec",166],[15,"tuple"],[3,"Formatter",167],[6,"Result",167],[3,"ArgMatches",168],[6,"Error",169],[4,"Result",170],[15,"str"],[3,"Id",171],[4,"Option",172],[15,"bool"],[3,"Request",173],[3,"Request",173],[3,"TopLevelOptions",163],[3,"Or",174],[3,"HNil",175],[4,"CNil",176],[3,"String",177],[3,"TypeId",178]],"b":[]},\
"index":{"doc":"","t":"AAANDNDNENNDGNDNDNDNDMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMRRAGIKAAKKDLLLLLLLLLMLLLLLDMLLLLLLLLLMLLLLLL","n":["inverted_index","error","format","DecodeFst","DecodeFstSnafu","DecodeProto","DecodeProtoSnafu","Err","Error","Ok","Read","ReadSnafu","Result","Seek","SeekSnafu","UnexpectedBlobSize","UnexpectedBlobSizeSnafu","UnexpectedFooterPayloadSize","UnexpectedFooterPayloadSizeSnafu","UnexpectedOffsetSize","UnexpectedOffsetSizeSnafu","actual_blob_size","actual_payload_size","as_any","as_error_source","backtrace","blob_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","max_payload_size","min_blob_size","next","offset","payload_size","size","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual_blob_size","actual_payload_size","blob_size","error","error","error","error","location","location","location","location","location","location","max_payload_size","min_blob_size","offset","payload_size","size","FOOTER_PAYLOAD_SIZE_SIZE","MIN_BLOB_SIZE","reader","FstMap","InvertedIndexReader","bitmap","blob","footer","fst","metadata","InvertedIndexBlobReader","bitmap","borrow","borrow_mut","from","fst","into","into_request","metadata","new","source","try_from","try_into","type_id","validate_blob_size","vzip","InvertedIndeFooterReader","blob_size","borrow","borrow_mut","from","into","into_request","metadata","new","read_payload","read_payload_size","source","try_from","try_into","type_id","validate_metas","validate_payload_size","vzip"],"q":[[0,"index"],[1,"index::inverted_index"],[3,"index::inverted_index::error"],[161,"index::inverted_index::error::Error"],[179,"index::inverted_index::format"],[182,"index::inverted_index::format::reader"],[189,"index::inverted_index::format::reader::blob"],[205,"index::inverted_index::format::reader::footer"],[223,"core::any"],[224,"core::error"],[225,"snafu::backtrace_inert"],[226,"core::option"],[227,"core::convert"],[228,"core::clone"],[229,"alloc::string"],[230,"alloc::vec"],[231,"core::result"],[232,"core::fmt"],[233,"core::fmt"],[234,"common_error::ext"],[235,"common_error::status_code"],[236,"core::any"],[237,"core::future::future"],[238,"alloc::boxed"],[239,"core::pin"],[240,"futures_io::if_std"],[241,"futures_io::if_std"],[242,"core::marker"]],"d":["","","SST Files with Inverted Index Format Specification","","SNAFU context selector for the <code>Error::DecodeFst</code> variant","","SNAFU context selector for the <code>Error::DecodeProto</code> variant","Contains the error value","","Contains the success value","","SNAFU context selector for the <code>Error::Read</code> variant","","","SNAFU context selector for the <code>Error::Seek</code> variant","","SNAFU context selector for the <code>Error::UnexpectedBlobSize</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnexpectedOffsetSize</code> …","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","InvertedIndexReader defines an asynchronous reader of …","Retrieve the bitmap for a given inverted index metadata …","","","Retrieve the finite state transducer (FST) map for a given …","Retrieve metadata of all inverted indices stored within …","Inverted index blob reader, implements <code>InvertedIndexReader</code>","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","The blob","","","","","","InvertedIndeFooterReader is for reading the footer section …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Check if the read metadata is consistent with expected …","",""],"i":[0,0,0,1,0,1,0,39,0,39,1,0,0,1,0,1,0,1,0,1,0,6,9,1,1,1,10,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,1,6,9,10,1,11,12,6,9,10,14,15,11,12,6,9,10,14,15,1,1,6,9,10,11,12,6,9,10,14,15,1,1,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,11,12,6,9,10,14,15,1,9,6,1,10,10,10,1,1,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,1,11,12,6,9,10,14,15,1,42,43,44,45,46,47,48,45,46,42,43,47,48,43,42,44,44,44,0,0,0,0,0,49,0,0,49,49,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,3,[]],[1,[[5,[4]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1,-2]]],1,[[8,[7]]],[[8,[7]]]],[[[9,[-1,-2]]],1,[[8,[7]]],[[8,[7]]]],[[[10,[-1,-2,-3,-4]]],1,[[8,[7]]],[[8,[7]]],[[8,[7]]],[[8,[7]]]],[1,[[5,[3]]]],[11,11],[12,12],[[[6,[-1,-2]]],[[6,[-1,-2]]],13,13],[[[9,[-1,-2]]],[[9,[-1,-2]]],13,13],[[[10,[-1,-2,-3,-4]]],[[10,[-1,-2,-3,-4]]],13,13,13,13],[14,14],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[1,17,[19,[18]]],16],[1,20],[[[6,[-1,-2]]],[[21,[-3,1]]],[[8,[7]]],[[8,[7]]],[]],[[[9,[-1,-2]]],[[21,[-3,1]]],[[8,[7]]],[[8,[7]]],[]],[[[10,[-1,-2,-3,-4]]],[[21,[-5,1]]],[[8,[7]]],[[8,[7]]],[[8,[7]]],[[8,[7]]],[]],[[11,22],23],[[12,22],23],[[[6,[-1,-2]],22],23,24,24],[[[9,[-1,-2]],22],23,24,24],[[[10,[-1,-2,-3,-4]],22],23,24,24,24,24],[[14,22],23],[[15,22],23],[[1,22],23],[[1,22],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,1],[12,1],[[[6,[-1,-2]]],1,[[8,[7]]],[[8,[7]]]],[[[9,[-1,-2]]],1,[[8,[7]]],[[8,[7]]]],[[[10,[-1,-2,-3,-4]]],1,[[8,[7]]],[[8,[7]]],[[8,[7]]],[[8,[7]]]],[14,1],[15,1],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],0,0,[1,[[5,[26]]]],0,0,0,[1,[[5,[3]]]],[1,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,18,[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,29,30,30],[[33,[[32,[31]]]]],[]],0,0,[[-1,29],[[33,[[32,[31]]]]],[]],[-1,[[33,[[32,[31]]]]],[]],0,[[[34,[-1]],29,30,30],[[33,[[32,[31]]]]],[35,36,37,38]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[34,[-1]],29],[[33,[[32,[31]]]]],[35,36,37,38]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[[[34,[-1]]],[[33,[[32,[31]]]]],[35,36,37,38]],[-1,[[34,[-1]]],[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,28,[]],[7,[[39,[16]]]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[[[40,[-1]]],[[39,[41]]],[35,36,37]],[[-1,7],[[40,[-1]]],[]],[[[40,[-1]],7],[[39,[41]]],[35,36,37]],[[[40,[-1]]],[[39,[7]]],[35,36,37]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,28,[]],[[[40,[-1]],41,7],[[39,[16]]],[35,36,37]],[[[40,[-1]],7],[[39,[16]]],[35,36,37]],[-1,-2,[],[]]],"c":[],"p":[[4,"Error",3],[8,"Any",223],[8,"Error",224],[3,"Backtrace",225],[4,"Option",226],[3,"UnexpectedBlobSizeSnafu",3],[15,"u64"],[8,"Into",227],[3,"UnexpectedFooterPayloadSizeSnafu",3],[3,"UnexpectedOffsetSizeSnafu",3],[3,"SeekSnafu",3],[3,"ReadSnafu",3],[8,"Clone",228],[3,"DecodeFstSnafu",3],[3,"DecodeProtoSnafu",3],[15,"tuple"],[15,"usize"],[3,"String",229],[3,"Vec",230],[15,"str"],[4,"Result",231],[3,"Formatter",232],[6,"Result",232],[8,"Debug",232],[3,"Request",233],[8,"StackError",234],[4,"StatusCode",235],[3,"TypeId",223],[3,"InvertedIndexMeta",236],[15,"u32"],[8,"Future",237],[3,"Box",238],[3,"Pin",239],[3,"InvertedIndexBlobReader",189],[8,"AsyncRead",240],[8,"AsyncSeek",240],[8,"Unpin",241],[8,"Send",241],[6,"Result",3],[3,"InvertedIndeFooterReader",205],[3,"InvertedIndexMetas",236],[13,"UnexpectedBlobSize",161],[13,"UnexpectedFooterPayloadSize",161],[13,"UnexpectedOffsetSize",161],[13,"Seek",161],[13,"Read",161],[13,"DecodeFst",161],[13,"DecodeProto",161],[8,"InvertedIndexReader",182]],"b":[[73,"impl-Display-for-Error"],[74,"impl-Debug-for-Error"]]},\
"log_store":{"doc":"","t":"DAAAANDNENDNDNDNNDNDGNDNDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDAMLLMLLLLLMLLLLMLMMLLMLLLLLLLLAMMMAMMMMMMLLMMLLLLLLLDRLLLLLLLLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLLDRDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADDDLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFHHLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLAF","n":["NoopLogStore","error","noop","raft_engine","test_util","AddEntryLogBatch","AddEntryLogBatchSnafu","Err","Error","FetchEntry","FetchEntrySnafu","IllegalNamespace","IllegalNamespaceSnafu","IllegalState","IllegalStateSnafu","Ok","OverrideCompactedEntry","OverrideCompactedEntrySnafu","RaftEngine","RaftEngineSnafu","Result","StartGcTask","StartGcTaskSnafu","StopGcTask","StopGcTaskSnafu","as_any","as_error_source","attempt_index","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","fail","fail","fail","first_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_size","namespace","next","ns","ns","source","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","attempt_index","end","error","error","error","first_index","location","location","location","location","location","location","location","location","max_size","namespace","ns","ns","source","source","start","EntryImpl","NamespaceImpl","NoopLogStore","append","append_batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_namespace","data","default","default","default","delete_namespace","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get_hash","hash","id","id","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","list_namespaces","namespace","namespace","obsolete","read","stop","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Config","RaftEngineBackend","backend","batch_compression_threshold","borrow","borrow_mut","bytes_per_sync","clone","clone_into","compat","compat_mut","compat_ref","compression_level","default","deref","deref_mut","deserialize","dir","drop","enable_log_recycle","engine","eq","fmt","format_version","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","log_store","memory_limit","prefill_for_recycle","prefill_limit","protos","purge_rewrite_garbage_ratio","purge_rewrite_threshold","purge_threshold","recovery_mode","recovery_read_block_size","recovery_threads","sanitize","serialize","spill_dir","target_file_size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RaftEngineBackend","SYSTEM_NAMESPACE","as_any","batch_delete","batch_get","batch_put","borrow","borrow_mut","compare_and_put","compat","compat_mut","compat_ref","delete","delete_range","deref","deref_mut","drop","engine","engine_delete","engine_get","engine_put","exists","from","from_subset","get","init","into","into_request","into_request","is_in_subset","name","put","range","to_subset","to_subset_unchecked","try_from","try_into","try_open_with_cfg","txn","type_id","vzip","MessageType","NAMESPACE_PREFIX","PurgeExpiredFilesFunction","RaftEngineLogStore","append","append_batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","check_entry","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","create_namespace","delete_namespace","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","engine","engine","entry","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","gc_task","index","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","list_namespaces","name","namespace","obsolete","read","span","start","started","stop","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","vzip","vzip","vzip","logstore","EntryImpl","LogStoreState","NamespaceImpl","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","clear","clear","clear","clear_data","clear_id","clear_id","clear_last_index","clear_namespace_id","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compute_size","compute_size","compute_size","create","data","data","default","default","default","default","default","default","default_instance","default_instance","default_instance","deref","deref","deref","deref_mut","deref_mut","deref_mut","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","file_descriptor_proto","file_descriptor_proto_data","file_descriptor_proto_lazy","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","get_cached_size","get_cached_size","get_cached_size","get_data","get_hash","get_id","get_id","get_last_index","get_namespace_id","get_unknown_fields","get_unknown_fields","get_unknown_fields","hash","id","id","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_initialized","is_initialized","is_initialized","last_index","merge_from","merge_from","merge_from","mut_data","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","namespace","namespace_id","new","new","new","new","new","new","parse_descriptor_proto","set_data","set_id","set_id","set_last_index","set_namespace_id","take_data","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown_fields","unknown_fields","unknown_fields","vzip","vzip","vzip","with_id","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","log_store_util","create_tmp_local_file_log_store"],"q":[[0,"log_store"],[5,"log_store::error"],[287,"log_store::error::Error"],[308,"log_store::noop"],[410,"log_store::raft_engine"],[464,"log_store::raft_engine::backend"],[505,"log_store::raft_engine::log_store"],[600,"log_store::raft_engine::protos"],[601,"log_store::raft_engine::protos::logstore"],[786,"log_store::test_util"],[787,"log_store::test_util::log_store_util"],[788,"core::any"],[789,"core::error"],[790,"snafu::backtrace_inert"],[791,"core::option"],[792,"core::convert"],[793,"core::clone"],[794,"async_compat"],[795,"alloc::string"],[796,"alloc::vec"],[797,"core::result"],[798,"core::fmt"],[799,"core::fmt"],[800,"tonic::request"],[801,"core::any"],[802,"alloc::boxed"],[803,"core::pin"],[804,"store_api::logstore::entry"],[805,"core::convert"],[806,"core::marker"],[807,"core::hash"],[808,"serde::de"],[809,"core::fmt"],[810,"serde::ser"],[811,"common_meta::rpc::store"],[812,"common_meta::rpc::store"],[813,"common_meta::error"],[814,"common_meta::rpc"],[815,"common_meta::rpc::store"],[816,"common_config"],[817,"protobuf::reflect::value"],[818,"protobuf::reflect::message"],[819,"protobuf::descriptor"],[820,"protobuf::unknown"],[821,"protobuf::coded_input_stream"],[822,"protobuf::error"],[823,"protobuf::coded_output_stream"],[824,"std::path"]],"d":["A noop log store which only for test","","","","","","SNAFU context selector for the <code>Error::AddEntryLogBatch</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::FetchEntry</code> variant","","SNAFU context selector for the <code>Error::IllegalNamespace</code> …","","SNAFU context selector for the <code>Error::IllegalState</code> variant","Contains the success value","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RaftEngine</code> variant","","","SNAFU context selector for the <code>Error::StartGcTask</code> variant","","SNAFU context selector for the <code>Error::StopGcTask</code> variant","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A noop log store which only for test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RaftEngine based KvBackend implementation.","KvBackend implementation based on raft_engine::Engine.","Compress a log batch if its size exceeds this value. …","","","Deprecated. Incrementally sync log files after specified …","","","","","","Acceleration factor for LZ4 compression. It can be fine …","","","","","Main directory to store log files. Will create on startup …","","Whether to recycle stale log files. If <code>true</code>, logically …","","","","Version of the log file.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Maximum memory bytes allowed for the in-memory index. …","Whether to prepare log files for recycling when start. If …","Maximum capacity for preparing log files for recycling …","","Purge rewrite log queue if its garbage ratio exceeds this …","Purge rewrite log queue if its size exceeds this value.","Purge append log queue if its size exceeds this value.","How to deal with file corruption during recovery.","Minimum I/O size for reading log files during recovery.","The number of threads used to scan and recovery log files.","","","Auxiliary directory to store log files. Will create on …","Target file size for rotating log files.","","","","","","","","RaftEngine based KvBackend implementation.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Append an entry to logstore. Currently of existence of …","Append a batch of entries to logstore. <code>RaftEngineLogStore</code> …","","","","","","","","Checks if entry does not override the min index of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a stream of entries from logstore in the given …","","","","","","","","","","","","","","","","","","","","","","","","","Generated file from <code>logstore.proto</code>","Generated files are compatible only with the same version …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a write log for the provided path, used for test."],"i":[0,0,0,0,0,1,0,63,0,1,0,1,0,1,0,63,1,0,1,0,0,1,0,1,0,1,1,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,6,7,10,1,11,12,13,14,6,7,16,10,11,12,13,14,6,7,16,10,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,1,11,12,13,14,6,7,16,10,1,16,6,7,10,10,11,12,13,14,6,7,16,10,1,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,11,11,12,12,13,13,14,14,6,6,7,7,16,16,10,10,1,1,11,12,13,14,6,7,16,10,1,16,10,1,7,16,1,16,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,11,12,13,14,6,7,16,10,1,81,82,83,84,82,81,85,86,83,84,87,88,82,81,82,81,88,82,85,86,82,0,0,0,32,32,32,36,37,32,36,37,36,37,36,37,32,36,37,32,36,37,32,36,37,32,36,32,36,37,32,32,36,37,32,36,37,32,36,37,32,36,37,37,37,37,37,32,36,37,32,36,37,36,37,32,36,37,37,37,36,37,32,36,37,32,36,37,32,32,36,36,37,37,32,36,37,32,32,36,32,32,32,36,37,32,36,37,32,36,37,32,36,37,32,36,37,32,36,37,32,36,37,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,52,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,65,65,65,66,68,65,66,68,66,65,68,68,65,66,68,65,66,68,65,66,68,65,65,65,65,66,68,65,66,68,65,66,68,65,66,65,65,68,65,66,68,68,65,66,68,65,68,65,66,68,65,66,68,65,65,66,66,68,68,65,66,68,65,66,65,65,65,65,65,65,65,68,65,66,68,65,66,68,65,66,68,65,66,68,65,65,66,68,65,66,68,0,0,0,0,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,67,71,70,67,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,67,67,67,67,70,70,71,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,71,71,71,71,0,0,0,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,71,67,71,70,67,67,70,71,71,67,71,67,71,67,70,71,67,70,71,67,70,71,67,67,70,70,71,71,67,70,71,67,70,71,70,67,70,71,67,67,70,71,67,67,67,67,70,70,71,71,0,67,67,71,70,67,67,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,67,70,71,71,67,70,71,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,3,[]],0,[1,[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[[[7,[-1]]],1,[[9,[8]]]],[[[10,[-1,-2,-3]]],1,[[9,[8]]],[[9,[8]]],[[9,[8]]]],[1,[[5,[3]]]],[11,11],[12,12],[13,13],[14,14],[6,6],[[[7,[-1]]],[[7,[-1]]],15],[[[16,[-1,-2,-3,-4]]],[[16,[-1,-2,-3,-4]]],15,15,15,15],[[[10,[-1,-2,-3]]],[[10,[-1,-2,-3]]],15,15,15],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[1,19,[21,[20]]],17],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[1,22],[19,17],[19,17],[19,17],[19,17],[19,17],[19,17],[19,17],[19,17],[19,17],0,[6,[[23,[-1,1]]],[]],[[[7,[-1]]],[[23,[-2,1]]],[[9,[8]]],[]],[[[10,[-1,-2,-3]]],[[23,[-4,1]]],[[9,[8]]],[[9,[8]]],[[9,[8]]],[]],0,[[11,24],25],[[12,24],25],[[13,24],25],[[14,24],25],[[6,24],25],[[[7,[-1]],24],25,26],[[[16,[-1,-2,-3,-4]],24],25,26,26,26,26],[[[10,[-1,-2,-3]],24],25,26,26,26],[[1,24],25],[[1,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,1],[12,1],[13,1],[14,1],[6,1],[[[7,[-1]]],1,[[9,[8]]]],[[[16,[-1,-2,-3,-4]]],1,[[9,[8]]],[[9,[8]]],[[9,[8]]],[[9,[19]]]],[[[10,[-1,-2,-3]]],1,[[9,[8]]],[[9,[8]]],[[9,[8]]]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],0,0,[1,[[5,[30]]]],0,0,[1,[[5,[3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,20,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,[[35,[[34,[33]]]]]],[[32,21],[[35,[[34,[33]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[37,37],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[32,[[35,[[34,[33]]]]]],[36,[[39,[38]]]],[[],32],[[],36],[[],37],[32,[[35,[[34,[33]]]]]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,17],[19,17],[19,17],[[32,-1,40],[],[[41,[[39,[38]]]]]],[[36,36],29],[[37,37],29],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[32,24],25],[[36,24],25],[[37,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],8,[42,43],44],[[37,-1],17,45],[36,40],[37,46],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[32,[[35,[[34,[33]]]]]],[[32,46]],[36],[[32,40],[[35,[[34,[33]]]]]],[[32,40],[[35,[[34,[33]]]]]],[32,[[35,[[34,[33]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[47,47],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[[],47],[19,-1,[]],[19,-1,[]],[-1,[[23,[47]]],48],0,[19,17],0,0,[[47,47],29],[[47,24],[[23,[17,49]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,29,[]],0,0,0,0,0,0,0,0,0,0,0,[47,[[23,[17,50]]]],[[47,-1],23,51],0,0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]],0,0,[52,2],[[52,53],[[35,[[34,[33]]]]]],[[52,54],[[35,[[34,[33]]]]]],[[52,55],[[35,[[34,[33]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[52,56],[[35,[[34,[33]]]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[52,[39,[38]],29],[[35,[[34,[33]]]]]],[[52,57],[[35,[[34,[33]]]]]],[19,-1,[]],[19,-1,[]],[19,17],0,[[58,[39,[38]]],[[59,[17]]]],[[58,[39,[38]]],[[59,[[5,[60]]]]]],[[58,[21,[38]],[21,[38]]],[[59,[17]]]],[[52,[39,[38]]],[[35,[[34,[33]]]]]],[-1,-1,[]],[-1,-2,[],[]],[[52,[39,[38]]],[[35,[[34,[33]]]]]],[[],19],[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,29,[]],[52,22],[[52,61],[[35,[[34,[33]]]]]],[[52,62],[[35,[[34,[33]]]]]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[47,[[63,[52]]]],[[52,64],[[35,[[34,[33]]]]]],[-1,31,[]],[-1,-2,[],[]],0,0,0,0,[65,[[35,[[34,[33]]]]]],[[65,21],[[35,[[34,[33]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,[[35,[[34,[33]]]]]],[[65,67],[[63,[17]]]],[68,68],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[65,[[35,[[34,[33]]]]]],[65,[[35,[[34,[33]]]]]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,17],[19,17],[19,17],0,0,[[65,-1,40],[],[[41,[[39,[38]]]]]],[[65,24],25],[[68,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],8],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[65,[[35,[[34,[33]]]]]],[66,22],[[65,46]],[[65,40],[[35,[[34,[33]]]]]],[[65,40],[[35,[[34,[33]]]]]],[65,[[17,[[5,[8]],[5,[8]]]]]],[65,[[63,[17]]]],[65,29],[65,[[35,[[34,[33]]]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[20,69],[[63,[65]]]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[67,2],[70,2],[71,2],[67,2],[70,2],[71,2],[67,72],[70,72],[71,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[67,17],[70,17],[71,17],[67,17],[67,17],[71,17],[70,17],[67,17],[67,67],[70,70],[71,71],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[67,73],[70,73],[71,73],[[8,8,[21,[38]]],67],[67,[[39,[38]]]],0,[[],67],[[],67],[[],70],[[],70],[[],71],[[],71],[[],67],[[],70],[[],71],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[67,74],[70,74],[71,74],[[],74],[[],74],[[],74],[19,17],[19,17],[19,17],[[67,67],29],[[70,70],29],[[71,71],29],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[-1,-2],29,[],[]],[[],75],0,0,[[67,24],25],[[70,24],25],[[71,24],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,73],[70,73],[71,73],[67,[[39,[38]]]],[[-1,-2],8,[42,43],44],[67,8],[71,8],[70,8],[67,8],[67,76],[70,76],[71,76],[[71,-1],17,45],[67,40],[71,46],0,0,[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[34,[67]]],[[34,[2]]]],[[[34,[70]]],[[34,[2]]]],[[[34,[71]]],[[34,[2]]]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[67,29],[70,29],[71,29],0,[[67,77],[[78,[17]]]],[[70,77],[[78,[17]]]],[[71,77],[[78,[17]]]],[67,[[21,[38]]]],[67,76],[70,76],[71,76],[67],0,[[],67],[[],67],[[],70],[[],70],[[],71],[[],71],[[],75],[[67,[21,[38]]],17],[[67,8],17],[[71,8],17],[[70,8],17],[[67,8],17],[67,[[21,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,71],[[67,79],[[78,[17]]]],[[70,79],[[78,[17]]]],[[71,79],[[78,[17]]]],0,[-1,65,[[41,[80]]]]],"c":[],"p":[[4,"Error",5],[8,"Any",788],[8,"Error",789],[3,"Backtrace",790],[4,"Option",791],[3,"IllegalStateSnafu",5],[3,"IllegalNamespaceSnafu",5],[15,"u64"],[8,"Into",792],[3,"OverrideCompactedEntrySnafu",5],[3,"StartGcTaskSnafu",5],[3,"StopGcTaskSnafu",5],[3,"AddEntryLogBatchSnafu",5],[3,"RaftEngineSnafu",5],[8,"Clone",793],[3,"FetchEntrySnafu",5],[15,"tuple"],[3,"Compat",794],[15,"usize"],[3,"String",795],[3,"Vec",796],[15,"str"],[4,"Result",797],[3,"Formatter",798],[6,"Result",798],[8,"Debug",798],[3,"Request",799],[3,"Request",799],[15,"bool"],[8,"StackError",800],[3,"TypeId",788],[3,"NoopLogStore",308],[8,"Future",801],[3,"Box",802],[3,"Pin",803],[3,"EntryImpl",308],[3,"NamespaceImpl",308],[15,"u8"],[15,"slice"],[6,"Id",804],[8,"AsRef",792],[8,"Hash",805],[8,"Sized",806],[8,"BuildHasher",805],[8,"Hasher",805],[6,"Id",807],[3,"Config",410],[8,"Deserializer",808],[3,"Error",798],[4,"Error",809],[8,"Serializer",810],[3,"RaftEngineBackend",464],[3,"BatchDeleteRequest",811],[3,"BatchGetRequest",811],[3,"BatchPutRequest",811],[3,"CompareAndPutRequest",811],[3,"DeleteRangeRequest",811],[3,"Engine",812],[6,"Result",813],[3,"KeyValue",814],[3,"PutRequest",811],[3,"RangeRequest",811],[6,"Result",5],[3,"Txn",815],[3,"RaftEngineLogStore",505],[3,"PurgeExpiredFilesFunction",505],[3,"EntryImpl",601],[3,"MessageType",505],[3,"WalConfig",816],[3,"LogStoreState",601],[3,"NamespaceImpl",601],[4,"ReflectValueRef",817],[15,"u32"],[3,"MessageDescriptor",818],[3,"FileDescriptorProto",819],[3,"UnknownFields",820],[3,"CodedInputStream",821],[6,"ProtobufResult",822],[3,"CodedOutputStream",823],[3,"Path",824],[13,"OverrideCompactedEntry",287],[13,"FetchEntry",287],[13,"AddEntryLogBatch",287],[13,"RaftEngine",287],[13,"StartGcTask",287],[13,"StopGcTask",287],[13,"IllegalState",287],[13,"IllegalNamespace",287]],"b":[[136,"impl-Debug-for-Error"],[137,"impl-Display-for-Error"],[651,"impl-Default-for-%26EntryImpl"],[652,"impl-Default-for-EntryImpl"],[653,"impl-Default-for-%26LogStoreState"],[654,"impl-Default-for-LogStoreState"],[655,"impl-Default-for-%26NamespaceImpl"],[656,"impl-Default-for-NamespaceImpl"],[745,"impl-EntryImpl"],[746,"impl-Message-for-EntryImpl"],[747,"impl-LogStoreState"],[748,"impl-Message-for-LogStoreState"],[749,"impl-Message-for-NamespaceImpl"],[750,"impl-NamespaceImpl"]]},\
"meta_client":{"doc":"","t":"DLLALLLLLMMLFFFFLLLLLLLLLALLLLMLLLLLMLMMLLLLLLLRRDDGDDALLLLLLLLLLLMMLLLLLLLLLLLAMLMLLLLLLLLLLLMLMLMLMLMLLLLLLLLALMLMLLMMMMLLLLLLLLLLAALMLLLLLMMMLAMLMLLLLLLLLLLLLLLLLLLDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMLMMLLLLLLLLLLLLLDDMLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLFLLFLMLMLLLLLLLLLLLLLLLLLDDDDLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLMMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLNDNDNDNDNDNDNENDNDNDNDNDNGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMM","n":["MetaClientOptions","borrow","borrow_mut","client","clone","clone_into","compat","compat_mut","compat_ref","connect_timeout","ddl_timeout","default","default_connect_timeout","default_ddl_timeout","default_heartbeat_timeout","default_timeout","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","from","from_ref","from_subset","heartbeat_timeout","init","into","into_request","into_request","is_in_subset","metasrv_addrs","serialize","tcp_nodelay","timeout","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DEFAULT_ASK_LEADER_MAX_RETRY","DEFAULT_SUBMIT_DDL_MAX_RETRY","HeartbeatSender","HeartbeatStream","Id","MetaClient","MetaClientBuilder","ask_leader","ask_leader","batch_delete","batch_get","batch_put","borrow","borrow","borrow_mut","borrow_mut","build","channel_config","channel_manager","channel_manager","channel_manager","clone","clone","clone_into","clone_into","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ddl","ddl","ddl_channel_manager","ddl_channel_manager","ddl_client","default","default","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","enable_ddl","enable_ddl","enable_heartbeat","enable_heartbeat","enable_lock","enable_lock","enable_router","enable_router","enable_store","enable_store","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","heartbeat","heartbeat","heartbeat","heartbeat_channel_manager","heartbeat_channel_manager","heartbeat_client","id","id","id","id","id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","load_balance","lock","lock","lock","lock_client","new","new","put","range","role","role","sender","start","store","store","store_client","stream","submit_ddl_task","submit_ddl_task","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unlock","vzip","vzip","with_channel_manager","AskLeader","LeadershipGroup","ask_leader","ask_leader_inner","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_asker","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","get_leader","id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","leader","leadership_group","max_retry","new","peers","role","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Client","Inner","ask_leader","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_not_leader","is_started","is_started","is_unreachable","make_client","max_retry","new","role","start","start","submit_ddl_task","submit_ddl_task","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Client","HeartbeatSender","HeartbeatStream","Inner","ask_leader","ask_leader","ask_leader","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","heartbeat","heartbeat","id","id","id","id","id","init","init","init","init","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_started","is_started","make_client","max_retry","message","new","new","new","new","role","role","send","sender","start","start","stream","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","random_get","Client","Inner","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_started","is_started","lock","lock","make_client","new","peers","random_client","role","start","start","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unlock","unlock","vzip","vzip","Client","Inner","batch_delete","batch_delete","batch_get","batch_get","batch_put","batch_put","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compare_and_put","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_range","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_started","is_started","make_client","new","peers","put","put","random_client","range","range","role","start","start","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AskLeader","AskLeaderSnafu","AskLeaderTimeout","AskLeaderTimeoutSnafu","ConvertMetaRequest","ConvertMetaRequestSnafu","ConvertMetaResponse","ConvertMetaResponseSnafu","CreateChannel","CreateChannelSnafu","CreateHeartbeatStream","CreateHeartbeatStreamSnafu","Err","Error","IllegalGrpcClientState","IllegalGrpcClientStateSnafu","InvalidResponseHeader","InvalidResponseHeaderSnafu","MetaServer","MetaServerSnafu","NoLeader","NoLeaderSnafu","NotStarted","NotStartedSnafu","Ok","Result","RetryTimesExceeded","RetryTimesExceededSnafu","SendHeartbeat","SendHeartbeatSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","msg","name","next","source","status_code","times","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","code","err_msg","err_msg","error","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","source","source","source","source","times"],"q":[[0,"meta_client"],[47,"meta_client::client"],[167,"meta_client::client::ask_leader"],[229,"meta_client::client::ddl"],[295,"meta_client::client::heartbeat"],[418,"meta_client::client::load_balance"],[419,"meta_client::client::lock"],[485,"meta_client::client::store"],[561,"meta_client::error"],[999,"meta_client::error::Error"],[1022,"async_compat"],[1023,"core::time"],[1024,"core::result"],[1025,"serde::de"],[1026,"core::fmt"],[1027,"core::fmt"],[1028,"tonic::request"],[1029,"core::option"],[1030,"core::any"],[1031,"alloc::string"],[1032,"common_meta::rpc::store"],[1033,"common_meta::rpc::store"],[1034,"common_grpc::channel_manager"],[1035,"common_meta::rpc::lock"],[1036,"common_meta::rpc::store"],[1037,"core::clone"],[1038,"common_meta::rpc::ddl"],[1039,"common_meta::rpc::ddl"],[1040,"core::future::future"],[1041,"alloc::boxed"],[1042,"core::pin"],[1043,"common_meta::rpc::lock"],[1044,"greptime_proto::v1::meta::heartbeat_client"],[1045,"alloc::vec"],[1046,"core::convert"],[1047,"greptime_proto::v1::meta::ddl_task_client"],[1048,"greptime_proto::v1::meta"],[1049,"tonic::codec::decode"],[1050,"core::ops::function"],[1051,"greptime_proto::v1::meta"],[1052,"greptime_proto::v1::meta"],[1053,"greptime_proto::v1::meta"],[1054,"snafu::backtrace_inert"],[1055,"common_error::status_code"],[1056,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Ask the leader address of <code>metasrv</code>, and the heartbeat …","BatchDelete atomically deletes the given keys from the …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","","","","","","","","","","CompareAndPut atomically puts the value to the given …","","","","","","","","","","","","","","DeleteRange deletes the given range from the key-value …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns a heartbeat bidirectional streaming: (sender, …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Fetch the next message from this stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AskLeader</code> variant","","SNAFU context selector for the <code>Error::AskLeaderTimeout</code> …","","SNAFU context selector for the <code>Error::ConvertMetaRequest</code> …","","SNAFU context selector for the <code>Error::ConvertMetaResponse</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::CreateHeartbeatStream</code>…","Contains the error value","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidResponseHeader</code>…","","SNAFU context selector for the <code>Error::MetaServer</code> variant","","SNAFU context selector for the <code>Error::NoLeader</code> variant","","SNAFU context selector for the <code>Error::NotStarted</code> variant","Contains the success value","","","SNAFU context selector for the <code>Error::RetryTimesExceeded</code> …","","SNAFU context selector for the <code>Error::SendHeartbeat</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,16,16,16,16,25,16,25,16,25,16,25,25,16,25,16,25,16,16,25,16,25,16,25,16,0,16,25,25,16,25,16,16,25,16,25,16,25,16,25,25,25,25,25,25,25,25,25,25,25,16,25,16,25,16,25,16,0,16,16,25,25,16,16,33,34,25,16,25,16,25,16,25,25,16,16,25,16,0,0,16,16,16,25,16,16,16,33,25,33,16,0,16,16,34,16,16,25,16,25,16,25,16,25,16,25,16,25,16,16,25,16,16,0,0,58,58,61,58,61,58,58,58,58,61,58,61,58,61,58,58,61,58,61,58,61,58,61,58,61,58,58,61,58,58,58,61,58,61,58,61,61,58,58,61,58,61,58,58,58,61,58,58,61,58,61,58,61,58,61,58,61,58,61,58,0,0,64,30,64,30,64,64,30,30,30,64,30,64,30,64,30,64,30,64,30,64,30,64,30,64,30,30,64,64,30,64,30,30,64,30,30,64,64,30,64,0,30,64,0,64,64,30,64,30,64,30,64,30,30,64,30,64,30,64,30,64,30,64,30,64,0,0,0,0,35,70,70,33,34,35,70,33,34,35,70,70,35,35,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,34,35,70,33,34,35,70,35,33,34,35,70,35,70,33,34,33,34,70,33,34,35,70,35,33,34,35,70,33,33,34,34,35,35,70,70,33,34,35,70,35,70,70,70,34,33,34,35,70,33,70,33,33,35,70,34,35,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,33,34,35,70,0,0,0,39,76,39,76,76,39,39,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,76,39,39,76,76,39,76,39,39,76,39,39,76,76,39,76,39,76,39,76,76,39,76,76,76,39,76,39,39,76,39,76,39,76,39,76,39,76,39,76,39,76,0,0,50,84,50,84,50,84,50,84,50,84,84,50,50,50,84,50,84,50,84,50,84,50,84,50,84,50,84,50,84,50,84,50,84,50,50,84,84,50,84,50,50,84,50,50,84,84,50,84,50,84,84,50,84,50,84,84,50,84,84,50,84,50,50,84,50,84,50,84,50,84,50,84,50,84,98,0,98,0,98,0,98,0,98,0,98,0,18,0,98,0,98,0,98,0,98,0,98,0,18,0,98,0,98,0,98,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,107,108,109,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,102,103,105,106,111,112,107,108,109,113,114,115,110,103,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,108,102,103,105,106,107,108,109,110,102,103,105,106,111,112,107,108,109,113,114,115,110,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,102,102,103,103,105,105,106,106,111,111,112,112,107,107,108,108,109,109,113,113,114,114,115,115,110,110,98,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,103,110,107,98,98,98,110,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,102,103,105,106,111,112,107,108,109,113,114,115,110,98,118,119,120,121,119,122,123,121,124,125,120,126,127,128,129,118,130,125,124,127,128,129,130],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[[],1],[[],4],[[],4],[[],4],[[],4],[5,-1,[]],[5,-1,[]],[-1,[[6,[1]]],7],[5,2],[[1,1],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,[[1,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],5],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],0,[[1,-1],6,13],0,0,[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[16,[[18,[17]]]],[[16,19],[[18,[20]]]],[[16,21],[[18,[22]]]],[[16,23],[[18,[24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,16],[16,26],[[25,27],25],0,0,[25,25],[16,16],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[16,28],[[18,[29]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[[25,27],25],0,[16,[[18,[30]]]],[[],25],[[],16],[[16,31],[[18,[32]]]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[25,25],0,[25,25],0,[25,25],0,[25,25],0,[25,25],0,[[25,9],10],[[16,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[16,[[18,[[2,[33,34]]]]]],0,[[25,27],25],0,[16,[[18,[35]]]],[16,36],0,0,0,0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,[[16,37],[[18,[38]]]],0,[16,[[18,[39]]]],[[40,40,41],25],[36,16],[[16,42],[[18,[43]]]],[[16,44],[[18,[45]]]],0,0,0,[[16,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]],49]],0,0,[16,[[18,[50]]]],0,[[16,51],[[18,[52]]]],[[16,53,51],[[56,[[55,[54]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[16,57],[[18,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[36,27],16],0,0,[58,[[18,[17]]]],[58,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[58,58],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[58,-1],[[18,[[60,[59]]]]],[[47,[46]]]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[[61,9],10],[[58,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,[[14,[17]]]],0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,0,0,[[36,41,-1,27,5],58,[[63,[[62,[17]]]]]],0,0,[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[30,30],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[[30,9],10],[[64,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[[],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[[14,[65]]],8],[30,8],[64,8],[66,8],[[64,-1],[[18,[[67,[59]]]]],[[47,[46]]]],0,[[36,41,27,5],30],0,[[30,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[[64,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[[30,68],[[18,[69]]]],[[64,68],[[18,[69]]]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[35,[[18,[17]]]],[70,[[18,[17]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[35,35],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[5,2],[5,2],[[34,9],10],[[35,9],10],[[70,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,[[18,[[2,[33,34]]]]]],[70,[[18,[[2,[33,34]]]]]],[33,36],[34,36],0,0,0,[[],5],[[],5],[[],5],[[],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[35,8],[70,8],[[70,-1],[[18,[[60,[59]]]]],[[47,[46]]]],0,[34,[[18,[[14,[71]]]]]],[[36,41,[73,[72]]],33],[[36,[74,[71]]],34],[[36,41,27,5],35],[[36,41,27,5],70],0,0,[[33,72],[[18,[2]]]],0,[[35,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[[70,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],0,[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,-1],[[14,[-2]]],75,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[39,39],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[[39,9],10],[[76,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[[],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[39,8],[76,8],[[39,77],[[18,[78]]]],[[76,77],[[18,[78]]]],[[76,-1],[[18,[[79,[59]]]]],[[47,[46]]]],[[36,41,27],39],0,[76,[[18,[[79,[59]]]]]],0,[[39,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[[76,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[39,80],[[18,[81]]]],[[76,80],[[18,[81]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[50,82],[[18,[83]]]],[[84,82],[[18,[83]]]],[[50,85],[[18,[86]]]],[[84,85],[[18,[86]]]],[[50,87],[[18,[88]]]],[[84,87],[[18,[88]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[50,50],[[-1,-2],2,[],[]],[[50,89],[[18,[90]]]],[[84,89],[[18,[90]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[50,91],[[18,[92]]]],[[84,91],[[18,[92]]]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,2],[5,2],[[50,9],10],[[84,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[[],5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[50,8],[84,8],[[84,-1],[[18,[[93,[59]]]]],[[47,[46]]]],[[36,41,27],50],0,[[50,94],[[18,[95]]]],[[84,94],[[18,[95]]]],[84,[[18,[[93,[59]]]]]],[[50,96],[[18,[97]]]],[[84,96],[[18,[97]]]],0,[[50,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[[84,-2],[[18,[2]]],[[47,[46]]],[[47,[[48,[-1]]]]]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[98,99],[-1,100,[]],[98,[[14,[101]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[102,[-1]]],98,[[63,[17]]]],[[[103,[-1,-2]]],98,[[63,[104]]],[[63,[17]]]],[105,98],[106,98],[[[107,[-1]]],98,[[63,[17]]]],[[[108,[-1]]],98,[[63,[17]]]],[109,98],[[[110,[-1,-2]]],98,[[63,[5]]],[[63,[17]]]],[98,[[14,[100]]]],[[[102,[-1]]],[[102,[-1]]],49],[[[103,[-1,-2]]],[[103,[-1,-2]]],49,49],[105,105],[106,106],[111,111],[112,112],[[[107,[-1]]],[[107,[-1]]],49],[[[108,[-1]]],[[108,[-1]]],49],[109,109],[113,113],[114,114],[115,115],[[[110,[-1,-2]]],[[110,[-1,-2]]],49,49],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[98,5,[62,[17]]],2],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[98,46],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],[5,2],0,0,[[[102,[-1]]],[[6,[-2,98]]],[[63,[17]]],[]],[[[103,[-1,-2]]],[[6,[-3,98]]],[[63,[104]]],[[63,[17]]],[]],[105,[[6,[-1,98]]],[]],[106,[[6,[-1,98]]],[]],[[[107,[-1]]],[[6,[-2,98]]],[[63,[17]]],[]],[[[108,[-1]]],[[6,[-2,98]]],[[63,[17]]],[]],[109,[[6,[-1,98]]],[]],[[[110,[-1,-2]]],[[6,[-3,98]]],[[63,[5]]],[[63,[17]]],[]],[[[102,[-1]],9],10,116],[[[103,[-1,-2]],9],10,116,116],[[105,9],10],[[106,9],10],[[111,9],10],[[112,9],10],[[[107,[-1]],9],10,116],[[[108,[-1]],9],10,116],[[109,9],10],[[113,9],10],[[114,9],10],[[115,9],10],[[[110,[-1,-2]],9],10,116,116],[[98,9],10],[[98,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[66,98],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[102,[-1]]],98,[[63,[17]]]],[[[103,[-1,-2]]],98,[[63,[104]]],[[63,[17]]]],[105,98],[106,98],[111,98],[112,98],[[[107,[-1]]],98,[[63,[17]]]],[[[108,[-1]]],98,[[63,[17]]]],[109,98],[113,98],[114,98],[115,98],[[[110,[-1,-2]]],98,[[63,[5]]],[[63,[17]]]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,0,[98,[[14,[117]]]],[98,[[14,[100]]]],[98,104],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"MetaClientOptions",0],[15,"tuple"],[3,"Compat",1022],[3,"Duration",1023],[15,"usize"],[4,"Result",1024],[8,"Deserializer",1025],[15,"bool"],[3,"Formatter",1026],[6,"Result",1026],[3,"Request",1027],[3,"Request",1027],[8,"Serializer",1028],[4,"Option",1029],[3,"TypeId",1030],[3,"MetaClient",47],[3,"String",1031],[6,"Result",561],[3,"BatchDeleteRequest",1032],[3,"BatchDeleteResponse",1032],[3,"BatchGetRequest",1032],[3,"BatchGetResponse",1032],[3,"BatchPutRequest",1032],[3,"BatchPutResponse",1032],[3,"MetaClientBuilder",47],[3,"ChannelConfig",1033],[3,"ChannelManager",1033],[3,"CompareAndPutRequest",1032],[3,"CompareAndPutResponse",1032],[3,"Client",229],[3,"DeleteRangeRequest",1032],[3,"DeleteRangeResponse",1032],[3,"HeartbeatSender",295],[3,"HeartbeatStream",295],[3,"Client",295],[6,"Id",47],[3,"LockRequest",1034],[3,"LockResponse",1034],[3,"Client",419],[15,"u64"],[4,"Role",1035],[3,"PutRequest",1032],[3,"PutResponse",1032],[3,"RangeRequest",1032],[3,"RangeResponse",1032],[15,"str"],[8,"AsRef",1036],[15,"slice"],[8,"Clone",1037],[3,"Client",485],[3,"SubmitDdlTaskRequest",1038],[3,"SubmitDdlTaskResponse",1038],[3,"ExecutorContext",1039],[8,"Future",1040],[3,"Box",1041],[3,"Pin",1042],[3,"UnlockRequest",1034],[3,"AskLeader",167],[3,"Channel",1043],[3,"HeartbeatClient",1044],[3,"LeadershipGroup",167],[3,"Vec",1045],[8,"Into",1036],[3,"Inner",229],[3,"ResponseHeader",1035],[3,"Status",1046],[3,"DdlTaskClient",1047],[3,"SubmitDdlTaskRequest",1035],[3,"SubmitDdlTaskResponse",1035],[3,"Inner",295],[3,"HeartbeatResponse",1035],[3,"HeartbeatRequest",1035],[3,"Sender",1048],[3,"Streaming",1049],[8,"FnOnce",1050],[3,"Inner",419],[3,"LockRequest",1035],[3,"LockResponse",1035],[3,"LockClient",1051],[3,"UnlockRequest",1035],[3,"UnlockResponse",1035],[3,"BatchDeleteRequest",1035],[3,"BatchDeleteResponse",1035],[3,"Inner",485],[3,"BatchGetRequest",1035],[3,"BatchGetResponse",1035],[3,"BatchPutRequest",1035],[3,"BatchPutResponse",1035],[3,"CompareAndPutRequest",1035],[3,"CompareAndPutResponse",1035],[3,"DeleteRangeRequest",1035],[3,"DeleteRangeResponse",1035],[3,"StoreClient",1052],[3,"PutRequest",1035],[3,"PutResponse",1035],[3,"RangeRequest",1035],[3,"RangeResponse",1035],[4,"Error",561],[8,"Any",1030],[8,"Error",1053],[3,"Backtrace",1054],[3,"IllegalGrpcClientStateSnafu",561],[3,"MetaServerSnafu",561],[4,"StatusCode",1055],[3,"AskLeaderSnafu",561],[3,"NoLeaderSnafu",561],[3,"NotStartedSnafu",561],[3,"SendHeartbeatSnafu",561],[3,"CreateHeartbeatStreamSnafu",561],[3,"RetryTimesExceededSnafu",561],[3,"AskLeaderTimeoutSnafu",561],[3,"CreateChannelSnafu",561],[3,"InvalidResponseHeaderSnafu",561],[3,"ConvertMetaRequestSnafu",561],[3,"ConvertMetaResponseSnafu",561],[8,"Debug",1026],[8,"StackError",1056],[13,"MetaServer",999],[13,"IllegalGrpcClientState",999],[13,"SendHeartbeat",999],[13,"AskLeaderTimeout",999],[13,"AskLeader",999],[13,"NoLeader",999],[13,"CreateChannel",999],[13,"NotStarted",999],[13,"CreateHeartbeatStream",999],[13,"InvalidResponseHeader",999],[13,"ConvertMetaRequest",999],[13,"ConvertMetaResponse",999],[13,"RetryTimesExceeded",999]],"b":[[149,"impl-MetaClient"],[150,"impl-DdlTaskExecutor-for-MetaClient"],[767,"impl-Display-for-Error"],[768,"impl-Debug-for-Error"]]},\
"meta_srv":{"doc":"","t":"CAAAAAAAAAAAAAAAAAAAAADLLFLLLLLLLFLLLLLLMLLLLLLMFLMLLMFLLMLLLLLLLLLLRDLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLDDDEGNNLMMLLLLLLLLLLLLLLLLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMFLLLLMMLLLLMMLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRNIQENLLLLKLLLLLLLLALLLLLKLLLLLKKLLKLKLLLLLLLLLLDLLLLMLLLLLLLLLMLLLLLLMLMMLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNNDDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLMLLLMLMMLLLLFLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLFLLLLLLLLLLLMLMLLLLLLLLLMLNNEDIDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLKLMMLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLALLLLLLLALMLLLLLAALLLLLLLLAALLLMMMALLMALLLLLLLLMMMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLMMLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLMLLMMLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLMLLMMMMLLMLLLLLLLMLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLFLLFLLLLLLLLLMLMMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDRRDRDDDDDLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFRIDGGDMLLLLLLMLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLMAMLLKLMAMLLLMMLLLLLLLLLLLLLLLLKLLDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLDDDGDRDDDDDGRLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLLLLLLLLLLLMMLMMLMMMLLLLMLMLLLLLLLLLMMLMMLMMMMLLLLLLLLLLLLLLLLMMLLLMMMMLMMMMLLMLLLLLLLLLMLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDDLLLLLLLFFFFLLLLLLLLMLLLLLLLLMLLLLMLLMLLLLLLLLLLLMLLLMLMLLMLLLMLLLMLLLMLLLLLLLLLLLLLLDDDDDMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLLLLLLLMFFFFLLMLLLLLLLLLAAADDRDDDDISRLLALLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLAALLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLMMLLKMLLLLLLMMMMMMLLLLLLMMMMLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLDIDDDDDISDRLLLLLLLLLKLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMAAALKLLKAMMMLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLMMLLMMMLLLLLLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMMLLLLLLLRDLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLALLLLLLLLLLLLLLALLLLLLLLLLALLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDDNNEIGIGIDGEIDLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLMMMMMMALLKKAMAMMKLLLLLLLLLMMKMLLLLLLLLKKLLDIGMMLLLLLLLLLLLLLLLLLLLMMLKLMLLLLLLLLDDIGIDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLKLMMKLLLLLLLLLLLMMLLLLLLLLLLLLKLKLLLLDGIMLLLLLLLLLLLLLMLLLLLLLMLLMMLLLLKLMLLLLLCADDGDGLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLALLLLLMMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLALLLFFFFFFQNNGQIDELMLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLAMLLLLKLLLLLLLLLLLLLLLLLLLAAFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLFFLLFLLLLLLLLLLLLLLLLLLMMDQILLLLLLKLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLKLMMLLKLLLLLLLLLLLLLLLLLLMMNGGNAAAAAAADIDLLLLLLLFLLLLFLLLLLLLLLLLLLLLLLLLLKMAALLLLLLLLLLLLALLFALLLALLLLLALMLLLLLLLLLLLLLLLLLALLRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFFFFFEENNNNIDGGLMLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKLLLMLMLLMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLADIGDMLLLLLLLLLLMKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLMLLLLLLLLLLLLLLLLMLLLNDNDEGLLLMLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLFLLLLLLLLLMLMLLLLLLL","n":["Result","bootstrap","cache_invalidator","cluster","election","error","failure_detector","greptimedb_telemetry","handler","keys","lease","lock","metasrv","metrics","mocks","procedure","pubsub","region","selector","service","state","table_meta_alloc","MetaSrvInstance","__clone_box","and","bootstrap_meta_srv_with_router","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","create_etcd_client","deref","deref_mut","drop","from","from_ref","from_subset","http_srv","init","into","into_request","into_request","is_in_subset","lift_into","meta_srv","metasrv_builder","new","opts","or","plugins","plugins","router","sculpt","shutdown","signal_sender","start","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_SUBJECT","MetasrvCacheInvalidator","and","borrow","borrow_mut","broadcast","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","info","init","into","into_request","into_request","invalidate_table_id","invalidate_table_name","is_in_subset","lift_into","mailbox","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Context","MetaPeerClient","MetaPeerClientBuilder","MetaPeerClientBuilderError","MetaPeerClientRef","UninitializedField","ValidationError","__clone_box","addr","alloc","and","and","and","and","as_error_source","batch_get","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","channel_manager","channel_manager","channel_manager","check_resp_header","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","election","election","election","fmt","fmt","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_all_dn_stat_kvs","get_dn_key_value","get_dn_stat_kvs","get_node_cnt","in_memory","in_memory","in_memory","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_leader","lift_into","lift_into","lift_into","lift_into","max_retry_count","max_retry_count","max_retry_count","need_retry","or","or","or","or","phantom","ptr","range","remote_batch_get","remote_range","retry_interval_ms","retry_interval_ms","retry_interval_ms","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","to_owned","to_stat_kv_map","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ELECTION_KEY","Elected","Election","Leader","LeaderChangeMessage","StepDown","__clone_box","and","borrow","borrow_mut","campaign","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","etcd","fmt","fmt","from","from_ref","from_subset","in_infancy","init","into","into_request","into_request","is_in_subset","is_leader","leader","lift_into","or","resign","sculpt","subscribe_leader_change","subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","EtcdElection","and","borrow","borrow_mut","campaign","client","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","in_infancy","infancy","init","into","into_request","into_request","is_in_subset","is_leader","is_leader","leader","leader_value","leader_watcher","lift_into","or","resign","sculpt","subscribe_leader_change","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","with_endpoints","with_etcd_client","BatchGet","BatchGetSnafu","ConnectEtcd","ConnectEtcdSnafu","ConvertProtoData","ConvertProtoDataSnafu","CorruptedTableRoute","CorruptedTableRouteSnafu","CreateChannel","CreateChannelSnafu","DecodeTableRoute","DecodeTableRouteSnafu","DeserializeFromJson","DeserializeFromJsonSnafu","EmptyKey","EmptyKeySnafu","EmptyTableName","EmptyTableNameSnafu","Err","Error","EtcdFailed","EtcdFailedSnafu","ExceededRetryLimit","ExceededRetryLimitSnafu","GetFullTableInfo","GetFullTableInfoSnafu","InitDdlManager","InitDdlManagerSnafu","InitMetadata","InitMetadataSnafu","InvalidArguments","InvalidArgumentsSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidFullTableName","InvalidFullTableNameSnafu","InvalidHeartbeatRequest","InvalidHeartbeatRequestSnafu","InvalidHttpBody","InvalidHttpBodySnafu","InvalidInactiveRegionKey","InvalidInactiveRegionKeySnafu","InvalidLeaseKey","InvalidLeaseKeySnafu","InvalidRegionKeyFromUtf8","InvalidRegionKeyFromUtf8Snafu","InvalidStatKey","InvalidStatKeySnafu","InvalidUtf8Value","InvalidUtf8ValueSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","IsNotLeader","IsNotLeaderSnafu","Join","JoinSnafu","KvBackend","KvBackendSnafu","LeaseGrant","LeaseGrantSnafu","LeaseKeyFromUtf8","LeaseKeyFromUtf8Snafu","LeaseValueFromUtf8","LeaseValueFromUtf8Snafu","ListCatalogs","ListCatalogsSnafu","ListSchemas","ListSchemasSnafu","Lock","LockNotConfig","LockNotConfigSnafu","LockSnafu","MailboxClosed","MailboxClosedSnafu","MailboxReceiver","MailboxReceiverSnafu","MailboxTimeout","MailboxTimeoutSnafu","MigrationAbort","MigrationAbortSnafu","MissingRequestHeader","MissingRequestHeaderSnafu","MissingRequiredParameter","MissingRequiredParameterSnafu","MoveValue","MoveValueSnafu","NextSequence","NextSequenceSnafu","NoEnoughAvailableDatanode","NoEnoughAvailableDatanodeSnafu","NoLeader","NoLeaderSnafu","NotSetWeightArray","NotSetWeightArraySnafu","Ok","OperateRegion","OperateRegionSnafu","Other","OtherSnafu","ParseAddr","ParseAddrSnafu","ParseNum","ParseNumSnafu","PublishMessage","PublishMessageSnafu","PushMessage","PushMessageSnafu","PusherNotFound","PusherNotFoundSnafu","Range","RangeSnafu","RegionFailoverCandidatesNotFound","RegionFailoverCandidatesNotFoundSnafu","RegionOpeningRace","RegionOpeningRaceSnafu","RegionRouteNotFound","RegionRouteNotFoundSnafu","RegisterProcedureLoader","RegisterProcedureLoaderSnafu","RequestDatanode","RequestDatanodeSnafu","ResponseHeaderNotFound","ResponseHeaderNotFoundSnafu","Result","RetryLater","RetryLaterSnafu","SchemaAlreadyExists","SchemaAlreadyExistsSnafu","SendShutdownSignal","SendShutdownSignalSnafu","SerializeToJson","SerializeToJsonSnafu","ShutdownServer","ShutdownServerSnafu","StartGrpc","StartGrpcSnafu","StartHttp","StartHttpSnafu","StartProcedureManager","StartProcedureManagerSnafu","StartTelemetryTask","StartTelemetryTaskSnafu","StatKeyFromUtf8","StatKeyFromUtf8Snafu","StatValueFromUtf8","StatValueFromUtf8Snafu","StopProcedureManager","StopProcedureManagerSnafu","SubmitDdlTask","SubmitDdlTaskSnafu","SubmitProcedure","SubmitProcedureSnafu","TableAlreadyExists","TableAlreadyExistsSnafu","TableIdChanged","TableIdChangedSnafu","TableInfoNotFound","TableInfoNotFoundSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableRouteConversion","TableRouteConversionSnafu","TableRouteNotFound","TableRouteNotFoundSnafu","TcpBind","TcpBindSnafu","TcpIncoming","TcpIncomingSnafu","TooManyPartitions","TooManyPartitionsSnafu","Txn","TxnSnafu","Unexpected","UnexpectedInstructionReply","UnexpectedInstructionReplySnafu","UnexpectedSnafu","Unlock","UnlockSnafu","Unsupported","UnsupportedSelectorType","UnsupportedSelectorTypeSnafu","UnsupportedSnafu","UpdateTableMetadata","UpdateTableMetadataSnafu","UpdateTableRoute","UpdateTableRouteSnafu","WaitProcedure","WaitProcedureSnafu","WeightArray","WeightArraySnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","available","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","failed_region","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","func_name","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_retryable","key","key","key","key","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mailbox_message","match_for_io_error","msg","name","next","node_addr","operation","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","param","peer","peer","peer_id","pusher_id","reason","reason","reason","reason","region_id","region_id","required","retry_num","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector_type","server","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_id","table_id","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","addr","available","catalog","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expected","failed_region","found","func_name","id","id","id","input","input","key","key","key","key","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","mailbox_message","msg","name","node_addr","operation","param","peer","peer","peer_id","pusher_id","reason","reason","reason","reason","region_id","region_id","required","retry_num","schema_name","selector_type","server","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table_id","table_id","table_name","type_name","violated","HeartbeatHistory","PhiAccrualFailureDetector","PhiAccrualFailureDetectorOptions","__clone_box","__clone_box","acceptable_heartbeat_pause","acceptable_heartbeat_pause_millis","add","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop_oldest","eq","erased_serialize","first_heartbeat_estimate","first_heartbeat_estimate_millis","fmt","from","from","from","from_options","from_ref","from_ref","from_subset","from_subset","from_subset","heartbeat","heartbeat_history","init","init","init","interval_sum","intervals","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_available","is_in_subset","is_in_subset","is_in_subset","last_heartbeat_millis","lift_into","lift_into","lift_into","max_sample_size","mean","min_std_deviation","min_std_deviation_millis","new","or","or","or","phi","phi","sculpt","sculpt","sculpt","serialize","squared_interval_sum","std_deviation","subset","subset","subset","threshold","threshold","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","variance","vzip","vzip","vzip","DistributedGreptimeDBTelemetryCollector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_greptimedb_telemetry_task","get_mode","get_nodes","get_retry","get_uuid_cache","inc_retry","init","into","into_request","into_request","is_in_subset","lift_into","meta_peer_client","or","retry","sculpt","set_uuid_cache","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","uuid","vzip","Continue","Done","HandleControl","HeartbeatAccumulator","HeartbeatHandler","HeartbeatHandlerGroup","HeartbeatMailbox","NameCachedHandler","Pusher","Pushers","__clone_box","__clone_box","add_handler","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","check_leader_handler","check_timeout_bg","clone","clone","clone_into","clone_into","collect_stats_handler","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","failure_handler","filter_inactive_region_stats","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","handle","handler","handlers","header","header","inactive_region_ids","init","init","init","init","init","init","init","insert","instructions","into","into","into","into","into","into","into","into_mailbox_message","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_reply","keep_lease_handler","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mailbox_handler","name","name","new","new","new","new","next_message_id","node_stat","on_leader_start_handler","on_recv","or","or","or","or","or","or","or","persist_stats_handler","publish_heartbeat_handler","push","push","pushers","pushers","pushers","region_lease","region_lease_handler","register","remove","res_header","response_header_handler","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","send","sender","senders","sequence","stat","subset","subset","subset","subset","subset","subset","subset","timeout_notify","timeouts","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unregister","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CheckLeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","CollectStatsHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatanodeHeartbeat","RegionFailureHandler","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","failure_detect_runner","from","from","from_subset","from_subset","handle","heartbeat_time","init","init","into","into","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","lift_into","lift_into","or","or","region_idents","runner","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_new","type_id","type_id","vzip","vzip","FailureDetectControl","FailureDetectRunner","FailureDetectorContainer","FailureDetectorEntry","Purge","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","control_rx","control_tx","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","detectors","drop","drop","drop","drop","drop","e","election","failure_detector","failure_detector_options","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_failure_detector","heartbeat_rx","heartbeat_tx","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","lift_into","lift_into","lift_into","lift_into","new","options","or","or","or","or","receiver_handle","region_failover_manager","region_ident","remove","runner_handle","sculpt","sculpt","sculpt","sculpt","send_control","send_heartbeat","start","start_with","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FilterInactiveRegionStatsHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","KeepLeaseHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MailboxHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionStat","Stat","__clone_box","__clone_box","addr","and","and","approximate_bytes","approximate_rows","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","engine","erased_serialize","erased_serialize","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","id","id","init","init","into","into","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","lift_into","lift_into","node_epoch","or","or","rcus","rcus","region_num","region_stats","regions","retain_active_region_stats","role","sculpt","sculpt","serialize","serialize","stat_key","subset","subset","timestamp_millis","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","wcus","wcus","OnLeaderStartHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","EpochStats","MAX_CACHED_STATS_PER_KEY","PersistStatsHandler","and","and","borrow","borrow","borrow_mut","borrow_mut","clear","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","drain_all","drop","drop","epoch","epoch","from","from","from_subset","from_subset","handle","init","init","into","into","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","len","lift_into","lift_into","or","or","push","sculpt","sculpt","set_epoch","stats","stats_cache","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","PublishHeartbeatHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","new","or","publish","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionLeaseHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","flip_role","from","from_subset","grant","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","new","opening_region_keeper","or","region_lease_keeper","region_lease_seconds","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ResponseHeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DATANODE_LEASE_KEY_PATTERN","DATANODE_STAT_KEY_PATTERN","DN_LEASE_PREFIX","DN_STAT_PREFIX","INACTIVE_REGION_KEY_PATTERN","INACTIVE_REGION_PREFIX","InactiveRegionKey","LeaseKey","LeaseValue","StatKey","StatValue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_id","cluster_id","cluster_id","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_str","from_str","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_prefix_by_cluster","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","node_addr","node_addr","node_id","node_id","node_id","or","or","or","or","or","or","or","or","region_id","region_num","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","stats","subset","subset","subset","subset","subset","subset","subset","subset","timestamp_millis","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","alive_datanodes","filter_datanodes","get_lease_prefix","DEFAULT_EXPIRE_TIME_SECS","DistLock","DistLockGuard","DistLockRef","Key","Opts","alloc","and","and","borrow","borrow","borrow_mut","borrow_mut","buf","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","drop","etcd","expire_secs","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","key","keys","len","lift_into","lift_into","lock","lock","lock","memory","name","new","or","or","phantom","ptr","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","unlock","vzip","vzip","EtcdLock","__clone_box","and","borrow","borrow_mut","client","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","lock","or","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unlock","vzip","with_endpoints","with_etcd_client","table_metadata_lock_key","MemLock","and","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","from","from_subset","guards","init","into","into_request","into_request","is_in_subset","lift_into","lock","mutexes","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unlock","vzip","Context","DatanodeClientOptions","DatanodeOptions","ElectionRef","LeaderValue","METASRV_HOME","MetaSrv","MetaSrvOptions","MetaStateHandler","MetasrvInfo","SelectorContext","SelectorRef","TABLE_ID_SEQ","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","alloc","alloc","and","and","and","and","and","and","and","and","and","ask_leader","batch_delete","batch_get","batch_get","batch_put","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_options","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_and_put","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","connect_timeout_millis","create_default_schema_if_not_exist","data_home","datanode","datanode_lease_secs","ddl_executor","ddl_executor","default","default","default","delete_range","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","election","election","election","enable_region_failover","enable_telemetry","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","failure_detector","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","greptimedb_telemetry_task","greptimedb_telemetry_task","handler_group","handler_group","heartbeat","http","in_memory","in_memory","in_memory","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_infancy","is_leader","kv_backend","kv_backend","kv_backend","kv_backend","leader_cached_kv_backend","leader_cached_kv_backend","leader_cached_kv_backend","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lock","lock","lock","logging","mailbox","mailbox","mailbox","meta_peer_client","meta_peer_client","meta_peer_client","meta_peer_client","new_ctx","on_become_follower","on_become_leader","opening_region_keeper","opening_region_keeper","options","options","or","or","or","or","or","or","or","or","or","phantom","phantom","plugins","plugins","procedure","procedure_manager","procedure_manager","procedure_manager","ptr","ptr","publish","put","range","range","reset_in_memory","reset_leader_cached_kv_backend","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector","selector","selector","serialize","serialize","serialize","server_addr","server_addr","server_addr","server_addr","shutdown","started","state","state","store_addr","submit_ddl_task","subscribe_manager","subscribe_manager","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_id","table_id_sequence","table_id_sequence","table_metadata_manager","table_metadata_manager","table_metadata_manager","tcp_nodelay","timeout_millis","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_toml_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_start","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","use_memory_store","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CheckLeaderByElection","MetaSrvBuilder","and","and","borrow","borrow","borrow_mut","borrow_mut","build","build_ddl_manager","build_default_meta_peer_client","build_mailbox","build_procedure_manager","check","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","datanode_manager","datanode_manager","default","deref","deref","deref_mut","deref_mut","drop","drop","election","election","from","from","from_subset","from_subset","handler_group","heartbeat_handler","in_memory","in_memory","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","kv_backend","kv_backend","lift_into","lift_into","lock","lock","meta_peer_client","meta_peer_client","new","options","options","or","or","plugins","plugins","sculpt","sculpt","selector","selector","subset","subset","table_metadata_allocator","table_metadata_allocator","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_META_HANDLER_EXECUTE","METRIC_META_HEARTBEAT_CONNECTION_NUM","METRIC_META_INACTIVE_REGIONS","METRIC_META_KV_REQUEST","METRIC_META_LEADER_CACHED_KV_LOAD","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","or","or","or","or","or","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","MockInfo","__clone_box","and","borrow","borrow_mut","channel_manager","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","meta_srv","mock","mock_with_etcdstore","mock_with_memstore","mock_with_memstore_and_selector","or","sculpt","server_addr","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","region_failover","region_migration","utils","FailoverProcedureGuard","Node","OPEN_REGION_MESSAGE_TIMEOUT","RegionFailoverContext","RegionFailoverKey","RegionFailoverManager","RegionFailoverProcedure","State","TYPE_NAME","_State_registry","__clone_box","__clone_box","activate_region","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","context","create_context","deactivate_region","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dist_lock","dist_lock","do_region_failover","drop","drop","drop","drop","drop","drop","drop","dump","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","execute","failed_region","failed_region_exists","failover_end","failover_start","fmt","from","from","from","from","from","from","from","from_json","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","hash","in_memory","in_memory","init","init","init","init","init","init","insert_running_procedures","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invalidate_cache","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lock_key","mailbox","mailbox","new","new","next","node","or","or","or","or","or","or","procedure_manager","region_lease_secs","region_lease_secs","region_number","running_procedures","running_procedures","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector","selector","selector_ctx","selector_ctx","serialize","serialize","serialize","serialize","serialize","state","status","subset","subset","subset","subset","subset","subset","table_exists","table_id","table_metadata_manager","table_metadata_manager","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_start","type_id","type_id","type_id","type_id","type_id","type_id","type_name","update_metadata","vzip","vzip","vzip","vzip","vzip","vzip","ActivateRegion","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","handle_response","init","into","into_request","into_request","is_in_subset","lift_into","new","next","or","region_options","region_storage_path","remark_inactive_region","sculpt","send_open_region_message","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DeactivateRegion","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","handle_response","init","into","into_request","into_request","is_in_subset","lift_into","mark_leader_downgraded","new","next","or","sculpt","send_close_region_message","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","wait_for_region_lease_expiry","RegionFailoverEnd","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","status","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionFailoverStart","and","borrow","borrow_mut","choose_candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","failover_candidate","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","next","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InvalidateCache","and","borrow","borrow_mut","broadcast_invalidate_table_cache_messages","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","UpdateRegionMetadata","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","next","or","pretty_log_table_route_change","region_options","region_storage_path","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","update_metadata","update_table_route","vzip","Context","ContextFactory","ContextFactoryImpl","PersistentContext","RegionMigrationData","RegionMigrationDataOwned","RegionMigrationProcedure","State","TYPE_NAME","VolatileContext","_State_registry","__clone_box","__clone_box","and","and","and","and","and","and","and","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","context","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downgrade_leader_region","drop","drop","drop","drop","drop","drop","drop","dump","erased_serialize","erased_serialize","erased_serialize","execute","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_json","from_peer","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_table_info_value","get_table_route_value","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invalidate_table_cache","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","leader_region_last_entry_id","leader_region_lease_deadline","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lock_key","lock_key","mailbox","mailbox","migration_abort","migration_end","migration_start","new","new_context","new_context","new_inner","next","open_candidate_region","opening_region_guard","opening_region_keeper","opening_region_keeper","or","or","or","or","or","or","or","persistent_ctx","persistent_ctx","persistent_ctx","region_id","region_id","remove_table_info_value","remove_table_route_value","reset_leader_region_lease_deadline","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server_addr","server_addr","server_addr","set_last_entry_id","set_leader_region_lease_deadline","state","state","state","status","subset","subset","subset","subset","subset","subset","subset","table_info","table_metadata_manager","table_metadata_manager","table_route","to_owned","to_owned","to_peer","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","update_metadata","upgrade_candidate_region","volatile_ctx","volatile_ctx","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DOWNGRADE_LEADER_REGION_TIMEOUT","DowngradeLeaderRegion","and","as_any","borrow","borrow_mut","build_downgrade_region_instruction","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","downgrade_region","downgrade_region_with_retry","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","optimistic_retry","or","retry_initial_interval","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionMigrationAbort","and","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","next","or","reason","sculpt","serialize","status","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionMigrationEnd","and","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","status","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionMigrationStart","and","as_any","borrow","borrow_mut","check_candidate_region_on_peer","check_leader_region_on_peer","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","retrieve_region_route","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","OPEN_CANDIDATE_REGION_TIMEOUT","OpenCandidateRegion","and","as_any","borrow","borrow_mut","build_open_region_instruction","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","open_candidate_region","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Downgrade","Rollback","UpdateMetadata","Upgrade","and","as_any","borrow","borrow_mut","build_upgrade_candidate_region_metadata","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","downgrade_leader_region","downgrade_leader_region","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","rollback_downgraded_region","rollback_downgraded_region","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","upgrade_candidate_region","upgrade_candidate_region","vzip","UpgradeCandidateRegion","and","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","region_lock_key","AddSubRequest","DefaultPublish","DefaultSubscribeManager","Heartbeat","Heartbeat","Message","Publish","PublishRef","SubscribeManager","SubscribeManagerRef","SubscribeQuery","Subscriber","SubscriberRef","Topic","Transport","UnSubRequest","__clone_box","__clone_box","_transport","alloc","alloc","alloc","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","get_hash","hash","id","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","name","or","or","phantom","phantom","phantom","ptr","ptr","ptr","publish","sculpt","sculpt","send_msg","subscribe","subscribe_manager","subscribe_manager","subscriber","subscriber","subscriber_id","subscribers_by_topic","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","topic","topic2sub","topic_list","transport_msg","transporter","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","un_subscribe","un_subscribe_all","vzip","vzip","DefaultPublish","Publish","PublishRef","_transport","alloc","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","phantom","ptr","sculpt","send_msg","send_msg","subscribe_manager","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","AddSubRequest","DefaultSubscribeManager","SubscribeManager","SubscribeManagerRef","SubscribeQuery","UnSubRequest","__clone_box","alloc","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","phantom","ptr","sculpt","sculpt","sculpt","subscribe","subscribe","subscriber","subscriber_id","subscribers_by_topic","subscribers_by_topic","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","topic2sub","topic_list","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","un_subscribe","un_subscribe","un_subscribe_all","un_subscribe_all","vzip","vzip","vzip","Subscriber","SubscriberRef","Transport","alloc","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","id","id","init","into","into_request","into_request","is_in_subset","lift_into","name","name","new","or","phantom","ptr","sculpt","subset","to_subset","to_subset_unchecked","transport_msg","transport_msg","transporter","try_from","try_into","try_into","type_id","vzip","RegionLeaseKeeper","lease_keeper","OpeningRegionGuard","OpeningRegionKeeper","OpeningRegionKeeperRef","RegionLeaseKeeper","RegionLeaseKeeperRef","__clone_box","__clone_box","alloc","alloc","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect_tables","collect_tables_metadata","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","contains","datanode_id","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","filter_opening_regions","find_staled_follower_regions","find_staled_leader_regions","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","info","init","init","init","inner","inner","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","len","lift_into","lift_into","lift_into","mito","new","new","or","or","or","phantom","phantom","ptr","ptr","region_id","register","sculpt","sculpt","sculpt","subset","subset","subset","table_metadata_manager","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","find_staled_leader_regions","closable_leader_region","closable_region","downgradable_leader_regions","find_staled_follower_regions","upgradable_follower_region","Context","LeaseBased","LoadBased","Namespace","Output","Selector","SelectorOptions","SelectorType","__clone_box","allow_duplication","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","common","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lease_based","lift_into","lift_into","load_based","min_required_items","or","or","sculpt","sculpt","select","serialize","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","weight_compute","weighted_choose","choose_peers","LeaseBasedSelector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","select","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","LoadBasedSelector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","filter_out_datanode_by_table","filter_out_expired_datanode","from","from_subset","get_leader_peer_ids","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","select","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","weight_compute","weighted_choose","RegionNumsBasedWeightCompute","Source","WeightCompute","and","borrow","borrow_mut","compat","compat_mut","compat_ref","compute","compute","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RandomWeightedChoose","WeightedChoose","WeightedItem","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","choose_one","choose_one","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","item","items","lift_into","lift_into","or","or","reverse_choose_one","reverse_choose_one","reverse_weight","reverse_weighted_index","sculpt","sculpt","set_weight_array","set_weight_array","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","weight","weighted_index","Err","GrpcResult","GrpcStream","Ok","admin","cluster","ddl","heartbeat","lock","mailbox","store","Admin","HttpHandler","Router","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","boxed","call","call","call","call","check_path","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","handle","handlers","health","heartbeat","init","init","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","leader","lift_into","lift_into","make_admin_service","meta","nest","new","new","node_lease","or","or","poll_ready","poll_ready","poll_ready","route","route","router","sculpt","sculpt","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","util","vzip","vzip","HTTP_OK","HealthHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HeartBeatHandler","StatValues","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","erased_serialize","filter_by_addr","fmt","from","from","from_ref","from_subset","from_subset","handle","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","meta_peer_client","or","or","sculpt","sculpt","serialize","stat_vals","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","LeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","election","from","from_subset","handle","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","CatalogsHandler","SchemasHandler","TableHandler","TablesHandler","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","extract_table_ids","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","handle","handle","handle","handle","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","or","or","or","or","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","table_metadata_manager","table_metadata_manager","table_metadata_manager","table_metadata_manager","to_http_response","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","HumanLease","LeaseValues","NodeLeaseHandler","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","handle","human_time","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lease","leases","lift_into","lift_into","lift_into","meta_peer_client","name","or","or","or","sculpt","sculpt","sculpt","serialize","serialize","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RouteHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","extract_table_id","from","from_ref","from_subset","handle","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","table_metadata_manager","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","extract_cluster_id","get_value","to_text_response","get_node_id","handle_ask_leader","BroadcastChannel","Channel","Datanode","Datanode","Frontend","Frontend","Mailbox","MailboxReceiver","MailboxRef","MessageId","__clone_box","alloc","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","ch","channel","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","message_id","message_id","new","on_recv","or","or","or","phantom","poll","ptr","pusher_id","pusher_range","rx","sculpt","sculpt","sculpt","send","subset","subset","subset","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","cached_kv","AlwaysLeader","CheckLeader","CheckLeaderRef","LeaderCachedKvBackend","alloc","and","and","as_any","batch_delete","batch_get","batch_put","borrow","borrow","borrow_mut","borrow_mut","cache","check","check","check_leader","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_new_version","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_version","init","init","into","into","into_request","into_request","into_request","into_request","invalid_key","invalid_keys","is_in_subset","is_in_subset","is_leader","lift_into","lift_into","load","name","name","new","or","or","phantom","ptr","put","range","reset","sculpt","sculpt","store","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","txn","type_id","type_id","validate_version","version","vzip","vzip","with_always_leader","Follower","FollowerState","Leader","LeaderState","State","StateRef","__clone_box","__clone_box","__clone_box","alloc","and","and","and","become_follower","become_leader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_leader_cache","enable_leader_cache","fmt","fmt","fmt","follower","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","leader","lift_into","lift_into","lift_into","next_state","or","or","or","phantom","ptr","sculpt","sculpt","sculpt","server_addr","server_addr","subset","subset","subset","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MetaSrvTableMetadataAllocator","and","borrow","borrow_mut","compat","compat_mut","compat_ref","create","ctx","deref","deref_mut","drop","from","from_subset","handle_create_region_routes","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","selector","subset","table_id_sequence","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"meta_srv"],[22,"meta_srv::bootstrap"],[68,"meta_srv::cache_invalidator"],[103,"meta_srv::cluster"],[263,"meta_srv::election"],[311,"meta_srv::election::etcd"],[352,"meta_srv::error"],[3913,"meta_srv::error::Error"],[4106,"meta_srv::failure_detector"],[4232,"meta_srv::greptimedb_telemetry"],[4270,"meta_srv::handler"],[4538,"meta_srv::handler::check_leader_handler"],[4568,"meta_srv::handler::collect_stats_handler"],[4598,"meta_srv::handler::failure_handler"],[4661,"meta_srv::handler::failure_handler::runner"],[4798,"meta_srv::handler::filter_inactive_region_stats"],[4828,"meta_srv::handler::keep_lease_handler"],[4858,"meta_srv::handler::mailbox_handler"],[4888,"meta_srv::handler::node_stat"],[4985,"meta_srv::handler::on_leader_start_handler"],[5015,"meta_srv::handler::persist_stats_handler"],[5085,"meta_srv::handler::publish_heartbeat_handler"],[5117,"meta_srv::handler::region_lease_handler"],[5153,"meta_srv::handler::response_header_handler"],[5183,"meta_srv::keys"],[5513,"meta_srv::lease"],[5516,"meta_srv::lock"],[5594,"meta_srv::lock::etcd"],[5632,"meta_srv::lock::keys"],[5633,"meta_srv::lock::memory"],[5666,"meta_srv::metasrv"],[6082,"meta_srv::metasrv::builder"],[6168,"meta_srv::metrics"],[6318,"meta_srv::mocks"],[6358,"meta_srv::procedure"],[6361,"meta_srv::procedure::region_failover"],[6606,"meta_srv::procedure::region_failover::activate_region"],[6646,"meta_srv::procedure::region_failover::deactivate_region"],[6685,"meta_srv::procedure::region_failover::failover_end"],[6719,"meta_srv::procedure::region_failover::failover_start"],[6755,"meta_srv::procedure::region_failover::invalidate_cache"],[6790,"meta_srv::procedure::region_failover::update_metadata"],[6830,"meta_srv::procedure::region_migration"],[7113,"meta_srv::procedure::region_migration::downgrade_leader_region"],[7154,"meta_srv::procedure::region_migration::migration_abort"],[7191,"meta_srv::procedure::region_migration::migration_end"],[7226,"meta_srv::procedure::region_migration::migration_start"],[7263,"meta_srv::procedure::region_migration::open_candidate_region"],[7300,"meta_srv::procedure::region_migration::update_metadata"],[7344,"meta_srv::procedure::region_migration::upgrade_candidate_region"],[7378,"meta_srv::procedure::utils"],[7379,"meta_srv::pubsub"],[7496,"meta_srv::pubsub::publish"],[7534,"meta_srv::pubsub::subscribe_manager"],[7643,"meta_srv::pubsub::subscriber"],[7685,"meta_srv::region"],[7687,"meta_srv::region::lease_keeper"],[7812,"meta_srv::region::lease_keeper::mito"],[7813,"meta_srv::region::lease_keeper::utils"],[7818,"meta_srv::selector"],[7906,"meta_srv::selector::common"],[7907,"meta_srv::selector::lease_based"],[7936,"meta_srv::selector::load_based"],[7972,"meta_srv::selector::weight_compute"],[8004,"meta_srv::selector::weighted_choose"],[8085,"meta_srv::service"],[8096,"meta_srv::service::admin"],[8185,"meta_srv::service::admin::health"],[8215,"meta_srv::service::admin::heartbeat"],[8284,"meta_srv::service::admin::leader"],[8314,"meta_srv::service::admin::meta"],[8456,"meta_srv::service::admin::node_lease"],[8554,"meta_srv::service::admin::route"],[8590,"meta_srv::service::admin::util"],[8593,"meta_srv::service::heartbeat"],[8595,"meta_srv::service::mailbox"],[8713,"meta_srv::service::store"],[8714,"meta_srv::service::store::cached_kv"],[8802,"meta_srv::state"],[8919,"meta_srv::table_meta_alloc"],[8953,"dyn_clone::sealed"],[8954,"tower_http::follow_redirect::policy::and"],[8955,"tower_http::follow_redirect::policy"],[8956,"tonic::transport::server"],[8957,"tokio::sync::mpsc::bounded"],[8958,"async_compat"],[8959,"etcd_client::client"],[8960,"tonic::request"],[8961,"tonic::request"],[8962,"common_meta::kv_backend"],[8963,"core::option"],[8964,"tower_http::follow_redirect::policy::or"],[8965,"frunk_core::hlist"],[8966,"frunk_core::coproduct"],[8967,"core::result"],[8968,"core::any"],[8969,"common_meta::cache_invalidator"],[8970,"common_meta::instruction"],[8971,"common_meta::error"],[8972,"table::metadata"],[8973,"core::future::future"],[8974,"alloc::boxed"],[8975,"core::pin"],[8976,"common_meta::table_name"],[8977,"core::error"],[8978,"alloc::vec"],[8979,"common_meta::rpc"],[8980,"common_grpc::channel_manager"],[8981,"greptime_proto::v1::meta"],[8982,"core::fmt"],[8983,"core::fmt"],[8984,"alloc::string"],[8985,"std::collections::hash::map"],[8986,"common_meta::kv_backend"],[8987,"core::convert"],[8988,"core::any"],[8989,"core::convert"],[8990,"store_api::storage::descriptors"],[8991,"core::clone"],[8992,"core::fmt"],[8993,"tonic::status"],[8994,"std::io::error"],[8995,"common_error::ext"],[8996,"common_error::status_code"],[8997,"serde::de"],[8998,"erased_serde::ser"],[8999,"erased_serde::ser"],[9000,"serde::ser"],[9001,"common_greptimedb_telemetry"],[9002,"alloc::sync"],[9003,"common_greptimedb_telemetry"],[9004,"common_meta::sequence"],[9005,"greptime_proto::v1::meta"],[9006,"common_meta::instruction"],[9007,"core::iter::traits::iterator"],[9008,"store_api::region_engine"],[9009,"std::collections::hash::set"],[9010,"greptime_proto::v1::meta"],[9011,"regex::regex::string"],[9012,"core::hash"],[9013,"core::marker"],[9014,"core::hash"],[9015,"greptime_proto::v1::meta"],[9016,"greptime_proto::v1::meta"],[9017,"greptime_proto::v1::meta"],[9018,"greptime_proto::v1::meta"],[9019,"common_meta::ddl"],[9020,"prometheus::histogram"],[9021,"prometheus::gauge"],[9022,"client::client_manager"],[9023,"common_procedure::error"],[9024,"common_procedure::procedure"],[9025,"common_meta::key::table_info"],[9026,"common_meta::key"],[9027,"store_api::storage::descriptors"],[9028,"tonic::body"],[9029,"http::request"],[9030,"http::response"],[9031,"core::convert"],[9032,"axum::extract::connect_info"],[9033,"core::task::wake"],[9034,"core::task::poll"],[9035,"greptime_proto::v1::meta"],[9036,"tracing::span"],[9037,"tracing::instrument"],[9038,"common_meta::rpc::store"],[9039,"common_meta::rpc::store"],[9040,"core::ops::function"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Builder for <code>MetaPeerClient</code>.","Error type for MetaPeerClientBuilder","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","Builds a new <code>MetaPeerClient</code>.","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Campaign waits to acquire leadership in an election.","","","","","","","","","","","","Returns the argument unchanged.","","","When a new leader is born, it may need some initialization …","","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if current node is the leader.","Returns the leader value for the current election.","","","Releases election leadership so other campaigners may …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BatchGet</code> variant","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the <code>Error::ConvertProtoData</code> …","","SNAFU context selector for the <code>Error::CorruptedTableRoute</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::DecodeTableRoute</code> …","","SNAFU context selector for the <code>Error::DeserializeFromJson</code> …","","SNAFU context selector for the <code>Error::EmptyKey</code> variant","","SNAFU context selector for the <code>Error::EmptyTableName</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::EtcdFailed</code> variant","","SNAFU context selector for the <code>Error::ExceededRetryLimit</code> …","","SNAFU context selector for the <code>Error::GetFullTableInfo</code> …","","SNAFU context selector for the <code>Error::InitDdlManager</code> …","","SNAFU context selector for the <code>Error::InitMetadata</code> variant","","SNAFU context selector for the <code>Error::InvalidArguments</code> …","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the <code>Error::InvalidFullTableName</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidHttpBody</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidLeaseKey</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidStatKey</code> …","","SNAFU context selector for the <code>Error::InvalidUtf8Value</code> …","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::IsNotLeader</code> variant","","SNAFU context selector for the <code>Error::Join</code> variant","","SNAFU context selector for the <code>Error::KvBackend</code> variant","","SNAFU context selector for the <code>Error::LeaseGrant</code> variant","","SNAFU context selector for the <code>Error::LeaseKeyFromUtf8</code> …","","SNAFU context selector for the <code>Error::LeaseValueFromUtf8</code> …","","SNAFU context selector for the <code>Error::ListCatalogs</code> variant","","SNAFU context selector for the <code>Error::ListSchemas</code> variant","","","SNAFU context selector for the <code>Error::LockNotConfig</code> variant","SNAFU context selector for the <code>Error::Lock</code> variant","","SNAFU context selector for the <code>Error::MailboxClosed</code> variant","","SNAFU context selector for the <code>Error::MailboxReceiver</code> …","","SNAFU context selector for the <code>Error::MailboxTimeout</code> …","","SNAFU context selector for the <code>Error::MigrationAbort</code> …","","SNAFU context selector for the <code>Error::MissingRequestHeader</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MoveValue</code> variant","","SNAFU context selector for the <code>Error::NextSequence</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NoLeader</code> variant","","SNAFU context selector for the <code>Error::NotSetWeightArray</code> …","Contains the success value","","SNAFU context selector for the <code>Error::OperateRegion</code> variant","","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseNum</code> variant","","SNAFU context selector for the <code>Error::PublishMessage</code> …","","SNAFU context selector for the <code>Error::PushMessage</code> variant","","SNAFU context selector for the <code>Error::PusherNotFound</code> …","","SNAFU context selector for the <code>Error::Range</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RegionOpeningRace</code> …","","SNAFU context selector for the <code>Error::RegionRouteNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RequestDatanode</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::SchemaAlreadyExists</code> …","","SNAFU context selector for the <code>Error::SendShutdownSignal</code> …","","SNAFU context selector for the <code>Error::SerializeToJson</code> …","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::StartGrpc</code> variant","","SNAFU context selector for the <code>Error::StartHttp</code> variant","","SNAFU context selector for the <code>Error::StartProcedureManager</code>…","","SNAFU context selector for the <code>Error::StartTelemetryTask</code> …","","SNAFU context selector for the <code>Error::StatKeyFromUtf8</code> …","","SNAFU context selector for the <code>Error::StatValueFromUtf8</code> …","","SNAFU context selector for the <code>Error::StopProcedureManager</code> …","","SNAFU context selector for the <code>Error::SubmitDdlTask</code> variant","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableIdChanged</code> …","","SNAFU context selector for the <code>Error::TableInfoNotFound</code> …","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableRouteConversion</code> …","","SNAFU context selector for the <code>Error::TableRouteNotFound</code> …","","SNAFU context selector for the <code>Error::TcpBind</code> variant","","SNAFU context selector for the <code>Error::TcpIncoming</code> variant","","SNAFU context selector for the <code>Error::TooManyPartitions</code> …","","SNAFU context selector for the <code>Error::Txn</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the <code>Error::Unlock</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unsupported</code> variant","","SNAFU context selector for the <code>Error::UpdateTableMetadata</code> …","","SNAFU context selector for the <code>Error::UpdateTableRoute</code> …","","SNAFU context selector for the <code>Error::WaitProcedure</code> variant","","SNAFU context selector for the <code>Error::WeightArray</code> variantonsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns <code>true</code> if the error is retryableolds the heartbeat statistics. It is capped by the number …","This is our port of Akka’s “PhiAccrualFailureDetector…","","","","","Duration corresponding to number of potentially …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap the stats with heartbeats that corresponds to …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Number of samples to use for calculation of mean and …","","","Minimum standard deviation to use for the normal …","","","","","Calculation of phi, derived from the Cumulative …","The suspicion level of the accrual failure detector.","","","","","","","","","","A low threshold is prone to generate many wrong suspicions …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","HandleControl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Approximate bytes of this region","Approximate number of rows in this region","","","","","","","","","","","","","","","","","","","","","","","","","The engine name.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The region_id.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The read capacity units during this period","The read capacity units during this period","How many regions on this node","","Returns a tuple array containing RegionId and RegionRole.","","The region role.","","","","","","","","","","","","","","","","","","","","","","","","","","","The write capacity units during this period","The write capacity units during this period","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Grants lease of regions.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the latest node addr.","","","","","","","","","","","","","","Get the latest number of regions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","All keys used for distributed locking in the Metasrv. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A implementation of distributed lock based on etcd. The …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","A “Node” in the state machine of region failover …","","The “Context” of region failover procedure state …","A key for the preventing running multiple failover …","","The states transition of region failover procedure:","The state machine of region failover procedure. Driven by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Sleep for <code>region_lease_expiry_seconds</code>, to make sure the …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Updates the metadata of the table.","","","The context of procedure execution.","Used to generate new Context.","Default implementation.","It’s shared in each step and available even after …","Persistent data of RegionMigrationProcedure.","Persistent data of RegionMigrationProcedure.","","","","It’s shared in each step and available in executing …","","","","","","","","","","","Returns as Any.","","","","","","","","","","","","","","","","","","","The Id of the cluster.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The Peer of migration source.","","","","","","","","","","Returns the <code>table_info</code> of VolatileContext if any. …","Returns the <code>table_route</code> of VolatileContext if any. …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Broadcasts the invalidate table cache message.","","","","","","","","The last_entry_id of leader region.","The deadline of leader region lease.","","","","","","","","","","","","","","","","","","","Yields the next state.","","<code>opening_region_guard</code> will be set after the …","","","","","","","","","","","","","Returns the RegionId.","The RegionId of migration region.","Removes the <code>table_info</code> of VolatileContext, returns true if …","Removes the <code>table_route</code> of VolatileContext, returns true …","Resets the <code>leader_region_lease_deadline</code>.","","","","","","","","","","","","","","","Returns address of meta server.","","","Sets the <code>leader_region_last_entry_id</code>.","Sets the <code>leader_region_lease_deadline</code> if it does not exist.","","","","Indicates the procedure execution status of the <code>State</code>.","","","","","","","","<code>table_info</code> is stored via previous steps for future use.","","","<code>table_route</code> is stored via previous steps for future use.","","","The Peer of migration destination.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds downgrade region instruction.","","","","","","","","Tries to downgrade a leader region.","Downgrades a leader region.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns the RegionMigrationAbort with <code>reason</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Checks whether the candidate region on region has been …","Checks whether the leader region on region has been opened.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Yields next State.","","Retrieves region route.","","","","","","","","","","","","","","","","","Builds open region instructions","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Opens the candidate region.","","","","","","","","","","","","Downgrades the leader region.","Rollback the downgraded leader region.","","Upgrade the candidate region.","","","","","Returns new Vec.","","","","","","","","Downgrades the leader region.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Rollbacks the downgraded leader region if the candidate …","","","","","","","","","","","Upgrades the candidate region.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The default implementation of Publish","","","","","This trait provides a <code>send_msg</code> method that can be used by …","","","","","","","Subscribed topic type, determined by the ability of meta.","This trait defines how messages are delivered from meta to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Subscriber’s id, globally unique, assigned by leader …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Subscriber’s name, passed in by subscriber.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Transport channel from meta to subscriber.","","","","","","","","","","","","","The default implementation of Publish","This trait provides a <code>send_msg</code> method that can be used by …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait defines how messages are delivered from meta to …","","","","","","","","","","","","Returns the argument unchanged.","","","Subscriber’s id, globally unique, assigned by leader …","","Calls <code>U::from(self)</code>.","","","","","","Subscriber’s name, passed in by subscriber.","","","","","","","","","","","Transport channel from meta to subscriber.","","","","","","","","","Tracks opening regions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the keeper contains a (<code>datanoe_id</code>, …","","","","","","","","","","","","","Returns a set of filtered out regions that are opening.","Returns upgradable regions, and closable regions.","Returns downgradable regions, and closable regions.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns opening region info.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns number of element in tracking set.","","","","","","","","","","","","","","","Returns OpeningRegionGuard if Region(<code>region_id</code>) on Peer(…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns Downgradable regions and Closable regions.","Returns Some(region_id) if it’s not a leader region in …","Returns Some(region) if its peer(…","Returns Some(region_id) if its peer(<code>node_id</code>) a downgrade …","Returns upgradable regions, and closable regions.","Returns Some(region) if its peer(<code>node_id</code>) a leader region …","","","","","","","","","","Whether duplicates are allowed in the selected result, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Minimum number of selected results.","","","","","","","","","","","","","","","","","","","","","","","","","","","According to the <code>opts</code>, choose peers from the <code>weight_array</code> …","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","The [‘RegionNumsBasedWeightCompute’] calculates …","","The <code>WeightCompute</code> trait is used to compute the weight …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A implementation of weighted balance: random weighted …","A common trait for weighted balance algorithm.","","","","","","","","","The method will choose one item.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The method will reverse choose one item.","","","","","","The method will re-set weight array.","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A cache dedicated to a Leader node, in order to cache some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The caller MUST ensure during the loading, there are no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","With a leader checker which always returns true when …","","","","","State transition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","pre-allocates create table’s table id and region routes.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,9,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,44,44,43,47,182,47,39,43,44,44,39,47,39,43,44,47,39,43,44,43,43,39,43,0,43,43,47,39,43,44,47,39,43,44,47,39,43,44,43,43,47,39,43,44,47,39,43,44,47,39,43,44,43,39,43,44,44,47,39,43,44,44,44,43,47,39,43,44,39,39,39,39,43,39,43,47,39,43,44,47,39,43,44,47,47,39,39,43,43,44,44,47,39,43,44,39,47,39,43,44,43,39,43,0,47,39,43,44,182,182,39,39,39,43,39,43,47,39,43,44,47,39,43,44,43,0,44,47,39,43,44,47,39,43,44,47,39,43,44,47,47,39,39,43,43,44,44,47,39,43,44,47,39,43,44,0,60,0,405,0,60,60,60,60,60,405,60,60,60,60,60,60,60,60,0,60,60,60,60,60,405,60,60,60,60,60,405,405,60,60,405,60,405,60,60,60,60,60,60,60,60,60,60,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,8,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,58,0,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,8,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,0,58,58,0,0,58,0,58,58,0,0,58,0,58,0,58,0,58,0,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,127,131,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,58,58,74,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,120,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,139,80,98,101,106,107,73,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,103,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,58,73,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,92,99,100,101,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,137,138,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,67,67,69,69,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,72,72,73,73,74,74,122,122,123,123,124,124,75,75,125,125,126,126,127,127,128,128,129,129,130,130,131,131,76,76,77,77,78,78,79,79,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,80,80,140,140,141,141,142,142,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,143,143,144,144,145,145,90,90,91,91,146,146,92,92,147,147,148,148,149,149,93,93,150,150,94,94,151,151,152,152,153,153,154,154,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,155,155,103,103,104,104,105,105,106,106,156,156,157,157,158,158,159,159,160,160,161,161,162,162,107,107,163,163,108,108,109,109,164,164,110,110,58,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,58,77,78,79,84,87,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,104,0,72,86,58,91,109,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,94,118,122,69,97,67,84,104,105,69,82,74,92,95,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,88,124,58,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,81,83,96,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,67,67,69,69,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,72,72,73,73,74,74,122,122,123,123,124,124,75,75,125,125,126,126,127,127,128,128,129,129,130,130,131,131,76,76,77,77,78,78,79,79,132,132,133,133,134,134,135,135,136,136,137,137,138,138,139,139,80,80,140,140,141,141,142,142,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,143,143,144,144,145,145,90,90,91,91,146,146,92,92,147,147,148,148,149,149,93,93,150,150,94,94,151,151,152,152,153,153,154,154,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,155,155,103,103,104,104,105,105,106,106,156,156,157,157,158,158,159,159,160,160,161,161,162,162,107,107,163,163,108,108,109,109,164,164,110,110,58,58,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,155,89,67,69,112,113,114,115,116,117,118,119,120,121,72,73,74,122,123,124,75,125,126,127,128,129,130,131,76,77,78,79,132,133,134,135,136,137,138,139,80,140,141,142,81,82,83,84,85,86,87,88,89,143,144,145,90,91,146,92,147,148,149,93,150,94,151,152,153,154,95,96,97,98,99,100,101,102,155,103,104,105,106,156,157,158,159,160,161,162,107,163,108,109,164,110,58,406,407,408,409,410,411,412,413,414,415,416,417,418,419,406,420,421,407,422,423,424,425,426,427,428,410,429,430,431,432,433,434,435,436,437,438,439,440,439,441,442,443,413,427,428,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,409,416,459,439,408,460,461,462,418,419,406,421,463,464,444,445,446,422,423,424,425,426,427,428,410,411,465,466,429,467,468,469,447,470,471,448,472,473,474,430,431,475,476,432,441,433,434,435,477,436,478,479,480,481,482,483,484,412,442,443,413,485,486,440,487,488,414,489,490,491,492,493,494,495,415,437,496,497,438,498,487,459,471,476,497,499,457,460,450,484,449,447,487,488,450,468,408,441,482,472,461,451,452,453,454,455,456,457,458,409,460,461,463,465,466,474,478,479,480,481,486,489,490,491,492,493,494,495,467,469,483,486,473,0,0,0,173,171,173,174,171,174,173,171,174,173,171,174,173,171,173,171,173,171,174,173,171,174,173,171,174,173,171,174,173,174,173,171,174,173,171,173,174,173,171,171,173,173,173,174,173,174,173,171,174,173,171,174,173,171,174,174,174,173,171,171,171,174,173,171,174,174,173,173,171,171,174,174,173,171,174,174,173,171,171,171,173,174,171,174,173,171,0,174,174,173,171,173,171,171,174,173,171,174,173,173,171,174,173,171,174,173,171,174,173,171,174,174,173,173,171,171,174,173,171,171,174,173,171,0,185,185,185,185,185,185,185,185,185,185,185,0,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,196,196,0,0,0,0,0,0,0,0,192,187,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,189,192,0,189,192,187,192,187,0,200,205,189,196,195,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,189,195,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,196,0,0,195,200,205,189,196,195,192,187,192,187,200,205,189,196,195,192,187,188,187,205,187,200,195,195,200,205,189,196,195,192,187,192,195,200,205,189,196,195,192,187,195,200,200,205,205,189,189,196,196,195,195,192,192,187,187,188,200,205,189,196,195,192,187,189,0,200,205,189,196,195,192,187,0,188,205,200,205,189,187,189,0,0,189,200,205,189,196,195,192,187,0,0,200,192,187,189,187,195,0,187,192,200,0,200,205,189,196,195,192,187,189,200,189,189,195,200,205,189,196,195,192,187,189,189,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,200,205,189,196,195,192,187,200,200,205,205,189,189,196,196,195,195,192,192,187,187,200,205,189,196,195,192,187,187,200,205,189,196,195,192,187,0,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,0,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,0,0,220,211,220,211,220,211,220,211,220,211,220,211,220,211,220,211,220,211,211,220,211,220,211,211,220,220,211,220,211,220,220,211,211,211,220,211,220,211,220,211,220,0,220,211,220,211,220,211,220,211,220,211,220,220,211,211,211,220,211,220,211,0,0,0,0,219,219,214,215,213,219,214,215,213,219,214,215,213,213,219,214,215,213,219,214,215,213,219,214,215,213,214,214,219,214,215,213,219,214,215,213,213,219,214,214,215,213,215,214,215,214,219,214,215,213,219,214,215,213,213,214,214,219,214,215,213,219,214,215,213,219,219,214,214,215,215,213,213,219,214,215,213,213,219,214,215,213,214,213,219,214,215,213,214,214,215,213,214,219,214,215,213,214,214,214,214,219,214,215,213,219,214,215,213,219,214,215,213,219,214,215,213,219,219,214,214,215,215,213,213,219,214,215,213,219,214,215,213,0,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,0,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,0,0,224,225,224,224,225,225,225,224,225,224,225,224,225,224,225,224,224,225,224,225,224,225,224,224,225,224,225,224,225,224,225,225,224,225,224,225,224,225,224,225,224,225,224,225,224,225,224,225,224,224,225,225,224,224,225,224,225,224,224,225,224,225,224,224,224,224,225,224,225,224,225,224,224,225,224,224,225,224,225,224,225,224,224,225,225,224,224,225,225,224,225,224,225,224,225,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,0,0,230,231,230,231,230,231,230,230,231,230,231,230,231,230,231,230,231,230,231,230,230,231,230,230,230,231,230,231,231,230,231,230,231,230,230,231,231,231,230,231,230,230,231,230,231,230,230,231,230,230,231,230,231,230,231,230,231,230,231,230,230,231,231,230,231,230,231,0,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,0,235,235,235,235,235,235,235,235,235,0,235,235,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,0,0,0,0,0,0,0,0,0,0,0,239,240,53,54,241,242,244,245,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,239,240,53,54,241,239,240,53,54,241,239,53,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,242,242,244,244,245,245,239,240,53,54,241,242,244,245,239,240,53,54,241,239,240,54,241,242,244,245,239,240,53,54,241,239,240,53,241,239,239,239,239,240,240,240,240,53,53,53,53,241,241,241,241,239,240,54,241,239,240,53,54,241,242,244,245,239,240,53,53,54,241,239,240,53,54,241,239,240,53,54,241,242,244,245,239,240,53,54,241,239,53,241,241,239,53,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,242,242,244,244,245,245,239,239,240,240,53,53,54,54,241,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,54,240,239,53,241,242,244,245,239,240,53,54,241,241,54,242,244,245,239,240,53,54,241,239,240,54,241,54,242,244,245,239,240,53,54,241,240,239,240,53,54,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,242,244,245,239,239,239,240,240,240,53,53,53,54,54,54,241,241,241,242,242,244,244,245,245,239,239,240,240,53,53,54,54,241,241,242,244,245,239,240,53,54,241,242,244,245,239,240,53,54,241,0,0,0,0,0,0,0,0,0,253,251,252,251,252,251,252,255,251,252,251,252,251,252,251,251,252,251,252,251,252,252,0,251,251,252,251,252,251,252,251,252,251,251,252,252,251,252,252,0,255,251,252,500,252,252,0,252,252,251,252,253,253,251,252,251,252,251,252,251,252,251,252,251,251,252,252,251,252,500,251,252,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,0,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,0,0,0,0,0,0,0,0,0,0,0,0,0,11,261,262,198,263,21,273,48,37,501,269,11,261,262,198,263,21,21,21,21,21,21,11,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,0,261,11,261,262,198,263,21,11,261,262,198,263,21,21,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,262,21,11,11,263,21,21,11,261,262,21,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,11,261,262,37,501,269,11,261,262,198,263,21,21,198,21,11,11,11,261,262,261,261,261,261,262,262,262,262,11,261,262,11,11,261,262,37,501,269,11,261,262,198,263,21,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,269,21,21,21,21,11,21,198,21,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,37,37,501,501,269,269,11,11,261,261,262,262,198,198,263,263,21,21,37,501,269,11,261,262,198,263,21,198,21,21,198,263,21,269,198,21,37,501,269,11,261,262,198,263,21,21,21,21,11,21,198,21,21,198,263,21,21,269,269,21,21,21,21,37,501,269,11,261,262,198,263,21,273,48,21,21,11,21,269,21,273,48,21,21,21,21,198,198,37,501,269,11,261,262,198,263,21,21,11,21,11,261,262,37,11,198,263,21,21,269,21,11,21,21,269,37,501,269,11,261,262,198,263,21,263,21,21,21,198,21,262,262,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,37,501,269,11,261,262,198,263,21,11,37,501,269,11,261,262,198,263,21,37,37,501,501,269,269,11,11,261,261,262,262,198,198,263,263,21,21,21,37,501,269,11,261,262,198,263,21,21,11,37,501,269,11,261,262,198,263,21,0,0,20,281,20,281,20,281,20,0,0,0,0,281,20,281,20,281,20,281,20,20,20,20,281,20,281,20,281,20,20,20,281,20,281,20,20,20,20,20,281,20,281,20,20,281,281,20,281,20,20,20,281,20,20,20,20,20,20,20,20,281,20,20,20,281,20,20,20,281,20,20,20,281,20,281,20,281,20,20,281,281,20,281,20,281,0,0,0,0,0,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,282,284,284,286,286,287,287,288,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,282,284,284,286,286,287,287,288,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,284,286,287,288,282,282,284,284,286,286,287,287,288,288,282,284,286,287,288,282,284,286,287,288,0,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,0,0,0,0,289,289,289,289,289,289,289,289,289,289,289,289,0,0,0,0,0,0,0,0,0,0,0,295,0,291,292,0,212,294,295,291,293,292,212,294,295,291,293,292,212,294,295,291,293,292,291,292,291,292,291,212,294,295,291,293,292,212,294,295,291,293,292,212,294,295,291,293,292,295,212,0,212,294,295,291,293,292,212,294,295,291,293,292,293,212,292,212,212,294,294,295,291,293,292,295,291,291,291,291,291,293,295,293,212,0,0,293,212,294,295,291,291,293,292,295,291,292,212,294,295,291,293,292,291,291,212,292,212,294,295,291,293,292,212,212,294,295,291,293,292,212,212,294,294,295,295,291,291,293,293,292,292,0,212,294,295,291,293,292,294,212,294,295,291,293,292,295,212,292,212,295,299,295,212,294,295,291,293,292,212,212,292,291,212,294,212,294,295,291,293,292,212,292,212,292,293,299,299,299,299,293,299,212,294,295,291,293,292,212,291,212,292,291,292,212,294,295,291,293,292,212,294,295,291,293,292,212,294,295,291,293,292,212,212,294,294,295,295,291,291,293,293,292,292,212,212,294,295,291,293,292,295,0,212,294,295,291,293,292,0,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,0,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,0,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,0,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,0,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,0,0,0,0,0,0,0,0,312,0,0,309,310,319,315,312,309,310,311,313,320,319,315,312,309,310,311,313,319,315,312,309,310,311,313,309,310,309,310,309,319,315,312,309,310,311,313,319,315,312,309,310,311,313,319,315,312,309,310,311,313,312,310,319,315,312,309,310,311,313,319,315,312,309,310,311,313,309,311,0,319,315,312,309,310,311,313,312,309,311,313,312,309,310,311,313,319,315,312,309,310,311,313,312,309,309,310,319,315,312,309,310,311,313,315,315,319,315,312,309,310,311,313,319,315,312,309,310,311,313,319,319,315,315,312,312,309,309,310,310,311,311,313,313,315,319,315,312,309,310,311,313,310,310,319,315,312,309,310,311,313,312,309,319,315,0,0,0,312,314,319,312,320,0,310,319,315,319,315,312,309,310,311,313,315,311,313,315,309,315,315,310,319,315,312,309,310,311,313,309,320,320,320,320,311,313,315,319,315,310,310,312,311,313,320,319,315,312,309,310,311,313,310,319,315,310,309,310,309,319,315,312,309,310,311,313,319,315,312,309,310,311,313,319,315,312,309,310,311,313,319,319,315,315,312,312,309,309,310,310,311,311,313,313,319,315,312,309,310,311,313,312,0,0,319,315,319,315,312,309,310,311,313,0,0,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,0,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,0,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,0,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,0,0,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,326,326,0,326,326,326,326,326,326,326,326,326,326,326,326,0,326,326,326,326,326,326,326,326,326,326,326,326,326,326,0,326,326,326,326,326,326,326,326,326,326,0,326,326,0,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,0,0,0,0,330,331,0,0,0,0,0,0,0,0,0,0,0,330,331,335,233,275,333,330,331,330,331,330,331,330,331,330,331,330,331,330,331,330,331,330,331,330,331,330,331,330,330,330,330,330,330,331,330,331,330,331,330,331,330,330,339,330,331,330,331,330,330,331,331,330,331,330,331,339,330,331,233,275,333,233,275,333,0,330,331,502,337,0,335,0,332,334,503,330,331,330,331,330,331,330,331,331,338,332,336,339,330,331,330,330,331,331,330,331,337,337,330,331,0,0,0,335,233,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,233,233,335,502,335,335,335,335,335,335,335,335,335,335,0,0,0,0,0,0,334,275,332,338,334,332,338,334,332,338,334,334,334,332,338,334,332,338,334,332,338,334,338,332,338,334,332,338,334,332,338,334,334,332,338,334,334,332,338,334,332,338,334,332,338,334,332,332,338,338,334,334,332,338,334,332,338,334,332,338,334,275,275,332,338,334,337,338,332,334,503,338,332,338,334,334,332,338,334,332,338,334,338,332,332,338,334,332,332,338,338,334,334,332,338,334,337,338,337,338,332,338,334,0,0,0,333,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,333,333,339,339,339,339,336,339,339,339,339,339,339,339,0,0,0,0,0,0,0,340,341,504,237,342,340,341,342,340,341,342,340,341,340,341,340,341,342,342,342,340,341,342,340,341,342,340,341,341,340,341,342,340,341,342,340,341,342,340,340,341,341,342,342,340,341,342,340,341,340,341,342,340,341,340,342,340,341,340,341,342,340,341,342,342,340,340,341,341,341,342,340,341,341,342,340,341,0,342,341,342,340,341,504,237,504,237,340,341,342,340,341,342,340,341,342,340,341,342,340,341,342,340,341,342,340,341,342,342,340,340,341,341,342,340,341,0,342,340,341,0,0,0,0,0,0,505,344,344,0,505,0,0,0,344,345,345,344,345,344,345,344,344,344,0,345,344,345,344,345,344,345,344,345,344,345,344,344,345,344,344,344,344,344,344,344,345,344,345,344,344,345,344,345,344,345,344,345,345,344,344,345,344,0,345,344,0,345,345,344,345,344,505,344,345,344,344,345,344,345,344,345,344,344,345,345,344,344,345,344,345,344,0,0,0,0,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,0,353,353,353,353,353,353,353,353,353,353,0,0,353,353,0,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,0,355,0,352,352,352,352,352,352,355,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,0,0,0,348,351,348,351,348,351,348,349,351,348,348,351,348,351,348,351,348,351,351,348,351,348,351,348,348,348,348,348,348,348,351,348,348,351,348,351,348,351,348,351,351,348,348,351,348,348,351,351,348,351,348,349,351,348,351,351,348,349,351,351,348,348,351,348,351,348,351,348,351,351,348,348,351,348,351,348,348,351,506,0,0,506,0,0,0,0,0,0,0,0,0,0,361,361,362,361,362,361,362,0,361,361,361,362,0,361,361,361,362,361,362,361,362,362,361,362,361,362,361,362,361,362,361,361,362,369,362,0,0,361,362,361,362,361,361,361,361,362,362,361,362,0,361,362,0,0,362,361,362,0,361,362,361,361,361,0,362,361,361,362,361,362,361,361,362,361,362,361,362,361,361,362,362,361,362,0,361,362,0,0,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,0,0,371,371,372,371,372,371,372,371,371,371,372,371,372,371,372,371,372,371,372,372,371,372,372,0,372,371,372,371,371,372,371,371,372,371,372,371,371,372,372,371,372,371,372,371,371,372,371,372,372,372,371,372,371,371,372,371,372,371,372,371,371,372,372,371,372,371,372,0,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,0,0,0,0,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,374,375,375,376,376,377,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,0,374,375,376,377,374,375,376,377,374,375,376,377,374,375,376,377,374,374,375,375,376,376,377,377,374,375,376,377,374,375,376,377,0,0,0,380,378,379,380,378,379,380,378,379,380,378,379,380,378,379,380,378,379,380,378,379,380,378,379,378,379,380,378,379,378,379,378,379,380,378,379,380,378,379,380,378,380,378,379,380,378,379,380,380,378,378,379,379,380,378,379,378,379,380,378,379,380,378,380,378,379,380,378,379,378,379,380,378,379,380,378,379,380,378,379,380,378,379,380,380,378,378,379,379,380,378,379,380,378,379,0,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,0,0,0,0,0,0,0,190,207,190,207,0,0,0,0,207,36,190,302,207,190,302,207,190,302,207,507,302,302,207,207,190,302,207,190,302,207,190,302,207,190,302,207,190,302,207,190,302,207,207,207,207,190,302,207,207,190,302,207,190,302,207,190,302,207,302,190,190,302,302,207,207,190,302,207,190,302,207,302,302,302,507,190,302,207,36,302,36,207,190,302,190,302,207,507,190,302,207,207,207,190,302,207,190,302,207,302,190,302,207,190,190,302,302,207,207,302,190,302,207,190,302,207,0,0,0,0,0,393,390,386,386,386,386,386,390,386,390,386,386,508,390,386,386,390,386,390,386,390,386,386,386,390,386,390,386,390,386,390,386,390,386,386,390,386,390,386,390,390,386,386,386,386,390,386,386,390,386,386,386,386,386,390,386,393,393,386,386,386,390,386,386,390,386,390,386,390,386,390,386,390,390,386,386,386,390,386,386,386,390,386,386,398,0,398,0,0,0,398,399,400,509,398,399,400,0,0,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,398,399,400,398,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,398,399,399,400,400,398,399,400,398,398,399,400,398,398,399,400,509,509,398,399,400,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,399,400,398,398,399,399,400,400,398,399,400,398,399,400,0,401,401,401,401,401,401,401,401,401,401,401,401,401,0,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[5,6,[7,[2]]],[[8,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[11,[[8,[12]]]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,[[11,17,[19,[18]]],[[8,[20]]]],[[11,17,21],[[8,[9]]]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[9,17],0,[21,6],[-1,[[2,[23]]],[]],[9,[[8,[2]]]],0,[9,[[8,[2]]]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,28,29],[[30,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],0,[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[27,28,31],[[34,[[33,[32]]]]]],[[27,28,35],[[34,[[33,[32]]]]]],[-1,16,[]],[-1,-2,[],[]],0,[[36,37],27],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,38,[]],[[39,[41,[[41,[40]]]]],[[8,[[41,[42]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,[[25,[39,44]]]],[[43,45],43],0,0,[[[19,[46]],47],[[8,[2]]]],[43,43],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],43],[[],43],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[13,2],[[43,[19,[48]]],43],0,0,[[44,49],50],[[44,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,44],[52,44],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,[[8,[[55,[53,54]]]]]],[[39,16],[[8,[[41,[42]]]]]],[[39,[41,[53]]],[[8,[[55,[53,54]]]]]],[39,[[8,[56]]]],[[43,57],43],0,0,[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[39,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[43,13],43],0,0,[58,16],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[[39,[41,[40]],[41,[40]],16],[[8,[[41,[42]]]]]],[[39,[41,[[41,[40]]]]],[[8,[[41,[42]]]]]],[[39,[41,[40]],[41,[40]],16],[[8,[[41,[42]]]]]],[[43,59],43],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[[[41,[42]]],[[8,[[55,[53,54]]]]]],[-1,52,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[34,[[33,[32]]]]],[]],[60,60],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],0,[[60,49],50],[[60,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,16,[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,[[34,[[33,[32]]]]],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[34,[[33,[32]]]]],[]],[-1,[[2,[23]]],[]],[-1,[[61,[60]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,52,[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[62,[[34,[[33,[32]]]]]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[62,16],0,[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[62,16],0,[62,[[34,[[33,[32]]]]]],0,0,[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[62,[[34,[[33,[32]]]]]],[-1,[[2,[23]]],[]],[62,[[61,[60]]]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],[[-1,-2],[[8,[48]]],[[63,[5]]],[[63,[[64,[-1]]]]]],[[-1,12],[[8,[48]]],[[63,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[58,65],[-1,38,[]],0,[58,[[19,[66]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1]]],58,[[68,[52]]]],[[[69,[-1,-2]]],58,[[68,[70]]],[[68,[71]]]],[[[72,[-1]]],58,[[68,[52]]]],[[[73,[-1,-2]]],58,[[68,[59]]],[[68,[59]]]],[[[74,[-1,-2]]],58,[[68,[13]]],[[68,[13]]]],[75,58],[76,58],[[[77,[-1]]],58,[[68,[52]]]],[[[78,[-1]]],58,[[68,[52]]]],[[[79,[-1]]],58,[[68,[52]]]],[[[80,[-1]]],58,[[68,[52]]]],[[[81,[-1]]],58,[[68,[31]]]],[[[82,[-1]]],58,[[68,[71]]]],[[[83,[-1]]],58,[[68,[31]]]],[[[84,[-1,-2]]],58,[[68,[52]]],[[68,[52]]]],[85,58],[[[86,[-1]]],58,[[68,[52]]]],[[[87,[-1]]],58,[[68,[52]]]],[[[88,[-1]]],58,[[68,[52]]]],[[[89,[-1]]],58,[[68,[52]]]],[90,58],[[[91,[-1]]],58,[[68,[52]]]],[[[92,[-1,-2]]],58,[[68,[52]]],[[68,[13]]]],[93,58],[[[94,[-1]]],58,[[68,[52]]]],[[[95,[-1]]],58,[[68,[52]]]],[[[96,[-1]]],58,[[68,[52]]]],[[[97,[-1]]],58,[[68,[52]]]],[[[98,[-1]]],58,[[68,[52]]]],[[[99,[-1]]],58,[[68,[59]]]],[[[100,[-1]]],58,[[68,[59]]]],[[[101,[-1,-2]]],58,[[68,[59]]],[[68,[52]]]],[102,58],[[[103,[-1]]],58,[[68,[52]]]],[[[104,[-1,-2]]],58,[[68,[52]]],[[68,[52]]]],[[[105,[-1]]],58,[[68,[52]]]],[[[106,[-1]]],58,[[68,[52]]]],[[[107,[-1]]],58,[[68,[52]]]],[108,58],[[[109,[-1]]],58,[[68,[52]]]],[110,58],0,[58,[[19,[38]]]],[[[67,[-1]]],[[67,[-1]]],111],[[[69,[-1,-2]]],[[69,[-1,-2]]],111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[[[118,[-1]]],[[118,[-1]]],111],[119,119],[[[120,[-1]]],[[120,[-1]]],111],[121,121],[[[72,[-1]]],[[72,[-1]]],111],[[[73,[-1,-2]]],[[73,[-1,-2]]],111,111],[[[74,[-1,-2]]],[[74,[-1,-2]]],111,111],[[[122,[-1]]],[[122,[-1]]],111],[123,123],[[[124,[-1]]],[[124,[-1]]],111],[75,75],[125,125],[126,126],[[[127,[-1]]],[[127,[-1]]],111],[128,128],[129,129],[130,130],[[[131,[-1]]],[[131,[-1]]],111],[76,76],[[[77,[-1]]],[[77,[-1]]],111],[[[78,[-1]]],[[78,[-1]]],111],[[[79,[-1]]],[[79,[-1]]],111],[132,132],[133,133],[134,134],[135,135],[136,136],[[[137,[-1]]],[[137,[-1]]],111],[[[138,[-1]]],[[138,[-1]]],111],[[[139,[-1]]],[[139,[-1]]],111],[[[80,[-1]]],[[80,[-1]]],111],[140,140],[141,141],[142,142],[[[81,[-1]]],[[81,[-1]]],111],[[[82,[-1]]],[[82,[-1]]],111],[[[83,[-1]]],[[83,[-1]]],111],[[[84,[-1,-2]]],[[84,[-1,-2]]],111,111],[85,85],[[[86,[-1]]],[[86,[-1]]],111],[[[87,[-1]]],[[87,[-1]]],111],[[[88,[-1]]],[[88,[-1]]],111],[[[89,[-1]]],[[89,[-1]]],111],[143,143],[144,144],[145,145],[90,90],[[[91,[-1]]],[[91,[-1]]],111],[146,146],[[[92,[-1,-2]]],[[92,[-1,-2]]],111,111],[147,147],[148,148],[149,149],[93,93],[150,150],[[[94,[-1]]],[[94,[-1]]],111],[151,151],[152,152],[153,153],[154,154],[[[95,[-1]]],[[95,[-1]]],111],[[[96,[-1]]],[[96,[-1]]],111],[[[97,[-1]]],[[97,[-1]]],111],[[[98,[-1]]],[[98,[-1]]],111],[[[99,[-1]]],[[99,[-1]]],111],[[[100,[-1]]],[[100,[-1]]],111],[[[101,[-1,-2]]],[[101,[-1,-2]]],111,111],[102,102],[[[155,[-1]]],[[155,[-1]]],111],[[[103,[-1]]],[[103,[-1]]],111],[[[104,[-1,-2]]],[[104,[-1,-2]]],111,111],[[[105,[-1]]],[[105,[-1]]],111],[[[106,[-1]]],[[106,[-1]]],111],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[[[107,[-1]]],[[107,[-1]]],111],[163,163],[108,108],[[[109,[-1]]],[[109,[-1]]],111],[164,164],[110,110],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[58,13,[41,[52]]],2],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[58,5],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],0,0,0,0,0,0,0,[[[67,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[69,[-1,-2]]],[[25,[-3,58]]],[[68,[70]]],[[68,[71]]],[]],[[[72,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[73,[-1,-2]]],[[25,[-3,58]]],[[68,[59]]],[[68,[59]]],[]],[[[74,[-1,-2]]],[[25,[-3,58]]],[[68,[13]]],[[68,[13]]],[]],[75,[[25,[-1,58]]],[]],[76,[[25,[-1,58]]],[]],[[[77,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[78,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[79,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[80,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[81,[-1]]],[[25,[-2,58]]],[[68,[31]]],[]],[[[82,[-1]]],[[25,[-2,58]]],[[68,[71]]],[]],[[[83,[-1]]],[[25,[-2,58]]],[[68,[31]]],[]],[[[84,[-1,-2]]],[[25,[-3,58]]],[[68,[52]]],[[68,[52]]],[]],[85,[[25,[-1,58]]],[]],[[[86,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[87,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[88,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[89,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[90,[[25,[-1,58]]],[]],[[[91,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[92,[-1,-2]]],[[25,[-3,58]]],[[68,[52]]],[[68,[13]]],[]],[93,[[25,[-1,58]]],[]],[[[94,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[95,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[96,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[97,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[98,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[99,[-1]]],[[25,[-2,58]]],[[68,[59]]],[]],[[[100,[-1]]],[[25,[-2,58]]],[[68,[59]]],[]],[[[101,[-1,-2]]],[[25,[-3,58]]],[[68,[59]]],[[68,[52]]],[]],[102,[[25,[-1,58]]],[]],[[[103,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[104,[-1,-2]]],[[25,[-3,58]]],[[68,[52]]],[[68,[52]]],[]],[[[105,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[106,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[[[107,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[108,[[25,[-1,58]]],[]],[[[109,[-1]]],[[25,[-2,58]]],[[68,[52]]],[]],[110,[[25,[-1,58]]],[]],0,[[[67,[-1]],49],50,165],[[[69,[-1,-2]],49],50,165,165],[[112,49],50],[[113,49],50],[[114,49],50],[[115,49],50],[[116,49],50],[[117,49],50],[[[118,[-1]],49],50,165],[[119,49],50],[[[120,[-1]],49],50,165],[[121,49],50],[[[72,[-1]],49],50,165],[[[73,[-1,-2]],49],50,165,165],[[[74,[-1,-2]],49],50,165,165],[[[122,[-1]],49],50,165],[[123,49],50],[[[124,[-1]],49],50,165],[[75,49],50],[[125,49],50],[[126,49],50],[[[127,[-1]],49],50,165],[[128,49],50],[[129,49],50],[[130,49],50],[[[131,[-1]],49],50,165],[[76,49],50],[[[77,[-1]],49],50,165],[[[78,[-1]],49],50,165],[[[79,[-1]],49],50,165],[[132,49],50],[[133,49],50],[[134,49],50],[[135,49],50],[[136,49],50],[[[137,[-1]],49],50,165],[[[138,[-1]],49],50,165],[[[139,[-1]],49],50,165],[[[80,[-1]],49],50,165],[[140,49],50],[[141,49],50],[[142,49],50],[[[81,[-1]],49],50,165],[[[82,[-1]],49],50,165],[[[83,[-1]],49],50,165],[[[84,[-1,-2]],49],50,165,165],[[85,49],50],[[[86,[-1]],49],50,165],[[[87,[-1]],49],50,165],[[[88,[-1]],49],50,165],[[[89,[-1]],49],50,165],[[143,49],50],[[144,49],50],[[145,49],50],[[90,49],50],[[[91,[-1]],49],50,165],[[146,49],50],[[[92,[-1,-2]],49],50,165,165],[[147,49],50],[[148,49],50],[[149,49],50],[[93,49],50],[[150,49],50],[[[94,[-1]],49],50,165],[[151,49],50],[[152,49],50],[[153,49],50],[[154,49],50],[[[95,[-1]],49],50,165],[[[96,[-1]],49],50,165],[[[97,[-1]],49],50,165],[[[98,[-1]],49],50,165],[[[99,[-1]],49],50,165],[[[100,[-1]],49],50,165],[[[101,[-1,-2]],49],50,165,165],[[102,49],50],[[[155,[-1]],49],50,165],[[[103,[-1]],49],50,165],[[[104,[-1,-2]],49],50,165,165],[[[105,[-1]],49],50,165],[[[106,[-1]],49],50,165],[[156,49],50],[[157,49],50],[[158,49],50],[[159,49],50],[[160,49],50],[[161,49],50],[[162,49],50],[[[107,[-1]],49],50,165],[[163,49],50],[[108,49],50],[[[109,[-1]],49],50,165],[[164,49],50],[[110,49],50],[[58,49],50],[[58,49],50],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1]]],58,[[68,[52]]]],[[[69,[-1,-2]]],58,[[68,[70]]],[[68,[71]]]],[112,58],[113,58],[114,58],[115,58],[116,58],[117,58],[[[118,[-1]]],58,[[68,[166]]]],[119,58],[[[120,[-1]]],58,[[68,[52]]]],[121,58],[[[72,[-1]]],58,[[68,[52]]]],[[[73,[-1,-2]]],58,[[68,[59]]],[[68,[59]]]],[[[74,[-1,-2]]],58,[[68,[13]]],[[68,[13]]]],[[[122,[-1]]],58,[[68,[166]]]],[123,58],[[[124,[-1]]],58,[[68,[52]]]],[75,58],[125,58],[126,58],[[[127,[-1]]],58,[[68,[52]]]],[128,58],[129,58],[130,58],[[[131,[-1]]],58,[[68,[52]]]],[76,58],[[[77,[-1]]],58,[[68,[52]]]],[[[78,[-1]]],58,[[68,[52]]]],[[[79,[-1]]],58,[[68,[52]]]],[132,58],[133,58],[134,58],[135,58],[136,58],[[[137,[-1]]],58,[[68,[52]]]],[[[138,[-1]]],58,[[68,[52]]]],[[[139,[-1]]],58,[[68,[52]]]],[[[80,[-1]]],58,[[68,[52]]]],[140,58],[141,58],[142,58],[[[81,[-1]]],58,[[68,[31]]]],[[[82,[-1]]],58,[[68,[71]]]],[[[83,[-1]]],58,[[68,[31]]]],[[[84,[-1,-2]]],58,[[68,[52]]],[[68,[52]]]],[85,58],[[[86,[-1]]],58,[[68,[52]]]],[[[87,[-1]]],58,[[68,[52]]]],[[[88,[-1]]],58,[[68,[52]]]],[[[89,[-1]]],58,[[68,[52]]]],[143,58],[144,58],[145,58],[90,58],[[[91,[-1]]],58,[[68,[52]]]],[146,58],[[[92,[-1,-2]]],58,[[68,[52]]],[[68,[13]]]],[147,58],[148,58],[149,58],[93,58],[150,58],[[[94,[-1]]],58,[[68,[52]]]],[151,58],[152,58],[153,58],[154,58],[[[95,[-1]]],58,[[68,[52]]]],[[[96,[-1]]],58,[[68,[52]]]],[[[97,[-1]]],58,[[68,[52]]]],[[[98,[-1]]],58,[[68,[52]]]],[[[99,[-1]]],58,[[68,[59]]]],[[[100,[-1]]],58,[[68,[59]]]],[[[101,[-1,-2]]],58,[[68,[59]]],[[68,[52]]]],[102,58],[[[155,[-1]]],58,[[68,[52]]]],[[[103,[-1]]],58,[[68,[52]]]],[[[104,[-1,-2]]],58,[[68,[52]]],[[68,[52]]]],[[[105,[-1]]],58,[[68,[52]]]],[[[106,[-1]]],58,[[68,[52]]]],[156,58],[157,58],[158,58],[159,58],[160,58],[161,58],[162,58],[[[107,[-1]]],58,[[68,[52]]]],[163,58],[108,58],[[[109,[-1]]],58,[[68,[52]]]],[164,58],[110,58],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[58,16],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[167,[[19,[168]]]],0,0,[58,[[19,[169]]]],0,0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],0,0,[58,[[19,[38]]]],[58,170],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,52,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[171,172],2],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,173],[171,171],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],174],[[],173],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[173]]],175],[13,2],[13,2],[13,2],[171,2],[[173,173],16],[[-1,176],[[25,[177,178]]],[]],0,0,[[173,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[173,174],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[174,172],2],0,[[],13],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[174,172],16],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[171,179],0,0,[180,171],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[172,179,179],179],[[174,172],179],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[173,-1],25,181],0,[171,179],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[171,179],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[[19,[52]],182,16],[[184,[183]]]],[185,186],[185,[[34,[[33,[32]]]]]],[185,56],[185,[[19,[52]]]],[185,2],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[23]]],[]],[[185,52],2],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[187,-1],2,188],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[189,190,191],[[34,[[33,[32]]]]]],[[192,[193,[52]],191],[[8,[2]]]],0,[[189,59],2],[192,192],[187,187],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[192,194],36],[[],195],[[],192],[[],187],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[[196,196],16],0,0,[[195,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,197,198,195],[[34,[[33,[32]]]]],[]],[[187,197,198],[[8,[199]]]],0,0,[200,46],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[192,52,200],[[19,[200]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[195,[[19,[191]]]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[-1,201],16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[191,[[8,[202]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,5,[]],0,[[[203,[[25,[199,167]]]],204],200],[-1,205,188],[[192,194],189],[192,187],[189,[[8,[59]]]],0,0,[[189,206,[8,[191]]],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[[200,199],[[8,[2]]]],[[192,5,191],[[8,[2]]]],[187,192],0,0,0,0,[[187,-1,200],2,[[63,[5]]]],[[192,5],[[19,[200]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[189,207,191,208],[[34,[[33,[32]]]]]],0,0,0,0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[187,-1],[[19,[200]]],[[63,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[209,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[209,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[210,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[210,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[211,197,198,195],[[34,[[33,[32]]]]]],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[211,201],16],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[19,[48]],[184,[212]],173],[[8,[211]]]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[213,2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],0,[13,2],[13,2],[214,2],[13,2],[13,2],0,0,[215,174],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[213,216],[[0,[217]]]],0,0,[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[213,[[33,[218]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[48]],[184,[212]],173],214],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[215,216],[[213,216],2],0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[214,219],2],[[214,220],2],[214,2],[[214,[184,[213]]],2],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[221,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[221,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[222,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[222,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[223,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[223,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,224],[225,225],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],224],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[224]]],175],[-1,[[25,[225]]],175],[13,2],[13,2],0,[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[224,49],50],[[225,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[224,16],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,[224,[[41,[[2,[71,226]]]]]],[[224,[227,[71]]],2],0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[224,-1],25,181],[[225,-1],25,181],[224,53],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[197,[[25,[224]]]],[-1,[[25,[-2]]],[],[]],[228,[[25,[225]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[229,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[229,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[230,2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],230],[[],231],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[230,[[41,[224]]]],[13,2],[13,2],[230,[[19,[59]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[231,197,198,195],[[34,[[33,[32]]]]]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[231,201],16],[-1,16,[]],[-1,16,[]],[230,13],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[230,224],2],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[230,59],2],0,0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[232,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[232,201],16],[-1,16,[]],[-1,-2,[],[]],[233,232],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[226,226],[-1,-1,[]],[-1,-2,[],[]],[[[41,[234]],[227,[71]],[227,[71]],[64,[71]],226],2],[[235,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[235,201],16],[-1,16,[]],[-1,-2,[],[]],[[59,236,237],235],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[238,197,198,195],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[238,201],16],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[239,239],[240,240],[53,53],[54,54],[241,241],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[242,243],[13,-1,[]],[244,243],[13,-1,[]],[245,243],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[239]]],175],[-1,[[25,[240]]],175],[-1,[[25,[54]]],175],[-1,[[25,[241]]],175],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[[239,239],16],[[240,240],16],[[53,53],16],[[241,241],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[239,49],50],[[240,49],50],[[53,49],50],[[54,49],50],[[241,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[239,53],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[8,[239]]]],[5,[[8,[240]]]],[5,[[8,[53]]]],[5,[[8,[54]]]],[5,[[8,[241]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],59,[246,247],248],[[-1,-2],59,[246,247],248],[[-1,-2],59,[246,247],248],[59,[[41,[40]]]],[[239,-1],2,249],[[53,-1],2,249],[[241,-1],2,249],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,[[19,[52]]]],0,0,0,0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[54,[[19,[59]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[239,-1],25,181],[[240,-1],25,181],[[54,-1],25,181],[[241,-1],25,181],0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[41,[40]]],[[8,[239]]]],[5,[[25,[-1]]],[]],[5,[[25,[-1]]],[]],[-1,[[25,[-2]]],[],[]],[[[41,[40]]],[[8,[240]]]],[5,[[25,[-1]]],[]],[[[41,[40]]],[[8,[53]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[41,[40]]],[[8,[54]]]],[5,[[25,[-1]]],[]],[[[41,[40]]],[[8,[241]]]],[5,[[25,[-1]]],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[59,182,59],[[8,[[55,[239,240]]]]]],[[59,182,-1],[[8,[[55,[239,240]]]]],250],[59,[[41,[40]]]],0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],251],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[252,2],[13,2],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[41,[40]],251],[[34,[[33,[32]]]]],[]],[252,[[8,[2]]]],0,0,0,[[253,[41,[40]]],252],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[[-1,[41,[40]]],[[34,[[33,[32]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[254,254],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[254,[41,[40]],251],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[[254,[41,[40]]],[[34,[[33,[32]]]]]],[-1,-2,[],[]],[-2,[[8,[253]]],[[63,[5]]],[[63,[[64,[-1]]]]]],[12,[[8,[253]]]],[216,255],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],256],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],0,[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[256,[41,[40]],251],[[34,[[33,[32]]]]]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[[256,[41,[40]]],[[34,[[33,[32]]]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[21,[14,[257]]],[[34,[[33,[32]]]]]],[[21,[14,[258]]],[[34,[[33,[32]]]]]],[[21,[14,[259]]],[[34,[[33,[32]]]]]],[[21,[14,[259]]],[[34,[[33,[32]]]]]],[[21,[14,[260]]],[[34,[[33,[32]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[11,11],[261,261],[262,262],[198,198],[263,263],[21,21],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[21,[14,[264]]],[[34,[[33,[32]]]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[21,[[8,[2]]]],0,0,0,[21,265],0,[[],11],[[],261],[[],262],[[21,[14,[266]]],[[34,[[33,[32]]]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[11]]],175],[-1,[[25,[261]]],175],[-1,[[25,[262]]],175],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[21,[[19,[48]]]],0,0,0,0,[[11,11],16],[[261,261],16],[[262,262],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],0,[[11,49],50],[[261,49],50],[[262,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[21,187],0,[[21,[14,[[267,[197]]]]],[[34,[[33,[32]]]]]],0,[21,57],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,[21,16],[21,18],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[21,[14,[268]]],[[34,[[33,[32]]]]]],[21,253],0,0,[21,36],0,0,[21,182],0,0,0,[21,198],[269,2],[269,2],[21,237],0,[21,11],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[21,17],0,0,[21,270],0,0,0,0,[21,[[19,[233]]]],[[21,[14,[271]]],[[34,[[33,[32]]]]]],[[21,[14,[272]]],[[34,[[33,[32]]]]]],[[21,[14,[272]]],[[34,[[33,[32]]]]]],[198,2],[198,2],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[21,273],0,0,[[11,-1],25,181],[[261,-1],25,181],[[262,-1],25,181],0,0,0,0,[21,[[8,[2]]]],0,0,0,0,[[21,[14,[274]]],[[34,[[33,[32]]]]]],[21,[[19,[275]]]],0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,[21,276],0,[21,236],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,52],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[21,[[8,[2]]]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[21,[14,[277]]],[[34,[[33,[32]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[8,[21]]]],[[11,[19,[278]],270,36,236,279],[[8,[280]]]],[[[19,[48]],57],182],[[18,192],36],[[11,18],270],[281,16],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[20,278],20],0,[[],20],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[[20,[19,[48]]],20],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[20,187],20],[[20,57],20],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[20,18],20],0,[-1,-2,[],[]],[-1,-2,[],[]],[[20,[19,[253]]],20],0,[[20,182],20],0,[[],20],[[20,11],20],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[20,17],20],0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[20,273],20],0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[[20,279],20],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[282,283],[13,-1,[]],[284,285],[13,-1,[]],[286,283],[287,285],[13,-1,[]],[288,283],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[13,2],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[289,289],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,[[11,18,[19,[273]],[19,[[184,[290]]]]],289],[5,289],[[],289],[273,289],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],0,[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[291,291],[292,292],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[212,292],0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[293]]],175],0,0,[[212,216],[[8,[2]]]],[13,2],[294,2],[13,2],[13,2],[13,2],[13,2],[13,2],[295,[[296,[52]]]],[[291,291],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,176],[[25,[177,178]]],[]],[[295,297],[[34,[[33,[32]]]]]],0,[[212,216],[[8,[16]]]],0,0,[[293,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[216,291],[-1,-1,[]],[-1,-1,[]],[[5,292],[[296,[295]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],59,[246,247],248],[[291,-1],2,249],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[212,216],[[19,[294]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],0,[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[295,298],0,0,[[59,57,36,270,[2,[273,263]],253,236],212],[[216,292],295],[[-1,292,216],[[34,[[33,[32]]]]],[]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],0,0,0,0,[[293,-1],25,181],[[299,-1],25,181],[[299,-1],25,181],[[299,-1],25,181],[[299,-1],25,181],0,[-1,300,[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[[212,216],[[8,[16]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[212,[[8,[2]]]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[295,5],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[301]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[301,49],50],[-1,-1,[]],[-1,-2,[],[]],[[301,302,216],[[8,[[33,[299]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[166,301],[[301,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[-1,[[2,[23]]],[]],[[301,292,216,208],[[8,[302]]]],[[301,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[303]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[303,49],50],[-1,-1,[]],[-1,-2,[],[]],[[303,292,302,216],[[8,[[33,[299]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[303,292,216],[[8,[2]]]],[166,303],[[303,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[303,292,216],[[8,[302]]]],[[303,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],[[303,292],2],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[304]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[304,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[304,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[304,-1],25,181],[304,300],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[305,292,216],[[8,[166]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[305]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],0,[[305,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[],305],[[305,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[305,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[306,292,31],[[8,[2]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],306],[13,-1,[]],[13,-1,[]],[-1,[[25,[306]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[306,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[306,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[306,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[307]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[307,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[166,52,[55,[52,52]]],307],[[307,292,216],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[52,[64,[308]],216],2],0,0,[-1,[[2,[23]]],[]],[[307,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[[307,292,216],[[8,[2]]]],[[307,292,216],[[8,[2]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,65,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[309,309],[310,310],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[[],310],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[309]]],175],[-1,[[25,[311]]],175],0,[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[312,[[296,[52]]]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[312,297],[[34,[[33,[32]]]]]],[[309,49],50],[[310,49],50],[[311,49],50],[[313,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[5,-1],[[296,[312]]],314],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[315,[[8,[[317,[316]]]]]],[315,[[8,[[317,[318]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[315,[[8,[2]]]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[312,298],[309,52],0,0,0,0,0,[[309,-1],312,314],[[-1,309],315,[]],[[319,309],315],[[[33,[320]],309,-1],312,314],[[-1,315],[[34,[[33,[32]]]]],[]],0,0,0,0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[315,71],0,[315,16],[315,16],[310,2],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[309,-1],25,181],[[320,-1],25,181],[[320,-1],25,181],[[320,-1],25,181],[[320,-1],25,181],[[311,-1],25,181],[[313,-1],25,181],[315,5],0,0,[[310,59],2],[[310,208],2],0,0,0,[-1,300,[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[312,5],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[321,65],[-1,-2,[],[]],[-1,-2,[],[]],[[321,315],29],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],321],[13,-1,[]],[13,-1,[]],[-1,[[25,[321]]],175],[[321,315,29],[[8,[2]]]],[[321,315],2],[13,2],[[-1,176],[[25,[177,178]]],[]],[[321,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[321,315],[[34,[[33,[32]]]]]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[23]]],[]],[[321,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[322,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[322]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[322,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[5,322],[[322,315],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[23]]],[]],[[322,-1],25,181],[322,300],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[323,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[323]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[323,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[323,315],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[323,-1],25,181],[323,300],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[324,65],[-1,-2,[],[]],[-1,-2,[],[]],[[324,308,166],16],[[324,308,166],[[8,[16]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[324]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[324,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[324,315],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[324,315,71],[[8,[308]]]],[-1,[[2,[23]]],[]],[[324,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[325,65],[-1,-2,[],[]],[-1,-2,[],[]],[[325,315],[[8,[29]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[325]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[325,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[325,315],[[34,[[33,[32]]]]]],[[325,315,29],[[8,[2]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[325,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[326,65],[-1,-2,[],[]],[-1,-2,[],[]],[[326,315],[[8,[[41,[308]]]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[326]]],175],0,[[326,315],[[8,[2]]]],[13,2],[[-1,176],[[25,[177,178]]],[]],[[326,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[326,315],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[326,315],[[8,[2]]]],[-1,[[2,[23]]],[]],[[326,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],0,[[326,315],[[8,[2]]]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[327,65],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[327]]],175],[13,2],[[-1,176],[[25,[177,178]]],[]],[[327,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[327,315],[[34,[[33,[32]]]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[327,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],[[328,329],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[330,330],[331,331],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[[330,330],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[330,49],50],[[331,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],59,[246,247],248],[[330,-1],2,249],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[-1,331],[[34,[[33,[32]]]]],[]],[[-1,[332,[-2]]],[[8,[2]]],[],[]],0,0,0,0,0,[[-1,330],[[41,[[333,[-2]]]]],[],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[331,330],0,0,[[-1,331],[[34,[[33,[32]]]]],[]],0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[[-1,334],[[8,[2]]],[]],[-1,[[8,[2]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[[184,[-1]]],[[335,[-1,-2]]],[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[[-1,331],[[34,[[33,[32]]]]],[]],[[[335,[-2,-1]],331],[[34,[[33,[32]]]]],[336,165],[[337,[-1]]]],0,[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[334,334],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[338,[-1]]],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[[334,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[-1,[332,[-2]]],[[8,[2]]],[],[]],[[[338,[-1]],[332,[-1]]],[[8,[2]]],336],0,0,[[-1,330],[[41,[[333,[-2]]]]],[],[]],[[[338,[-1]],330],[[41,[[333,[-1]]]]],336],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[-1,334],[[8,[2]]],[]],[[[338,[-1]],334],[[8,[2]]],336],[-1,[[8,[2]]],[]],[[[338,[-1]]],[[8,[2]]],336],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[[[339,[-1]],49],50,165],[-1,-1,[]],[-1,-2,[],[]],[[[339,[-1]]],180,[]],0,[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[[339,[-1]]],5,[]],0,[[180,-1,-2],[[339,[-2]]],[[68,[52]]],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[[-1,331],[[34,[[33,[32]]]]],[]],[[[339,[-1]],331],[[8,[2]]],336],0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[340,340],[341,341],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[342,[64,[71]]],[[55,[328,[41,[71]]]]]],[[342,[64,[328]]],[[8,[[55,[328,318]]]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[341,70,71],16],0,[[],341],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[340,2],[13,2],[[341,70,[227,[71]]],[[227,[71]]]],[[342,59,59,[64,[71]]],[[8,[[2,[[227,[71]],[227,[71]]]]]]]],[[342,59,59,[64,[71]]],[[8,[[2,[[227,[71]],[227,[71]]]]]]]],[[340,49],50],[[341,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[340,[[2,[70,71]]]],[[],13],[[],13],[[],13],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[341,16],[-1,16,[]],[-1,16,[]],[-1,16,[]],[341,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[236,342],[[],341],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,[[341,70,71],[[19,[340]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[59,[64,[71]],[64,[308]]],[[2,[[227,[71]],[227,[71]]]]]],[[59,71,[55,[329,166]]],[[19,[71]]]],[[59,71,[55,[329,[227,[59]]]]],[[19,[71]]]],[[59,71,[55,[329,166]],[55,[329,343]]],[[19,[71]]]],[[59,[64,[71]],[64,[308]]],[[2,[[227,[71]],[227,[71]]]]]],[[59,71,[55,[329,166]],[55,[329,343]]],[[19,[71]]]],0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[344,344],[[-1,-2],2,[],[]],0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],345],[[],344],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[344]]],175],[13,2],[13,2],[[344,344],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,176],[[25,[177,178]]],[]],[[345,49],50],[[344,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[-1,346,345],[[34,[[33,[32]]]]],[]],[[344,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[5,[[8,[344]]]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[41,[[348,[347]]]],345,-1],[[8,[[41,[347]]]]],[[349,[347]]]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[350,346,345],[[34,[[33,[32]]]]]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[353,[[351,[347]],352]]]],[13,-1,[]],[13,-1,[]],[13,2],[[[55,[53,54]],[64,[59]]],[[55,[53,54]]]],[[[55,[53,54]],[55,[239,240]]],[[55,[53,54]]]],[-1,-1,[]],[-1,-2,[],[]],[[354,31],[[8,[[41,[59]]]]]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-2],[[353,[-1,-2]]],[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[[[353,[-1,-2]],346,345],[[34,[[33,[32]]]]],[[349,[347]]],355],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[41,[[348,[347]]]]],[]],[[352,[55,[53,54]]],[[41,[[348,[347]]]]]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[[[351,[-1]]],[[8,[-1]]],[111,356,357]],[[[348,[-1]]],[[348,[-1]]],111],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],[[351,[-1]]],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[[[348,[-1]],[348,[-1]]],16,358],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[[348,[-1]],49],50,165],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[8,[-2]]],[],[]],[[[351,[-1]]],[[8,[-1]]],[111,356,357]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[-1,[41,[[348,[-2]]]]],[[8,[2]]],[],[]],[[[351,[-1]],[41,[[348,[-1]]]]],[[8,[2]]],[111,356,357]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,359],[[-1,[360,[-2]]],[],[],[]],[[361,[360,[-1]]],[],356],[[-1,[360,[-2]]],[],[],[]],[[362,5,[55,[52,52]]],[[25,[[363,[359]],364]]]],[5,2],[361,361],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[],362],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,5,[55,[52,52]]],[[34,[[33,[32]]]]],[]],0,0,0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[365,[-2]]],[],[]],[-1,[[366,[-2,-3]]],[],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[21,361],0,[[5,362],362],[362,361],[[],362],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[361,367],[[368,[[25,[2]]]]]],[[-1,367],[[368,[[25,[2]]]]],[]],[[-1,367],[[368,[[25,[2]]]]],[]],0,[[362,5,-1],362,369],0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[370,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[371,371],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[372]]],175],[13,2],[13,2],[[-1,176],[[25,[177,178]]],[]],[[[41,[54]],5],[[41,[54]]]],[[372,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[371,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[372,-1],25,181],0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],0,[-1,-1,[]],[-1,-2,[],[]],[[373,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[374,374],[375,375],[376,376],[377,377],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[13,2],[[377,[55,[52,52]]],[[8,[[41,[328]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[374,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[375,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[376,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[377,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],0,0,0,0,[[[41,[52]]],[[8,[[363,[52]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[25,[378]]],175],[-1,[[25,[379]]],175],[13,2],[13,2],[13,2],[[-1,176],[[25,[177,178]]],[]],[[-1,176],[[25,[177,178]]],[]],[[378,49],50],[[379,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[380,5,[55,[52,52]]],[[34,[[33,[32]]]]]],0,[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[378,-1],25,181],[[379,-1],25,181],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[381,381],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,2],[[381,[55,[52,52]]],[[8,[328]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[381,5,[55,[52,52]]],[[34,[[33,[32]]]]]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],[-1,[[25,[24]]],[]],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]],[[[55,[52,52]]],[[8,[59]]]],[[[55,[52,52]],5],[[8,[52]]]],[5,[[8,[[363,[52]]]]]],[204,59],[[257,198],[[8,[382]]]],0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,190,191],[[34,[[33,[32]]]]],[]],0,[302,207],[207,207],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[[207,207],16],[[207,49],50],[[207,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[302,206],0,[[206,[383,[[8,[191]]]],207],302],[[-1,206,[8,[191]]],[[34,[[33,[32]]]]],[]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[[34,[302]],367],368],0,[207,52],[190,[[193,[52]]]],0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[[-1,207,191,208],[[34,[[33,[32]]]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,52,[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,384],[[385,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[34,[-1]],367],368,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[386,65],[[386,387],[[34,[[33,[32]]]]]],[[386,388],[[34,[[33,[32]]]]]],[[386,389],[[34,[[33,[32]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,16,[]],[390,16],0,[[386,391],[[34,[[33,[32]]]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[386,13],[[386,392],[[34,[[33,[32]]]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[386,13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[386,[41,[40]]],[[30,[2]]]],[[386,[41,[[41,[40]]]]],[[30,[2]]]],[-1,16,[]],[-1,16,[]],[386,16],[-1,-2,[],[]],[-1,-2,[],[]],[386,[[30,[2]]]],[386,5],0,[[393,18],386],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[[386,394],[[34,[[33,[32]]]]]],[[386,395],[[34,[[33,[32]]]]]],[386,2],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[386,396],[[34,[[33,[32]]]]]],[-1,26,[]],[-1,26,[]],[[386,13],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,386],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[],[[0,[397]]]],[16,[[0,[397]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[398,398],[399,399],[400,400],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,2],[13,2],[13,2],[398,16],0,[[398,49],50],[[399,49],50],[[400,49],50],[52,398],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[[52,16],398],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[398,-1],2,397],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],[-1,[[2,[23]]],[]],0,0,[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,[[25,[24]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[401,402,403,[64,[404]]],[[34,[[33,[32]]]]]],0,[13,-1,[]],[13,-1,[]],[13,2],[-1,-1,[]],[-1,-2,[],[]],[[59,403,[64,[404]],263,273,276],[[8,[[2,[328,[41,[308]]]]]]]],[[],13],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],[[263,273,276],401],[[-1,-4],[[22,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[23]]],[]],0,[-1,[[25,[24]]],[]],0,[-1,[[19,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",8953],[15,"tuple"],[3,"And",8954],[8,"Policy",8955],[15,"str"],[3,"Router",8956],[3,"Receiver",8957],[6,"Result",352],[3,"MetaSrvInstance",22],[3,"Compat",8958],[3,"MetaSrvOptions",5666],[3,"Client",8959],[15,"usize"],[3,"Request",8960],[3,"Request",8960],[15,"bool"],[3,"Plugins",8961],[6,"KvBackendRef",8962],[4,"Option",8963],[3,"MetaSrvBuilder",6082],[3,"MetaSrv",5666],[3,"Or",8964],[3,"HNil",8965],[4,"CNil",8966],[4,"Result",8967],[3,"TypeId",8968],[3,"MetasrvCacheInvalidator",68],[3,"Context",8969],[4,"Instruction",8970],[6,"Result",8971],[6,"TableId",8972],[8,"Future",8973],[3,"Box",8974],[3,"Pin",8975],[3,"TableName",8976],[6,"MailboxRef",8595],[3,"MetasrvInfo",5666],[8,"Error",8977],[3,"MetaPeerClient",103],[15,"u8"],[3,"Vec",8978],[3,"KeyValue",8979],[3,"MetaPeerClientBuilder",103],[4,"MetaPeerClientBuilderError",103],[3,"ChannelManager",8980],[3,"ResponseHeader",8981],[3,"Context",103],[6,"ElectionRef",5666],[3,"Formatter",8982],[6,"Result",8982],[3,"UninitializedFieldError",8983],[3,"String",8984],[3,"StatKey",5183],[3,"StatValue",5183],[3,"HashMap",8985],[15,"i32"],[6,"ResettableKvBackendRef",8962],[4,"Error",352],[15,"u64"],[4,"LeaderChangeMessage",263],[3,"Receiver",8986],[3,"EtcdElection",311],[8,"AsRef",8987],[15,"slice"],[8,"Any",8968],[3,"Backtrace",8988],[3,"MigrationAbortSnafu",352],[8,"Into",8987],[3,"RegionOpeningRaceSnafu",352],[6,"DatanodeId",8989],[3,"RegionId",8990],[3,"TxnSnafu",352],[3,"TableIdChangedSnafu",352],[3,"NoEnoughAvailableDatanodeSnafu",352],[3,"EmptyKeySnafu",352],[3,"EmptyTableNameSnafu",352],[3,"InvalidLeaseKeySnafu",352],[3,"InvalidStatKeySnafu",352],[3,"InvalidInactiveRegionKeySnafu",352],[3,"InvalidArgumentsSnafu",352],[3,"TableRouteNotFoundSnafu",352],[3,"RegionRouteNotFoundSnafu",352],[3,"TableInfoNotFoundSnafu",352],[3,"CorruptedTableRouteSnafu",352],[3,"NoLeaderSnafu",352],[3,"TableNotFoundSnafu",352],[3,"MoveValueSnafu",352],[3,"UnsupportedSelectorTypeSnafu",352],[3,"UnexpectedSnafu",352],[3,"ResponseHeaderNotFoundSnafu",352],[3,"IsNotLeaderSnafu",352],[3,"ExceededRetryLimitSnafu",352],[3,"LockNotConfigSnafu",352],[3,"MissingRequiredParameterSnafu",352],[3,"SchemaAlreadyExistsSnafu",352],[3,"TableAlreadyExistsSnafu",352],[3,"PusherNotFoundSnafu",352],[3,"PushMessageSnafu",352],[3,"MailboxClosedSnafu",352],[3,"MailboxTimeoutSnafu",352],[3,"MailboxReceiverSnafu",352],[3,"MissingRequestHeaderSnafu",352],[3,"RegionFailoverCandidatesNotFoundSnafu",352],[3,"UnexpectedInstructionReplySnafu",352],[3,"RetryLaterSnafu",352],[3,"UpdateTableMetadataSnafu",352],[3,"InvalidHeartbeatRequestSnafu",352],[3,"TooManyPartitionsSnafu",352],[3,"UnsupportedSnafu",352],[3,"NotSetWeightArraySnafu",352],[8,"Clone",8991],[3,"InitDdlManagerSnafu",352],[3,"InitMetadataSnafu",352],[3,"NextSequenceSnafu",352],[3,"StartTelemetryTaskSnafu",352],[3,"SubmitDdlTaskSnafu",352],[3,"InvalidateTableCacheSnafu",352],[3,"OperateRegionSnafu",352],[3,"ListCatalogsSnafu",352],[3,"ListSchemasSnafu",352],[3,"JoinSnafu",352],[3,"RequestDatanodeSnafu",352],[3,"SendShutdownSignalSnafu",352],[3,"ShutdownServerSnafu",352],[3,"EtcdFailedSnafu",352],[3,"ConnectEtcdSnafu",352],[3,"TcpBindSnafu",352],[3,"TcpIncomingSnafu",352],[3,"StartGrpcSnafu",352],[3,"StartHttpSnafu",352],[3,"ParseAddrSnafu",352],[3,"LeaseKeyFromUtf8Snafu",352],[3,"LeaseValueFromUtf8Snafu",352],[3,"StatKeyFromUtf8Snafu",352],[3,"StatValueFromUtf8Snafu",352],[3,"InvalidRegionKeyFromUtf8Snafu",352],[3,"SerializeToJsonSnafu",352],[3,"DeserializeFromJsonSnafu",352],[3,"ParseNumSnafu",352],[3,"InvalidCatalogValueSnafu",352],[3,"InvalidFullTableNameSnafu",352],[3,"DecodeTableRouteSnafu",352],[3,"CreateChannelSnafu",352],[3,"BatchGetSnafu",352],[3,"RangeSnafu",352],[3,"InvalidHttpBodySnafu",352],[3,"LockSnafu",352],[3,"UnlockSnafu",352],[3,"LeaseGrantSnafu",352],[3,"InvalidUtf8ValueSnafu",352],[3,"StartProcedureManagerSnafu",352],[3,"StopProcedureManagerSnafu",352],[3,"WaitProcedureSnafu",352],[3,"SubmitProcedureSnafu",352],[3,"RegisterProcedureLoaderSnafu",352],[3,"TableRouteConversionSnafu",352],[3,"ConvertProtoDataSnafu",352],[3,"OtherSnafu",352],[3,"TableMetadataManagerSnafu",352],[3,"KvBackendSnafu",352],[3,"UpdateTableRouteSnafu",352],[3,"GetFullTableInfoSnafu",352],[3,"PublishMessageSnafu",352],[3,"WeightArraySnafu",352],[8,"Debug",8982],[3,"Peer",8992],[3,"Status",8993],[3,"Error",8994],[8,"StackError",8995],[4,"StatusCode",8996],[3,"HeartbeatHistory",4106],[15,"i64"],[3,"PhiAccrualFailureDetectorOptions",4106],[3,"PhiAccrualFailureDetector",4106],[8,"Deserializer",8997],[8,"Serializer",8998],[3,"Ok",8998],[3,"Error",8999],[15,"f64"],[15,"u32"],[8,"Serializer",9000],[6,"MetaPeerClientRef",103],[4,"GreptimeDBTelemetryTask",9001],[3,"Arc",9002],[3,"DistributedGreptimeDBTelemetryCollector",4232],[4,"Mode",9001],[3,"HeartbeatHandlerGroup",4270],[8,"HeartbeatHandler",4270],[3,"HeartbeatMailbox",4270],[4,"BroadcastChannel",8595],[3,"MailboxMessage",8981],[3,"Pushers",4270],[3,"Range",9003],[3,"Sequence",9004],[3,"HeartbeatAccumulator",4270],[4,"HandleControl",4270],[3,"HeartbeatRequest",8981],[3,"Context",5666],[3,"HeartbeatResponse",8981],[3,"Pusher",4270],[4,"Role",8981],[4,"InstructionReply",8970],[3,"Sender",8957],[3,"RequestHeader",8981],[3,"NameCachedHandler",4270],[6,"MessageId",8595],[4,"Channel",8595],[3,"Duration",9005],[3,"CheckLeaderHandler",4538],[3,"CollectStatsHandler",4568],[3,"RegionFailureHandler",4598],[3,"RegionFailoverManager",6361],[3,"FailureDetectorContainer",4661],[3,"FailureDetectRunner",4661],[3,"FailureDetectorEntry",4661],[3,"RegionIdent",8970],[8,"DerefMut",9006],[8,"Iterator",9007],[4,"FailureDetectControl",4661],[3,"DatanodeHeartbeat",4598],[3,"FilterInactiveRegionStatsHandler",4798],[3,"KeepLeaseHandler",4828],[3,"MailboxHandler",4858],[3,"Stat",4888],[3,"RegionStat",4888],[4,"RegionRole",9008],[3,"HashSet",9009],[3,"RegionStat",8981],[3,"OnLeaderStartHandler",4985],[3,"EpochStats",5015],[3,"PersistStatsHandler",5015],[3,"PublishHeartbeatHandler",5085],[6,"PublishRef",7496],[3,"GrantedRegion",9008],[3,"RegionLeaseHandler",5117],[6,"TableMetadataManagerRef",9010],[6,"OpeningRegionKeeperRef",7687],[3,"ResponseHeaderHandler",5153],[3,"LeaseKey",5183],[3,"LeaseValue",5183],[3,"InactiveRegionKey",5183],[3,"DATANODE_LEASE_KEY_PATTERN",5183],[3,"Regex",9011],[3,"DATANODE_STAT_KEY_PATTERN",5183],[3,"INACTIVE_REGION_KEY_PATTERN",5183],[8,"Hash",9012],[8,"Sized",9013],[8,"BuildHasher",9012],[8,"Hasher",9012],[8,"Fn",9014],[3,"Opts",5516],[3,"DistLockGuard",5516],[6,"DistLockRef",5516],[3,"EtcdLock",5594],[6,"Key",5516],[3,"MemLock",5633],[3,"AskLeaderRequest",8981],[3,"BatchDeleteRequest",8981],[3,"BatchGetRequest",8981],[3,"BatchPutRequest",8981],[3,"DatanodeOptions",5666],[3,"DatanodeClientOptions",5666],[3,"SelectorContext",5666],[3,"CompareAndPutRequest",8981],[6,"DdlTaskExecutorRef",9015],[3,"DeleteRangeRequest",8981],[3,"Streaming",9016],[3,"LockRequest",8981],[3,"MetaStateHandler",5666],[6,"ProcedureManagerRef",9017],[3,"PutRequest",8981],[3,"RangeRequest",8981],[6,"SelectorRef",5666],[3,"SubmitDdlTaskRequest",8981],[6,"SubscribeManagerRef",7534],[6,"SequenceRef",9004],[3,"UnlockRequest",8981],[6,"DatanodeManagerRef",9018],[6,"TableMetadataAllocatorRef",9015],[6,"DdlManagerRef",9019],[3,"CheckLeaderByElection",6082],[3,"METRIC_META_KV_REQUEST",6168],[6,"HistogramVec",9020],[3,"METRIC_META_HEARTBEAT_CONNECTION_NUM",6168],[6,"IntGauge",9021],[3,"METRIC_META_HANDLER_EXECUTE",6168],[3,"METRIC_META_INACTIVE_REGIONS",6168],[3,"METRIC_META_LEADER_CACHED_KV_LOAD",6168],[3,"MockInfo",6318],[3,"DatanodeClients",9022],[3,"RegionFailoverKey",6361],[3,"RegionFailoverContext",6361],[3,"Node",6361],[3,"FailoverProcedureGuard",6361],[3,"RegionFailoverProcedure",6361],[6,"Result",9023],[3,"Context",9017],[3,"LockKey",9017],[8,"State",6361],[4,"Status",9017],[3,"ActivateRegion",6606],[3,"MailboxReceiver",8595],[3,"DeactivateRegion",6646],[3,"RegionFailoverEnd",6685],[3,"RegionFailoverStart",6719],[3,"InvalidateCache",6755],[3,"UpdateRegionMetadata",6790],[3,"RegionRoute",9024],[3,"PersistentContext",6830],[3,"VolatileContext",6830],[3,"RegionMigrationDataOwned",6830],[3,"RegionMigrationProcedure",6830],[3,"RegionMigrationData",6830],[8,"ContextFactory",6830],[3,"Context",6830],[3,"TableInfoValue",9025],[3,"DeserializedValueWithBytes",9010],[3,"TableRouteValue",9026],[3,"ContextFactoryImpl",6830],[8,"State",6830],[3,"DowngradeLeaderRegion",7113],[3,"RegionMigrationAbort",7154],[3,"RegionMigrationEnd",7191],[3,"RegionMigrationStart",7226],[3,"OpenCandidateRegion",7263],[4,"UpdateMetadata",7300],[3,"UpgradeCandidateRegion",7344],[6,"TableId",8990],[6,"RegionNumber",8990],[4,"Topic",7379],[4,"Message",7379],[3,"AddSubRequest",7534],[6,"SubscriberRef",7643],[3,"UnSubRequest",7534],[3,"DefaultPublish",7496],[8,"Transport",7643],[8,"SubscribeManager",7534],[3,"DefaultSubscribeManager",7534],[3,"Subscriber",7643],[3,"OpeningRegionGuard",7687],[3,"OpeningRegionKeeper",7687],[3,"RegionLeaseKeeper",7687],[4,"RegionStatus",9024],[4,"SelectorType",7818],[3,"SelectorOptions",7818],[6,"Namespace",7818],[3,"Peer",8981],[3,"WeightedItem",8004],[8,"WeightedChoose",8004],[3,"LeaseBasedSelector",7907],[3,"RandomWeightedChoose",8004],[3,"RegionNumsBasedWeightCompute",7972],[3,"LoadBasedSelector",7936],[3,"TableMetadataManager",9010],[8,"WeightCompute",7972],[8,"Send",9013],[8,"Sync",9013],[8,"PartialEq",9027],[6,"BoxBody",9028],[3,"Request",9029],[3,"Admin",8096],[3,"Router",8096],[3,"Response",9030],[4,"Infallible",8987],[3,"IntoMakeService",9031],[3,"IntoMakeServiceWithConnectInfo",9032],[3,"Context",9033],[4,"Poll",9034],[8,"HttpHandler",8096],[3,"HealthHandler",8185],[3,"HeartBeatHandler",8215],[3,"StatValues",8215],[3,"LeaderHandler",8284],[3,"CatalogsHandler",8314],[3,"SchemasHandler",8314],[3,"TablesHandler",8314],[3,"TableHandler",8314],[3,"HumanLease",8456],[3,"LeaseValues",8456],[3,"NodeLeaseHandler",8456],[3,"RouteHandler",8554],[3,"AskLeaderResponse",8981],[3,"Receiver",9035],[3,"Span",9036],[3,"Instrumented",9037],[3,"LeaderCachedKvBackend",8714],[3,"BatchDeleteRequest",9038],[3,"BatchGetRequest",9038],[3,"BatchPutRequest",9038],[3,"AlwaysLeader",8714],[3,"CompareAndPutRequest",9038],[3,"DeleteRangeRequest",9038],[6,"CheckLeaderRef",8714],[3,"PutRequest",9038],[3,"RangeRequest",9038],[3,"Txn",9039],[8,"FnOnce",9014],[4,"State",8802],[3,"LeaderState",8802],[3,"FollowerState",8802],[3,"MetaSrvTableMetadataAllocator",8919],[3,"TableMetadataAllocatorContext",9015],[3,"RawTableInfo",8972],[3,"Partition",8981],[8,"Election",263],[13,"TcpBind",3913],[13,"ParseAddr",3913],[13,"NoEnoughAvailableDatanode",3913],[13,"ListSchemas",3913],[13,"ParseNum",3913],[13,"InvalidArguments",3913],[13,"PushMessage",3913],[13,"MailboxReceiver",3913],[13,"UpdateTableMetadata",3913],[13,"InvalidHeartbeatRequest",3913],[13,"Join",3913],[13,"SendShutdownSignal",3913],[13,"EtcdFailed",3913],[13,"ConnectEtcd",3913],[13,"TcpIncoming",3913],[13,"StartGrpc",3913],[13,"LeaseKeyFromUtf8",3913],[13,"LeaseValueFromUtf8",3913],[13,"StatKeyFromUtf8",3913],[13,"StatValueFromUtf8",3913],[13,"InvalidRegionKeyFromUtf8",3913],[13,"SerializeToJson",3913],[13,"DeserializeFromJson",3913],[13,"DecodeTableRoute",3913],[13,"BatchGet",3913],[13,"Range",3913],[13,"InvalidHttpBody",3913],[13,"Lock",3913],[13,"Unlock",3913],[13,"LeaseGrant",3913],[13,"InvalidUtf8Value",3913],[13,"PublishMessage",3913],[13,"WeightArray",3913],[13,"TableIdChanged",3913],[13,"RegionFailoverCandidatesNotFound",3913],[13,"ExceededRetryLimit",3913],[13,"MailboxClosed",3913],[13,"MailboxTimeout",3913],[13,"InvalidLeaseKey",3913],[13,"InvalidStatKey",3913],[13,"InvalidInactiveRegionKey",3913],[13,"CorruptedTableRoute",3913],[13,"MoveValue",3913],[13,"MigrationAbort",3913],[13,"RegionOpeningRace",3913],[13,"InitDdlManager",3913],[13,"InitMetadata",3913],[13,"NextSequence",3913],[13,"StartTelemetryTask",3913],[13,"SubmitDdlTask",3913],[13,"InvalidateTableCache",3913],[13,"OperateRegion",3913],[13,"ListCatalogs",3913],[13,"Txn",3913],[13,"RequestDatanode",3913],[13,"ShutdownServer",3913],[13,"EmptyKey",3913],[13,"StartHttp",3913],[13,"EmptyTableName",3913],[13,"InvalidCatalogValue",3913],[13,"InvalidFullTableName",3913],[13,"TableRouteNotFound",3913],[13,"RegionRouteNotFound",3913],[13,"TableInfoNotFound",3913],[13,"NoLeader",3913],[13,"TableNotFound",3913],[13,"UnsupportedSelectorType",3913],[13,"Unexpected",3913],[13,"CreateChannel",3913],[13,"ResponseHeaderNotFound",3913],[13,"IsNotLeader",3913],[13,"LockNotConfig",3913],[13,"StartProcedureManager",3913],[13,"StopProcedureManager",3913],[13,"WaitProcedure",3913],[13,"SubmitProcedure",3913],[13,"SchemaAlreadyExists",3913],[13,"TableAlreadyExists",3913],[13,"PusherNotFound",3913],[13,"MissingRequestHeader",3913],[13,"RegisterProcedureLoader",3913],[13,"UnexpectedInstructionReply",3913],[13,"RetryLater",3913],[13,"TableRouteConversion",3913],[13,"ConvertProtoData",3913],[13,"Other",3913],[13,"TableMetadataManager",3913],[13,"KvBackend",3913],[13,"UpdateTableRoute",3913],[13,"GetFullTableInfo",3913],[13,"TooManyPartitions",3913],[13,"Unsupported",3913],[13,"NotSetWeightArray",3913],[13,"MissingRequiredParameter",3913],[8,"DistLock",5516],[3,"LeaderValue",5666],[8,"Publish",7496],[8,"SubscribeQuery",7534],[6,"RegionLeaseKeeperRef",7687],[8,"Selector",7818],[6,"GrpcResult",8085],[8,"Mailbox",8595],[8,"CheckLeader",8714],[6,"StateRef",8802]],"b":[[163,"impl-Display-for-MetaPeerClientBuilderError"],[164,"impl-Debug-for-MetaPeerClientBuilderError"],[169,"impl-From%3CUninitializedFieldError%3E-for-MetaPeerClientBuilderError"],[170,"impl-From%3CString%3E-for-MetaPeerClientBuilderError"],[283,"impl-Debug-for-LeaderChangeMessage"],[284,"impl-Display-for-LeaderChangeMessage"],[1875,"impl-Display-for-Error"],[1876,"impl-Debug-for-Error"],[5698,"impl-Cluster-for-MetaSrv"],[5699,"impl-Store-for-MetaSrv"],[5922,"impl-Lock-for-MetaSrv"],[5923,"impl-MetaSrv"],[5961,"impl-Cluster-for-MetaSrv"],[5962,"impl-Store-for-MetaSrv"],[6543,"impl-Serialize-for-dyn+State+%2B+Send+%2B+Sync"],[6544,"impl-Serialize-for-dyn+State+%2B+Send"],[6545,"impl-Serialize-for-dyn+State+%2B+Sync"],[6546,"impl-Serialize-for-dyn+State"],[7030,"impl-Serialize-for-dyn+State"],[7031,"impl-Serialize-for-dyn+State+%2B+Sync"],[7032,"impl-Serialize-for-dyn+State+%2B+Send"],[7033,"impl-Serialize-for-dyn+State+%2B+Send+%2B+Sync"],[8640,"impl-Display-for-Channel"],[8641,"impl-Debug-for-Channel"]]},\
"metric_engine":{"doc":"Metric Engine is a region engine to store timeseries data …","t":"AAAAAAARRRRRRRRRRRRRRRRDLLLLLLLLLLLLLLLLMLLLLLLLLLDDLALLLLLLLLLLLLLLLALLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLALLALLLLALLLAMLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNNDNDNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDDDDDMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFF","n":["consts","data_region","engine","error","metadata_region","metrics","utils","DATA_REGION_SUBDIR","DATA_SCHEMA_TABLE_ID_COLUMN_NAME","DATA_SCHEMA_TSID_COLUMN_NAME","LOGICAL_TABLE_METADATA_KEY","METADATA_REGION_SUBDIR","METADATA_SCHEMA_KEY_COLUMN_INDEX","METADATA_SCHEMA_KEY_COLUMN_NAME","METADATA_SCHEMA_TIMESTAMP_COLUMN_INDEX","METADATA_SCHEMA_TIMESTAMP_COLUMN_NAME","METADATA_SCHEMA_VALUE_COLUMN_INDEX","METADATA_SCHEMA_VALUE_COLUMN_NAME","METRIC_DATA_REGION_GROUP","METRIC_ENGINE_NAME","METRIC_METADATA_REGION_GROUP","PHYSICAL_TABLE_METADATA_KEY","RANDOM_STATE","DataRegion","add_columns","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","mito","new","physical_columns","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","write_data","MetricEngine","MetricEngineInner","add_columns_to_physical_data_region","alter","alter_logical_region","alter_physical_region","alter_region","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create","create_logical_region","create_physical_region","create_region","create_request_for_data_region","create_request_for_metadata_region","data_region","default_projection","deref","deref","deref_mut","deref_mut","drop","drop","fill_internal_columns","from","from","from_ref","from_subset","from_subset","get_metadata","handle_query","handle_request","init","init","inner","internal_column_metadata","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","load_logical_columns","metadata_region","mito","modify_rows","name","new","put","put_logical_region","put_region","read","read_logical_region","read_physical_region","read_region","region_disk_usage","region_metadata","role","set_readonly_gracefully","set_writable","state","state","stop","table_id_filter","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","transform_projection","transform_region_id","transform_request","try_from","try_from","try_into","try_into","type_id","type_id","verify_put_request","verify_region_create_request","vzip","vzip","MetricEngineState","add_logical_region","add_physical_columns","add_physical_region","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","from","from_subset","get_physical_region_id","init","into","into_request","into_request","is_in_subset","logical_regions","logical_regions","physical_columns","physical_columns","physical_regions","physical_regions","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CollectRecordBatchStream","CollectRecordBatchStreamSnafu","ColumnNotFound","ColumnNotFoundSnafu","ColumnTypeMismatch","ColumnTypeMismatchSnafu","ConflictRegionOption","ConflictRegionOptionSnafu","CreateMitoRegion","CreateMitoRegionSnafu","DecodeColumnValue","DecodeColumnValueSnafu","DeserializeSemanticType","DeserializeSemanticTypeSnafu","Err","Error","ForbiddenPhysicalAlter","ForbiddenPhysicalAlterSnafu","InternalColumnOccupied","InternalColumnOccupiedSnafu","LogicalRegionNotFound","LogicalRegionNotFoundSnafu","MissingInternalColumn","MissingInternalColumnSnafu","MissingRegionOption","MissingRegionOptionSnafu","MitoReadOperation","MitoReadOperationSnafu","MitoWriteOperation","MitoWriteOperationSnafu","Ok","ParseRegionId","ParseRegionIdSnafu","PhysicalRegionNotFound","PhysicalRegionNotFoundSnafu","RegionAlreadyExists","RegionAlreadyExistsSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column_type","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","next","raw","raw","region_id","region_id","region_id","region_id","region_type","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","column_type","error","error","error","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","raw","raw","region_id","region_id","region_id","region_id","region_type","source","source","source","source","MetadataRegion","add_column","add_logical_region","borrow","borrow_mut","build_put_request","build_read_request","column_semantic_type","compat","compat_mut","compat_ref","concat_column_key","concat_column_key_prefix","concat_region_key","deref","deref_mut","deserialize_semantic_type","drop","exists","from","from_subset","get","get_all","init","into","into_request","into_request","is_in_subset","is_logical_region_exists","logical_columns","mito","new","parse_column_key","parse_region_key","put_if_absent","serialize_semantic_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","FORBIDDEN_OPERATION_COUNT","LOGICAL_REGION_COUNT","MITO_DDL_DURATION","PHYSICAL_COLUMN_COUNT","PHYSICAL_REGION_COUNT","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","to_data_region_id","to_metadata_region_id"],"q":[[0,"metric_engine"],[7,"metric_engine::consts"],[23,"metric_engine::data_region"],[50,"metric_engine::engine"],[144,"metric_engine::engine::state"],[177,"metric_engine::error"],[738,"metric_engine::error::Error"],[773,"metric_engine::metadata_region"],[815,"metric_engine::metrics"],[935,"metric_engine::utils"],[937,"store_api::storage::descriptors"],[938,"store_api::metadata"],[939,"alloc::vec"],[940,"async_compat"],[941,"tonic::request"],[942,"tonic::request"],[943,"core::option"],[944,"core::result"],[945,"core::any"],[946,"store_api::region_request"],[947,"common_query"],[948,"store_api::region_request"],[949,"store_api::storage::descriptors"],[950,"greptime_proto::v1"],[951,"core::future::future"],[952,"alloc::boxed"],[953,"core::pin"],[954,"store_api::storage::requests"],[955,"store_api::region_request"],[956,"store_api::region_engine"],[957,"common_error::ext"],[958,"common_query::logical_plan::expr"],[959,"core::iter::traits::collect"],[960,"std::collections::hash::set"],[961,"std::collections::hash::map"],[962,"core::any"],[963,"snafu::backtrace_inert"],[964,"core::convert"],[965,"datatypes::data_type"],[966,"core::clone"],[967,"core::fmt"],[968,"core::fmt"],[969,"greptime_proto::v1"],[970,"prometheus::histogram"],[971,"prometheus::counter"]],"d":["Constants used in metric engine.","","","","","Internal metrics for observability.","","","Column name of internal column <code>__metric</code> that stores the …","","Metadata key present in the <code>CREATE TABLE ... WITH ()</code> …","","","","","","","","region group value for data region inside a metric region","","region group value for metadata region inside a metric …","Metadata key present in the <code>CREATE TABLE ... WITH ()</code> …","Fixed random state for generating tsid","This is a generic handler like MetricEngine. It will …","Submit an alter request to underlying physical region.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Metric Engine","","","","","","Dispatch region alter request","","","","","","","","","","","","","","Create a logical region.","Initialize a physical metric region at given region id.","Dispatch region creation request to physical region …","Convert RegionCreateRequest for data region.","Build RegionCreateRequest for metadata region","","Default projection for a logical region. Includes …","","","","","","","Fills internal columns of a row with table name and a hash …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Retrieves region’s metadata.","Handles substrait query and return a stream of record …","Handles request to the region.","","","","Generate internal column metadata.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Load column metadata of a logical region.","","","Perform metric engine specific logic to incoming rows.","Name of this engine","","","","Dispatch region put request","","","Proxy the read request to underlying physical region (mito …","","Retrieves region’s disk usage.","Implementation of retrieving logical region’s region …","","","","Internal states of metric engine","","Stops the engine","Generate a filter on the table id column.","","","","","","Transform the projection from logical region to physical …","Build data region id and metadata region id from the given …","Transform the ScanRequest from logical region to physical …","","","","","","","Verifies a put request for a logical region against its …","Check if","","","Internal states of metric engine","Panic","Panic","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Mapping from logical region id to physical region id.","","Cache for the columns of physical regions. The region id …","","Mapping from physical region id to its logical region ids …","","","","","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the <code>Error::ColumnTypeMismatch</code> …","","SNAFU context selector for the <code>Error::ConflictRegionOption</code> …","","SNAFU context selector for the <code>Error::CreateMitoRegion</code> …","","SNAFU context selector for the <code>Error::DecodeColumnValue</code> …","","SNAFU context selector for the …","Contains the error value","","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::LogicalRegionNotFound</code>…","","SNAFU context selector for the <code>Error::MissingInternalColumn</code>…","","SNAFU context selector for the <code>Error::MissingRegionOption</code> …","","SNAFU context selector for the <code>Error::MitoReadOperation</code> …","","SNAFU context selector for the <code>Error::MitoWriteOperation</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParseRegionId</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RegionAlreadyExists</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe other two fields key and value will be used as a k-v …","Add a new column key to metadata.","Add a new table key to metadata.","","","","Builds a ScanRequest to read metadata for a given key. The …","Check if the given column exists. Return the semantic type …","","","","Column name will be encoded by base64(STANDARD_NO_PAD)","Concat a column key prefix without column name","","","","","","Check if the given key exists.","Returns the argument unchanged.","","Retrieves the value associated with the given key in the …","Load all metadata from a given region.","","Calls <code>U::from(self)</code>.","","","","Check if the given logical region exists.","Get all the columns of a given logical region. Return a …","","","Parse column key to (logical_region_id, column_name)","","Put if not exist, return if this put operation is …","","","","","","","","Counter for forbidden operations","Gauge for opened logical regions","Histogram for opened logical regions","Gauge of columns across all opened regions","Gauge for opened regions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the given RegionId’s region group to …","Change the given RegionId’s region group to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,18,0,18,18,18,18,20,18,20,20,20,18,20,18,20,18,20,0,18,18,18,18,18,18,18,18,20,18,20,18,20,18,18,20,20,18,20,20,20,20,18,20,20,18,18,20,18,18,20,20,18,20,18,18,18,18,20,20,0,18,18,0,18,18,18,20,0,20,20,20,0,18,20,18,20,18,20,18,20,18,18,18,18,20,18,20,18,20,18,18,18,20,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,43,0,43,0,43,0,43,0,43,0,43,0,43,0,6,0,43,0,43,0,43,0,43,0,43,0,43,0,43,0,6,43,0,43,0,43,0,0,43,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,49,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,47,50,55,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,49,50,51,52,53,54,55,57,58,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,47,47,60,60,49,49,61,61,62,62,63,63,64,64,65,65,66,66,50,50,51,51,52,52,53,53,54,54,55,55,57,57,58,58,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,57,43,61,63,49,53,54,57,60,43,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,47,60,49,61,62,63,64,65,66,50,51,52,53,54,55,57,58,43,82,83,84,85,86,87,82,88,89,85,86,87,90,91,92,83,93,94,95,96,84,97,98,97,85,87,89,95,96,97,88,88,90,91,92,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,0,0,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,74,76,76,77,77,78,78,80,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,74,76,76,77,77,78,78,80,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,74,76,77,78,80,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]],[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,5],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,[12,1],[[1,2],[[6,[[4,[3]]]]]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],[[1,2,16],[[6,[17]]]],0,0,[[18,2,2,2,[4,[3]]],[[6,[5]]]],0,[[18,2,19],[[6,[5]]]],[[18,2,19],[[6,[5]]]],[[18,2,19],[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,20],[[-1,-2],5,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[18,2,21],[[6,[5]]]],[[18,2,21],[[6,[5]]]],[[18,2,21],[[6,[5]]]],[[18,21],21],[[18,22],21],0,[[18,2,2],[[6,[[4,[8]]]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,5],[8,5],[[23,24,[26,[[5,[8,25]]]],27],5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,2],[[30,[[29,[28]]]]]],[[20,2,31],[[30,[[29,[28]]]]]],[[20,2,32],[[30,[[29,[28]]]]]],[[],8],[[],8],0,[[],[[33,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[18,2,2],[[6,[[4,[3]]]]]],0,0,[[18,24,34],[[6,[5]]]],[20,22],[12,20],0,[[18,2,16],[[6,[17]]]],[[18,2,16],[[6,[17]]]],0,[[18,2,31],[[6,[35]]]],[[18,2,31],[[6,[35]]]],[[18,2,31],[[6,[35]]]],[[20,2],[[30,[[29,[28]]]]]],0,[[20,2],[[13,[36]]]],[[20,2],[[30,[[29,[28]]]]]],[[20,2,11],[[14,[5,37]]]],0,0,[20,[[30,[[29,[28]]]]]],[[18,2],38],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,2,2,[26,[8]]],[[6,[[4,[8]]]]]],[2,[[5,[2,2]]]],[[18,2,2,31],[[6,[31]]]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[18,2,2,16],[[6,[5]]]],[21,[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[39,2,2],5],[[39,2,-1],5,40],[[39,2,[41,[25]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],39],[8,-1,[]],[8,-1,[]],[8,5],[-1,-1,[]],[-1,-2,[],[]],[[39,2],[[13,[2]]]],[[],8],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[39,[[42,[2,2]]]],0,[39,[[42,[2,[41,[25]]]]]],0,[39,[[42,[2,[41,[2]]]]]],0,[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,44],[-1,45,[]],[43,[[13,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],43,[[48,[25]]]],[[[49,[-1]]],43,[[48,[2]]]],[[[50,[-1]]],43,[[48,[25]]]],[51,43],[52,43],[[[53,[-1]]],43,[[48,[2]]]],[[[54,[-1]]],43,[[48,[2]]]],[[[55,[-1]]],43,[[48,[56]]]],[[[57,[-1,-2]]],43,[[48,[25]]],[[48,[2]]]],[58,43],[43,[[13,[45]]]],[[[47,[-1]]],[[47,[-1]]],59],[[[60,[-1]]],[[60,[-1]]],59],[[[49,[-1]]],[[49,[-1]]],59],[[[61,[-1]]],[[61,[-1]]],59],[62,62],[[[63,[-1]]],[[63,[-1]]],59],[64,64],[65,65],[66,66],[[[50,[-1]]],[[50,[-1]]],59],[51,51],[52,52],[[[53,[-1]]],[[53,[-1]]],59],[[[54,[-1]]],[[54,[-1]]],59],[[[55,[-1]]],[[55,[-1]]],59],[[[57,[-1,-2]]],[[57,[-1,-2]]],59,59],[58,58],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[43,8,[4,[25]]],5],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[43,22],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[8,5],[[[47,[-1]]],[[14,[-2,43]]],[[48,[25]]],[]],[[[49,[-1]]],[[14,[-2,43]]],[[48,[2]]],[]],[[[50,[-1]]],[[14,[-2,43]]],[[48,[25]]],[]],[51,[[14,[-1,43]]],[]],[52,[[14,[-1,43]]],[]],[[[53,[-1]]],[[14,[-2,43]]],[[48,[2]]],[]],[[[54,[-1]]],[[14,[-2,43]]],[[48,[2]]],[]],[[[55,[-1]]],[[14,[-2,43]]],[[48,[56]]],[]],[[[57,[-1,-2]]],[[14,[-3,43]]],[[48,[25]]],[[48,[2]]],[]],[58,[[14,[-1,43]]],[]],[[[47,[-1]],67],68,69],[[[60,[-1]],67],68,69],[[[49,[-1]],67],68,69],[[[61,[-1]],67],68,69],[[62,67],68],[[[63,[-1]],67],68,69],[[64,67],68],[[65,67],68],[[66,67],68],[[[50,[-1]],67],68,69],[[51,67],68],[[52,67],68],[[[53,[-1]],67],68,69],[[[54,[-1]],67],68,69],[[[55,[-1]],67],68,69],[[[57,[-1,-2]],67],68,69,69],[[58,67],68],[[43,67],68],[[43,67],68],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],43,[[48,[25]]]],[[[60,[-1]]],43,[[48,[25]]]],[[[49,[-1]]],43,[[48,[2]]]],[[[61,[-1]]],43,[[48,[25]]]],[62,43],[[[63,[-1]]],43,[[48,[25]]]],[64,43],[65,43],[66,43],[[[50,[-1]]],43,[[48,[25]]]],[51,43],[52,43],[[[53,[-1]]],43,[[48,[2]]]],[[[54,[-1]]],43,[[48,[2]]]],[[[55,[-1]]],43,[[48,[56]]]],[[[57,[-1,-2]]],43,[[48,[25]]],[[48,[2]]]],[58,43],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[43,[[13,[70]]]],0,0,0,0,0,0,0,[43,[[13,[45]]]],[43,71],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[72,2,2,22,73],[[6,[11]]]],[[72,2,2],[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[22,22],16],[22,31],[[72,2,2,22],[[6,[[13,[73]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[2,22],25],[2,25],[2,25],[8,-1,[]],[8,-1,[]],[22,[[6,[73]]]],[8,5],[[72,2,22],[[6,[11]]]],[-1,-1,[]],[-1,-2,[],[]],[[72,2,22],[[6,[[13,[25]]]]]],[[72,2],[[6,[[42,[25,25]]]]]],[[],8],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[72,2,2],[[6,[11]]]],[[72,2,2],[[6,[[4,[[5,[25,73]]]]]]]],0,[12,72],[22,[[6,[[13,[[5,[2,25]]]]]]]],[22,[[13,[22]]]],[[72,2,25,25],[[6,[11]]]],[73,25],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[74,75],[76,75],[8,-1,[]],[77,75],[8,-1,[]],[78,79],[8,-1,[]],[80,81],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,5],[8,5],[8,5],[8,5],[8,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[2,2]],"c":[],"p":[[3,"DataRegion",23],[3,"RegionId",937],[3,"ColumnMetadata",938],[3,"Vec",939],[15,"tuple"],[6,"Result",177],[3,"Compat",940],[15,"usize"],[3,"Request",941],[3,"Request",941],[15,"bool"],[3,"MitoEngine",942],[4,"Option",943],[4,"Result",944],[3,"TypeId",945],[3,"RegionPutRequest",946],[4,"Output",947],[3,"MetricEngineInner",50],[3,"RegionAlterRequest",946],[3,"MetricEngine",50],[3,"RegionCreateRequest",946],[15,"str"],[3,"RandomState",948],[6,"TableId",937],[3,"String",949],[15,"slice"],[3,"Row",950],[8,"Future",951],[3,"Box",952],[3,"Pin",953],[3,"ScanRequest",954],[4,"RegionRequest",946],[15,"array"],[3,"Rows",950],[6,"SendableRecordBatchStream",955],[4,"RegionRole",956],[3,"BoxedError",957],[3,"Expr",958],[3,"MetricEngineState",144],[8,"IntoIterator",959],[3,"HashSet",960],[3,"HashMap",961],[4,"Error",177],[8,"Any",945],[8,"Error",962],[3,"Backtrace",963],[3,"MissingInternalColumnSnafu",177],[8,"Into",964],[3,"RegionAlreadyExistsSnafu",177],[3,"InternalColumnOccupiedSnafu",177],[3,"MissingRegionOptionSnafu",177],[3,"ConflictRegionOptionSnafu",177],[3,"PhysicalRegionNotFoundSnafu",177],[3,"LogicalRegionNotFoundSnafu",177],[3,"ColumnTypeMismatchSnafu",177],[4,"ConcreteDataType",965],[3,"ColumnNotFoundSnafu",177],[3,"ForbiddenPhysicalAlterSnafu",177],[8,"Clone",966],[3,"CreateMitoRegionSnafu",177],[3,"DeserializeSemanticTypeSnafu",177],[3,"DecodeColumnValueSnafu",177],[3,"ParseRegionIdSnafu",177],[3,"MitoReadOperationSnafu",177],[3,"MitoWriteOperationSnafu",177],[3,"CollectRecordBatchStreamSnafu",177],[3,"Formatter",967],[6,"Result",967],[8,"Debug",967],[8,"StackError",957],[4,"StatusCode",968],[3,"MetadataRegion",773],[4,"SemanticType",950],[3,"PHYSICAL_REGION_COUNT",815],[6,"IntGauge",969],[3,"PHYSICAL_COLUMN_COUNT",815],[3,"LOGICAL_REGION_COUNT",815],[3,"MITO_DDL_DURATION",815],[3,"Histogram",970],[3,"FORBIDDEN_OPERATION_COUNT",815],[6,"IntCounter",971],[13,"MissingInternalColumn",738],[13,"InternalColumnOccupied",738],[13,"ColumnTypeMismatch",738],[13,"DeserializeSemanticType",738],[13,"DecodeColumnValue",738],[13,"ParseRegionId",738],[13,"CreateMitoRegion",738],[13,"RegionAlreadyExists",738],[13,"MitoReadOperation",738],[13,"MitoWriteOperation",738],[13,"CollectRecordBatchStream",738],[13,"MissingRegionOption",738],[13,"ConflictRegionOption",738],[13,"PhysicalRegionNotFound",738],[13,"LogicalRegionNotFound",738],[13,"ColumnNotFound",738],[13,"ForbiddenPhysicalAlter",738]],"b":[[439,"impl-Debug-for-Error"],[440,"impl-Display-for-Error"]]},\
"mito2":{"doc":"Mito","t":"AAAAAAAAAAAAAAAAAAAADGMLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLDGRGDDRGDRGMMMMLLLLLLLLALLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMFMMMLLLMLMMLLLLLLLLLLLLLLLLLLLLLLFMMMMFLLLLFFFFFFFCDDDDMMLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMALLLMMLMMLLMMMLLLLLLLLLLLLLLLLALLLLMLLLLMMDLLLFLLLLLLLLLLMLLLLMMLLLLLLGIIMMKMKRRDDDFLLLLLLLMLLLLLLLLLLLLLLLLLLLMMFLLLLLLLLLFLFLLLLLLLLLLLLLLLLLMMLLLMLMMLMLMMMMLLLLLLLLLLLLLLLLLLMRRDMLLLLLLLMLLLLLLLLLLLLLLMMLLLLLMMMMLLMMLLLLLLMLMMDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNEDDNNDIDGMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLKLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLMMLLMLLLLLLLLLLLLMMMMMLMMMMLMKLMLKLLMLMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLAAANNDDDDDEDDDNNMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLMMLLLLMLLMLLMLLLLLLLLLLLLLLLLLLLLLLDNDRDNRERDDMMLLLLLLLLLLLLFLMLLLLLLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMLLLFMLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDGCIIGGGDMMLLLLKLLMLLLLLLLLLLLLLLLLMLLLLLLKLLLLLLLLMKLLKAKLLMMMMKLMALLLLLLLLLLALLKMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMLLLMLLLMLMMLMLLLLLLLLLLLLLLLLLLLRDDDGDDDDDMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLMMMMMMMFMMFMMFFLLMMMMMMMMMLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDGMLLLLLLLLLLLLLLLLMLLLLLLLLMLLMMLLLLLLLLDDDDDDDDDDRDDDDDDRRDDDDDMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIGNNERLLLLLLLLLLLLLMALLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALLKLLLMMLLMMLALLMAALMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNNEMLLLLLLLLLLLLLLMLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLFFLLMLLLLLLLLLLLLLLLLLLLLMLLLLMMDDDDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENRDNNLLMMLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLFLMFLLLLLLLLLLLLLDENMLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLDDMLLLLLLMLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLLLLRDGDGDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLAAMMMMMMLMLLMLLLLLLLLLLLLLLLLLALMLLLMMLLDLLLMFLLLLLLLLLLLLLLLLMLMLFLMLLMMMFMLLLLLLEDDNDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFAMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLFFDDDDGGLMMLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLMMLMMLLLMMMMMMLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLDDLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLMMMLMLMMMLLLLLLLLLLLLLMMLLMLNNENNDNDNNNENNDNDNINDDDDNNNENDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLKLLLLLMMMMMMMMMLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMMMMDIDLLLLLLLLLLMKLLLLLLLLKLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAGDRRRIGMLLMLLLLLLLLLMLLLLLLLMMKLMMKLLLLLLLAAAADDDDGGRDDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGDDMLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMKLMLLLLLLLLLLLLRRRRDDLLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLMAAAMAMLLLLLLLLLLLLMARDDLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLFLLLLLLLLLLMMLLLFLFLLLLFLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLFMLLLLLLLLDDDDMLLLLLLLLLLMLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMLMLMMMLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLEDNDNLLLLLLMLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMLLLLLLLLLLLLLLLLLLLMMMMDLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLDGDGLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLMLLLFMMLLLLLLLLLLLLLLLLGDGDLLLLLLLLLLLLLFLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLRDDGDDGDDLLLLLLLLLLLLLMLMMMLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLMALLALALLLALLALALLLALLALALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLMMLLLLLLMMMMLMMMMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLMLMMMFFRRFFFF","n":["access_layer","cache","compaction","config","docs","engine","error","flush","manifest","memtable","metrics","read","region","region_write_ctx","request","row_converter","schedule","sst","wal","worker","AccessLayer","AccessLayerRef","alloc","borrow","borrow_mut","compat","compat_mut","compat_ref","delete_sst","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","new","object_store","object_store","phantom","ptr","read_sst","region_dir","region_dir","sst_file_path","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","write_sst","CacheManager","CacheManagerRef","PAGE_TYPE","PageCache","PageKey","PageValue","SST_META_TYPE","SstMetaCache","SstMetaKey","VECTOR_TYPE","VectorCache","alloc","base","base","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_size","clone","clone","clone_into","clone_into","column_idx","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_size","estimated_size","estimated_size","file_id","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_pages","get_parquet_meta_data","get_repeated_vector","hash","hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","meta_cache_weight","new","new","page_cache","page_cache_weight","pages","phantom","ptr","put_pages","put_parquet_meta_data","put_repeated_vector","region_id","remove_parquet_meta_data","row_group_idx","sst_meta_cache","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_hit_miss","value_initializer","value_initializer","value_initializer","vector_cache","vector_cache_weight","vzip","vzip","vzip","vzip","column_descr_heap_size","file_meta_heap_size","parquet_column_index_heap_size","parquet_meta_size","parquet_offset_index_heap_size","row_group_meta_heap_size","schema_descr_heap_size","CompactionPickerRef","CompactionRequest","CompactionScheduler","CompactionStatus","PendingCompaction","access_layer","access_layer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compaction_options_to_picker","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","current_version","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","file_purger","file_purger","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","merge_waiter","new","new","new_compaction_request","on_compaction_failed","on_compaction_finished","on_failure","on_failure","on_region_closed","on_region_dropped","on_region_truncated","output","pending_compaction","picker","push_waiter","push_waiter","region_id","region_id","region_status","remove_region_on_failure","request_sender","request_sender","schedule_compaction","schedule_compaction_request","scheduler","sst_write_buffer_size","start_time","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twcs","type_id","type_id","type_id","type_id","version_control","vzip","vzip","vzip","vzip","waiters","waiters","CompactionOutput","borrow","borrow_mut","build","build_sst_reader","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","inputs","into","into_request","into_request","is_in_subset","output_file_id","output_level","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CompactionPickerRef","CompactionTask","Picker","alloc","phantom","pick","ptr","run","MAX_PARALLEL_COMPACTION","TIME_BUCKETS","TimeBuckets","TwcsCompactionTask","TwcsPicker","assign_to_windows","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_output","compaction_time_window","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","expired_ssts","file_purger","find_latest_window_in_seconds","fit_time_bucket","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_expired_ssts","handle_compaction","infer_time_bucket","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","mark_files_compacting","max","max_active_window_files","max_inactive_window_files","merge_ssts","new","on_failure","outputs","pick","region_id","request_sender","run","schema","send_to_worker","sst_layer","sst_write_buffer_size","start_time","time_window_seconds","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","waiters","DEFAULT_MAX_BG_JOB","MULTIPART_UPLOAD_MINIMUM_SIZE","MitoConfig","auto_flush_interval","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","compress_manifest","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","global_write_buffer_reject_size","global_write_buffer_size","init","into","into_request","into_request","is_in_subset","manifest_checkpoint_distance","max_background_jobs","num_workers","page_cache_size","sanitize","serialize","sst_meta_cache_size","sst_write_buffer_size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vector_cache_size","vzip","worker_channel_size","worker_request_batch_size","EngineInner","MITO_ENGINE_NAME","MitoEngine","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","get_metadata","get_metadata","get_region_usage","handle_query","handle_query","handle_request","handle_request","init","init","inner","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_region_exists","name","new","new","region_disk_usage","role","role","scanner","set_readonly_gracefully","set_readonly_gracefully","set_writable","set_writable","stop","stop","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","workers","ArrowReader","ArrowReaderSnafu","BuildPredicate","BuildPredicateSnafu","CompactRegion","CompactRegionSnafu","CompatReader","CompatReaderSnafu","CompressObject","CompressObjectSnafu","ComputeArrow","ComputeArrowSnafu","ComputeVector","ComputeVectorSnafu","ConvertColumnDataType","ConvertColumnDataTypeSnafu","ConvertVector","ConvertVectorSnafu","CreateDefault","CreateDefaultSnafu","DecodeWal","DecodeWalSnafu","DecompressObject","DecompressObjectSnafu","DeleteSst","DeleteSstSnafu","DeleteWal","DeleteWalSnafu","DeserializeField","DeserializeFieldSnafu","EmptyRegionDir","EmptyRegionDirSnafu","EncodeWal","EncodeWalSnafu","Err","Error","FieldTypeMismatch","FieldTypeMismatchSnafu","FillDefault","FillDefaultSnafu","FlushRegion","FlushRegionSnafu","InvalidBatch","InvalidBatchSnafu","InvalidMeta","InvalidMetaSnafu","InvalidMetadata","InvalidMetadataSnafu","InvalidParquet","InvalidParquetSnafu","InvalidRecordBatch","InvalidRecordBatchSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidRequest","InvalidRequestSnafu","InvalidScanIndex","InvalidScanIndexSnafu","InvalidSchedulerState","InvalidSchedulerStateSnafu","InvalidSender","InvalidSenderSnafu","Join","JoinSnafu","JsonOptions","JsonOptionsSnafu","NewRecordBatch","NewRecordBatchSnafu","NotSupportedField","NotSupportedFieldSnafu","ObjectStoreNotFound","ObjectStoreNotFoundSnafu","Ok","OpenDal","OpenDalSnafu","PrimaryKeyLengthMismatch","PrimaryKeyLengthMismatchSnafu","ReadParquet","ReadParquetSnafu","ReadWal","ReadWalSnafu","Recv","RecvSnafu","RegionClosed","RegionClosedSnafu","RegionCorrupted","RegionCorruptedSnafu","RegionDropped","RegionDroppedSnafu","RegionMetadataNotFound","RegionMetadataNotFoundSnafu","RegionNotFound","RegionNotFoundSnafu","RegionReadonly","RegionReadonlySnafu","RegionTruncated","RegionTruncatedSnafu","RejectWrite","RejectWriteSnafu","Result","SerdeJson","SerdeJsonSnafu","SerializeField","SerializeFieldSnafu","StopScheduler","StopSchedulerSnafu","Utf8","Utf8Snafu","WorkerStopped","WorkerStoppedSnafu","WriteBuffer","WriteBufferSnafu","WriteGroup","WriteGroupSnafu","WriteWal","WriteWalSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","compress_type","data_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","file","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_fill_default","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_object_not_found","next","object_store","path","path","path","path","reason","reason","reason","reason","reason","reason","reason","reason","region_dir","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","source","start","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column","compress_type","compress_type","data_type","end","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expect","file","file_id","id","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","object_store","path","path","path","path","reason","reason","reason","reason","reason","reason","reason","reason","region_dir","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","start","Alter","EngineFull","FlushReason","FlushScheduler","FlushStatus","Manual","Others","RegionFlushTask","WriteBufferManager","WriteBufferManagerImpl","WriteBufferManagerRef","access_layer","add_ddl_request_to_pending","add_write_request_to_pending","alloc","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_flush","drop","drop","drop","drop","drop","drop","engine_config","file_purger","flush_memtables","flushing","fmt","fmt","free_mem","free_mem","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","get_mutable_limit","global_write_buffer_size","has_pending_ddls","init","init","init","init","init","into","into","into","into","into","into_flush_job","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_flush_requested","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","listener","memory_active","memory_usage","memory_usage","memory_used","memtable_builder","merge","merge_task","mutable_limit","mutable_usage","new","new","new","on_failure","on_failure","on_flush_failed","on_flush_success","on_region_closed","on_region_dropped","on_region_truncated","on_success","pending_ddls","pending_task","pending_writes","phantom","ptr","push_sender","reason","region_id","region_id","region_status","remove_region_on_failure","request_sender","reserve_mem","reserve_mem","row_group_size","schedule_flush","schedule_free_mem","schedule_free_mem","schedule_next_flush","scheduler","send_worker_request","senders","should_flush_engine","should_flush_engine","should_stall","should_stall","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version_control","vzip","vzip","vzip","vzip","vzip","action","manager","storage","Change","Edit","RegionChange","RegionCheckpoint","RegionEdit","RegionManifest","RegionManifestBuilder","RegionMetaAction","RegionMetaActionList","RegionRemove","RegionTruncate","Remove","Truncate","actions","apply_change","apply_edit","apply_truncate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compacted_actions","compaction_time_window","compaction_time_window","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","contains_metadata","decode","decode","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","files","files","files_to_add","files_to_remove","flushed_entry_id","flushed_entry_id","flushed_entry_id","flushed_sequence","flushed_sequence","flushed_sequence","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_version","last_version","manifest_version","manifest_version","metadata","metadata","metadata","new","region_id","region_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncated_entry_id","truncated_entry_id","truncated_entry_id","truncated_sequence","try_build","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_action","with_checkpoint","RegionManifestManager","RegionManifestManagerInner","RegionManifestOptions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoint_distance","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compress_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_checkpoint","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","increase_version","init","init","init","inner","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","last_checkpoint","last_checkpoint_version","last_version","manifest","manifest","manifest_dir","manifest_usage","may_do_checkpoint","new","new","object_store","open","open","options","stop","stop","store","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_manifest_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update","vzip","vzip","vzip","CHECKPOINT_RE","Checkpoint","CheckpointMetadata","DEFAULT_MANIFEST_COMPRESSION_TYPE","DELTA_RE","Delta","FALL_BACK_COMPRESS_TYPE","FileKey","LAST_CHECKPOINT_FILE","ManifestObjectStore","ObjectStoreLogIterator","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint_file","checkpoint_file_path","checksum","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","decode","delete_until","delta_file","delta_file_path","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","encode","eq","equivalent","equivalent","equivalent","equivalent","extend_metadata","file_compress_type","file_version","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gen_path","get_hash","get_paths","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_checkpoint_file","is_delta_file","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","last_checkpoint_path","load_checkpoint","load_last_checkpoint","manifest_compress_type","manifest_size_map","new","next_log","object_store","object_store","path","save","save_checkpoint","scan","serialize","set_checkpoint_file_size","set_delta_file_size","size","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_manifest_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","AllocTracker","BoxedBatchIterator","KeyValues","Memtable","MemtableBuilder","MemtableBuilderRef","MemtableId","MemtableRef","MemtableStats","alloc","alloc","borrow","borrow","borrow_mut","borrow_mut","build","bytes_allocated","bytes_allocated","bytes_allocated","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","done_allocating","drop","drop","drop","estimated_bytes","fmt","fmt","from","from","from_subset","from_subset","id","init","init","into","into","into_request","into_request","into_request","into_request","is_done_allocating","is_empty","is_in_subset","is_in_subset","iter","key_values","mark_immutable","new","on_allocation","phantom","phantom","ptr","ptr","stats","time_range","time_range","time_series","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","write","write_buffer_manager","KeyValue","KeyValues","ReadRowHelper","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fields","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","helper","helper","indices","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","iter","mutation","new","new","num_fields","num_primary_key_column","num_primary_keys","num_rows","op_type","op_type","primary_keys","row","schema","sequence","sequence","timestamp","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","INITIAL_BUILDER_CAPACITY","Iter","Metrics","Series","SeriesRwLockMap","SeriesSet","TimeSeriesMemtable","TimeSeriesMemtableBuilder","ValueBuilder","Values","active","alloc_tracker","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","codec","codec","columns","compact","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fields","fields","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from_columns","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","frozen","get_or_add_series","id","id","id","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_series","last_key","len","mark_immutable","max_timestamp","metadata","metrics","min_timestamp","new","new","new","new","new","next","num_batches","num_pruned_series","num_rows","op_type","op_type","pk_cache","pk_schema","pk_to_record_batch","poison","predicate","primary_key_builders","primary_key_builders","projection","prune_inner","prune_primary_key","push","push","region_metadata","region_metadata","row_codec","scan_cost","sequence","sequence","series","series","series_set","stats","timestamp","timestamp","to_batch","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_series","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_pk_cache","update_stats","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_buffer_manager","MemtableVersion","MemtableVersionRef","alloc","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","freeze_mutable","from","from_ref","from_subset","immutables","immutables","immutables_usage","init","into","into_request","into_request","is_empty","is_in_subset","list_memtables","mutable","mutable_usage","new","phantom","ptr","remove_memtables","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CACHE_BYTES","CACHE_HIT","CACHE_MISS","COMPACTION_ELAPSED_TOTAL","COMPACTION_FAILURE_COUNT","COMPACTION_REQUEST_COUNT","COMPACTION_STAGE_ELAPSED","FLUSH_BYTES_TOTAL","FLUSH_ELAPSED","FLUSH_ERRORS_TOTAL","FLUSH_REASON","FLUSH_REQUESTS_TOTAL","HANDLE_REQUEST_ELAPSED","MERGE_FILTER_ROWS_TOTAL","READ_ROWS_TOTAL","READ_STAGE_ELAPSED","REGION_COUNT","STAGE_LABEL","TYPE_LABEL","WRITE_BUFFER_BYTES","WRITE_REJECT_TOTAL","WRITE_ROWS_TOTAL","WRITE_STAGE_ELAPSED","WRITE_STALL_TOTAL","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Batch","BatchBuilder","BatchColumn","BatchReader","BoxedBatchReader","Iter","Reader","Source","TIMESTAMP_KEY_LEN","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","column_id","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","concat","concat_arrays","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fields","fields","fields","filter","filter_deleted","first_sequence","first_timestamp","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get_sequence","get_timestamp","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_put_only","last_sequence","last_timestamp","merge","new","new","next_batch","next_batch","num_rows","op_types","op_types","op_types","op_types_array","primary_key","primary_key","primary_key","projected_fields","projection","push_field","push_field_array","put_only","scan_region","seq_scan","sequences","sequences","sequences","sequences_array","set_primary_key","slice","sort_and_dedup","take_in_place","timestamps","timestamps","timestamps","timestamps_array","timestamps_native","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_fields","with_fields","with_required_columns","CompatFields","CompatPrimaryKey","CompatReader","DefaultValue","Index","IndexOrDefault","actual_fields","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat_fields","compat_mut","compat_mut","compat_mut","compat_mut","compat_pk","compat_ref","compat_ref","compat_ref","compat_ref","converter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","has_same_columns","index_or_defaults","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","may_compat_fields","may_compat_primary_key","new","next_batch","reader","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","vzip","vzip","vzip","vzip","column_id","default_vector","CompareFirst","MergeReader","MergeReaderBuilder","Metrics","Node","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cmp","cmp","cold","compare","compare","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","current_batch","current_batch","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fetch_batch","fetch_batch_from_hottest","fetch_rows_from_hottest","filter_first_duplicate_timestamp_in_hot","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","hot","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_behind","is_eof","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","maybe_output_batch","metrics","new","new","new","next_batch","num_deleted_rows","num_duplicate_rows","num_fetch_by_batches","num_fetch_by_rows","num_input_rows","num_output_rows","output_batch","partial_cmp","partial_cmp","primary_key","push_batch_iter","push_batch_reader","refill_hot","reheap","scan_cost","skip_rows","source","sources","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BatchIndex","Field","MAX_VECTOR_LENGTH_TO_CACHE","ProjectionMapper","Tag","Timestamp","all","batch_fields","batch_fields","batch_indices","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","codec","column_ids","column_ids","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","has_tags","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","metadata","metadata","new","new_repeated_vector","output_schema","output_schema","repeated_vector_with_cache","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ScanRegion","Scanner","Seq","access_layer","borrow","borrow","borrow_mut","borrow_mut","build_time_range_predicate","cache_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","file_in_range","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","request","scan","scanner","seq_scan","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","Metrics","SeqScan","access_layer","borrow","borrow","borrow_mut","borrow_mut","build_reader","build_stream","cache_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","fetch_record_batch","files","fmt","from","from","from_subset","from_subset","ignore_file_not_found","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","mapper","memtables","new","predicate","scan_cost","time_range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_cache","with_files","with_ignore_file_not_found","with_memtables","with_predicate","with_time_range","ESTIMATED_WAL_FACTOR","MitoRegion","MitoRegionRef","RegionMap","RegionMapRef","RegionUsage","access_layer","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","disk_usage","drop","drop","drop","estimated_wal_usage","file_purger","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_region","init","init","init","insert_region","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_region_exists","is_writable","last_flush_millis","last_flush_millis","list_regions","manifest_manager","manifest_usage","metadata","opener","options","phantom","phantom","ptr","ptr","region_id","region_id","region_usage","regions","remove_region","set_writable","sst_usage","stop","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_flush_millis","version","version","version_control","vzip","vzip","vzip","wal_usage","writable","writable_region","writable_region_or","RegionOpener","borrow","borrow_mut","cache","cache_manager","check_recovered_region","compat","compat_mut","compat_ref","create_or_open","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","manifest_options","maybe_open","memtable_builder","metadata","metadata","new","new_manifest_dir","object_store","object_store_manager","open","options","options","region_dir","region_id","replay_memtable","scheduler","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CompactionOptions","RegionOptions","RegionOptionsWithoutEnum","Twcs","TwcsOptions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compaction","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_active_window_files","max_inactive_window_files","options_map_to_value","prefix_twcs","storage","storage","time_window","time_window_seconds","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","deserialize","serialize","Version","VersionBuilder","VersionControl","VersionControlData","VersionControlRef","VersionRef","add_files","alloc","alloc","alter_schema","apply_edit","apply_edit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","committed_sequence","compaction_time_window","compaction_time_window","compaction_time_window","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","current","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","flushed_entry_id","flushed_entry_id","flushed_entry_id","flushed_sequence","flushed_sequence","flushed_sequence","fmt","fmt","fmt","freeze_mutable","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_version","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_dropped","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_entry_id","mark_dropped","memtables","memtables","memtables","metadata","metadata","metadata","new","new","options","options","options","phantom","phantom","ptr","ptr","remove_memtables","set_sequence_and_entry_id","ssts","ssts","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","truncated_entry_id","truncated_entry_id","truncated_entry_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","RegionWriteCtx","WriteNotify","add_wal_entry","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_num","deref","deref","deref_mut","deref_mut","drop","drop","drop","err","failed","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","next_entry_id","next_sequence","notifiers","notify_result","num_rows","push_mutation","put_num","region_id","sender","set_error","set_next_entry_id","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","version","version_control","vzip","vzip","wal_entry","write_memtable","Alter","Background","BackgroundNotify","Close","Compact","CompactionFailed","CompactionFailed","CompactionFinished","CompactionFinished","Create","Ddl","DdlRequest","Drop","Flush","FlushFailed","FlushFailed","FlushFinished","FlushFinished","OnFailure","Open","OptionOutputTx","OutputTx","SenderDdlRequest","SenderWriteRequest","SetReadonlyGracefully","Stop","Truncate","WorkerRequest","Write","WriteRequest","_timer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_missing_column","check_schema","column_default_value","column_index_by_name","compacted_files","compaction_outputs","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err","err","estimated_size","file_metas","file_purger","file_purger","fill_column","fill_missing_columns","flushed_entry_id","flushed_sequence","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","has_null","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","memtables_to_remove","name_to_index","new","new","new","new_set_readonly_gracefully","none","on_failure","on_failure","on_failure","on_failure","on_success","on_success","op_type","region_id","region_id","region_id","region_id","region_id","request","request","rows","send","send","send_mut","sender","sender","senders","senders","start_time","take_inner","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_region_request","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_proto_value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","notify","region_id","region_id","sender","McmpRowCodec","RowCodec","SortField","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_type","decode","decode","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","encode","encode_to_vec","encode_to_vec","estimated_size","estimated_size","fields","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","num_fields","serialize","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","scheduler","Job","LocalScheduler","STATE_AWAIT_TERMINATION","STATE_RUNNING","STATE_STOP","Scheduler","SchedulerRef","alloc","borrow","borrow_mut","cancel_token","compat","compat_mut","compat_ref","deref","deref_mut","drop","drop","from","from_subset","handles","init","into","into_request","into_request","is_in_subset","is_running","new","phantom","ptr","schedule","schedule","sender","state","stop","stop","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","file","file_purger","parquet","version","FileHandle","FileHandleInner","FileId","FileMeta","FileTimeRange","Level","MAX_LEVEL","ParseIdError","ParseIdSnafu","as_error_source","as_parquet","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compacting","compacting","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deleted","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_id","file_id","file_path","file_purger","file_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","hash","hash","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","level","mark_deleted","meta","meta","new","new","parse_str","random","region_id","region_id","serialize","serialize","set_compacting","source","source","time_range","time_range","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","FilePurger","FilePurgerRef","LocalFilePurger","PurgeRequest","alloc","borrow","borrow","borrow_mut","borrow_mut","cache_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","file_id","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","phantom","ptr","region_id","scheduler","send_request","send_request","sst_layer","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DEFAULT_READ_BATCH_SIZE","DEFAULT_ROW_GROUP_SIZE","DEFAULT_WRITE_BUFFER_SIZE","PARQUET_METADATA_KEY","SstInfo","WriteOptions","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","file_size","fmt","format","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","num_rows","page_reader","reader","row_group","row_group_size","stats","time_range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_buffer_size","writer","FIXED_POS_COLUMN_NUM","ReadFormat","WriteFormat","arrow_schema","arrow_schema","arrow_schema","arrow_schema","borrow","borrow","borrow_mut","borrow_mut","column_null_counts","column_values","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_batch","convert_record_batch","deref","deref","deref_mut","deref_mut","drop","drop","field_id_to_index","from","from","from_subset","from_subset","get_field_batch_columns","init","init","internal_fields","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","max_values","metadata","metadata","metadata","min_values","new","new","new_primary_key_array","null_counts","primary_key_offsets","primary_key_position","projection_indices","tag_values","time_index_position","to_sst_arrow_schema","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CachedPageReader","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_next_page","init","into","into_iter","into_request","into_request","is_in_subset","new","next","page_to_page_meta","pages","peek_next_page","skip_next_page","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Metrics","ParquetReader","ParquetReaderBuilder","RowGroupReaderBuilder","batches","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build_cost","cache","cache_manager","cache_manager","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","current_reader","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fetch_next_record_batch","field_levels","file_dir","file_handle","file_handle","file_path","file_path","file_reader","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_region_metadata","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","metadata","metrics","new","next_batch","num_batches","num_record_batches","num_rows","object_store","parquet_meta","predicate","predicate","projection","projection","projection","read_format","read_parquet_metadata","read_row_groups","reader_builder","row_groups","scan_cost","time_range","time_range","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ColumnChunkData","ColumnChunkIterator","Dense","InMemoryRowGroup","Sparse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_manager","clone","clone_into","column_cached_pages","column_chunks","column_chunks","column_page_reader","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fetch","fetch_pages_from_cache","file_id","from","from","from","from_ref","from_subset","from_subset","from_subset","get","get_bytes","get_read","init","init","init","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","len","metadata","next","num_rows","page_locations","reader","region_id","row_count","row_group_idx","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","data","data","length","offset","RowGroupPruningStats","borrow","borrow_mut","column_id_to_prune","column_ids","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","max_values","min_values","new","null_counts","num_containers","read_format","row_groups","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ParquetWriter","SourceStats","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","customize_column_config","default","deref","deref","deref_mut","deref_mut","drop","drop","file_path","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","metadata","new","num_rows","object_store","source","time_range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","write_all","LevelMeta","LevelMetaArray","SstVersion","SstVersionRef","add_files","alloc","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","files","files","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","get_expired_files","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","level","levels","levels","mark_all_deleted","new","new","new_level_meta_vec","phantom","ptr","remove_files","sst_usage","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EntryId","Wal","WalEntryStream","WalWriter","add_entry","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","decode_entry","deref","deref","deref_mut","deref_mut","drop","drop","entries","entry_encode_buf","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","obsolete","scan","store","store","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_to_wal","writer","DROPPING_MARKER_FILE","RegionWorker","RegionWorkerLoop","RequestBuffer","StalledRequests","WorkerGroup","WorkerId","WorkerListener","WorkerStarter","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","cache_manager","cache_manager","cache_manager","cache_manager","clean","clone","clone_into","compaction_scheduler","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","config","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","dropping_regions","estimated_size","flush_regions_on_engine_full","flush_scheduler","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_region","get_region","handle","handle_alter","handle_alter_request","handle_background_notify","handle_close","handle_close_request","handle_compaction","handle_compaction_failure","handle_compaction_finished","handle_compaction_request","handle_create","handle_create_request","handle_ddl_requests","handle_drop","handle_drop_request","handle_flush","handle_flush_failed","handle_flush_finished","handle_flush_request","handle_open","handle_open_request","handle_requests","handle_truncate","handle_truncate_request","handle_write","handle_write_requests","id","id","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_region_exists","is_region_exists","is_running","len","listener","listener","log_store","maybe_flush_worker","memtable_builder","new_flush_task","object_store_manager","object_store_manager","on_flush_begin","on_flush_success","on_later_drop_begin","on_later_drop_end","on_write_stall","prepare_region_write_ctx","receiver","regions","regions","requests","run","running","running","scheduler","scheduler","scheduler","sender","sender","set_readonly_gracefully","set_running","should_reject_write","stalled_requests","start","start","stop","stop","submit_request","submit_to_worker","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value_to_index","vzip","vzip","vzip","vzip","vzip","vzip","wal","worker","workers","write_buffer_manager","write_buffer_manager","alter_region_schema","metadata_after_alteration","GC_TASK_INTERVAL_SEC","MAX_RETRY_TIMES","later_drop_task","remove_region_dir_once","maybe_fill_missing_columns","reject_write_requests"],"q":[[0,"mito2"],[20,"mito2::access_layer"],[56,"mito2::cache"],[209,"mito2::cache::cache_size"],[216,"mito2::compaction"],[343,"mito2::compaction::output"],[371,"mito2::compaction::picker"],[379,"mito2::compaction::twcs"],[479,"mito2::config"],[530,"mito2::engine"],[602,"mito2::error"],[2354,"mito2::error::Error"],[2480,"mito2::flush"],[2664,"mito2::manifest"],[2667,"mito2::manifest::action"],[3008,"mito2::manifest::manager"],[3106,"mito2::manifest::storage"],[3302,"mito2::memtable"],[3385,"mito2::memtable::key_values"],[3474,"mito2::memtable::time_series"],[3733,"mito2::memtable::version"],[3774,"mito2::metrics"],[4281,"mito2::read"],[4445,"mito2::read::compat"],[4552,"mito2::read::compat::IndexOrDefault"],[4554,"mito2::read::merge"],[4717,"mito2::read::projection"],[4786,"mito2::read::scan_region"],[4841,"mito2::read::seq_scan"],[4906,"mito2::region"],[5018,"mito2::region::opener"],[5060,"mito2::region::options"],[5200,"mito2::region::options::prefix_twcs"],[5202,"mito2::region::version"],[5351,"mito2::region_write_ctx"],[5418,"mito2::request"],[5765,"mito2::request::WorkerRequest"],[5769,"mito2::row_converter"],[5831,"mito2::schedule"],[5832,"mito2::schedule::scheduler"],[5874,"mito2::sst"],[5878,"mito2::sst::file"],[6091,"mito2::sst::file_purger"],[6150,"mito2::sst::parquet"],[6211,"mito2::sst::parquet::format"],[6282,"mito2::sst::parquet::page_reader"],[6312,"mito2::sst::parquet::reader"],[6442,"mito2::sst::parquet::row_group"],[6536,"mito2::sst::parquet::row_group::ColumnChunkData"],[6540,"mito2::sst::parquet::stats"],[6571,"mito2::sst::parquet::writer"],[6626,"mito2::sst::version"],[6698,"mito2::wal"],[6760,"mito2::worker"],[6993,"mito2::worker::handle_alter"],[6995,"mito2::worker::handle_drop"],[6999,"mito2::worker::handle_write"],[7001,"async_compat"],[7002,"core::fmt"],[7003,"core::fmt"],[7004,"tonic::request"],[7005,"alloc::string"],[7006,"core::convert"],[7007,"core::option"],[7008,"core::result"],[7009,"core::any"],[7010,"store_api::metadata"],[7011,"core::hash"],[7012,"core::marker"],[7013,"core::hash"],[7014,"store_api::storage::descriptors"],[7015,"parquet::file::metadata"],[7016,"datatypes::value"],[7017,"datatypes::vectors"],[7018,"core::hash"],[7019,"alloc::vec"],[7020,"parquet::schema::types"],[7021,"parquet::file::metadata"],[7022,"common_base::readable_size"],[7023,"alloc::boxed"],[7024,"core::future::future"],[7025,"core::pin"],[7026,"alloc::collections::btree::map"],[7027,"core::iter::traits::iterator"],[7028,"core::time"],[7029,"common_time::timestamp"],[7030,"serde::de"],[7031,"serde::ser"],[7032,"store_api::storage::requests"],[7033,"store_api::region_request"],[7034,"common_query"],[7035,"object_store::manager"],[7036,"store_api::logstore"],[7037,"store_api::region_engine"],[7038,"store_api::region_engine"],[7039,"core::any"],[7040,"snafu::backtrace_inert"],[7041,"store_api::manifest"],[7042,"datatypes::data_type"],[7043,"core::clone"],[7044,"core::fmt"],[7045,"common_error::ext"],[7046,"regex::regex::string"],[7047,"core::ops::function"],[7048,"store_api::storage::descriptors"],[7049,"store_api::metadata"],[7050,"greptime_proto::v1"],[7051,"datatypes::value"],[7052,"std::sync::rwlock"],[7053,"std::collections::hash::set"],[7054,"datatypes::vectors"],[7055,"arrow_array::record_batch"],[7056,"datafusion_physical_expr::physical_expr"],[7057,"prometheus::gauge"],[7058,"prometheus::histogram"],[7059,"prometheus::counter"],[7060,"prometheus::counter"],[7061,"datatypes::vectors::primitive"],[7062,"datatypes::vectors::primitive"],[7063,"common_recordbatch::recordbatch"],[7064,"common_recordbatch::error"],[7065,"datatypes::schema"],[7066,"common_time::range"],[7067,"common_recordbatch"],[7068,"store_api::metadata"],[7069,"serde_json::value"],[7070,"serde::de"],[7071,"tokio::sync::oneshot"],[7072,"bytes::buf::buf_impl"],[7073,"memcomparable::ser"],[7074,"alloc::collections::vec_deque"],[7075,"arrow_schema::field"],[7076,"arrow_array::types"],[7077,"arrow_array::array::dictionary_array"],[7078,"core::iter::traits::collect"],[7079,"parquet::errors"],[7080,"parquet::column::page"],[7081,"parquet::format"],[7082,"parquet::arrow::async_reader"],[7083,"parquet::column::page"],[7084,"parquet::arrow::arrow_reader::selection"],[7085,"core::marker"],[7086,"datafusion_common::column"],[7087,"parquet::file::properties"],[7088,"greptime_proto::v1"],[7089,"store_api::region_request"]],"d":["","Cache for the engine.","","Configurations.","Mito developer document","Mito region engine.","","Flush related utilities and structs.","manifest storage","Memtables are write buffers for regions.","","Common structs and utilities for reading data.","Mito region.","","Worker requests.","","","Sorted strings tables.","Write ahead log of the engine.","Structs and utilities for writing regions.","A layer to access SST files under the same directory.","","","","","","","","Deletes a SST file with given file id.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns a new AccessLayer for specific <code>region_dir</code>.","Returns the object store of the layer.","","","","Returns a reader builder for specific <code>file</code>.","Returns the directory of the region.","","Returns the <code>file_path</code> for the <code>file_name</code> in the object …","","","","","","","Returns a new parquet writer to write the SST for specific …","Manages cached data for the engine.","","","Maps (region, file, row group, column) to PageValue.","Cache key for pages of a SST row group.","Cached row group pages for a column.","","Maps (region id, file id) to ParquetMetaData.","Cache key (region id, file id) for SST meta.","","Maps Value to a vector that holds this value repeatedly.","","","","","","","","","","","","","Cache size of different cache value.","","","","","Index of the column in the row group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns memory used by the value (estimated).","Returns memory used by the key (estimated).","Returns memory used by the key (estimated).","Id of the SST file to cache.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Gets pages for the row group.","Gets cached ParquetMetaData.","Gets a vector with repeated value for specific <code>key</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Creates a new manager with specific cache size in bytes.","Creates a new page value.","Cache for SST pages.","","All pages of the column in the row group.","","","Puts pages of the row group into the cache.","Puts ParquetMetaData into the cache.","Puts a vector with repeated value into the cache.","Region id of the SST file to cache.","Removes ParquetMetaData from the cache.","Index of the row group.","Cache for SST metadata.","","","","","","","","","","","","","","","","","","","","","","","Updates cache hit/miss metrics.","","","","Cache for vectors.","","","","","","Returns estimated size of ColumnDescriptor allocated from …","Returns estimated size of FileMetaData allocated from heap.","Returns estimated size of ParquetColumnIndex allocated …","Returns estimated size of ParquetMetaData.","Returns estimated size of ParquetOffsetIndex allocated …","Returns estimated size of ColumnDescriptor allocated from …","Returns estimated size of SchemaDescriptor allocated from …","","Region compaction request.","Compaction scheduler tracks and manages compaction tasks.","Status of running and pending region compaction tasks.","Pending compaction tasks.","","Access layer of the region.","","","","","","","","","Builds compaction picker according to CompactionOptions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","File purger of the region.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Merge the watier to the pending compaction.","","Creates a new CompactionStatus","Creates a new compaction request for compaction picker.","Notifies the scheduler that the compaction job is failed.","Notifies the scheduler that the compaction job is finished …","Send compaction error to waiter.","","Notifies the scheduler that the region is closed.","Notifies the scheduler that the region is dropped.","Notifies the scheduler that the region is truncated.","","Compaction pending to schedule.","","Push waiter to the request.","Push waiter to the request.","","Id of the region.","Compacting regions.","","Sender to send notification to the region worker.","Request sender of the worker that this scheduler belongs …","Schedules a compaction for the region.","Schedules a compaction request.","","Buffering threshold while writing SST files.","Start time of compaction task.","","","","","","","","","","","","","","","","","","","","","","Version control of the region.","","","","","Waiters of the compaction request.","","","","","","Builds BoxedBatchReader that reads all SST files and …","","","","","","","","Returns the argument unchanged.","","","Compaction input files.","Calls <code>U::from(self)</code>.","","","","","Compaction output file level.","","","","","","","","","Picker picks input SST files and builds the compaction …","","","","","","","A set of predefined time buckets.","","","<code>TwcsPicker</code> picks files of which the max timestamp are in …","Assigns files to windows with predefined window size (in …","","","","","","","Builds compaction output from files. For active writing …","","","","","","","","","","","","","","","","","","","","","","","Finds the latest active writing window among all files. …","Fits a given time span into time bucket by find the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Finds all expired SSTs across levels.","","Infers the suitable time bucket duration. Now it simply …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Merges all SST files. Returns <code>(output files, input files)</code>.","","Handles compaction failure, notifies all waiters.","","","","Request sender to notify the worker.","","","Notifies region worker to handle post-compaction tasks.","","","Start time of compaction task","","","","","","","","","","","","","","","","","","","","Senders that are used to notify waiters waiting for …","Default max running background job.","","Configuration for MitoEngine.","Interval to auto flush a region if it has not flushed yet …","","","","","","","","Whether to compress manifest and checkpoint file by gzip …","","","","","","","","","","","","Returns the argument unchanged.","","","Global write buffer size threshold to reject write …","Global write buffer size threshold to trigger flush …","","Calls <code>U::from(self)</code>.","","","","Number of meta action updated to trigger a new checkpoint …","Max number of running background jobs (default 4).","Number of region workers (default 1).","Cache size for pages of SST row groups (default 512MB). …","Sanitize incorrect configurations.","","Cache size for SST metadata (default 128MB). Setting it to …","Buffer size for SST writing.","","","","","","","Cache size for vectors and arrow arrays (default 512MB). …","","Request channel size of each worker (default 128).","Max batch size for a worker to handle requests (default …","Inner struct of MitoEngine.","","Region engine implementation for timeseries data.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get metadata of a region.","Retrieve region’s metadata.","Returns the region disk/memory usage information.","Handles the scan <code>request</code> and returns a Scanner for the …","Handle substrait query and return a stream of record …","Handles RegionRequest and return its executed result.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if the specific region exists.","","Returns a new EngineInner with specific <code>config</code>, <code>log_store</code> …","Returns a new MitoEngine with specific <code>config</code>, <code>log_store</code> …","","","","Returns a scanner to scan for <code>request</code>.","Sets read-only for a region and ensures no more writes in …","","Set writable mode for a region.","","Stop the inner engine.","Stop the engine.","","","","","","","","","","","","","","Region workers group.","","SNAFU context selector for the <code>Error::ArrowReader</code> variant","","SNAFU context selector for the <code>Error::BuildPredicate</code> …","","SNAFU context selector for the <code>Error::CompactRegion</code> variant","","SNAFU context selector for the <code>Error::CompatReader</code> variant","","SNAFU context selector for the <code>Error::CompressObject</code> …","","SNAFU context selector for the <code>Error::ComputeArrow</code> variant","","SNAFU context selector for the <code>Error::ComputeVector</code> variant","","SNAFU context selector for the <code>Error::ConvertColumnDataType</code>…","","SNAFU context selector for the <code>Error::ConvertVector</code> variant","","SNAFU context selector for the <code>Error::CreateDefault</code> variant","","SNAFU context selector for the <code>Error::DecodeWal</code> variant","","SNAFU context selector for the <code>Error::DecompressObject</code> …","","SNAFU context selector for the <code>Error::DeleteSst</code> variant","","SNAFU context selector for the <code>Error::DeleteWal</code> variant","","SNAFU context selector for the <code>Error::DeserializeField</code> …","","SNAFU context selector for the <code>Error::EmptyRegionDir</code> …","","SNAFU context selector for the <code>Error::EncodeWal</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::FieldTypeMismatch</code> …","An error type to indicate that schema is changed and we …","SNAFU context selector for the <code>Error::FillDefault</code> variant","","SNAFU context selector for the <code>Error::FlushRegion</code> variant","","SNAFU context selector for the <code>Error::InvalidBatch</code> variant","","SNAFU context selector for the <code>Error::InvalidMeta</code> variant","","SNAFU context selector for the <code>Error::InvalidMetadata</code> …","","SNAFU context selector for the <code>Error::InvalidParquet</code> …","","SNAFU context selector for the <code>Error::InvalidRecordBatch</code> …","","SNAFU context selector for the <code>Error::InvalidRegionRequest</code> …","","SNAFU context selector for the <code>Error::InvalidRequest</code> …","","SNAFU context selector for the <code>Error::InvalidScanIndex</code> …","","SNAFU context selector for the <code>Error::InvalidSchedulerState</code>…","","SNAFU context selector for the <code>Error::InvalidSender</code> variant","","SNAFU context selector for the <code>Error::Join</code> variant","","SNAFU context selector for the <code>Error::JsonOptions</code> variant","","SNAFU context selector for the <code>Error::NewRecordBatch</code> …","","SNAFU context selector for the <code>Error::NotSupportedField</code> …","","SNAFU context selector for the <code>Error::ObjectStoreNotFound</code> …","Contains the success value","","SNAFU context selector for the <code>Error::OpenDal</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ReadParquet</code> variant","","SNAFU context selector for the <code>Error::ReadWal</code> variant","","SNAFU context selector for the <code>Error::Recv</code> variant","","SNAFU context selector for the <code>Error::RegionClosed</code> variant","","SNAFU context selector for the <code>Error::RegionCorrupted</code> …","","SNAFU context selector for the <code>Error::RegionDropped</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","SNAFU context selector for the <code>Error::RegionReadonly</code> …","","SNAFU context selector for the <code>Error::RegionTruncated</code> …","","SNAFU context selector for the <code>Error::RejectWrite</code> variant","","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::SerializeField</code> …","","SNAFU context selector for the <code>Error::StopScheduler</code> variant","","SNAFU context selector for the <code>Error::Utf8</code> variant","","SNAFU context selector for the <code>Error::WorkerStopped</code> variant","","SNAFU context selector for the <code>Error::WriteBuffer</code> variant","","SNAFU context selector for the <code>Error::WriteGroup</code> variant","","SNAFU context selector for the <code>Error::WriteWal</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns true if we need to fill default value for a region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the file is not found on the object storelush to alter table.","Engine reaches flush threshold.","Reason of a flush task.","Manages background flushes of a worker.","Flush status of a region scheduled by the FlushScheduler.","Manual flush.","Other reasons.","Task to flush a region.","Global write buffer (memtable) manager.","Default WriteBufferManager implementation.","","","Add ddl request to pending queue.","Add write request to pending queue.","","Get flush reason as static str.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs the flush task.","","","","","","","","","Flushes memtables to level 0 SSTs.","There is a flush task running.","","","We have freed <code>mem</code> bytes.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the size limit for mutable memtables.","Write buffer size for the engine.","Returns true if the region has pending DDLs.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the flush task into a background job.","","","","","","","","","","","Returns true if the region already requested flush.","","","","","","","Memory that hasn’t been scheduled to free (e.g. used by …","Returns the total memory used by memtables.","","Memory in used (e.g. used by mutable and immutable …","","Merge two flush tasks.","Merges the task to pending task.","Mutable memtable memory size limit.","Returns memory usage of mutable memtables.","Creates a new flush scheduler.","","Returns a new manager with specific …","Send flush error to waiter.","","Notifies the scheduler that the flush job is failed.","Notifies the scheduler that the flush job is finished.","Notifies the scheduler that the region is closed.","Notifies the scheduler that the region is dropped.","Notifies the scheduler that the region is truncated.","Consumes the task and notify the sender the job is success.","Pending ddl requests.","Task waiting for next flush.","Requests waiting to write after altering the region.","","","Push the sender if it is not none.","Reason to flush.","Region to flush.","Current region.","Tracks regions need to flush.","","Request sender to notify the worker.","Reserves <code>mem</code> bytes.","","","Schedules a flush <code>task</code> for specific <code>region</code>.","Tells the manager we are freeing <code>mem</code> bytes.","","Schedules a new flush task when the scheduler can submit …","Background job scheduler.","Notify flush job status.","Flush result senders.","Returns whether to trigger the engine.","","Returns whether to stall write requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","Version control of the region.","","","","","","Defines RegionMetaAction related structs and …","","","Change region’s metadata for request like ALTER","Edit region’s state for changing options or file list.","","","","The region manifest data.","","Actions that can be applied to region manifest.","","","Last data truncated in the region.","Remove the region.","Truncate the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inferred compaction time window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the builder keeps a RegionMetadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode self into json in the form of string lines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SST files.","","","","","Last WAL entry id of flushed data.","","","Last sequence of flushed data.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The last manifest version that this checkpoint …","Current manifest version.","","The metadata after changed.","Metadata of the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Last WAL entry id of truncated data.","Last WAL entry id of truncated data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start with a checkpoint.","Manage region’s manifest. Provide APIs to access …","","Options for RegionManifestManager.","","","","","","","Interval of version (ManifestVersion) between two …","","","","","","","","","","","","","","","","","","","Make a new checkpoint. Return the fresh one if there are …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Increases last version and returns the increased version.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Fetch the last RegionCheckpoint from storage.","The last version included in checkpoint file.","","Retrieve the current RegionManifest.","","Directory to store manifest.","Returns total manifest size.","","Construct a region’s manifest and persist it.","Creates a new manifest.","","Open an existing manifest.","Open an existing manifest.","","Stop background tasks gracefully.","","","","","","","","","","Returns total manifest size.","","","","","","","","","","Update the manifest. Return the current manifest version …","Update the manifest. Return the current manifest version …","","","","","A checkpoint file (<code>.checkpoint</code>).","","","","A delta file (<code>.json</code>).","Due to backward compatibility, it is possible that the user…","Key to identify a manifest file.","","","","","","","","","","","","","","","","","","","Returns the checkpoint file path under the <strong>current</strong> …","","","","","","","","","","","","","","","","","","","","","","","","","","Delete manifest files that version &lt; end. If …","","Returns the delta file path under the <strong>current</strong> compression …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return’s the file compress algorithm by file extension.","Return’s the file manifest version from path","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Return all <code>R</code>s in the root directory that meet the <code>filter</code> …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the last checkpoint path, because the last …","","Load the latest checkpoint. Return manifest version and …","Returns the CompressionType according to whether to …","Stores the size of each manifest file.","","","","","","Save the delta manifest file.","Save the checkpoint manifest file.","Scan the manifest files in the range of [start, end) and …","","Set the size of the checkpoint file by checkpoint version.","Set the size of the delta file by delta version.","","","","","","","","","","","","","","","","Compute the size(Byte) in manifest size map.","","","","","","","","","","","","","","","","","","","The latest version this checkpoint contains.","","","","","","","Memtable memory allocation tracker.","","","In memory write buffer.","Builder to build a new Memtable.","","Id for memtables.","","","","","","","","","Builds a new memtable instance.","Returns the estimated bytes allocated by this memtable.","Returns bytes allocated.","Bytes allocated by the tracker.","","","","","","","","","","","","","Marks we have finished allocating memory so we can free it …","","","","The estimated bytes allocated by this memtable from heap.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the id of this memtable.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Whether allocating is done.","Returns true if the memtable is empty.","","","Scans the memtable. <code>projection</code> selects columns to read, …","","Mark the memtable as immutable.","Returns a new AllocTracker.","Tracks <code>bytes</code> memory is allocated.","","","","","Returns the MemtableStats info of Memtable.","Returns the time range of the memtable.","The time range that this memtable contains.","","","","","","","","","","","","Memtable version.","","","Write key values into the memtable.","","Key value view of a row.","Key value view of a mutation.","Helper to read rows in key, value order.","","","","","","","","","","","","","","","","","","","","","","","","","Get field columns.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Key value read helper.","","Key and value column indices.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns a key value iterator.","Mutation to read.","Creates KeyValues from specific <code>mutation</code>.","Creates a ReadRowHelper for specific <code>rows</code>.","Get number of field columns.","Number of primary key columns.","Get number of primary key columns.","Returns number of rows.","Get op type.","","Get primary key columns.","","","Get sequence.","","Get timestamp.","","","","","","","","","","","","","","","","","","","Initial vector builder capacity.","","Metrics for reading the memtable.","A <code>Series</code> holds a list of field values of some given …","","","Memtable implementation that groups rows by their primary …","Builder to build TimeSeriesMemtable.","<code>ValueBuilder</code> holds all the vector builders for field …","Values holds an immutable vectors of field columns, …","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector of all columns converted to arrow Array …","Freezes active part to frozen part and compact frozen part …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Freezes the active part and push it to <code>frozen</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Builds a new Values instance from columns.","","","","","","","","","","","Returns the series for given primary key, or create a new …","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates all series in SeriesSet.","","Returns the length of ValueBuilder","","","","","","","","","","Creates a new builder with specific <code>write_buffer_manager</code>.","","Number of batch read.","Number of series pruned.","Number of rows read.","","","","","","","","Creates primary key array builders and arrow’s schema …","","","","","Pushes a row of values into Series.","Pushes a new row to <code>ValueBuilder</code>. We don’t need primary …","","","","Duration to scan the memtable.","","","","","","","","","Converts Values to <code>Batch</code>, sorts the batch according to …","","","","","","","","","","","","","","","","","","Total series in the memtable.","","","","","","","","","","","","","","","","","","","","","","","","","","Updates memtable stats.","","","","","","","","","","","A version of current memtables in a region.","","","","","","","","","","","","","","Returns a new MemtableVersion which switches the old …","Returns the argument unchanged.","","","Immutable memtables.","Immutable memtables.","Returns the memory usage of the immutable memtables.","","Calls <code>U::from(self)</code>.","","","Returns true if the memtable version is empty.","","Lists mutable and immutable memtables.","Mutable memtable.","Returns the memory usage of the mutable memtable.","Returns a new MemtableVersion with specific mutable …","","","Removes memtables by ids from immutable memtables.","","","","","","","","Cache size in bytes.","Cache hit counter.","Cache miss counter.","Timer of whole compaction task.","Counter of failed compaction task.","Counter of all requested compaction task.","Timer of different stages in compaction.","Histogram of flushed bytes.","Elapsed time of a flush job.","Counter of scheduled failed flush jobs.","Reason to flush.","Counter of scheduled flush requests. Note that the flush …","Elapsed time to handle requests.","Counter of filtered rows during merge.","Counter of rows read.","Timer of different stages in query.","Gauge for open regions","Stage label.","Type label.","Global write buffer size in bytes.","Counter of rejected write requests.","Counter of rows to write.","Elapsed time of each write stage.","Counter of stalled write requestseturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codetorage internal representation of a batch of rows for a …","Builder to build Batch.","A column in a Batch.","Async batch reader.","Pointer to BatchReader.","Source from a BoxedBatchIterator.","Source from a BoxedBatchReader.","Async Batch reader and iterator wrapper.","Len of timestamp in arrow row format.","","","","","","","","","Builds the Batch.","","","","","Id of the column.","Utilities to adapt readers with different schema.","","","","","","","","","","","","","Takes <code>batches</code> and concat them into one batch.","Helper function to concat arrays from <code>iter</code>.","Data of the column.","","","","","","","","","","","","","","","","","","","Returns fields in the batch.","","Fields organized in columnar format.","","Removes rows whose op type is delete.","Returns the first sequence in the batch or <code>None</code> if the …","Returns the first timestamp in the batch or <code>None</code> if the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets a sequence at given <code>index</code>.","Gets a timestamp at given <code>index</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns true if the number of rows in the batch is 0.","","","","","Returns whether the op types vector only contains put …","Returns the last sequence in the batch or <code>None</code> if the …","Returns the last timestamp in the batch or <code>None</code> if the …","Merge reader implementation.","Creates a new BatchBuilder with primary key.","Creates a new batch.","Fetch next Batch.","Returns next Batch from this data source.","Returns the number of rows in the batch.","Returns op types of the batch.","","Op types of rows","Try to set an array as op types.","Returns primary key of the batch.","","Primary key encoded in a comparable form.","Returns ids of fields in the Batch after applying the …","Utilities for projection.","Push a field column.","Push an array as a field.","True if op types only contains put operations.","Scans a region according to the scan request.","Sequential scan.","Returns sequences of the batch.","","Sequences of rows","Try to set an array as sequences.","Replaces the primary key of the batch.","Slice the batch, returning a new batch.","Sorts and dedup rows in the batch.","Takes the batch in place.","Returns timestamps of the batch.","","Timestamps of rows, should be sorted and not null.","Try to set an array as timestamps.","Returns timestamps in a native slice or <code>None</code> if the batch …","","","","","","","","","","","","","","","","","","","","","","","","","","","Set all field columns.","Tries to set fields for the batch.","Creates a new BatchBuilder with all required columns.","Helper to make fields compatible.","Helper to make primary key compatible.","Reader to adapt schema of underlying reader to expected …","Default value for the column.","Index of the column in source batch.","Index in source batch or a default value to fill a column.","Column Ids the reader actually returns.","","","","","","","","","","Make primary key of the <code>batch</code> compatible.","","Make fields of the <code>batch</code> compatible.","","","Optional fields adapter.","","","","","Optional primary key adapter.","","","","","Row converter to append values to primary keys.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns true if <code>left</code> and <code>right</code> have same columns to read.","Indices to convert actual fields to expect fields.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Creates a CompatFields if needed.","Creates a CompatPrimaryKey if needed.","Creates a new compat reader.","","Underlying reader.","","","","","","","","","","","","","","","","","","","","","Default values to append.","","","","","Id of the column.","Default value. The vector has only 1 element.","Type to compare Batch by first row.","Reader to merge sorted batches.","Builder to build and initialize a MergeReader.","Metrics for the merge reader.","A <code>Node</code> represent an individual input data source to be …","","","","","","","","","","","Builds and initializes the reader, then resets the builder.","","Compares by primary key, time index, sequence desc.","Holds <code>Node</code> whose key range of current batch <strong>isn’t</strong> …","","","","","","","","","","","","","","","","","","Returns current batch.","Current batch to be read. The node ensures the batch is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns current batch and fetches next batch from the …","Fetches one batch from the hottest node.","Fetches non-duplicated rows from the hottest node and …","Filters the first duplicate <code>timestamp</code> in <code>top_node</code> and <code>hot</code> …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Holds Nodes whose key range of current batch <strong>is</strong> overlapped …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns true if the key range of current batch in <code>self</code> is …","Returns whether the node still has batch to read.","","","","","","Removeds deleted entries and sets the <code>batch</code> to the …","Local metrics.","Creates and initializes a new MergeReader.","Initialize a node.","Returns an empty builder.","","Number of deleted rows.","Number of skipped duplicate rows.","Number of times to fetch batches.","Number of times to fetch rows.","Number of input rows.","Number of output rows.","Batch to output.","","","Returns the primary key of current batch.","Pushes a batch iterator to sources.","Pushes a batch reader to sources.","Moves nodes in <code>cold</code> heap, whose key range is overlapped …","Push the node popped from <code>hot</code> back to a proper heap.","Total scan cost of the reader.","Skips first <code>num_to_skip</code> rows from node’s current batch. …","Data source of this <code>Node</code>.","Input sources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of a vector in a Batch.","Index in fields.","Only cache vector when its length <code>&lt;=</code> this value.","Handles projection and converts a projected Batch to a …","Index in primary keys.","The time index column.","Returns a new mapper without projection.","Returns ids of fields in Batches the mapper expects to …","Ids of field columns in the Batch.","Maps column in RecordBatch to index in Batch.","","","","","","","Decoder for primary key.","Returns ids of projected columns.","Ids of columns to project. It keeps ids in the same order …","","","","","","","Converts a Batch to a RecordBatch.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Output record batch contains tags.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the metadata that created the mapper.","Metadata of the region.","Returns a new mapper with projection.","Returns a vector with repeated values.","Returns the schema of converted RecordBatch.","Schema for converted RecordBatch.","Gets a vector with repeated values from specific cache or …","","","","","","","","","","","","","","Helper to scans a region by ScanRequest.","A scanner scans a region and returns a …","Sequential scan.","Access layer of the region.","","","","","Build time range predicate from filters.","Cache.","","","","","","","","","","","","","Returns true if the time range of a SST <code>file</code> matches the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a ScanRegion.","Scan request.","Returns a SendableRecordBatchStream to retrieve scan …","Returns a Scanner to scan the region.","Scan sequentially.","","","","","","","","","","","Version of the region at scan.","","","Metrics for SeqScan.","Scans a region and returns rows in a sorted sequence.","Region SST access layer.","","","","","Builds a BoxedBatchReader from sequential scan.","Builds a stream for the query.","Cache.","","","","","","","","","","","","","","Fetch a batch from the reader and convert it into a record …","Handles to SST files to scan.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Ignores file not found error.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Maps projected Batches to RecordBatches.","Memtables to scan.","Creates a new SeqScan.","Predicate to push down.","Duration to scan data.","Time range filter for time index.","","","","","","","","","","","","","Sets cache for this query.","Sets files to read.","Ignores file not found error.","Sets memtables to read.","Sets predicate to push down.","Sets time range filter for time index.","This is the approximate factor to estimate the size of wal.","Metadata and runtime status of a region.","","Regions indexed by ids.","","Region status include region id, memtable usage, sst …","SSTs accessor for this region.","","","","","","","","","Clear the map.","","","","","","","","","","","","","","","","","","","","","Estimated WAL size in bytes. Use the memtables size to …","SST file purger.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets region by region id.","","","","Inserts a new region into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns true if the region exists.","Returns whether the region is writable.","Returns last flush timestamp in millis.","Last flush time in millis.","List all regions.","Manager to maintain manifest for this region.","","Returns current metadata of the region.","Region opener.","Options for a region.","","","","","","Id of this region.","Returns the region usage in bytes.","","Remove region by id.","Sets the writable flag.","","Stop background managers for this region.","","","","","","","","","","","","","","","","Update flush time to current time.","Version control of mito engine.","Returns current version of the region.","Version controller for this region.","","","","","Whether the region is writable.","Gets writable region by region id.","Gets writable region by region id.","Builder to create a new MitoRegion or open an existing one.","","","Sets the cache manager for the region.","","Checks whether the recovered region has the same schema as …","","","","Writes region manifest and creates a new region if it does …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns a new manifest options.","Tries to open the region and returns <code>None</code> if the region …","","Sets metadata of the region to create.","","Returns a new opener.","Returns the directory to the manifest files.","Returns an object store corresponding to <code>name</code>. If <code>name</code> is …","","Opens an existing region in read only mode.","Sets options for the region.","","","","Replays the mutations from WAL and inserts mutations to …","","","","","","","","Options for compactions","Options that affect the entire region.","We need to define a new struct without enum fields as …","Time window compaction strategy.","Time window compaction options.","","","","","","","","","","","","","","","Compaction options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","Converts the <code>options</code> map to a json object.","","Custom storage.","","Compaction time window defined when creating tables.","Returns time window in second resolution.","","","","","","","","","","","","","","","","","","","","","Region SST files TTL.","Region SST files TTL.","","","","","","","","","","","Static metadata of a region.","Version builder.","Controls metadata and sequence numbers for a region.","Data of VersionControl.","","","Add files to the builder.","","","Alter schema of the region.","Apply edit to the builder.","Apply edit to current version.","","","","","","","","","Builds a new Version from the builder.","","","","","Sequence number of last committed data.","Sets compaction time window.","","Inferred compaction time window.","","","","","","","","","","","","","Returns current copy of data.","","","","","","","","","","","","","","Sets flushed entry id.","","Inclusive max WAL entry id of flushed data.","Sets flushed sequence.","","Inclusive max sequence of flushed data.","","","","Freezes the mutable memtable if it is not empty.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a new builder from an existing version.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Marker of whether this region is dropped/dropping","","","","","Last WAL entry Id.","Mark all opened files as deleted and set the delete marker …","Sets memtables.","","Mutable and immutable memtables.","Sets metadata.","","Metadata of the region.","Returns a new builder.","Returns a new VersionControl with specific <code>version</code>.","Sets options.","","Options of the region.","","","","","Remove memtables from the builder.","Updates committed sequence and entry id.","","SSTs of the region.","","","","","","","","","","","Truncate current version.","Sets truncated entty id.","","Latest entry id during the truncating table.","","","","","","","","","","","","","Latest version.","","","","","Context to keep region metadata and buffer write requests.","Context to keep region metadata and buffer write requests. …","Encode and add WAL entry to the writer.","","","","","","","","","","","Rows to delete.","","","","","","","","Error to send to the waiter.","The write operation is failed and we should not write to …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new notify from the <code>sender</code>.","Returns an empty context.","Next entry id of WAL to write.","Next sequence number to write.","Notifiers to send write results to waiters.","Send result to the waiter.","Number of rows to be written.","Push mutation to the context.","Rows to put.","Id of region to write.","Sender to send write result to the waiter for this …","Sets error and marks all write operations are failed.","Updates next entry id.","","","","","","","","","","","","Version of the region while creating the context.","VersionControl of the region.","","","Valid WAL entry to write.","Consumes mutations and writes them into mutable memtable.","","Notifications from internal background jobs.","Notification from a background job.","","","A failing compaction result.","Compaction has failed.","Notifies a compaction job has finished.","Compaction has finished.","","Ddl request to a region.","DDL request to a region.","","","Notifies a flush job is failed.","Flush has failed.","Notifies a flush job is finished.","Flush has finished.","Callback on failure.","","Optional output result sender.","Oneshot output result sender.","Sender and Ddl request.","Sender and write request.","The internal commands.","Notify a worker to stop.","","Request sent to a worker","Write to a region.","Request to write a region.","Flush timer.","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether we should allow a row doesn’t provide …","Checks schema of rows is compatible with schema of the …","Returns the default value for specific column.","Gets column index by name.","Compacted files that are to be removed from region version.","Compaction output files that are to be added to region …","Inferred Compaction time window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error source of the failure.","The error source of the failure.","Returns estimated size of the request.","Meta of the flushed SSTs.","File purger for cleaning files on failure.","File purger for cleaning files on failure.","Fills default value for specific <code>column</code>.","Tries to fill missing columns.","Entry id of flushed data.","Sequence of flushed data.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Whether each column has null.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Id of memtables to remove.","Map column name to column index in <code>rows</code>.","Creates a new request.","Creates a new output sender.","Creates a sender.","","Creates an empty sender.","Handles <code>err</code> on failure.","","","Compaction succeeded but failed to update manifest or …","Marks the flush job as successful and observes the timer.","","Type of the write request.","Region to write.","Region id of the request.","Region id.","Region id.","","","Ddl request.","Rows to write.","Sends the <code>result</code>.","Sends the <code>result</code> and consumes the sender.","Sends the <code>result</code> and consumes the inner sender.","Result sender.","Result sender.","Flush result senders.","Compaction result senders.","Start time of compaction task.","Takes the inner sender.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts request from a RegionRequest.","","","","","","","","","","","","","","","","","","","","","","","","","Validate proto value schema.","","","","","","","","","","","","","Internal notification.","Id of the region to send.","Id of the region to send.","The sender of SetReadonlyResponse.","A memory-comparable row Value encoder/decoder.","Row value encoder/decoder.","","","","","","","","","","","","","Decode row values from bytes.","","","","","","","","","Encodes rows to bytes.","","Encodes rows to specific vec.","","","Estimated length for encoded bytes.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Request scheduler based on local state.","","The state of scheduler","","Scheduler defines a set of API to schedule Jobs","","","","","Token used to halt the scheduler","","","","","","","","Returns the argument unchanged.","","Task handles","","Calls <code>U::from(self)</code>.","","","","","Starts a new scheduler.","","","Schedules a Job","","Sends jobs to flume bounded channel","State of scheduler","Stops scheduler. If <code>await_termination</code> is set to true, the …","if await_termination is true, scheduler will wait all …","","","","","","","Structures to describe metadata of files.","","SST in parquet format.","SST version.","Handle to a SST file.","Inner data of FileHandle.","Unique id for [SST File].","Metadata of a SST file.","Time range of a SST file.","Type to store SST level.","Maximum level of SSTs.","","SNAFU context selector for the <code>ParseIdError</code> error","","Append <code>.parquet</code> to file id to make a complete file name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the file id.","Compared to normal file names, FileId ignore the extension","Returns the complete file path of the file.","","Size of the file.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","SST level of the file.","Mark the file as deleted and will delete it on drop …","","","","","Parses id from string.","Returns a new unique FileId randomly.","Returns the region id of the file.","Region of file.","","","","","","Returns the time range of the file.","Timestamp range of file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A worker to delete files in background.","","Purger that purges file for current region.","Request to remove a file.","","","","","","","","","","","","","","","","","","","Id of the file.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new purger.","","","Region id of the file.","","Send a purge request to the background worker.","","","","","","","","","","","","","","","Default batch size to read parquet files.","Default row group size for parquet files.","","Key of metadata in parquet SST.","Parquet SST info returned by the writer.","Parquet write options.","","","","","","","","","","","","","","","","","","File size in bytes.","","Format to store in parquet.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Number of rows.","Parquet page reader.","Parquet reader.","Ports private structs from parquet crate.","Row group size.","Statistics of parquet SSTs.","Time range of the SST.","","","","","","","","","","","","","Buffer size for async writer.","Parquet writer.","Number of columns that have fixed positions.","Helper for reading the SST format.","Helper for writing the SST format.","Gets the arrow schema to store in parquet.","Gets the arrow schema of the SST file.","SST file schema.","SST file schema.","","","","","Returns null counts of specific non-tag columns.","Returns min/max values of specific non-tag columns.","","","","","","","Convert <code>batch</code> to a arrow record batch to store in parquet.","Convert a arrow record batch into <code>batches</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get fields from <code>record_batch</code>.","","","Fields for internal columns.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns max values of specific column in row groups.","Gets the metadata of the SST.","","","Returns min values of specific column in row groups.","Creates a new helper.","Creates a helper with existing <code>metadata</code>.","Creates a new array for specific <code>primary_key</code>.","Returns null counts of specific column in row groups.","Compute offsets of different primary keys in the array.","Field index of the primary key.","Gets sorted projection indices to read <code>columns</code> from …","Returns min/max values of specific tag.","Field index of the time index.","Gets the arrow schema to store in parquet.","","","","","","","","","","","","","A reader that reads from cached pages.","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Returns a new reader from existing pages.","","Get PageMetadata from <code>page</code>.","Cached pages.","","","","","","","","","Parquet reader metrics.","Parquet batch reader to read our SST format.","Parquet SST reader builder.","Builder to build a ParquetRecordBatchReader for a row …","Buffered batches to return.","","","","","","","","","Builds and initializes a ParquetReader.","Builds a ParquetRecordBatchReader to read the row group at …","Duration to build the parquet reader.","Attaches the cache to the builder.","Manager that caches SST data.","Cache.","","","","","","","","","","","","","Reader of current row group.","","","","","","","","","","","","","","","Tries to fetch next RecordBatch from the reader.","Field levels to read.","SST directory.","","SST file to read.","Path of the file to read.","Path of the file.","Reader to get data.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Decodes region metadata from key value.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the metadata of the SST.","Local metrics.","Returns a new ParquetReaderBuilder to read specific SST.","","Number of batches decoded.","Number of record batches read.","Number of rows read.","","Metadata of the parquet file.","Attaches the predicate to the builder.","Predicate to push down.","Attaches the projection to the builder.","Metadata of columns to read.","Projection mask.","Helper to read record batches.","Reads parquet metadata of specific file.","Number of row groups to read.","Builder to build row group readers.","Indices of row groups to read.","Duration to scan the reader.","Attaches the time range to the builder.","Time range to filter.","","","","","","","","","","","","","","","","","","","","","","","","","An in-memory column chunk","Implements <code>PageIterator</code> for a single column chunk, …","Full column chunk and its offset","An in-memory collection of column chunks","Column chunk data representing only a subset of data pages","","","","","","","","","","Cached pages for each column.","","","Creates a page reader to read column at <code>i</code>.","","","","","","","","","","Creates a new InMemoryRowGroup by <code>row_group_idx</code>.","","","","","","","","","","Fetches the necessary column data into memory","Fetches pages for columns if cache is enabled.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of data pages included in this sparse chunk. Each …","","Length of the full column chunk","","Statistics for pruning row groups.","","","Returns the column id of specific column name if we need …","Projected column ids to read.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Creates a new statistics to prune specific <code>row_groups</code>.","","","Helper to read the SST.","Metadata of SST row groups.","","","","","","","Parquet SST writer.","","","","","","","","","","","","Customizes per-column config according to schema and maybe …","","","","","","","","SST output file path.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Region metadata of the source and the target SST.","Creates a new parquet SST writer.","Number of rows fetched.","","Input data source.","Time range of fetched batches.","","","","","","","","","","","","","","Iterates source and writes all rows to Parquet file.","Metadata of files in the same SST level.","","A version of all SSTs in a region.","","Add files to the version.","","","","","","","","","","","","","","","","","","","","","","","Handles of SSTs in this level.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns expired SSTs from current level.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Level number.","Returns a slice to metadatas of all levels.","SST metadata organized by levels.","Marks all SSTs in this version as deleted.","Returns a new SstVersion.","Returns an empty meta of specific <code>level</code>.","","","","Remove files from the version.","Returns SST files’space occupied in current version.","","","","","","","","","","","","","","","WAL entry id.","Write ahead log.","A stream that yields tuple of WAL entry id and …","WAL batch writer.","Add an wal entry for specific region to the writer’s …","","","","","","","","","","","","","Decode Wal entry from log store.","","","","","","","Entries to write.","Buffer to encode WAL entry.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new Wal from the log store.","Mark entries whose ids <code>&lt;= last_id</code> as deleted.","Scan entries of specific region starting from <code>start_id</code> …","Log store of the WAL.","The underlying log store.","","","","","","","","","","","","","","Write all buffered entries to the WAL.","Returns a writer to write to the WAL.","","Worker to write and alter regions bound to it.","Background worker loop to handle requests.","","Buffer for stalled write requests.","A fixed size group of RegionWorkers.","Identifier for a worker.","Wrapper that only calls event listener in tests.","Worker start config.","Appends stalled requests.","","","","","","","","","","","","","","Returns cache of the group.","","Cache.","Cache.","","","","Scheduler for compaction tasks.","","","","","","","","","","","","","","","","","","","","Engine config.","","","","","","","","","","","","","","","","","","","","","","Regions that are not yet fully dropped.","Estimated size of all stalled requests.","Find some regions to flush to reduce write buffer usage.","Schedules background flush requests.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns region of specific <code>region_id</code>.","Returns region of specific <code>region_id</code>.","Handle to the worker thread.","Handling alter related requests.","","Handles region background request","Handling close request.","","","When compaction fails, we simply log the error.","Handles compaction finished, update region version and …","Handles compaction request submitted to region worker.","Handling create request.","","Takes and handles all ddl requests.","Handling drop request.","","Handling flush related requests.","On region flush job failed.","On region flush job finished.","Handles manual flush request.","Handling open request.","","Dispatches and processes requests.","Handling truncate related requests.","","Handling write requests.","Takes and handles all write requests.","","Id of the worker.","Id of the worker.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns true if the worker contains specific region.","Returns true if the specific region exists.","Returns true if the worker is still running.","","","Event listener for tests.","","Checks whether the engine reaches flush threshold. If so, …","Memtable builder for each region.","Create a flush task with specific <code>reason</code> for the <code>region</code>.","","Manages object stores for manifest and SSTs.","","Flush is finished successfully.","","On later drop task is finished.","Engine is stalled.","Validates and groups requests by region.","Request receiver.","Regions bound to the worker.","Regions bound to the worker.","Stalled requests.","Starts the worker loop.","Whether to run the worker thread.","Whether the worker thread is still running.","","Background job scheduler.","Global background job scheduelr.","Request sender.","Request sender.","Handles <code>set_readonly_gracefully</code>.","Sets whether the worker is still running.","Returns true if the engine needs to reject some write …","Stalled write requests.","Starts a region worker and its background thread.","Starts a worker group.","Stop the worker.","Stops the worker group.","Submits request to background worker thread.","Submits a request to a worker in the group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","WAL of the engine.","Get worker for specific <code>region_id</code>.","Workers of the group.","","Engine write buffer manager.","Alter the schema of the region.","Creates a metadata after applying the alter <code>request</code> to the …","","","Background GC task to remove the entire region path once …","Removes region dir if there is no parquet files, returns …","Checks the schema and fill missing columns.","Send rejected error to all <code>write_requests</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,368,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,368,368,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,369,370,371,372,31,26,24,25,31,26,24,25,0,24,25,24,25,25,31,26,24,25,31,26,24,25,31,26,24,25,31,26,24,25,31,26,24,25,31,26,24,25,24,25,24,24,24,24,25,25,25,25,26,24,25,25,24,25,31,26,24,25,24,25,31,26,24,25,24,25,31,31,31,24,25,31,26,24,25,31,26,24,25,31,31,26,26,24,24,25,25,31,26,24,25,0,31,26,31,0,26,369,369,31,31,31,25,31,25,31,24,25,31,26,24,25,31,26,24,25,31,26,24,25,31,26,24,25,31,26,24,25,0,370,371,372,31,0,31,26,24,25,0,0,0,0,0,0,0,0,0,0,0,0,58,50,58,49,60,50,58,49,60,50,0,58,49,60,50,58,49,60,50,58,49,60,50,58,58,49,60,50,58,49,60,50,58,49,49,60,50,58,50,58,49,60,50,58,49,60,50,58,49,60,50,58,49,60,50,58,58,49,49,60,60,50,50,58,49,60,50,50,49,50,50,49,49,60,50,49,49,49,0,50,0,58,60,58,50,49,49,58,49,49,49,49,58,58,58,49,60,50,58,49,60,50,58,49,60,50,58,49,60,50,0,58,49,60,50,50,58,49,60,50,58,60,0,61,61,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,373,373,48,373,66,0,0,0,0,0,0,73,74,75,73,74,75,73,74,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,74,75,74,74,0,75,73,74,73,74,75,73,74,75,0,74,0,73,74,75,73,74,75,73,73,74,74,75,75,73,74,75,74,75,73,73,74,73,74,74,73,74,74,74,74,74,74,74,74,73,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,74,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,82,81,82,81,81,81,82,81,82,81,82,81,82,81,82,81,82,81,82,81,81,82,81,82,81,81,82,81,82,81,82,81,81,82,81,82,82,81,81,82,81,81,81,82,81,81,82,81,81,82,81,82,81,82,81,81,82,81,82,81,82,81,82,81,82,81,82,81,82,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,5,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,5,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,0,111,59,59,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,96,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,134,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,122,124,106,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,96,111,96,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,108,149,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,99,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,121,121,122,122,124,124,125,125,96,96,126,126,98,98,127,127,99,99,128,128,100,100,129,129,130,130,131,131,132,132,101,101,102,102,103,103,104,104,133,133,105,105,134,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,106,106,143,143,108,108,109,109,110,110,144,144,145,145,146,146,111,111,112,112,113,113,147,147,148,148,149,149,150,150,114,114,115,115,116,116,117,117,151,151,118,118,152,152,119,119,153,153,120,120,154,154,59,59,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,59,59,102,122,124,132,154,100,103,104,133,108,109,110,118,120,101,103,104,105,134,135,137,138,139,150,114,115,116,117,151,118,119,120,59,96,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,121,122,124,125,96,126,98,127,99,128,100,129,130,131,132,101,102,103,104,133,105,134,135,136,137,138,139,140,141,142,106,143,108,109,110,144,145,146,111,112,113,147,148,149,150,114,115,116,117,151,118,152,119,153,120,154,59,374,375,376,377,378,379,380,376,377,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,374,396,393,397,380,381,379,382,398,383,397,384,399,400,385,401,386,402,403,404,405,406,387,407,408,388,409,389,378,390,396,410,411,412,391,413,374,414,415,392,416,393,417,418,419,420,421,422,423,424,425,394,426,395,403,376,377,386,395,399,404,405,406,396,410,411,423,426,402,404,405,427,375,387,408,388,409,417,418,419,420,421,422,423,425,426,400,401,406,375,407,408,409,428,429,412,413,416,417,422,424,379,162,162,0,0,0,162,162,0,0,0,0,163,159,159,196,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,163,159,159,167,166,162,163,163,163,167,166,162,430,166,163,159,167,166,162,163,159,167,166,162,166,166,159,163,159,167,166,162,163,159,167,166,162,163,163,163,159,159,167,167,166,166,162,162,159,163,159,167,166,162,163,166,430,166,166,163,163,167,166,166,159,167,166,163,167,159,159,159,159,159,163,167,167,167,196,196,163,163,163,167,159,159,163,430,166,163,159,430,166,159,159,163,163,430,166,430,166,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,163,159,167,166,162,167,163,159,167,166,162,0,0,0,172,172,0,0,0,0,0,0,0,0,0,172,172,176,168,168,168,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,175,172,169,170,173,171,174,175,176,172,169,170,173,171,174,175,176,175,170,174,168,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,168,175,176,168,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,175,176,172,169,170,173,171,174,168,175,176,175,176,172,169,170,173,171,174,175,176,172,172,172,172,169,169,169,169,170,170,170,170,173,173,173,173,171,171,171,171,174,174,174,174,175,175,175,175,176,176,176,176,174,168,170,170,170,174,168,170,174,168,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,172,169,169,170,170,173,173,171,171,174,174,168,168,175,175,176,176,172,169,170,173,171,174,168,175,176,175,175,174,168,169,174,168,176,173,171,172,169,170,173,171,174,175,176,172,169,170,173,171,174,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,171,174,168,171,168,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,172,169,170,173,171,174,168,175,176,176,168,0,0,0,178,180,179,178,180,179,178,178,178,178,180,179,178,180,179,178,180,179,178,178,180,179,178,180,179,179,178,180,179,178,180,179,178,180,179,178,178,180,179,179,178,180,179,180,178,180,179,178,178,180,180,179,179,178,180,179,179,179,179,180,179,178,180,179,180,179,178,180,179,179,180,179,179,178,178,180,179,178,180,179,179,178,180,179,178,180,179,178,180,179,180,179,178,180,179,0,182,0,0,0,182,0,0,0,0,0,184,186,188,184,186,182,181,183,188,184,186,182,181,183,0,181,183,182,181,182,181,188,184,186,182,181,183,188,184,186,182,181,183,188,184,186,182,181,183,181,183,181,0,181,188,184,184,186,186,182,181,183,188,184,186,182,181,183,183,188,184,186,182,181,183,183,182,182,182,182,182,183,0,0,182,181,183,188,184,186,182,181,183,182,181,188,184,186,182,181,183,0,182,181,182,188,184,186,182,181,183,188,184,186,182,181,183,188,188,184,184,186,186,182,182,181,181,183,183,0,0,188,184,186,182,181,183,188,181,181,181,0,181,181,188,188,181,181,181,181,181,183,181,181,183,182,181,188,184,186,182,181,183,188,184,186,182,181,183,181,188,184,186,182,181,183,188,184,186,182,181,183,188,184,186,182,181,183,183,188,184,186,182,181,183,0,0,0,0,0,0,0,0,0,189,285,190,191,190,191,431,190,191,191,190,191,190,191,190,191,190,191,190,191,190,191,191,190,191,191,190,190,191,190,191,190,191,432,190,191,190,191,190,190,191,191,191,432,190,191,432,0,432,191,191,189,285,189,285,432,190,190,0,190,191,190,191,190,191,190,191,190,191,0,190,191,432,191,0,0,0,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,198,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,197,198,198,199,199,197,198,199,197,197,197,199,198,199,198,197,198,198,198,198,198,198,198,198,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,197,198,199,0,0,0,0,0,0,0,0,0,0,209,212,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,206,207,207,214,211,207,209,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,433,206,210,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,212,214,211,211,209,213,206,210,207,213,207,212,206,210,209,212,214,211,209,213,206,210,207,207,207,207,212,214,211,209,213,206,210,207,209,214,212,212,206,212,214,211,209,213,206,210,207,433,212,214,211,209,213,206,210,207,211,212,212,214,214,211,211,209,209,213,213,206,206,210,210,207,207,212,212,214,211,209,213,206,210,207,212,214,211,213,212,212,211,211,212,212,214,209,213,206,211,210,210,210,213,207,209,211,0,433,211,0,211,211,0,0,209,213,212,214,212,210,213,207,214,211,212,212,213,207,207,207,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,210,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,212,214,211,209,213,206,210,207,209,212,212,214,211,209,213,206,210,207,212,206,0,0,434,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,434,434,223,223,223,223,223,223,223,223,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,224,226,226,227,227,229,229,231,231,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,224,226,226,227,227,229,229,231,231,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,224,226,227,229,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,0,0,0,0,0,22,22,0,0,251,22,222,252,251,22,222,252,251,222,252,222,252,252,0,251,22,222,252,251,22,222,252,251,22,222,252,222,0,252,251,22,222,252,251,22,222,252,251,22,222,252,222,252,252,252,252,252,222,251,222,222,222,222,222,222,252,251,22,222,252,222,252,251,22,222,252,222,222,251,22,222,252,251,22,222,252,251,251,22,22,222,222,252,252,222,251,22,222,252,0,222,222,0,251,222,262,22,222,222,251,222,251,222,251,222,222,0,251,251,222,0,0,222,251,222,251,222,222,222,222,222,251,222,251,222,222,252,251,22,222,252,251,22,222,252,251,22,222,252,251,22,222,252,251,22,222,252,251,22,222,252,251,222,251,0,0,0,259,259,0,258,261,257,258,259,261,257,258,259,261,257,257,258,258,259,261,261,257,258,259,261,261,257,258,259,257,261,257,258,259,261,257,258,259,261,257,258,259,257,258,259,261,257,258,259,261,257,258,259,0,258,261,257,258,259,261,257,258,259,261,261,257,257,258,258,259,259,261,257,258,259,0,0,261,261,261,261,257,258,259,261,257,258,259,261,257,258,259,261,257,258,259,261,257,258,259,257,261,257,258,259,435,435,0,0,0,0,0,264,265,267,263,268,264,265,267,263,268,263,265,267,264,265,267,264,265,267,263,268,264,265,267,263,268,264,265,267,263,268,265,265,263,268,264,265,267,263,268,264,265,267,263,268,264,264,265,267,263,268,265,267,265,265,265,265,267,267,267,267,265,264,264,264,268,264,265,267,263,268,264,265,267,263,268,264,264,265,267,263,268,264,265,267,263,268,264,264,265,265,267,267,263,263,268,268,265,265,264,265,267,263,268,264,264,264,265,263,264,268,268,268,268,268,268,264,265,267,265,263,263,264,264,268,265,265,263,264,265,267,263,268,264,265,267,263,268,264,265,267,263,268,264,265,267,263,268,264,265,267,263,268,264,265,267,263,268,0,269,0,0,269,269,260,260,260,260,260,269,260,269,269,269,260,260,260,260,269,260,269,260,269,260,260,269,260,269,260,269,269,260,269,269,260,269,260,260,269,260,269,260,260,269,269,260,269,260,260,260,0,260,260,0,269,260,269,260,269,260,269,260,269,260,269,260,269,0,0,85,273,85,273,85,273,273,273,85,273,85,273,85,273,85,273,85,273,85,273,0,85,273,85,273,85,273,85,273,85,85,273,273,85,273,273,273,85,273,273,85,273,85,273,85,273,85,273,85,273,273,85,273,0,0,276,276,277,276,277,276,276,276,276,277,276,277,276,277,277,276,277,276,277,276,277,276,276,277,276,277,276,277,276,276,277,276,277,276,276,277,277,276,277,276,276,276,276,277,276,276,277,276,277,276,277,276,277,276,277,276,277,276,276,276,276,276,276,0,0,0,0,0,0,279,436,437,83,279,278,83,279,278,278,83,279,278,83,279,278,83,279,278,278,83,279,278,83,279,278,83,83,279,278,279,279,83,279,278,83,279,278,83,279,278,278,83,279,278,278,83,279,278,83,83,279,279,278,278,83,279,278,278,279,279,279,278,279,83,279,0,0,436,437,436,437,83,279,279,278,278,279,83,279,83,279,278,83,279,278,83,279,278,83,279,278,83,279,278,279,0,279,279,83,279,278,83,279,278,278,0,281,281,281,281,0,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,0,281,281,281,281,281,281,281,0,281,281,281,281,281,281,281,0,0,0,47,0,284,47,288,289,284,47,288,289,284,47,288,284,47,288,284,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,289,284,47,288,284,284,284,284,47,47,47,47,288,288,288,288,284,47,288,289,284,47,288,289,284,47,288,284,47,288,289,284,47,288,289,284,47,288,289,284,284,47,47,288,288,289,289,284,47,288,289,288,288,0,0,284,289,288,288,284,47,288,284,47,288,289,284,47,288,289,284,284,47,288,289,284,47,288,289,284,289,284,47,288,289,284,47,288,289,0,0,0,0,0,0,0,0,293,438,439,55,293,55,293,55,164,165,293,55,164,165,293,164,165,164,165,164,293,293,165,293,55,164,165,293,55,164,165,293,55,164,165,55,55,293,55,164,165,293,55,164,165,293,55,164,165,293,293,165,293,293,165,55,164,165,55,293,55,164,165,164,165,293,55,164,165,293,293,55,164,165,293,55,164,165,293,293,55,55,164,164,165,165,164,293,55,164,165,164,55,293,293,165,293,293,165,293,55,293,293,165,438,439,438,439,293,55,293,165,164,165,293,55,164,165,293,55,164,165,55,293,293,165,293,55,164,165,293,55,164,165,293,55,164,165,164,293,55,164,165,0,0,294,296,294,296,294,296,294,296,294,296,294,294,296,294,296,294,296,296,294,296,294,296,294,296,294,296,294,296,294,296,296,294,294,296,294,296,294,294,294,294,296,296,294,294,294,296,294,294,296,294,296,294,296,294,296,294,296,294,294,294,294,296,294,294,294,301,53,0,301,301,0,302,0,302,301,53,0,301,301,0,302,0,302,0,301,0,0,0,0,53,53,301,0,53,0,303,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,298,298,298,305,305,305,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,304,306,298,303,303,305,298,298,303,303,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,298,300,300,51,51,161,161,53,53,301,301,160,160,302,302,303,303,304,304,305,305,306,306,298,300,51,161,53,301,160,302,303,304,305,306,303,298,298,300,51,53,51,280,51,303,305,303,305,298,298,160,303,305,306,161,160,298,300,51,51,161,160,303,305,305,51,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,53,298,300,51,161,53,301,160,302,303,304,305,306,298,300,51,161,53,301,160,302,303,304,305,306,0,298,300,51,161,53,301,160,302,303,304,305,306,440,440,441,441,0,0,0,310,217,310,217,310,217,310,217,310,217,310,442,217,310,217,310,217,310,310,217,442,217,442,217,310,217,217,310,217,310,217,310,217,310,217,310,217,310,310,217,217,310,217,310,217,217,310,310,217,310,217,310,217,310,217,310,217,310,217,0,0,0,0,0,0,0,0,443,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,443,443,52,314,314,314,52,314,314,314,314,314,314,314,0,0,0,0,0,0,0,0,0,0,0,0,0,315,3,315,317,315,316,3,63,15,317,315,316,3,63,15,315,316,3,63,15,316,3,63,15,15,317,317,315,316,3,63,15,317,315,316,3,63,15,317,315,316,3,63,15,3,63,317,317,315,316,3,63,15,317,315,316,3,63,15,315,3,63,317,317,315,316,3,63,15,315,3,63,3,3,3,3,63,63,63,63,15,63,15,317,63,315,315,316,3,3,63,15,317,315,316,3,63,15,316,3,63,15,3,317,315,316,3,63,15,3,63,3,63,317,315,316,3,63,15,15,317,315,316,3,63,15,316,317,317,315,315,316,316,3,3,63,63,15,15,317,315,316,3,63,15,63,15,15,317,317,15,3,3,15,63,3,63,15,315,315,15,63,316,3,63,15,315,3,317,315,316,3,63,15,317,315,316,3,63,15,317,315,316,3,63,15,317,315,316,3,63,15,317,315,316,3,63,15,317,315,316,3,63,15,0,0,0,0,56,319,320,319,320,319,319,320,319,320,319,320,319,320,319,320,319,320,320,319,320,319,320,319,320,319,320,319,320,319,319,320,320,319,320,319,56,56,320,319,444,319,319,319,320,319,320,319,320,319,320,319,320,319,320,0,0,0,0,0,0,352,321,352,321,352,321,352,321,352,321,321,352,321,352,321,352,321,352,321,0,352,321,352,321,352,321,352,321,352,352,321,321,352,321,352,0,0,0,321,0,352,352,321,352,321,352,321,352,321,352,321,352,321,321,0,0,0,0,322,323,322,323,322,323,322,323,323,323,322,323,322,323,322,323,322,323,322,323,322,323,322,323,323,322,323,322,323,323,322,323,0,322,323,322,322,323,323,322,323,323,323,322,323,323,322,323,0,323,0,323,323,323,323,0,322,323,322,323,322,323,322,323,322,323,322,323,0,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,0,330,330,330,330,330,330,330,330,330,0,0,0,0,333,16,334,333,336,16,334,333,336,16,334,336,16,16,334,16,334,333,336,16,334,333,336,16,334,333,336,333,336,16,334,333,336,16,334,333,336,16,334,333,333,336,333,334,16,16,334,334,334,334,336,16,334,333,336,16,334,333,336,16,16,334,333,336,16,334,333,336,16,16,334,334,333,333,336,336,16,334,333,336,333,333,16,333,336,336,336,16,334,16,16,16,16,334,333,16,336,333,333,336,16,16,16,334,333,336,16,334,333,336,16,334,333,336,16,334,333,336,16,334,333,336,16,334,333,336,0,0,339,0,339,340,347,339,340,347,339,340,339,339,340,340,340,340,340,347,339,340,347,339,340,347,339,340,340,347,339,340,347,339,340,347,339,340,340,340,340,347,339,339,340,347,339,339,339,339,340,347,339,340,347,339,347,340,340,347,347,339,339,340,347,339,339,340,347,340,340,347,340,340,340,339,340,347,339,340,347,339,340,347,339,340,347,339,340,347,339,340,347,339,445,446,445,446,0,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,0,0,23,351,23,351,23,351,23,351,23,351,23,351,23,351,23,351,23,351,23,23,351,23,351,23,351,23,351,23,23,351,351,23,351,23,23,351,23,23,351,23,351,23,351,23,351,23,351,23,351,351,23,351,23,0,0,0,0,353,447,353,76,353,76,353,76,353,76,353,76,353,76,353,76,353,76,353,76,353,76,76,76,353,76,353,76,353,76,353,76,76,353,76,353,76,353,353,76,76,353,76,76,353,353,353,353,76,0,447,447,353,353,353,76,353,76,353,76,353,76,353,76,353,76,353,76,0,0,0,0,295,295,283,295,283,283,283,295,283,295,283,295,283,0,295,283,295,283,295,283,295,295,283,295,283,283,295,283,295,283,295,283,295,295,283,283,295,283,283,283,283,295,283,283,295,283,295,283,295,283,295,283,295,283,295,283,295,283,0,0,0,0,0,0,0,0,0,358,367,362,360,359,358,361,367,362,360,359,358,361,448,359,367,360,359,360,361,361,360,367,362,360,359,358,361,367,362,360,359,358,361,367,362,360,359,358,361,367,360,358,361,367,362,360,359,358,361,367,362,360,359,358,361,367,362,362,360,359,358,361,360,358,360,360,367,362,360,359,358,361,361,367,362,360,359,358,361,362,359,362,0,360,360,0,360,0,360,360,360,0,360,360,0,360,0,360,360,360,0,360,360,0,360,0,360,367,362,360,367,362,360,359,358,361,367,362,360,359,358,361,367,367,362,362,360,360,359,359,358,358,361,361,367,362,360,359,358,361,362,359,362,448,367,360,367,360,360,360,367,360,361,361,361,361,361,360,360,362,360,358,360,362,360,367,360,359,362,360,360,362,360,360,367,359,362,359,362,359,361,367,362,360,359,358,361,367,362,360,359,358,361,367,362,360,359,358,361,367,362,360,359,358,361,367,362,360,359,358,361,0,367,362,360,359,358,361,360,359,359,367,360,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[2,3],[[5,[4]]]],[6,-1,[]],[6,-1,[]],[6,4],[[2,7],8],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[[-1,12],2,[[14,[13]]]],[2,12],0,0,0,[[2,15],16],[2,17],0,[[2,17],13],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],[[2,3,21,22],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[24,24],[25,25],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[[24,24],11],[[25,25],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[26,6],[24,6],[25,6],0,[[24,7],8],[[25,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],27,[28,29],30],[[-1,-2],27,[28,29],30],[[31,25],[[18,[[32,[26]]]]]],[[31,33,3],[[18,[[32,[34]]]]]],[[31,35],[[18,[36]]]],[[24,-1],4,37],[[25,-1],4,37],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[24,[32,[34]]],38],[[27,27,27],31],[[[40,[39]]],26],0,[[25,[32,[26]]],38],0,0,0,[[31,25,[32,[26]]],4],[[31,33,3,[32,[34]]],4],[[31,35,36],4],0,[[31,33,3],4],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[[18,[-1]],17],[[18,[-1]]],[]],0,0,0,0,[[35,36],38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,6],[42,6],[43,6],[34,6],[44,6],[45,6],[46,6],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,[[32,[48]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[49,4],[6,4],[6,4],[6,4],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[50,51],4],[[[32,[52]],[54,[53]]],49],[[33,[32,[55]],[32,[2]],56],50],[[50,[54,[53]],51,[32,[57]]],58],[[49,33,[32,[59]]],4],[[49,33,[32,[57]]],4],[[60,33,[32,[59]]],4],[[50,[32,[59]]],4],[[49,33],4],[[49,33],4],[[49,33],4],0,0,0,[[58,51],4],[[60,51],4],[58,33],0,0,[[49,33,[32,[59]]],4],0,0,[[49,33,[32,[55]],[32,[2]],56,51,[32,[57]]],[[5,[4]]]],[[49,58],[[5,[4]]]],0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[61,33,21,[32,[2]],62],[[5,[[18,[63]]]]]],[[21,[32,[2]],[64,[15]]],[[5,[65]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,4],[[61,7],8],[-1,-1,[]],[-1,-2,[],[]],[[],6],0,[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],0,0,[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,58],[[18,[[67,[66]]]]],[]],0,[-1,[[69,[[67,[68]]]]],[]],0,0,0,0,0,[[-1,70],[[71,[70,[40,[15]]]]],72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[73,[71,[70,[40,[15]]]],[18,[70]]],[[40,[61]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[74,4],[6,4],[6,4],0,0,[[-1,70],[[18,[70]]],72],[[75,70],70],[[73,7],8],[[74,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[76]],[18,[77]],78],[[40,[15]]]],[74,[[5,[[4,[[40,[63]],[40,[63]]]]]]]],[-1,70,72],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[74,11],4],[75,70],0,0,[74,[[5,[[4,[[40,[63]],[40,[63]]]]]]]],[[6,6,[18,[70]]],73],[[74,[32,[59]]],4],0,[[73,58],[[18,[[67,[66]]]]]],0,0,[74,[[69,[[67,[68]]]]]],0,[[74,53],4],0,0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[],57],[6,-1,[]],[6,-1,[]],[-1,[[19,[57]]],79],[6,4],[[57,57],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[57,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],6],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],0,0,0,0,[57,4],[[57,-1],19,80],0,0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],0,[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,33],[[5,[21]]]],[[81,33],[[69,[[67,[68]]]]]],[[81,33],[[5,[83]]]],[[82,33,84],[[5,[85]]]],[[81,33,84],[[69,[[67,[68]]]]]],[[82,33,86],[[5,[87]]]],[[81,33,86],[[69,[[67,[68]]]]]],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[81,33],11],[81,17],[[57,[32,[-1]],88],82,89],[[57,[32,[-1]],88],81,89],[[81,33],[[69,[[67,[68]]]]]],[[82,33],[[18,[90]]]],[[81,33],[[18,[90]]]],[[81,33,84],[[5,[85]]]],[[82,33],[[5,[91]]]],[[81,33],[[69,[[67,[68]]]]]],[[82,33,11],[[5,[4]]]],[[81,33,11],[[5,[4,92]]]],[82,[[5,[4]]]],[81,[[69,[[67,[68]]]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[59,93],[-1,94,[]],[59,[[18,[95]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[-1,-2]]],59,[[14,[97]]],[[14,[97]]]],[98,59],[[[99,[-1]]],59,[[14,[38]]]],[[[100,[-1]]],59,[[14,[13]]]],[[[101,[-1]]],59,[[14,[33]]]],[[[102,[-1]]],59,[[14,[13]]]],[[[103,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[104,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[105,[-1]]],59,[[14,[33]]]],[[[106,[-1]]],59,[[14,[107]]]],[[[108,[-1,-2]]],59,[[14,[13]]],[[14,[13]]]],[[[109,[-1]]],59,[[14,[13]]]],[[[110,[-1]]],59,[[14,[13]]]],[[[111,[-1,-2]]],59,[[14,[6]]],[[14,[6]]]],[112,59],[113,59],[[[114,[-1]]],59,[[14,[33]]]],[[[115,[-1]]],59,[[14,[33]]]],[[[116,[-1]]],59,[[14,[33]]]],[[[117,[-1]]],59,[[14,[33]]]],[[[118,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[119,[-1]]],59,[[14,[33]]]],[[[120,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[59,[[18,[94]]]],[121,121],[[[122,[-1,-2]]],[[122,[-1,-2]]],123,123],[[[124,[-1,-2]]],[[124,[-1,-2]]],123,123],[125,125],[[[96,[-1,-2]]],[[96,[-1,-2]]],123,123],[126,126],[98,98],[127,127],[[[99,[-1]]],[[99,[-1]]],123],[128,128],[[[100,[-1]]],[[100,[-1]]],123],[129,129],[130,130],[131,131],[[[132,[-1]]],[[132,[-1]]],123],[[[101,[-1]]],[[101,[-1]]],123],[[[102,[-1]]],[[102,[-1]]],123],[[[103,[-1,-2]]],[[103,[-1,-2]]],123,123],[[[104,[-1,-2]]],[[104,[-1,-2]]],123,123],[[[133,[-1]]],[[133,[-1]]],123],[[[105,[-1]]],[[105,[-1]]],123],[[[134,[-1,-2]]],[[134,[-1,-2]]],123,123],[[[135,[-1]]],[[135,[-1]]],123],[136,136],[[[137,[-1]]],[[137,[-1]]],123],[[[138,[-1]]],[[138,[-1]]],123],[[[139,[-1]]],[[139,[-1]]],123],[140,140],[141,141],[142,142],[[[106,[-1]]],[[106,[-1]]],123],[143,143],[[[108,[-1,-2]]],[[108,[-1,-2]]],123,123],[[[109,[-1]]],[[109,[-1]]],123],[[[110,[-1]]],[[110,[-1]]],123],[144,144],[145,145],[146,146],[[[111,[-1,-2]]],[[111,[-1,-2]]],123,123],[112,112],[113,113],[147,147],[148,148],[[[149,[-1]]],[[149,[-1]]],123],[[[150,[-1]]],[[150,[-1]]],123],[[[114,[-1]]],[[114,[-1]]],123],[[[115,[-1]]],[[115,[-1]]],123],[[[116,[-1]]],[[116,[-1]]],123],[[[117,[-1]]],[[117,[-1]]],123],[[[151,[-1]]],[[151,[-1]]],123],[[[118,[-1,-2]]],[[118,[-1,-2]]],123,123],[152,152],[[[119,[-1]]],[[119,[-1]]],123],[153,153],[[[120,[-1,-2]]],[[120,[-1,-2]]],123,123],[[[154,[-1]]],[[154,[-1]]],123],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,0,[[59,6,[40,[13]]],4],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[59,17],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],0,0,[[[96,[-1,-2]]],[[19,[-3,59]]],[[14,[97]]],[[14,[97]]],[]],[98,[[19,[-1,59]]],[]],[[[99,[-1]]],[[19,[-2,59]]],[[14,[38]]],[]],[[[100,[-1]]],[[19,[-2,59]]],[[14,[13]]],[]],[[[101,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[102,[-1]]],[[19,[-2,59]]],[[14,[13]]],[]],[[[103,[-1,-2]]],[[19,[-3,59]]],[[14,[33]]],[[14,[13]]],[]],[[[104,[-1,-2]]],[[19,[-3,59]]],[[14,[33]]],[[14,[13]]],[]],[[[105,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[106,[-1]]],[[19,[-2,59]]],[[14,[107]]],[]],[[[108,[-1,-2]]],[[19,[-3,59]]],[[14,[13]]],[[14,[13]]],[]],[[[109,[-1]]],[[19,[-2,59]]],[[14,[13]]],[]],[[[110,[-1]]],[[19,[-2,59]]],[[14,[13]]],[]],[[[111,[-1,-2]]],[[19,[-3,59]]],[[14,[6]]],[[14,[6]]],[]],[112,[[19,[-1,59]]],[]],[113,[[19,[-1,59]]],[]],[[[114,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[115,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[116,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[117,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[118,[-1,-2]]],[[19,[-3,59]]],[[14,[33]]],[[14,[13]]],[]],[[[119,[-1]]],[[19,[-2,59]]],[[14,[33]]],[]],[[[120,[-1,-2]]],[[19,[-3,59]]],[[14,[33]]],[[14,[13]]],[]],0,0,[[121,7],8],[[[122,[-1,-2]],7],8,155,155],[[[124,[-1,-2]],7],8,155,155],[[125,7],8],[[[96,[-1,-2]],7],8,155,155],[[126,7],8],[[98,7],8],[[127,7],8],[[[99,[-1]],7],8,155],[[128,7],8],[[[100,[-1]],7],8,155],[[129,7],8],[[130,7],8],[[131,7],8],[[[132,[-1]],7],8,155],[[[101,[-1]],7],8,155],[[[102,[-1]],7],8,155],[[[103,[-1,-2]],7],8,155,155],[[[104,[-1,-2]],7],8,155,155],[[[133,[-1]],7],8,155],[[[105,[-1]],7],8,155],[[[134,[-1,-2]],7],8,155,155],[[[135,[-1]],7],8,155],[[136,7],8],[[[137,[-1]],7],8,155],[[[138,[-1]],7],8,155],[[[139,[-1]],7],8,155],[[140,7],8],[[141,7],8],[[142,7],8],[[[106,[-1]],7],8,155],[[143,7],8],[[[108,[-1,-2]],7],8,155,155],[[[109,[-1]],7],8,155],[[[110,[-1]],7],8,155],[[144,7],8],[[145,7],8],[[146,7],8],[[[111,[-1,-2]],7],8,155,155],[[112,7],8],[[113,7],8],[[147,7],8],[[148,7],8],[[[149,[-1]],7],8,155],[[[150,[-1]],7],8,155],[[[114,[-1]],7],8,155],[[[115,[-1]],7],8,155],[[[116,[-1]],7],8,155],[[[117,[-1]],7],8,155],[[[151,[-1]],7],8,155],[[[118,[-1,-2]],7],8,155,155],[[152,7],8],[[[119,[-1]],7],8,155],[[153,7],8],[[[120,[-1,-2]],7],8,155,155],[[[154,[-1]],7],8,155],[[59,7],8],[[59,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[121,59],[[[122,[-1,-2]]],59,[[14,[156]]],[[14,[13]]]],[[[124,[-1,-2]]],59,[[14,[156]]],[[14,[13]]]],[125,59],[[[96,[-1,-2]]],59,[[14,[97]]],[[14,[97]]]],[126,59],[98,59],[127,59],[[[99,[-1]]],59,[[14,[38]]]],[128,59],[[[100,[-1]]],59,[[14,[13]]]],[129,59],[130,59],[131,59],[[[132,[-1]]],59,[[14,[13]]]],[[[101,[-1]]],59,[[14,[33]]]],[[[102,[-1]]],59,[[14,[13]]]],[[[103,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[104,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[133,[-1]]],59,[[14,[13]]]],[[[105,[-1]]],59,[[14,[33]]]],[[[134,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[135,[-1]]],59,[[14,[33]]]],[136,59],[[[137,[-1]]],59,[[14,[33]]]],[[[138,[-1]]],59,[[14,[33]]]],[[[139,[-1]]],59,[[14,[33]]]],[140,59],[141,59],[142,59],[[[106,[-1]]],59,[[14,[107]]]],[143,59],[[[108,[-1,-2]]],59,[[14,[13]]],[[14,[13]]]],[[[109,[-1]]],59,[[14,[13]]]],[[[110,[-1]]],59,[[14,[13]]]],[144,59],[145,59],[146,59],[[[111,[-1,-2]]],59,[[14,[6]]],[[14,[6]]]],[112,59],[113,59],[147,59],[148,59],[[[149,[-1]]],59,[[14,[3]]]],[[[150,[-1]]],59,[[14,[33]]]],[[[114,[-1]]],59,[[14,[33]]]],[[[115,[-1]]],59,[[14,[33]]]],[[[116,[-1]]],59,[[14,[33]]]],[[[117,[-1]]],59,[[14,[33]]]],[[[151,[-1]]],59,[[14,[33]]]],[[[118,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[152,59],[[[119,[-1]]],59,[[14,[33]]]],[153,59],[[[120,[-1,-2]]],59,[[14,[33]]],[[14,[13]]]],[[[154,[-1]]],59,[[14,[13]]]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[59,11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[59,11],[59,[[18,[157]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[59,[[18,[94]]]],0,[59,158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[159,160],4],[[159,161],4],0,[162,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[163,164],4],[6,4],[6,4],[159,4],[6,4],[6,4],[6,4],0,0,[[163,[32,[165]]],[[5,[[40,[63]]]]]],0,[[166,7],8],[[162,7],8],[[-1,6],4,[]],[[166,6],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],0,[[159,33],11],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[163,[32,[55]]],[[69,[[67,[68]]]]]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[159,33],11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,[-1,6,[]],[166,6],0,0,[[163,163],4],[[167,163],4],0,[166,6],[[[32,[52]]],159],[[33,[32,[55]]],167],[6,166],[[163,[32,[59]]],4],[[167,[32,[59]]],4],[[159,33,[32,[59]]],4],[[159,33],[[18,[[4,[[40,[160]],[40,[161]]]]]]]],[[159,33],4],[[159,33],4],[[159,33],4],[163,4],0,0,0,0,0,[[163,51],4],0,0,0,0,[[159,33,[32,[59]]],4],0,[[-1,6],4,[]],[[166,6],4],0,[[159,33,[32,[55]],163],[[5,[4]]]],[[-1,6],4,[]],[[166,6],4],[159,[[5,[4]]]],0,[[163,53],4],0,[-1,11,[]],[166,11],[-1,11,[]],[166,11],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[168,97,169],4],[[168,97,170],4],[[168,97,171],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[172,172],[169,169],[170,170],[173,173],[171,171],[174,174],[175,175],[176,176],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[168,11],[[[64,[177]]],[[5,[175]]]],[[[64,[177]]],[[5,[176]]]],[[],168],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[19,[172]]],79],[-1,[[19,[169]]],79],[-1,[[19,[170]]],79],[-1,[[19,[173]]],79],[-1,[[19,[171]]],79],[-1,[[19,[174]]],79],[-1,[[19,[175]]],79],[-1,[[19,[176]]],79],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[175,[[5,[[40,[177]]]]]],[176,[[5,[[40,[177]]]]]],[[172,172],11],[[169,169],11],[[170,170],11],[[173,173],11],[[171,171],11],[[174,174],11],[[175,175],11],[[176,176],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,0,0,0,0,0,0,0,[[172,7],8],[[169,7],8],[[170,7],8],[[173,7],8],[[171,7],8],[[174,7],8],[[168,7],8],[[175,7],8],[[176,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[175,97],0,0,0,0,0,0,[[[40,[172]]],176],0,0,[[172,-1],19,80],[[169,-1],19,80],[[170,-1],19,80],[[173,-1],19,80],[[171,-1],19,80],[[174,-1],19,80],[[175,-1],19,80],[[176,-1],19,80],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[168,[[5,[174]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,176],[[[18,[174]]],168],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[178,178],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[179,[[5,[[18,[175]]]]]],[6,4],[6,4],[6,4],[[178,7],8],[[180,7],8],[[179,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,97],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[181,[[5,[[18,[175]]]]]],0,0,[180,[[32,[174]]]],0,0,[180,27],[[179,97],[[5,[4]]]],[[21,178],[[5,[180]]]],[[21,178],[[5,[179]]]],0,[178,[[5,[[18,[180]]]]]],[178,[[5,[[18,[179]]]]]],0,[180,[[5,[4]]]],[179,[[5,[4]]]],0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,27],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[180,176],[[5,[97]]]],[[179,176],[[5,[97]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,13],[[181,97],13],0,[182,182],[181,181],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[[64,[177]]],[[5,[183]]]],[[181,97,11],[[5,[6]]]],[97,13],[[181,97],13],[6,-1,[]],[184,185],[6,-1,[]],[6,-1,[]],[186,185],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[19,[183]]],79],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[183,[[5,[[40,[177]]]]]],[[182,182],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[17,156],[17,97],[[182,7],8],[[181,7],8],[[183,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,17,156],13],[[-1,-2],27,[28,29],30],[[181,-1],[[5,[[40,[-2]]]]],187,[]],[[182,-1],4,37],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[17,11],[17,11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[181,13],[[181,97],[[5,[[18,[[4,[97,[40,[177]]]]]]]]]],[181,[[5,[[18,[[4,[97,[40,[177]]]]]]]]]],[11,156],0,[[17,12,156],181],[188,[[5,[[18,[[4,[97,[40,[177]]]]]]]]]],0,0,0,[[181,97,[64,[177]]],[[5,[4]]]],[[181,97,[64,[177]]],[[5,[4]]]],[[181,97,97],[[5,[188]]]],[[183,-1],19,80],[[181,97,27],4],[[181,97,27],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,27],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,21],189,[]],[190,6],[191,6],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],190],[[],191],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[191,4],[6,4],[191,4],[6,4],0,[[190,7],8],[[191,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,192,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[[-1,[18,[[64,[193]]]],[18,[194]]],195,[]],0,[-1,4,[]],[[[18,[196]]],191],[[191,6],4],0,0,0,0,[-1,190,[]],[190,[[18,[[4,[78,78]]]]]],0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,197],[[5,[4]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[198,[[0,[72]]]],[[197,7],8],[[198,7],8],[[199,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[197,[[0,[72]]]],0,[[200,201],[[18,[197]]]],[[200,202],199],[198,6],0,[198,6],[197,6],[198,203],0,[198,[[0,[72]]]],0,0,[198,204],0,[198,205],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[206,21],189],[207,207],[[-1,-2],4,[],[]],0,0,[207,[[40,[208]]]],[[209,21],[[5,[207]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[],206],[[],210],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[211,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],0,0,[[212,7],8],[[206,7],8],[[210,7],8],[[209,21],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[213,207],[-1,-1,[]],[[[64,[208]]],[[5,[207]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[214,[40,[177]]],[[4,[[32,[[215,[209]]]],6]]]],[212,192],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[212,11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[212,[18,[[64,[193]]]],[18,[194]]],195],[[214,[216,[193]],[18,[194]]],211],0,[213,6],[212,4],0,0,0,0,[[21,192,[18,[196]]],212],[[21,[32,[217]]],214],[21,209],[[21,6],213],[[[18,[196]]],206],[211,18],0,0,0,0,0,0,0,[[[32,[217]],[64,[177]],[64,[[67,[218]]]],219],[[5,[220]]]],0,0,[[21,6],[[4,[[40,[[67,[218]]]],219]]]],0,0,[[[64,[[32,[221]]]],220],[[5,[11]]]],[[[32,[217]],[64,[177]],209,[64,[[67,[218]]]],219,[64,[[32,[221]]]]],11],[[209,205,27,203,[40,[205]]],4],[[213,205,27,177,[40,[205]]],4],0,0,0,0,0,0,0,0,0,[212,190],0,0,[[207,[64,[177]],21,[216,[193]]],[[5,[222]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[209,220],4],[[212,6,70,70],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[212,197],[[5,[4]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[223,223],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,4],[[223,7],8],[[223,189],[[18,[223]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[223,[[64,[189]]]],0,[223,6],[[],6],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[223,11],[-1,11,[]],[223,[[40,[189]]]],0,[223,6],[189,223],0,0,[[223,[64,[192]]],4],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[224,225],[6,-1,[]],[6,-1,[]],[226,225],[6,-1,[]],[227,228],[6,-1,[]],[229,230],[231,232],[6,-1,[]],[6,-1,[]],[233,228],[6,-1,[]],[234,232],[235,232],[6,-1,[]],[6,-1,[]],[236,232],[237,228],[6,-1,[]],[6,-1,[]],[238,230],[6,-1,[]],[239,228],[6,-1,[]],[240,241],[242,232],[6,-1,[]],[6,-1,[]],[243,232],[244,228],[6,-1,[]],[6,-1,[]],[245,230],[246,230],[6,-1,[]],[247,230],[6,-1,[]],[6,-1,[]],[248,230],[6,-1,[]],[249,250],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[251,[[5,[222]]]],[222,222],[252,252],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[[40,[222]]],[[5,[222]]]],[-1,[[5,[208]]],72],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[[222,222],11],[[252,252],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[222,[[64,[252]]]],0,0,[[222,253],[[5,[4]]]],[222,[[5,[4]]]],[222,[[18,[204]]]],[222,[[18,[78]]]],[[222,7],8],[[252,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[222,6],204],[[222,6],78],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[222,11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[254,11],[222,[[18,[204]]]],[222,[[18,[78]]]],0,[[[40,[177]]],251],[[[40,[177]],36,[32,[255]],[32,[254]],[40,[252]]],[[5,[222]]]],[-1,[[69,[[67,[68]]]]],[]],[22,[[5,[[18,[222]]]]]],[222,6],[222,[[32,[254]]]],0,0,[[251,208],[[5,[251]]]],[222,[[64,[177]]]],0,0,[[200,[64,[193]]],[[40,[193]]]],0,[[251,252],251],[[251,193,208],[[5,[251]]]],0,0,0,[222,[[32,[255]]]],0,0,[[251,208],[[5,[251]]]],[[222,[40,[177]]],4],[[222,6,6],222],[222,[[5,[4]]]],[[222,256],[[5,[4]]]],[222,36],0,0,[[251,208],[[5,[251]]]],[222,[[18,[[64,[70]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[251,[40,[252]]],251],[[222,[40,[252]]],[[5,[222]]]],[[[40,[177]],36,[32,[255]],[32,[254]]],251],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[[257,222],[[5,[222]]]],[-1,[[1,[-2]]],[],[]],[[258,222],222],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[[257,7],8],[[258,7],8],[[259,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[200,200],11],0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[260,200],[[5,[[18,[258]]]]]],[[200,200],[[5,[[18,[257]]]]]],[[260,21,-1],[[5,[[261,[-1]]]]],[]],[[[261,[-1]]],[[69,[[67,[68]]]]],262],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[263,[[5,[264]]]],[[265,265],266],[[267,267],266],0,[[-1,-2],266,[],[]],[[-1,-2],266,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[265,222],0,[[],263],[[],268],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[264,4],[6,4],[6,4],[6,4],[6,4],[[265,265],11],[[267,267],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[265,268],[[5,[222]]]],[264,[[5,[4]]]],[264,[[5,[4]]]],[[264,265,78],[[5,[4]]]],[[268,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[265,265],11],[265,11],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[222,[18,[222]],268],[[5,[4]]]],0,[[[40,[22]]],[[5,[264]]]],[[22,268],[[5,[265]]]],[[],263],[264,[[69,[[67,[68]]]]]],0,0,0,0,0,0,0,[[265,265],[[18,[266]]]],[[267,267],[[18,[266]]]],[265,[[64,[177]]]],[[263,195],263],[[263,65],263],[264,4],[[264,265],[[5,[4]]]],0,[[265,6,268],[[5,[4]]]],0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[21,[[5,[260]]]],[260,[[64,[193]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[269,269],[[-1,-2],4,[],[]],0,[260,[[64,[193]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[260,222,[18,[31]]],[[271,[270]]]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[[269,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[260,21],0,[[21,-1],[[5,[260]]],72],[[107,35,6],[[271,[36]]]],[260,272],0,[[107,35,6,31],[[271,[36]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[273,274],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[[15,274],11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[[32,[165]],[32,[2]],84,[18,[[32,[31]]]]],273],0,[85,[[5,[275]]]],[273,[[5,[85]]]],[273,[[5,[276]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[276,[[5,[65]]]],[276,[[5,[275]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],277],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[[262,260,[18,[31]],277],[[271,[[18,[270]]]]]],0,[[277,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,[[[32,[2]],260],276],0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[276,[18,[[32,[31]]]]],276],[[276,[40,[15]]],276],[[276,11],276],[[276,[40,[189]]],276],[[276,[18,[194]]],276],[[276,[18,[274]]],276],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[278,4],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],278],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[83,27],[6,4],[6,4],[6,4],[[279,27],27],0,[[83,7],8],[[279,7],8],[[278,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[278,33],[[18,[[32,[279]]]]]],[[],6],[[],6],[[],6],[[278,[32,[279]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[278,33],11],[279,11],[279,70],0,[278,[[40,[[32,[279]]]]]],0,0,[279,21],0,0,0,0,0,0,0,0,[279,83],0,[[278,33],4],[[279,11],4],0,[279,[[5,[4]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[279,4],0,[279,[[32,[165]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[278,33],[[5,[[32,[279]]]]]],[[278,33,-1],[[18,[[32,[279]]]]],280],0,[-1,-2,[],[]],[-1,-2,[],[]],[[281,[18,[[32,[31]]]]],281],0,[[200,33,[64,[282]],[64,[193]]],[[5,[4]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[281,57,[283,[-1]]],[[5,[279]]],89],[6,-1,[]],[6,-1,[]],[6,4],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[281,57,284],[[5,[178]]]],[[281,57,[283,[-1]]],[[5,[[18,[279]]]]],89],0,[[281,200],281],0,[[33,17,285,88,[32,[52]]],281],[17,13],[[281,[18,[13]]],[[5,[12]]]],0,[[281,57,[283,[-1]]],[[5,[279]]],89],[[281,[286,[13,13]]],281],0,0,0,[[[283,[-1]],33,287,[32,[55]]],[[5,[4]]],89],0,[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[284,284],[47,47],[288,288],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],284],[[],47],[[],288],[[],289],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[19,[284]]],79],[-1,[[19,[47]]],79],[-1,[[19,[288]]],79],[-1,[[19,[289]]],79],[6,4],[6,4],[6,4],[6,4],[[284,284],11],[[47,47],11],[[288,288],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[284,7],8],[[47,7],8],[[288,7],8],[[289,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,[[[286,[13,13]]],290],0,0,0,0,[288,[[18,[70]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[[[286,[13,13]]],[[5,[284]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],0,0,[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],79,291],[[-1,-2],19,292,80],0,0,0,0,0,0,[[293,56,-1],293,72],0,0,[[55,21,285],4],[[293,170,56],293],[[55,170,[64,[192]],56],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[293,165],[164,164],[165,165],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[293,[18,[77]]],293],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[55,164],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[[293,287],293],0,0,[[293,204],293],0,0,[[55,7],8],[[164,7],8],[[165,7],8],[[55,285],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[32,[165]]],293],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[[55,285],4],[[293,223],293],0,0,[[293,21],293],0,0,[[21,189],293],[165,55],[[293,284],293],0,0,0,0,0,0,[[293,[64,[192]]],293],[[55,204,287],4],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,287,204,285],4],[[293,[18,[287]]],293],0,0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[294,[295,[-1]]],[[5,[4]]],89],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[296,4],[6,4],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[51,6],296],[[33,[32,[55]]],294],0,0,0,[296,4],0,[[294,297,[18,[202]],51],4],0,0,0,[[294,[32,[59]]],4],[[294,287],4],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[294,[[32,[165]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[294,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[298,282],[[5,[4]]]],[[298,200],[[5,[4]]]],[[298,282],[[5,[299]]]],[[298,17],[[18,[6]]]],0,0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],0,0,[298,6],0,0,0,[[298,282],[[5,[4]]]],[[298,200],[[5,[4]]]],0,0,[[298,7],8],[[300,7],8],[[51,7],8],[[161,7],8],[[53,7],8],[[301,7],8],[[160,7],8],[[302,7],8],[[303,7],8],[[304,7],8],[[305,7],8],[[306,7],8],[-1,-1,[]],[-1,-1,[]],[[[307,[[5,[87]]]]],51],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,0,[[33,203,202],[[5,[298]]]],[[[307,[[5,[87]]]]],300],[[[18,[300]]],51],[33,[[4,[53,[308,[91]]]]]],[[],51],[[-1,59],4,[]],[[51,59],4],[[303,59],4],[[305,59],4],[303,4],[305,4],0,0,0,0,0,0,0,0,0,[[300,[5,[87]]],4],[[51,[5,[87]]],4],[[51,[5,[87]]],4],0,0,0,0,0,[51,[[18,[300]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[[33,86],[[5,[[4,[53,[308,[[5,[87]]]]]]]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[33,299,309],[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[-1,[64,[177]]],[[5,[[40,[35]]]]],[]],[[217,[64,[177]]],[[5,[[40,[35]]]]]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[310,[311,[-1]]],[[5,[35]]],312],[6,4],[6,4],[[-1,-2],[[5,[[40,[177]]]]],[],72],[[217,-1],[[5,[[40,[177]]]]],72],[[-1,-2,[40,[177]]],[[5,[4]]],[],72],[[217,-1,[40,[177]]],[[5,[4]]],72],[310,6],[217,6],0,[[310,7],8],[[217,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[107,310],[[[40,[310]]],217],[217,6],[[310,[313,[[40,[177]]]],205],[[5,[4]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[314,4],[6,4],[-1,-1,[]],[-1,-2,[],[]],0,[[],6],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[314,11],[6,314],0,0,[[-1,[69,[[67,[68]]]]],[[5,[4]]],[]],[[314,[69,[[67,[68]]]]],[[5,[4]]]],0,0,[[-1,11],[[69,[[67,[68]]]]],[]],[[314,11],[[69,[[67,[68]]]]]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,94,[]],[3,13],[315,[[18,[95]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[315,[[18,[94]]]],[316,316],[3,3],[63,63],[15,15],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[15,11],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],3],[[],63],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[315,17],[-1,[[19,[3]]],79],[-1,[[19,[63]]],79],[317,4],[6,4],[6,4],[6,4],[6,4],[6,4],[6,4],[[315,315],11],[[3,3],11],[[63,63],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[15,3],0,[[15,17],13],0,0,[[315,7],8],[[315,7],8],[[316,7],8],[[3,7],8],[[3,7],8],[[63,7],8],[[15,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,[[19,[3,315]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],27,[28,29],30],[[-1,-2],27,[28,29],30],[[3,-1],4,37],[[63,-1],4,37],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[316,315],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[15,4],[15,63],0,[[63,56],317],[[63,56],15],[17,[[19,[3,315]]]],[[],3],[15,33],0,[[3,-1],19,80],[[63,-1],19,80],[[15,11],4],[315,[[18,[94]]]],0,[15,318],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],0,[[319,7],8],[[320,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[[32,[52]],[32,[2]],[18,[[32,[31]]]]],319],0,0,0,0,[[-1,320],4,[]],[[319,320],4],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],321],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],0,[[321,7],8],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,0,0,0,0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[322,219],[323,219],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[64,[45]],6],[[18,[208]]]],[[[64,[45]],282,6,11],[[18,[208]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[322,222],[[5,[220]]]],[[323,220,[324,[222]]],[[5,[4]]]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[323,220],[[5,[[40,[252]]]]]],[[],6],[[],6],[[],[[326,[325]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[323,[64,[45]],193],[[18,[208]]]],[323,21],0,0,[[323,[64,[45]],193],[[18,[208]]]],[21,322],[21,323],[[[64,[177]],6],208],[[323,[64,[45]],193],[[18,[208]]]],[[[328,[327]]],[[5,[[40,[6]]]]]],[323,6],[[323,-1],[[40,[6]]],329],[[323,[64,[45]],282,11],[[18,[208]]]],[323,6],[200,219],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,4],[-1,-1,[]],[-1,-2,[],[]],[330,[[331,[[18,[39]]]]]],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[[64,[39]]],330],[330,18],[39,332],0,[330,[[331,[[18,[332]]]]]],[330,[[331,[4]]]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,[[5,[333]]]],[[334,6],[[5,[335]]]],0,[[16,[18,[[32,[31]]]]],16],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[],336],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[333,4],[6,4],[333,[[5,[[18,[220]]]]]],0,0,0,0,[334,17],0,0,[[336,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,[18,[[40,[337]]]]],[[5,[200]]]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[333,21],0,[[13,15,12],16],[333,[[69,[[67,[68]]]]]],0,0,0,0,0,[[16,[18,[194]]],16],0,[[16,[18,[[40,[193]]]]],16],0,0,0,[[16,-1,17],[[5,[[32,[34]]]]],338],0,0,0,0,[[16,[18,[274]]],16],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[339,339],[[-1,-2],4,[],[]],0,[[340,6],[[331,[[67,[341]]]]]],0,[[340,6],[[331,[[67,[342]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[33,3,34,6,[18,[[32,[31]]]]],340],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[6,4],[[340,-1,343,[18,[344]]],[[331,[4]]],[338,345]],[[340,343],4],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[339,27],[[331,[346]]]],[[339,27,6],[[331,[346]]]],[[339,27],331],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[339,27],0,[347,18],[340,6],0,0,0,0,0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[348,17],[[18,[193]]]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,4],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[[348,349],[[18,[208]]]],[[348,349],[[18,[208]]]],[[[64,[45]],323,[216,[193]]],348],[[348,349],[[18,[208]]]],[348,6],0,0,[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[350,21],350],[[],351],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[[13,21,22,12],23],0,0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[[351,222],4],[-1,-2,[],[]],[-1,-2,[],[]],[[23,321],[[5,[[18,[352]]]]]],0,0,0,0,[[353,56,-1],4,72],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[353,353],[76,76],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],[76,[[0,[72]]]],0,[[353,7],8],[[76,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[76,78],[[40,[15]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[353,[[64,[76]]]],0,[353,4],[[],353],[354,76],[[],[[326,[76]]]],0,0,[[353,-1],4,72],[353,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[295,[-1]],33,287,355],[[5,[4]]],89],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[283,[-1]]],[[283,[-1]]],123],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[33,-1],[[5,[[4,[287,355]]]]],356],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[6,4],0,0,[[[283,[-1]],7],8,155],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[[32,[-1]]],[[283,[-1]]],[]],[[[283,[-1]],33,287],[[5,[4]]],89],[[[283,[-1]],33,287],[[5,[357]]],89],0,0,[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[295,[-1]]],[[5,[4]]],89],[[[283,[-1]]],[[295,[-1]]],89],0,0,0,0,0,0,0,0,0,[[358,[40,[161]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[359,[[32,[31]]]],0,0,0,[[[360,[-1]]],4,[]],[361,361],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[[],358],[[],361],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,4],[362,4],[6,4],[6,4],[6,4],[6,4],[6,4],0,0,[[[360,[-1]]],[[5,[4]]],[]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[362,33],[[18,[[32,[279]]]]]],[[359,33],[[18,[[32,[279]]]]]],0,0,[[[360,[-1]],33,363,51],4,[]],[[[360,[-1]],33,302],4,89],0,[[[360,[-1]],33],[[5,[87]]],[]],0,[[[360,[-1]],306],4,89],[[[360,[-1]],33,305],4,89],[[[360,[-1]],33,51],4,89],0,[[[360,[-1]],33,364],[[5,[87]]],89],[[[360,[-1]],[40,[160]]],4,89],0,[[[360,[-1]],33],[[5,[87]]],[]],0,[[[360,[-1]],33,304],4,[]],[[[360,[-1]],33,303],4,89],[[[360,[-1]],33,365,51],4,[]],0,[[[360,[-1]],33,366],[[5,[87]]],89],[[[360,[-1]],[40,[53]]],4,89],0,[[[360,[-1]],33],[[5,[87]]],89],0,[[[360,[-1]],[40,[161]],11],4,89],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[362,33],11],[[359,33],11],[362,11],0,0,0,0,[[[360,[-1]]],4,[]],0,[[[360,[-1]],[32,[279]],162,[18,[6]],[32,[57]]],163,[]],0,0,[[361,33],4],[[361,33],4],[[361,33],[[18,[77]]]],[[361,33,11],4],[361,4],[[[360,[-1]],[40,[161]]],[[286,[33,294]]],[]],0,0,0,0,[[[360,[-1]]],4,89],0,0,0,0,0,0,0,[[[360,[-1]],33,[307,[91]]],4,89],[[362,11],4],[[[360,[-1]]],11,[]],0,[[[367,[-1]]],362,89],[[57,[32,[-1]],88],359,89],[362,[[5,[4]]]],[359,[[5,[4]]]],[[362,53],[[5,[4]]]],[[359,33,53],[[5,[4]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[6,6],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[359,33],362],0,0,0,[[[32,[279]],165,363,285],[[5,[4]]]],[[200,363],[[5,[21]]]],0,0,[[33,13,12,[32,[278]],77],11],[[17,12],[[5,[11]]]],[[298,200],[[5,[4]]]],[[[40,[161]]],4]],"c":[],"p":[[3,"Compat",7001],[3,"AccessLayer",20],[3,"FileId",5878],[15,"tuple"],[6,"Result",602],[15,"usize"],[3,"Formatter",7002],[6,"Result",7002],[3,"Request",7003],[3,"Request",7003],[15,"bool"],[3,"Operator",7004],[3,"String",7005],[8,"Into",7006],[3,"FileHandle",5878],[3,"ParquetReaderBuilder",6312],[15,"str"],[4,"Option",7007],[4,"Result",7008],[3,"TypeId",7009],[6,"RegionMetadataRef",7010],[4,"Source",4281],[3,"ParquetWriter",6571],[3,"SstMetaKey",56],[3,"PageKey",56],[3,"PageValue",56],[15,"u64"],[8,"Hash",7011],[8,"Sized",7012],[8,"BuildHasher",7011],[3,"CacheManager",56],[3,"Arc",7013],[3,"RegionId",7014],[3,"ParquetMetaData",7015],[4,"Value",7016],[6,"VectorRef",7017],[8,"Hasher",7011],[15,"u32"],[4,"Page",7018],[3,"Vec",7019],[3,"ColumnDescriptor",7020],[3,"FileMetaData",7015],[6,"ParquetColumnIndex",7015],[6,"ParquetOffsetIndex",7015],[3,"RowGroupMetaData",7015],[3,"SchemaDescriptor",7020],[4,"CompactionOptions",5060],[8,"Picker",371],[3,"CompactionScheduler",216],[3,"CompactionStatus",216],[3,"OptionOutputTx",5418],[8,"Scheduler",5832],[4,"WorkerRequest",5418],[3,"Sender",7021],[3,"VersionControl",5202],[6,"FilePurgerRef",6091],[3,"MitoConfig",479],[3,"CompactionRequest",216],[4,"Error",602],[3,"PendingCompaction",216],[3,"CompactionOutput",343],[3,"ReadableSize",7022],[3,"FileMeta",5878],[15,"slice"],[6,"BoxedBatchReader",4281],[8,"CompactionTask",371],[3,"Box",7023],[8,"Future",7024],[3,"Pin",7025],[15,"i64"],[3,"BTreeMap",7026],[8,"Iterator",7027],[3,"TwcsPicker",379],[3,"TwcsCompactionTask",379],[3,"TimeBuckets",379],[3,"LevelMeta",6626],[3,"Duration",7028],[3,"Timestamp",7029],[8,"Deserializer",7030],[8,"Serializer",7031],[3,"MitoEngine",530],[3,"EngineInner",530],[3,"RegionUsage",4906],[3,"ScanRequest",7032],[4,"Scanner",4786],[4,"RegionRequest",7033],[4,"Output",7034],[6,"ObjectStoreManagerRef",7035],[8,"LogStore",7036],[4,"RegionRole",7037],[4,"SetReadonlyResponse",7037],[3,"BoxedError",7038],[8,"Any",7009],[8,"Error",7039],[3,"Backtrace",7040],[3,"InvalidScanIndexSnafu",602],[6,"ManifestVersion",7041],[3,"RegionMetadataNotFoundSnafu",602],[3,"WorkerStoppedSnafu",602],[3,"InvalidMetaSnafu",602],[3,"RegionNotFoundSnafu",602],[3,"ObjectStoreNotFoundSnafu",602],[3,"RegionCorruptedSnafu",602],[3,"InvalidRequestSnafu",602],[3,"FillDefaultSnafu",602],[3,"NotSupportedFieldSnafu",602],[4,"ConcreteDataType",7042],[3,"InvalidParquetSnafu",602],[3,"InvalidBatchSnafu",602],[3,"InvalidRecordBatchSnafu",602],[3,"PrimaryKeyLengthMismatchSnafu",602],[3,"InvalidSenderSnafu",602],[3,"InvalidSchedulerStateSnafu",602],[3,"RegionDroppedSnafu",602],[3,"RegionClosedSnafu",602],[3,"RegionTruncatedSnafu",602],[3,"RejectWriteSnafu",602],[3,"CompatReaderSnafu",602],[3,"RegionReadonlySnafu",602],[3,"EmptyRegionDirSnafu",602],[3,"OpenDalSnafu",602],[3,"CompressObjectSnafu",602],[8,"Clone",7043],[3,"DecompressObjectSnafu",602],[3,"SerdeJsonSnafu",602],[3,"Utf8Snafu",602],[3,"JoinSnafu",602],[3,"RecvSnafu",602],[3,"InvalidMetadataSnafu",602],[3,"NewRecordBatchSnafu",602],[3,"WriteBufferSnafu",602],[3,"ReadParquetSnafu",602],[3,"ConvertColumnDataTypeSnafu",602],[3,"CreateDefaultSnafu",602],[3,"EncodeWalSnafu",602],[3,"WriteWalSnafu",602],[3,"ReadWalSnafu",602],[3,"DecodeWalSnafu",602],[3,"DeleteWalSnafu",602],[3,"WriteGroupSnafu",602],[3,"FieldTypeMismatchSnafu",602],[3,"SerializeFieldSnafu",602],[3,"DeserializeFieldSnafu",602],[3,"ConvertVectorSnafu",602],[3,"ComputeArrowSnafu",602],[3,"ComputeVectorSnafu",602],[3,"StopSchedulerSnafu",602],[3,"BuildPredicateSnafu",602],[3,"DeleteSstSnafu",602],[3,"FlushRegionSnafu",602],[3,"CompactRegionSnafu",602],[3,"InvalidRegionRequestSnafu",602],[3,"JsonOptionsSnafu",602],[3,"ArrowReaderSnafu",602],[8,"Debug",7002],[4,"CompressionType",7044],[8,"StackError",7038],[4,"StatusCode",7045],[3,"FlushScheduler",2480],[3,"SenderDdlRequest",5418],[3,"SenderWriteRequest",5418],[4,"FlushReason",2480],[3,"RegionFlushTask",2480],[3,"VersionControlData",5202],[3,"Version",5202],[3,"WriteBufferManagerImpl",2480],[3,"FlushStatus",2480],[3,"RegionManifestBuilder",2667],[3,"RegionChange",2667],[3,"RegionEdit",2667],[3,"RegionTruncate",2667],[4,"RegionMetaAction",2667],[3,"RegionRemove",2667],[3,"RegionManifest",2667],[3,"RegionCheckpoint",2667],[3,"RegionMetaActionList",2667],[15,"u8"],[3,"RegionManifestOptions",3008],[3,"RegionManifestManagerInner",3008],[3,"RegionManifestManager",3008],[3,"ManifestObjectStore",3106],[4,"FileKey",3106],[3,"CheckpointMetadata",3106],[3,"DELTA_RE",3106],[3,"Regex",7046],[3,"CHECKPOINT_RE",3106],[8,"Fn",7047],[3,"ObjectStoreLogIterator",3106],[6,"MemtableRef",3302],[3,"MemtableStats",3302],[3,"AllocTracker",3302],[6,"MemtableId",3302],[6,"ColumnId",7014],[3,"Predicate",7048],[6,"BoxedBatchIterator",3302],[6,"WriteBufferManagerRef",2480],[3,"KeyValues",3385],[3,"KeyValue",3385],[3,"ReadRowHelper",3385],[3,"RegionMetadata",7010],[3,"Mutation",7049],[3,"Rows",7049],[4,"OpType",7049],[6,"SequenceNumber",7050],[4,"ValueRef",7016],[3,"TimeSeriesMemtableBuilder",3474],[3,"Values",3474],[6,"ArrayRef",7051],[3,"Series",3474],[3,"Metrics",3474],[3,"Iter",3474],[3,"TimeSeriesMemtable",3474],[3,"ValueBuilder",3474],[3,"SeriesSet",3474],[3,"RwLock",7052],[3,"HashSet",7053],[3,"McmpRowCodec",5769],[8,"MutableVector",7017],[6,"SchemaRef",7054],[3,"RecordBatch",7055],[8,"PhysicalExpr",7056],[3,"Batch",4281],[3,"MemtableVersion",3733],[3,"WRITE_BUFFER_BYTES",3774],[6,"IntGauge",7057],[3,"REGION_COUNT",3774],[3,"HANDLE_REQUEST_ELAPSED",3774],[6,"HistogramVec",7058],[3,"FLUSH_REQUESTS_TOTAL",3774],[6,"IntCounterVec",7059],[3,"FLUSH_ERRORS_TOTAL",3774],[6,"IntCounter",7059],[3,"FLUSH_ELAPSED",3774],[3,"FLUSH_BYTES_TOTAL",3774],[3,"WRITE_STALL_TOTAL",3774],[3,"WRITE_REJECT_TOTAL",3774],[3,"WRITE_STAGE_ELAPSED",3774],[3,"WRITE_ROWS_TOTAL",3774],[3,"COMPACTION_STAGE_ELAPSED",3774],[3,"COMPACTION_ELAPSED_TOTAL",3774],[3,"Histogram",7058],[3,"COMPACTION_REQUEST_COUNT",3774],[3,"COMPACTION_FAILURE_COUNT",3774],[3,"READ_STAGE_ELAPSED",3774],[3,"READ_ROWS_TOTAL",3774],[3,"MERGE_FILTER_ROWS_TOTAL",3774],[3,"CACHE_HIT",3774],[3,"CACHE_MISS",3774],[3,"CACHE_BYTES",3774],[6,"IntGaugeVec",7057],[3,"BatchBuilder",4281],[3,"BatchColumn",4281],[3,"BooleanVector",7060],[6,"UInt8Vector",7061],[6,"UInt64Vector",7061],[6,"UInt32Vector",7061],[3,"CompatPrimaryKey",4445],[3,"CompatFields",4445],[4,"IndexOrDefault",4445],[3,"ProjectionMapper",4717],[3,"CompatReader",4445],[8,"BatchReader",4281],[3,"MergeReaderBuilder",4554],[3,"MergeReader",4554],[3,"Node",4554],[4,"Ordering",7062],[3,"CompareFirst",4554],[3,"Metrics",4554],[4,"BatchIndex",4717],[3,"RecordBatch",7063],[6,"Result",7064],[6,"SchemaRef",7065],[3,"ScanRegion",4786],[6,"TimestampRange",7066],[6,"SendableRecordBatchStream",7067],[3,"SeqScan",4841],[3,"Metrics",4841],[3,"RegionMap",4906],[3,"MitoRegion",4906],[8,"OnFailure",5418],[3,"RegionOpener",5018],[3,"ColumnMetadata",7010],[3,"Wal",6698],[3,"RegionOptions",5060],[6,"MemtableBuilderRef",3302],[3,"HashMap",7068],[6,"EntryId",6698],[3,"TwcsOptions",5060],[3,"RegionOptionsWithoutEnum",5060],[4,"Value",7069],[8,"Deserialize",7030],[8,"Serialize",7031],[3,"VersionBuilder",5202],[3,"RegionWriteCtx",5351],[3,"WalWriter",6698],[3,"WriteNotify",5351],[15,"i32"],[3,"WriteRequest",5418],[3,"Value",7049],[3,"OutputTx",5418],[4,"DdlRequest",5418],[4,"BackgroundNotify",5418],[3,"FlushFinished",5418],[3,"FlushFailed",5418],[3,"CompactionFinished",5418],[3,"CompactionFailed",5418],[3,"Sender",7070],[3,"Receiver",7070],[3,"ColumnSchema",7049],[3,"SortField",5769],[3,"Deserializer",7071],[8,"Buf",7072],[3,"Serializer",7073],[3,"LocalScheduler",5832],[3,"ParseIdError",5878],[3,"ParseIdSnafu",5878],[3,"FileHandleInner",5878],[6,"FileTimeRange",5878],[3,"LocalFilePurger",6091],[3,"PurgeRequest",6091],[3,"WriteOptions",6150],[3,"WriteFormat",6211],[3,"ReadFormat",6211],[3,"VecDeque",7074],[6,"FieldRef",7075],[15,"array"],[3,"UInt16Type",7076],[3,"DictionaryArray",7077],[8,"IntoIterator",7078],[3,"CachedPageReader",6282],[6,"Result",7079],[3,"PageMetadata",7018],[3,"ParquetReader",6312],[3,"RowGroupReaderBuilder",6312],[3,"ParquetRecordBatchReader",7080],[3,"Metrics",6312],[3,"KeyValue",7081],[8,"AsyncFileReader",7082],[4,"ColumnChunkData",6442],[3,"InMemoryRowGroup",6442],[8,"PageIterator",7018],[8,"PageReader",7018],[3,"ProjectionMask",7083],[3,"RowSelection",7084],[8,"Send",7012],[3,"Bytes",7085],[3,"ColumnChunkIterator",6442],[3,"RowGroupPruningStats",6540],[3,"Column",7086],[3,"WriterPropertiesBuilder",7087],[3,"SourceStats",6571],[3,"SstInfo",6150],[3,"SstVersion",6626],[6,"Level",5878],[3,"WalEntry",7049],[8,"Entry",7088],[6,"WalEntryStream",6698],[3,"StalledRequests",6760],[3,"WorkerGroup",6760],[3,"RegionWorkerLoop",6760],[3,"WorkerListener",6760],[3,"RegionWorker",6760],[3,"RegionAlterRequest",7033],[3,"RegionCreateRequest",7033],[3,"RegionFlushRequest",7033],[3,"RegionOpenRequest",7033],[3,"WorkerStarter",6760],[6,"AccessLayerRef",20],[6,"CacheManagerRef",56],[6,"SstMetaCache",56],[6,"VectorCache",56],[6,"PageCache",56],[6,"CompactionPickerRef",371],[13,"PrimaryKeyLengthMismatch",2354],[13,"CreateDefault",2354],[13,"CompressObject",2354],[13,"DecompressObject",2354],[13,"NotSupportedField",2354],[13,"InvalidScanIndex",2354],[13,"OpenDal",2354],[13,"SerdeJson",2354],[13,"Utf8",2354],[13,"Join",2354],[13,"Recv",2354],[13,"NewRecordBatch",2354],[13,"ReadParquet",2354],[13,"EncodeWal",2354],[13,"DecodeWal",2354],[13,"SerializeField",2354],[13,"DeserializeField",2354],[13,"ComputeArrow",2354],[13,"StopScheduler",2354],[13,"DeleteSst",2354],[13,"JsonOptions",2354],[13,"ArrowReader",2354],[13,"InvalidParquet",2354],[13,"WorkerStopped",2354],[13,"RegionMetadataNotFound",2354],[13,"InvalidMeta",2354],[13,"InvalidMetadata",2354],[13,"WriteBuffer",2354],[13,"RegionNotFound",2354],[13,"ObjectStoreNotFound",2354],[13,"RegionCorrupted",2354],[13,"InvalidRequest",2354],[13,"ConvertColumnDataType",2354],[13,"WriteWal",2354],[13,"ReadWal",2354],[13,"DeleteWal",2354],[13,"InvalidBatch",2354],[13,"InvalidRecordBatch",2354],[13,"ConvertVector",2354],[13,"ComputeVector",2354],[13,"InvalidSender",2354],[13,"InvalidSchedulerState",2354],[13,"BuildPredicate",2354],[13,"FlushRegion",2354],[13,"RegionDropped",2354],[13,"RegionClosed",2354],[13,"RegionTruncated",2354],[13,"RejectWrite",2354],[13,"CompactRegion",2354],[13,"CompatReader",2354],[13,"InvalidRegionRequest",2354],[13,"RegionReadonly",2354],[13,"EmptyRegionDir",2354],[13,"FillDefault",2354],[13,"WriteGroup",2354],[13,"FieldTypeMismatch",2354],[8,"WriteBufferManager",2480],[8,"MemtableBuilder",3302],[8,"Memtable",3302],[6,"SeriesRwLockMap",3474],[6,"MemtableVersionRef",3733],[13,"DefaultValue",4552],[6,"MitoRegionRef",4906],[6,"RegionMapRef",4906],[6,"VersionControlRef",5202],[6,"VersionRef",5202],[13,"Background",5765],[13,"SetReadonlyGracefully",5765],[8,"RowCodec",5769],[6,"SchedulerRef",5832],[8,"FilePurger",6091],[13,"Sparse",6536],[13,"Dense",6536],[6,"SstVersionRef",6626],[6,"RequestBuffer",6760]],"b":[[1403,"impl-Debug-for-Error"],[1404,"impl-Display-for-Error"],[5972,"impl-Debug-for-ParseIdError"],[5973,"impl-Display-for-ParseIdError"],[5975,"impl-Debug-for-FileId"],[5976,"impl-Display-for-FileId"]]},\
"nyc_taxi":{"doc":"Use the taxi trip records from New York City dataset to …","t":"DRRLLMLLFLLLLLFFLLFFLMLLLLFLLLLLLFMFFMFMMMLLLLLLLLF","n":["Args","CATALOG_NAME","SCHEMA_NAME","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_values","command","command_for_update","compat","compat_mut","compat_ref","convert_record_batch","create_table_expr","deref","deref_mut","do_query","do_write","drop","endpoint","from","from_arg_matches","from_arg_matches_mut","from_subset","get_file_list","group_id","init","into","into_request","into_request","is_in_subset","is_record_batch_full","iter_num","main","new_table_name","path","query_set","skip_read","skip_write","thread_num","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","write_data"],"q":[[0,"nyc_taxi"],[51,"clap_builder::builder::command"],[52,"arrow_array::array"],[53,"greptime_proto::v1::column"],[54,"greptime_proto::v1"],[55,"async_compat"],[56,"arrow_array::record_batch"],[57,"greptime_proto::v1"],[58,"greptime_proto::v1"],[59,"clap_builder::parser::matches::arg_matches"],[60,"clap_builder"],[61,"core::result"],[62,"std::path"],[63,"std::path"],[64,"clap_builder::util::id"],[65,"core::option"],[66,"tonic::request"],[67,"tonic::request"],[68,"std::collections::hash::map"],[69,"core::any"],[70,"indicatif::multi"],[71,"indicatif::style"]],"d":["","","","","","Batch size of insert request.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","Number of query iteration","","","Path to the dataset","","","","Number of client threads on write (parallel on file level)","","","","","","","","",""],"i":[0,0,0,15,15,15,15,15,0,15,15,15,15,15,0,0,15,15,0,0,15,15,15,15,15,15,0,15,15,15,15,15,15,0,15,0,0,15,0,15,15,15,15,15,15,15,15,15,15,15,0],"f":[0,0,0,[1,1],[1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,[[5,[3,4]]]],[[],1],[[],1],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[7,[[5,[[9,[8]],10]]]],[11,12],[13,-1,[]],[13,-1,[]],[[13,14,11],5],[[15,14,11],5],[13,5],0,[-1,-1,[]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[-1,-2,[],[]],[-1,[[9,[19]]],[[21,[20]]]],[[],[[23,[22]]]],[[],13],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,26,[]],[7,26],0,[[],5],[[],27],0,[11,[[28,[27,27]]]],0,0,0,[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,29,[]],[[15,16],[[18,[5,17]]]],[[15,16],[[18,[5,17]]]],[-1,-2,[],[]],[[11,13,14,19,30,31],32]],"c":[],"p":[[3,"Command",51],[6,"ArrayRef",52],[3,"Values",53],[4,"ColumnDataType",54],[15,"tuple"],[3,"Compat",55],[3,"RecordBatch",56],[3,"Column",54],[3,"Vec",57],[15,"u32"],[15,"str"],[3,"CreateTableExpr",54],[15,"usize"],[3,"Database",58],[3,"Args",0],[3,"ArgMatches",59],[6,"Error",60],[4,"Result",61],[3,"PathBuf",62],[3,"Path",62],[8,"AsRef",63],[3,"Id",64],[4,"Option",65],[3,"Request",66],[3,"Request",66],[15,"bool"],[3,"String",67],[3,"HashMap",68],[3,"TypeId",69],[3,"MultiProgress",70],[3,"ProgressStyle",71],[15,"u128"]],"b":[]},\
"object_store":{"doc":"","t":"QNNNNNNNNNNNNNDENDENNDNNNNENNNDINGNNDGSNNNNDLMLMLLLLLLLLLLLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLALMLLLLALMLMALLLLLMLMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLMLALLLLLLMLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLDDDDDDDIDDDMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLKLLLLLLLLLLLLLLLLLLLLLLLLALLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLAMMLLLLLLLLLLLLLLNDENLLLLLFLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLFLLLLFLLLLLLLLLLDGLMLLLLLLMLLLLLLLLLLMMMLLLLDDDDDMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLMMMLMLLMMLLMMLMLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLMLMLMLMLMLMLMLLLLLLLLLLLMMMMMMMMMMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLMLMLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMLMLLMMLMLMLMLLMMLMLMLMLMLMLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLMDDMLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLMFMMLLLLLLLLFFFF","n":["Accessor","AlreadyExists","CacheControl","Complete","ConditionNotMatch","ConfigInvalid","ContentDisposition","ContentIncomplete","ContentLength","ContentMd5","ContentRange","ContentTruncated","ContentType","DIR","Entry","EntryMode","Err","Error","ErrorKind","Etag","FILE","HttpClient","InvalidInput","IsADirectory","IsSameFile","LastModified","Metakey","Mode","NotADirectory","NotFound","ObjectStore","ObjectStoreBuilder","Ok","Pager","PermissionDenied","RateLimited","Reader","Result","SCHEME","Unexpected","Unknown","Unsupported","Version","Writer","abort","accessor","as_error_source","backtrace","bitand","bitor","bitxor","blocking","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","check","client","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","context","copy","copy","create_dir","default","delete","delete_with","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_map","from_map","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","info","init","init","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into_parts","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_static","into_streaming_request","is_dir","is_exist","is_file","is_temporary","kind","kind","layer","layers","limit","limit","list","list_with","lister","lister_with","manager","map","message","metadata","metadata","metrics","name","new","new","new","not","operation","path","path","poll_close","poll_complete","poll_flush","poll_flush","poll_next","poll_next","poll_read","poll_read","poll_read","poll_seek","poll_seek","poll_shutdown","poll_write","poll_write","presign_read","presign_read_with","presign_stat","presign_write","presign_write_with","raw_normalize_path","read","read_with","reader","reader_with","rem","remove","remove_all","remove_via","rename","seek_state","send","services","set_permanent","set_persistent","set_source","set_temporary","sink","source","source","start_seek","stat","stat_with","status","sub","test_util","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","via_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_limit","with_operation","write","write","write_with","writer","writer_with","BlockingLayer","ConcurrentLimitLayer","ImmutableIndexLayer","LoggingLayer","LruCacheAccessor","LruCacheLayer","PrometheusLayer","RetryInterceptor","RetryLayer","TimeoutLayer","TracingLayer","backtrace_output","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","error_level","extend_iter","failure_level","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle","init","init","init","init","init","init","init","init","inner","insert","intercept","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","layer","layer","layer","layer","layer","layer","layer","layer","lru_cache","new","new","new","notify","permits","read_cache","read_cache","registry","speed","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_backtrace_output","with_error_level","with_factor","with_failure_level","with_jitter","with_max_delay","with_max_times","with_min_delay","with_notify","with_registry","with_speed","with_timeout","LruCacheAccessor","LruCacheLayer","batch","blocking_copy","blocking_create_dir","blocking_delete","blocking_list","blocking_list","blocking_read","blocking_read","blocking_rename","blocking_stat","blocking_write","blocking_write","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","contains_file","copy","create_dir","delete","delete","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","info","init","init","inner","inner","into","into","into_request","into_request","layer","list","list","new","presign","read","read","read_cache","read_cache","read_cache","read_cache_stat","rename","stat","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","NotFound","ReadCache","ReadResult","Success","blocking_invalidate_entries_with_prefix","borrow","borrow","borrow_mut","borrow_mut","can_cache","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","contains_file","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","file_cache","fmt","fmt","from","from","from_ref","from_ref","init","init","into","into","into_request","into_request","invalidate_entries_with_prefix","mem_cache","new","read","read_cache_key","read_remote","recover_cache","size_bytes","stat","to_output_reader","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ObjectStoreManager","ObjectStoreManagerRef","add","alloc","borrow","borrow_mut","compat","compat_mut","compat_ref","default_object_store","default_object_store","deref","deref_mut","drop","find","fmt","from","init","into","into_request","new","phantom","ptr","stores","try_from","try_into","type_id","vzip","OBJECT_STORE_LRU_CACHE_BYTES","OBJECT_STORE_LRU_CACHE_ENTRIES","OBJECT_STORE_LRU_CACHE_HIT","OBJECT_STORE_LRU_CACHE_MISS","OBJECT_STORE_READ_ERROR","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Azblob","Azdls","Cos","Fs","Gcs","Ghac","Http","Ipmfs","Memory","Obs","Oss","S3","Webdav","Webhdfs","access_key_id","access_key_id","access_key_id","access_key_id","access_key_id","access_key_id","access_key_secret","access_key_secret","account_key","account_key","account_key","account_key","account_name","account_name","account_name","account_name","allow_anonymous","allow_anonymous","atomic_write_dir","atomic_write_dir","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","build","build","build","build","build","build","build","build","build","build","build","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","container","container","credential","credential","credential_path","credential_path","customed_credential_load","customed_credential_load","customed_token_loader","customed_token_loader","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_storage_class","default_storage_class","default_storage_class","default_storage_class","delegation","delegation","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_region","disable_config_load","disable_config_load","disable_config_load","disable_config_load","disable_ec2_metadata","disable_ec2_metadata","disable_list_batch","disable_list_batch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_create_simulation","enable_create_simulation","enable_exact_buf_write","enable_exact_buf_write","enable_path_check","enable_path_check","enable_virtual_host_style","enable_virtual_host_style","encryption_algorithm","encryption_algorithm","encryption_key","encryption_key","encryption_key_sha256","encryption_key_sha256","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","external_id","external_id","filesystem","filesystem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_connection_string","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_ref","from_ref","from_ref","from_ref","from_ref","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","password","password","password","password","predefined_acl","predefined_acl","presign_endpoint","presign_endpoint","region","region","role_arn","role_arn","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","sas_token","sas_token","scope","scope","secret_access_key","secret_access_key","secret_access_key","secret_access_key","secret_id","secret_id","secret_key","secret_key","security_token","security_token","server_side_encryption","server_side_encryption","server_side_encryption","server_side_encryption","server_side_encryption_aws_kms_key_id","server_side_encryption_aws_kms_key_id","server_side_encryption_customer_algorithm","server_side_encryption_customer_algorithm","server_side_encryption_customer_key","server_side_encryption_customer_key","server_side_encryption_customer_key_md5","server_side_encryption_customer_key_md5","server_side_encryption_key_id","server_side_encryption_key_id","server_side_encryption_with_aws_managed_kms_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_managed_kms_key","server_side_encryption_with_s3_key","service_account","service_account","to_owned","to_owned","to_owned","to_owned","to_owned","token","token","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","username","username","username","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_min_size","write_min_size","TempFolder","TestS3Config","access_key_id","borrow","borrow","borrow_mut","borrow_mut","bucket","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","into_request","into_request","new","path","region","remove_all","root","s3_test_config","secret_access_key","store","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","collect","join_dir","join_path","normalize_dir"],"q":[[0,"object_store"],[353,"object_store::layers"],[571,"object_store::layers::lru_cache"],[645,"object_store::layers::lru_cache::read_cache"],[710,"object_store::manager"],[738,"object_store::metrics"],[833,"object_store::services"],[1357,"object_store::test_util"],[1402,"object_store::util"],[1406,"core::result"],[1407,"core::error"],[1408,"flagset"],[1409,"core::convert"],[1410,"opendal::types::operator::blocking_operator"],[1411,"reqwest::async_impl::client"],[1412,"reqwest::async_impl::client"],[1413,"futures_io::if_std"],[1414,"opendal::types::operator::operator_futures"],[1415,"core::fmt"],[1416,"core::fmt"],[1417,"std::collections::hash::map"],[1418,"std::collections::hash::map"],[1419,"opendal::types::operator::builder"],[1420,"opendal::types::operator::metadata"],[1421,"opendal::types::metadata"],[1422,"tonic::request"],[1423,"alloc::alloc"],[1424,"alloc::sync"],[1425,"opendal::raw::layer"],[1426,"alloc::vec"],[1427,"opendal::types::operator::operator_futures"],[1428,"opendal::types::operator::operator_futures"],[1429,"core::pin"],[1430,"core::task::wake"],[1431,"std::io::error"],[1432,"core::task::poll"],[1433,"bytes::bytes"],[1434,"core::option"],[1435,"tokio::io::read_buf"],[1436,"std::io"],[1437,"core::time"],[1438,"opendal::raw::rps"],[1439,"opendal::types::operator::operator_futures"],[1440,"core::marker"],[1441,"opendal::raw::http_util::body"],[1442,"http::request"],[1443,"opendal::raw::http_util::body"],[1444,"anyhow"],[1445,"opendal::types::operator::operator_futures"],[1446,"opendal::types::scheme"],[1447,"opendal::types::operator::operator_futures"],[1448,"core::iter::traits::collect"],[1449,"prometheus::registry"],[1450,"opendal::raw::ops"],[1451,"core::future::future"],[1452,"alloc::boxed"],[1453,"opendal::raw::ops"],[1454,"opendal::raw::ops"],[1455,"opendal::raw::oio::read::api"],[1456,"prometheus::counter"],[1457,"reqsign::aws::credential"],[1458,"reqsign::google::token"]],"d":["The accessor that built by this builder.","The given path already exists thus we failed to the …","Key for cache control.","The special metadata key that used to mark this entry …","The condition of this operation is not match.","The config for backend is invalid.","Key for content disposition.","The content is incomplete.","Key for content length.","Key for content md5.","Key for content range.","The content is truncated.","Key for content type.","DIR means the path can be listed.","Entry returned by <code>Lister</code> or <code>BlockingLister</code> to represent a …","EntryMode represents the mode.","Contains the error value","Error is the error struct returned by all opendal …","ErrorKind is all kinds of Error of opendal.","Key for etag.","FILE means the path has data to read.","HttpClient that used across opendal.","The input is invalid.","The given path is a directory.","The given file paths are same.","Key for last last modified.","Metakey describes the metadata keys that can be stored or …","Key for mode.","The given path is not a directory.","The given path is not found.","Operator is the entry for all public async APIs.","Builder is used to set up a real underlying service, i.e. …","Contains the success value","The boxed version of <code>Page</code>","The given path doesn’t have enough permission for this …","Requests that sent to this path is over the limit, please …","Reader is designed to read data from given path in an …","Result that is a wrapper of <code>Result&lt;T, opendal::Error&gt;</code>","Associated scheme for this builder. It indicates what …","OpenDAL don’t know what happened here, and no actions …","Unknown means we don’t know what we can do on this path.","Underlying service doesn’t support this operation.","Key for version.","Writer is designed to write data into given path in an …","Abort the writer and clean up all written data.","","","","","","","Create a new blocking operator.","","","","","","","","","","","","","","","","","","","Consume the accessor builder to build a service.","Build a new http client in async context.","Check if this operator can work correctly.","Get the async client from http client.","","","","","","","","","","","","","","Close the writer and make sure all data have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copy into writer.","Copy a file from <code>from</code> to <code>to</code>.","Create a dir at given path.","","Delete the given path.","Delete the given path with extra options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a builder from given map which contains several …","Create a new operator from given map.","","","","","","","Get information of underlying accessor.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this entry to get it’s path and metadata.","","","","","","","","","","Convert self into static str.","","Check if this mode is DIR.","Check if this path exists or not.","Check if this mode is FILE.","Check if this error is temporary.","Return error’s kind.","","Create a new layer with dynamic dispatch.","","Get current operator’s limit. Limit is usually the …","","List entries within a given directory.","List entries within a given directory with options.","List entries within a given directory as a stream.","List entries within a given directory as a stream with …","","Operate on error with map.","","Fetch metadata of this entry.","","object-store metrics","Name of entry. Name is the last segment of path.","Create a new Error with error kind and message.","Create a new operator with input builder.","Create a new http client in async context.","","","Path of entry. Path is relative to operator’s root.","","","","","Writer makes sure that every write is flushed.","","","","","","","","","","","Presign an operation for read.","Presign an operation for read option described in OpenDAL […","Presign an operation for stat(head).","Presign an operation for write.","Presign an operation for write with option described in …","Make sure all operation are constructed by normalized path:","Read the whole path into a bytes.","Read the whole path into a bytes with extra options.","Create a new reader which can read the whole path.","Create a new reader with extra options","","Notes","Remove the path and all nested dirs and files recursively.","remove will remove files via the given paths.","Rename a file from <code>from</code> to <code>to</code>.","","Send a request in async way.","Services will provide builders to build underlying …","Set permanent status for error.","Set persistent status for error.","Set source for error.","Set temporary status for error.","Sink into writer.","","","","Get current path’s metadata.","Get current path’s metadata <strong>without cache</strong> directly with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new operator from given scheme and map.","","","","","","","","","","Add more context in error.","Specify the batch limit.","Update error’s operation.","Write into inner writer.","Write bytes into path.","Write data with extra options.","Write multiple bytes into path.","Write multiple bytes into path with extra options.","Add blocking API support for non-blocking services.","Add concurrent request limit.","Add an immutable in-memory index for underlying storage …","Add log for every operations.","","An opendal layer with local LRU file cache supporting.","Add prometheus for every operations.","RetryInterceptor is used to intercept while retry happened.","Add retry for temporary failed operations.","Add timeout for every operations.","Add tracing for every operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>BlockingLayer</code> with the current runtime’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert keys from iter.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Insert a key into index.","Everytime RetryLayer is retrying, this function will be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Create a new retry layer.","Create a new ConcurrentLimitLayer will specify permits","Create a new <code>TimeoutLayer</code> with default settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Setting whether to output backtrace while unexpected …","Setting the log level while expected error happened.","Set factor of current backoff.","Setting the log level while unexpected failure happened.","Set jitter of current backoff.","Set max_delay of current backoff.","Set max_times of current backoff.","Set min_delay of current backoff.","Set the retry interceptor as new notify.","create PrometheusLayer by incoming registry.","Set speed for TimeoutLayer with given value.","Set timeout for TimeoutLayer with given value.","","An opendal layer with local LRU file cache supporting.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true when the local cache contains the specific …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a <code>[LruCacheLayer]</code> with local file cache and …","","","","","","","Returns the read cache statistics info …","","","","","","","","","","","","","","","Local read cache for files in object storage","Cache value for read file","","Blocking version of <code>invalidate_entries_with_prefix</code>.","","","","","Returns true when the path of the file can be cached.","","","","","","","","","","","Returns true when the read cache contains the specific …","","","","","","","","","","","","Local file cache backend","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Invalidte all cache items which key starts with <code>prefix</code>.","Local memory cache to track local cache files","Create a <code>ReadCache</code> with capacity in bytes.","Read from a specific path using the OpRead operation. It …","Generate an unique cache key for the read path and range.","Read the file from remote storage. If success, write the …","Recover existing cache items from <code>file_cache</code> to <code>mem_cache</code>. …","","Returns the cache’s entry count and total approximate …","","","","","","","","","","","","Manages multiple object stores so that users can configure …","","Adds an object store to the manager.","","","","","","","","","","","","Finds an object store corresponding to the name.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates a new manager from the object store used as a …","","","","","","","","Cache size in bytes","Cache entry number","Cache hit counter, no matter what the cache result is.","Cache miss counter","Object store read error counter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Azure Storage Blob services support.","Azure Data Lake Storage Gen2 Support. As known as <code>abfs</code>, …","Tencent-Cloud COS services support.","POSIX file system support.","Google Cloud Storage services support.","GitHub Action Cache Services support.","HTTP Read-only service support like Nginx and Caddy.","IPFS file system support based on IPFS MFS API.","In memory service support. (BTreeMap Based)","Huawei-Cloud Object Storage Service (OBS) support","Aliyun Object Storage Service (OSS) support","Aws S3 and compatible services (including minio, …","WebDAV backend support.","WebHDFS’s REST API support. There two implementations of …","Set access_key_id of this backend.","Set access_key_id of this backend.","Set access_key_id of this backend.","","","","Set access_key_secret of this backend.","","Set account_key of this backend.","Set account_key of this backend.","","","Set account_name of this backend.","Set account_name of this backend.","","","Allow anonymous will allow opendal to send request without …","","Set temp dir for atomic write.","","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set bucket of this backend. The param is required.","set the container’s name","Set bucket of this backend. The param is required.","Set bucket name of this backend.","Set bucket name of this backend.","","","","","","","","","","","","","","","","","","","build the backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set container name of this backend.","","set the base64 hashed credentials string used for OAuth2","","set the credentials path of GCS.","","Adding a customed credential load for service.","","Specify the customed token loader used by this service.","","","","","","","","","","","","","","","","Set the default storage class for GCS.","Set default storage_class for this backend.","","","Set the delegation token of this backend, used for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Detect region of S3 bucket.","Disable config load so that opendal will not load config …","Disable config load so that opendal will not load config …","","","Disable load credential from ec2 metadata.","","Disable batch listing","","","","","","","","","","","","","","","","Enable create simulation for ghac service.","","Enable exact buf write so that opendal will write data …","","OpenDAL requires all input path are normalized to make …","","Enable virtual host style so that opendal will send API …","","Set encryption_algorithm of this backend.","","Set encryption_key of this backend.","","Set encryption_key_sha256 of this backend.","","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","set the endpoint GCS service uses","Set endpoint for http backend.","Set endpoint for ipfs.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint for http backend.","Set the remote address of this backend default to …","","","","","","","","","","","","Set external_id for this backend.","","Set filesystem name of this backend.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","from_connection_string will make a builder from connection …","","","","","","","","","","","","","","","","","","","","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","set password for http backend","set the password for Webdav","","","Set the predefined acl for GCS.","","Set a endpoint for generating presigned urls.","","Region represent the signing region of this endpoint. This …","","Set role_arn for this backend.","","Set root of this backend.","Set root of this backend.","Set root of this backend.","Set root for backend.","set the working directory root of backend","set the working directory root of backend","Set root path of http backend.","Set root for ipfs.","Set the root for BTreeMap.","Set root of this backend.","Set root of this backend.","Set root of this backend.","Set root path of http backend.","Set the working directory of this backend","","","","","","","","","","","","","","","Set sas_token of this backend.","","set the GCS service scope","","Set secret_access_key of this backend.","Set secret_access_key of this backend.","","","Set secret_id of this backend.","","Set secret_key of this backend.","","Set temporary credential used in AWS S3 connections","","Set server_side_encryption for this backend.","Set server_side_encryption for this backend.","","","Set server_side_encryption_aws_kms_key_id for this backend","","Set server_side_encryption_customer_algorithm for this …","","Set server_side_encryption_customer_key for this backend.","","Set server_side_encryption_customer_key_md5 for this …","","Set server_side_encryption_key_id for this backend.","","Enable server side encryption with aws managed kms key","Enable server side encryption with customer key.","Enable server side encryption with customer key.","Enable server side encryption with customer managed kms key","Enable server side encryption with s3 managed key","Set the GCS service account.","","","","","","","set bearer token for http backend","set the bearer token for Webdav","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","set password for http backend","set the password for Webdav","","","set the version that used by cache.","","","","","","","","","","","","","","","","set the minimum size of unsized write, it should be …","","Temp folder for object store test","Test s3 config from environment variables","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns s3 test config, return None if not found.","","","","","","","","","","","","Join two paths and normalize the output dir.","Push <code>child</code> to <code>parent</code> dir and normalize the output path.","Normalize a directory path, ensure it is ends with ‘/’"],"i":[42,16,6,6,16,16,6,16,6,6,6,16,6,14,0,0,97,0,0,6,14,0,16,16,16,6,0,6,16,16,0,0,97,0,16,16,0,0,42,16,14,16,6,0,1,9,3,3,6,6,6,9,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,42,12,9,12,12,14,15,6,9,16,12,14,15,6,9,16,12,1,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,3,1,9,9,14,9,9,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,14,6,16,14,14,14,14,6,6,6,6,16,16,16,16,3,3,14,14,15,6,9,16,16,12,47,1,3,14,15,6,9,16,12,42,9,14,15,6,9,16,12,9,47,1,3,14,15,6,9,16,12,47,1,47,1,3,14,15,6,9,16,12,15,47,1,3,14,15,6,9,16,12,16,47,14,9,14,3,3,3,9,0,9,9,9,9,9,9,0,3,3,15,15,0,15,3,9,12,6,3,15,15,1,47,1,1,47,47,47,47,47,47,47,1,1,1,9,9,9,9,9,0,9,9,9,9,6,9,9,9,9,47,12,0,3,3,3,3,1,3,3,47,9,9,3,6,0,14,15,6,9,16,12,3,14,16,47,1,3,14,15,6,9,16,12,47,1,3,14,15,6,9,16,12,47,47,1,3,14,15,6,9,16,12,0,9,47,1,3,14,15,6,9,16,12,3,9,3,1,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,75,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,72,73,74,75,76,77,78,72,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,77,72,74,75,76,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,75,74,75,74,75,77,78,72,82,73,74,75,76,77,78,72,73,74,75,76,77,78,77,72,82,73,74,75,76,77,78,94,74,81,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,0,72,73,76,72,73,107,94,78,76,76,72,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,72,82,73,74,75,76,77,78,74,72,82,73,74,75,76,77,78,75,75,72,75,72,72,72,72,72,78,76,76,0,0,94,94,94,94,94,94,94,94,94,94,94,94,107,94,107,94,107,107,107,94,107,94,107,94,107,94,94,94,94,107,94,107,94,107,94,94,107,94,107,94,107,94,94,94,107,94,107,94,107,94,94,107,94,94,94,0,107,94,107,94,94,107,107,94,107,94,107,94,107,94,94,94,113,0,0,113,112,113,112,113,112,0,113,112,113,112,113,112,113,112,113,112,112,113,112,113,112,113,112,113,113,113,113,113,112,113,112,113,112,113,112,113,112,113,112,113,112,112,112,112,112,0,112,112,113,112,0,113,112,113,112,113,112,113,112,113,112,0,0,117,144,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,144,144,117,117,117,117,117,0,0,0,0,0,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,118,120,120,122,122,123,123,125,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,118,120,122,123,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,127,128,126,127,128,127,127,129,130,129,130,129,130,129,130,128,128,131,131,129,127,128,129,127,128,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,132,133,126,127,128,132,133,126,127,128,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,126,139,129,130,132,126,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,129,133,133,133,133,128,128,133,133,129,130,132,131,133,134,135,136,137,126,127,128,138,139,133,128,133,128,139,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,128,132,128,132,128,128,128,139,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,134,134,128,128,131,131,128,128,129,129,129,129,129,129,129,130,132,133,135,136,126,127,128,138,139,129,130,132,133,135,136,126,127,128,138,139,128,128,130,130,129,130,132,131,133,134,135,136,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,126,139,129,130,132,133,134,135,136,126,127,128,138,129,130,132,133,134,135,136,126,127,128,138,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,135,138,135,138,133,133,127,127,128,128,128,128,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,129,133,133,126,128,126,128,132,132,132,132,128,128,127,128,127,128,128,128,128,128,128,128,128,128,127,127,128,129,128,128,128,133,133,129,130,132,126,139,135,138,135,138,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,129,130,132,131,133,134,135,136,137,126,127,128,138,139,135,138,135,138,134,134,129,130,132,131,133,134,135,136,137,126,127,128,138,139,127,127,0,0,142,143,142,143,142,142,143,142,143,142,143,142,143,142,143,142,143,142,142,143,142,143,142,143,142,143,142,143,143,142,143,142,0,142,143,143,142,143,142,143,142,143,142,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],0,[-1,5,[]],0,[[6,-1],[],[[8,[[7,[6]]]]]],[[6,-1],[],[[8,[[7,[6]]]]]],[[6,-1],[],[[8,[[7,[6]]]]]],[9,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[3]]],[]],[11,[[4,[12,3]]]],[9,[[4,[2,3]]]],[12,13],0,[14,14],[15,15],[6,6],[9,9],[16,16],[12,12],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[1,[[4,[2,3]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[[1,-1],[[4,[18,3]]],19],[[9,20,20],[[4,[2,3]]]],[[9,20],[[4,[2,3]]]],[[],14],[[9,20],[[4,[2,3]]]],[[9,20],21],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[[14,14],23],[[6,6],23],[[16,16],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[3,24],[[4,[2,25]]]],[[3,24],[[4,[2,25]]]],[[14,24],[[4,[2,25]]]],[[14,24],[[4,[2,25]]]],[[15,24],[[4,[2,25]]]],[[6,24],[[4,[2,25]]]],[[9,24],[[4,[2,25]]]],[[16,24],[[4,[2,25]]]],[[16,24],[[4,[2,25]]]],[[12,24],[[4,[2,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[28,[26,26,27]]],-1,[]],[[[28,[26,26,27]]],[[4,[[30,[[0,[29]]]],3]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,31],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[2,[26,32]]]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[16,20],[-1,[[33,[-2]]],[],[]],[14,23],[[9,20],[[4,[23,3]]]],[14,23],[3,23],[3,16],0,[[9,-1],9,[[36,[[35,[29,34]]]]]],0,[9,22],0,[[9,20],[[4,[[37,[15,34]],3]]]],[[9,20],38],[[9,20],[[4,[39,3]]]],[[9,20],40],0,[[3,-1],3,41],0,[15,32],0,0,[15,20],[[16,20],3],[-1,[[4,[[30,[[0,[29]]]],3]]],42],[[],[[4,[12,3]]]],[6],0,[15,20],0,[[[43,[1]],44],[[46,[[4,[2,45]]]]]],[[[43,[47]],44],[[46,[[4,[18,45]]]]]],[[[43,[1]],44],[[46,[[4,[2,45]]]]]],[[[43,[1]],44],[[46,[[4,[2,45]]]]]],[[47,44],[[46,[[49,[[4,[48,3]]]]]]]],[[[43,[47]],44],[[46,[49]]]],[[47,44,[51,[50]]],[[46,[[4,[22,3]]]]]],[[[43,[47]],44,52],[[46,[[4,[2,45]]]]]],[[[43,[47]],44,[51,[50]]],[[46,[[4,[22,45]]]]]],[[[43,[47]],44,53],[[46,[[4,[18,45]]]]]],[[47,44,53],[[46,[[4,[18,3]]]]]],[[[43,[1]],44],[[46,[[4,[2,45]]]]]],[[[43,[1]],44,[51,[50]]],[[46,[[4,[22,45]]]]]],[[[43,[1]],44,[51,[50]]],[[46,[[4,[22,45]]]]]],[[9,20,54],[[4,[55,3]]]],[[9,20,54],56],[[9,20,54],[[4,[55,3]]]],[[9,20,54],[[4,[55,3]]]],[[9,20,54],57],[20,26],[[9,20],[[4,[[37,[50,34]],3]]]],[[9,20],58],[[9,20],[[4,[47,3]]]],[[9,20],59],[[6,-1],[],[[8,[[7,[6]]]]]],[[9,[37,[26,34]]],[[4,[2,3]]]],[[9,20],[[4,[2,3]]]],[[9,-1],[[4,[2,3]]],[60,61]],[[9,20,20],[[4,[2,3]]]],0,[[12,[63,[62]]],[[4,[[65,[64]],3]]]],0,[3,3],[3,3],[[3,-1],3,[[8,[66]]]],[3,3],[[1,-1],[[4,[18,3]]],60],[3,[[49,[5]]]],0,[[[43,[47]],53],[[4,[2,45]]]],[[9,20],[[4,[32,3]]]],[[9,20],67],0,[[6,-1],[],[[8,[[7,[6]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[43,[-1]],44],[[46,[[49,[4]]]]],[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],0,[[69,[28,[26,26,27]]],[[4,[9,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,20,-1],3,[[8,[26]]]],[[9,22],9],[[3,-1],3,[[8,[20]]]],[[1,-1],[[4,[2,3]]],[[8,[48]]]],[[9,20,-1],[[4,[2,3]]],[[8,[48]]]],[[9,20,-1],70,[[8,[48]]]],[[9,20],[[4,[1,3]]]],[[9,20],71],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[72,[-1]]],[[72,[-1]]],[]],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],[[4,[77,3]]]],[[],[[72,[79]]]],[[],74],[[],75],[[],76],[[],78],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],0,[[74,-1],2,80],0,[[74,24],[[4,[2,25]]]],[[75,24],[[4,[2,25]]]],[[77,24],[[4,[2,25]]]],[[78,24],[[4,[2,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[74,26],2],[[-1,3,54,[51,[[2,[20,20]]]]],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[[72,[-1]],-2],[],81,29],[[82,-1],[],29],[[73,-1],[],29],[[74,-1],[],29],[[75,-1],[],29],[[76,-1],[],29],[[77,-1],[],29],[[78,-1],[],29],0,[[],[[72,[79]]]],[22,73],[[],76],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[75,23],75],[[75,[49,[20]]],[[4,[75,3]]]],[[[72,[79]],83],[[72,[79]]]],[[75,[49,[20]]],[[4,[75,3]]]],[[[72,[79]]],[[72,[79]]]],[[[72,[79]],54],[[72,[79]]]],[[[72,[79]],22],[[72,[79]]]],[[[72,[79]],54],[[72,[79]]]],[[[72,[79]],-1],[[72,[-1]]],81],[84,78],[[76,18],76],[[76,54],76],0,0,[[-1,85],[[43,[[87,[86,34]]]]],[]],[[-1,20,20,88],[[4,[89,3]]],[]],[[-1,20,90],[[4,[91,3]]],[]],[[-1,20,92],[[4,[93,3]]],[]],[[[94,[-1,-2]],20,95],[[97,[[2,[96]]]]],29,[29,98]],[[-1,20,95],[[4,[[2,[96]],3]]],[]],[[-1,20,99],[[4,[[2,[100]],3]]],[]],[[[94,[-1,-2]],20,99],[[97,[[2,[100]]]]],29,[29,98]],[[-1,20,20,101],[[4,[102,3]]],[]],[[-1,20,103],[[4,[104,3]]],[]],[[[94,[-1,-2]],20,105],[[97,[[2,[106]]]]],29,[29,98]],[[-1,20,105],[[4,[[2,[106]],3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[107,[-1]]],[[107,[-1]]],[98,98]],[[-1,-2],2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[107,[-1]],20],23,[29,98]],[[-1,20,20,88],[[43,[[87,[86,34]]]]],[]],[[-1,20,90],[[43,[[87,[86,34]]]]],[]],[[-1,20,92],[[43,[[87,[86,34]]]]],[]],[[[94,[-1,-2]],20,92],[[43,[[87,[86]]]]],29,[29,98]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[[[94,[-1,-2]],24],108,109,[109,98]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,110,[]],[[],22],[[],22],[[[94,[-1,-2]]],[],29,[29,98]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[[107,[-1]],-2],[],[29,98],29],[[-1,20,95],[[43,[[87,[86,34]]]]],[]],[[[94,[-1,-2]],20,95],[[43,[[87,[86]]]]],29,[29,98]],[[[35,[-1]],22],[[97,[[107,[-1]]]]],[29,98]],[[-1,20,111],[[43,[[87,[86,34]]]]],[]],[[-1,20,99],[[43,[[87,[86,34]]]]],[]],[[[94,[-1,-2]],20,99],[[43,[[87,[86]]]]],29,[29,98]],0,0,0,[[[107,[-1]]],[[2,[18,18]]],[29,98]],[[-1,20,20,101],[[43,[[87,[86,34]]]]],[]],[[-1,20,103],[[43,[[87,[86,34]]]]],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[94,[-1,-2]],20,105],[[43,[[87,[86]]]]],29,[29,98]],[[-1,20,105],[[43,[[87,[86,34]]]]],[]],0,0,0,0,[[[112,[-1]],26],2,[29,98]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,23],[113,113],[[[112,[-1]]],[[112,[-1]]],[98,98]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[112,[-1]],20],23,[29,98]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[[113,113],23],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],0,[[113,24],108],[[[112,[-1]],24],108,[109,98]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[[112,[-1]],26],2,[29,98]],0,[[[35,[-1]],22],[[112,[-1]]],[29,98]],[[[112,[-1]],-2,20,99],[[97,[[2,[100,[87,[114]]]]]]],[29,98],29],[[20,99],26],[[[112,[-1]],-2,20,20,99],[[97,[113]]],[29,98],29],[[[112,[-1]]],[[97,[[2,[18,18]]]]],[29,98]],[113,115],[[[112,[-1]]],[[2,[18,18]]],[29,98]],[[[2,[100,-1]]],[[2,[100,116]]],114],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[117,20,9],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[117,9],0,[22,-1,[]],[22,-1,[]],[22,2],[[117,20],[[49,[9]]]],[[117,24],108],[-1,-1,[]],[[],22],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[[20,9],117],0,0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[22,-1,[]],[118,119],[120,121],[22,-1,[]],[22,-1,[]],[122,119],[22,-1,[]],[123,124],[125,124],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[22,2],[22,2],[22,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[126,20],126],[[127,20],127],[[128,20],128],0,0,0,[[127,20],127],0,[[129,20],129],[[130,20],130],0,0,[[129,20],129],[[130,20],130],0,0,[128,128],0,[[131,20],131],0,[[129,22],129],[[127,22],127],[[128,22],128],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[132,20],132],[[133,20],133],[[126,20],126],[[127,20],127],[[128,20],128],0,0,0,0,0,[129,[[4,[3]]]],[130,[[4,[3]]]],[132,[[4,[3]]]],[131,[[4,[3]]]],[133,[[4,[3]]]],[134,[[4,[3]]]],[135,[[4,[3]]]],[136,[[4,[3]]]],[137,[[4,[3]]]],[126,[[4,[3]]]],[127,[[4,[3]]]],[128,[[4,[3]]]],[138,[[4,[3]]]],[139,[[4,[3]]]],[129,129],[130,130],[132,132],[126,126],[139,139],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[129,20],129],0,[[133,20],133],0,[[133,20],133],0,[[128,[87,[140,34]]],128],0,[[133,[87,[141,34]]],133],0,[[],129],[[],130],[[],132],[[],131],[[],133],[[],134],[[],135],[[],136],[[],137],[[],126],[[],127],[[],128],[[],138],[[],139],[[133,20],133],[[128,20],128],0,0,[[139,20],139],0,[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[20,20],[[49,[26]]]],[132,132],[128,128],0,0,[128,128],0,[139,139],0,[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[22,2],[134,134],0,[128,128],0,[131,131],0,[128,128],0,[[129,20],129],0,[[129,20],129],0,[[129,20],129],0,[[129,20],129],[[130,20],130],[[132,20],132],[[133,20],133],[[135,20],135],[[136,20],136],[[126,20],126],[[127,20],127],[[128,20],128],[[138,20],138],[[139,20],139],0,0,0,0,0,0,0,0,0,0,0,[[128,20],128],0,[[130,20],130],0,[[129,24],[[4,[2,25]]]],[[130,24],[[4,[2,25]]]],[[132,24],[[4,[2,25]]]],[[131,24],[[4,[2,25]]]],[[133,24],[[4,[2,25]]]],[[134,24],[[4,[2,25]]]],[[135,24],[[4,[2,25]]]],[[136,24],[[4,[2,25]]]],[[126,24],[[4,[2,25]]]],[[127,24],[[4,[2,25]]]],[[128,24],[[4,[2,25]]]],[[138,24],[[4,[2,25]]]],[[139,24],[[4,[2,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[20,[[4,[129,3]]]],[[[28,[26,26,27]]],129],[[[28,[26,26,27]]],130],[[[28,[26,26,27]]],132],[[[28,[26,26,27]]],131],[[[28,[26,26,27]]],133],[[[28,[26,26,27]]],134],[[[28,[26,26,27]]],135],[[[28,[26,26,27]]],136],[[[28,[26,26,27]]],137],[[[28,[26,26,27]]],126],[[[28,[26,26,27]]],127],[[[28,[26,26,27]]],128],[[[28,[26,26,27]]],138],[[[28,[26,26,27]]],139],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[129,12],129],[[130,12],130],[[132,12],132],[[133,12],133],[[134,12],134],[[135,12],135],[[136,12],136],[[126,12],126],[[127,12],127],[[128,12],128],[[138,12],138],0,0,0,0,0,0,0,0,0,0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[135,20],135],[[138,20],138],0,0,[[133,20],133],0,[[127,20],127],0,[[128,20],128],0,[[128,20],128],0,[[129,20],129],[[130,20],130],[[132,20],132],[[131,20],131],[[133,20],133],[[134,20],134],[[135,20],135],[[136,20],136],[[137,20],137],[[126,20],126],[[127,20],127],[[128,20],128],[[138,20],138],[[139,20],139],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[129,20],129],0,[[133,20],133],0,[[126,20],126],[[128,20],128],0,0,[[132,20],132],0,[[132,20],132],0,[[128,20],128],0,[[127,20],127],[[128,20],128],0,0,[[128,20],128],0,[[128,20],128],0,[[128,20],128],0,[[128,20],128],0,[[127,20],127],0,[128,128],[[129,[51,[50]]],129],[[128,20,[51,[50]]],128],[[128,20],128],[128,128],[[133,20],133],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[135,20],135],[[138,20],138],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[-1,68,[]],[[135,20],135],[[138,20],138],0,0,[[134,20],134],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[127,22],127],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,2],[22,2],[[142,24],108],[-1,-1,[]],[-1,-1,[]],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[9,20],143],0,0,[143,[[97,[2]]]],0,[[],[[49,[142]]]],0,0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,68,[]],[-1,68,[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,[[4,[[37,[15]],3]]]],[[20,20],26],[[20,20],26],[20,26]],"c":[],"p":[[3,"Writer",0],[15,"tuple"],[3,"Error",0],[4,"Result",1406],[8,"Error",1407],[4,"Metakey",0],[3,"FlagSet",1408],[8,"Into",1409],[3,"ObjectStore",0],[3,"BlockingOperator",1410],[3,"ClientBuilder",1411],[3,"HttpClient",0],[3,"Client",1411],[4,"EntryMode",0],[3,"Entry",0],[4,"ErrorKind",0],[3,"Compat",1412],[15,"u64"],[8,"AsyncRead",1413],[15,"str"],[3,"FutureDelete",1414],[15,"usize"],[15,"bool"],[3,"Formatter",1415],[3,"Error",1415],[3,"String",1416],[3,"RandomState",1417],[3,"HashMap",1417],[8,"Accessor",1418],[3,"OperatorBuilder",1419],[3,"OperatorInfo",1420],[3,"Metadata",1421],[3,"Request",1422],[3,"Global",1423],[3,"Arc",1424],[8,"Layer",1425],[3,"Vec",1426],[3,"FutureList",1414],[3,"Lister",1427],[3,"FutureLister",1414],[8,"FnOnce",1428],[8,"ObjectStoreBuilder",0],[3,"Pin",1429],[3,"Context",1430],[3,"Error",1431],[4,"Poll",1432],[3,"Reader",0],[3,"Bytes",1433],[4,"Option",1434],[15,"u8"],[15,"slice"],[3,"ReadBuf",1435],[4,"SeekFrom",1436],[3,"Duration",1437],[3,"PresignedRequest",1438],[3,"FuturePresignRead",1414],[3,"FuturePresignWrite",1414],[3,"FutureRead",1414],[3,"FutureReader",1414],[8,"Stream",1439],[8,"Unpin",1440],[4,"AsyncBody",1441],[3,"Request",1442],[3,"IncomingAsyncBody",1441],[3,"Response",1443],[3,"Error",1444],[3,"FutureStat",1414],[3,"TypeId",1445],[4,"Scheme",1446],[3,"FutureWrite",1414],[3,"FutureWriter",1414],[3,"RetryLayer",353],[3,"ConcurrentLimitLayer",353],[3,"ImmutableIndexLayer",353],[3,"LoggingLayer",353],[3,"TimeoutLayer",353],[3,"BlockingLayer",353],[3,"PrometheusLayer",353],[3,"DefaultRetryInterceptor",1447],[8,"IntoIterator",1448],[8,"RetryInterceptor",353],[3,"TracingLayer",353],[15,"f32"],[3,"Registry",1449],[3,"OpBatch",1450],[8,"Future",1451],[3,"Box",1452],[3,"OpCopy",1450],[3,"RpCopy",1438],[3,"OpCreateDir",1450],[3,"RpCreateDir",1438],[3,"OpDelete",1450],[3,"RpDelete",1438],[3,"LruCacheAccessor",571],[3,"OpList",1450],[3,"RpList",1438],[6,"Result",0],[8,"Clone",1453],[3,"OpRead",1450],[3,"RpRead",1438],[3,"OpRename",1450],[3,"RpRename",1438],[3,"OpStat",1450],[3,"RpStat",1438],[3,"OpWrite",1450],[3,"RpWrite",1438],[3,"LruCacheLayer",571],[6,"Result",1415],[8,"Debug",1415],[3,"AccessorInfo",1418],[3,"OpPresign",1450],[3,"ReadCache",645],[4,"ReadResult",645],[8,"Read",1454],[15,"u32"],[6,"Reader",1454],[3,"ObjectStoreManager",710],[3,"OBJECT_STORE_LRU_CACHE_HIT",738],[6,"IntCounterVec",1455],[3,"OBJECT_STORE_LRU_CACHE_MISS",738],[6,"IntCounter",1455],[3,"OBJECT_STORE_READ_ERROR",738],[3,"OBJECT_STORE_LRU_CACHE_ENTRIES",738],[6,"IntGauge",1456],[3,"OBJECT_STORE_LRU_CACHE_BYTES",738],[3,"Obs",833],[3,"Oss",833],[3,"S3",833],[3,"Azblob",833],[3,"Azdls",833],[3,"Fs",833],[3,"Cos",833],[3,"Gcs",833],[3,"Ghac",833],[3,"Http",833],[3,"Ipmfs",833],[3,"Memory",833],[3,"Webdav",833],[3,"Webhdfs",833],[8,"CredentialLoad",1457],[8,"TokenLoad",1458],[3,"TestS3Config",1357],[3,"TempFolder",1357],[6,"ObjectStoreManagerRef",710]],"b":[[164,"impl-Debug-for-Error"],[165,"impl-Display-for-Error"],[166,"impl-Debug-for-EntryMode"],[167,"impl-Display-for-EntryMode"],[171,"impl-Display-for-ErrorKind"],[172,"impl-Debug-for-ErrorKind"],[254,"impl-AsyncWrite-for-Writer"],[255,"impl-AsyncWrite-for-Writer"],[256,"impl-Read-for-Reader"],[257,"impl-Stream-for-Reader"],[258,"impl-Read-for-Reader"],[259,"impl-AsyncRead-for-Reader"],[260,"impl-AsyncRead-for-Reader"],[261,"impl-AsyncSeek-for-Reader"],[262,"impl-Read-for-Reader"],[264,"impl-AsyncWrite-for-Writer"],[265,"impl-AsyncWrite-for-Writer"]]},\
"operator":{"doc":"","t":"AAAAAAAAADGMLLLMLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLFLNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNNDNDNDDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLFFFLLLFLLFLLLFFLLLLLLLLLLLLLFLLLLLLLLDGMLLLLFMLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLFFFLDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLAAAFFAFFFDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDDDMAMMMAMADLLLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLDDDDMMAMMMMMAFAMADLLLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLLMLLLLLLLLLRDLLLMFLLLLMLLLLLLLLLLLLLLLMFLFLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLDLLLLALLLLMLMLLLLLLALALLLLLLAMLLALALLLLLLFLLLLFLLLMLLLLLLLLMLLMLALLLLLMFFLLLALLLLLLLLRRRFFFRDMLLLLLLFLLLLFFLLLLLLLLFLFLLLLLLLLFLFDLLLLLLLMLLLLLLLMLLLLLLLLLFLLLLLLL","n":["delete","error","expr_factory","insert","metrics","region_req_factory","req_convert","statement","table","Deleter","DeleterRef","alloc","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","datanode_manager","deref","deref_mut","do_request","drop","from","from_subset","get_table","group_requests_by_peer","handle_column_deletes","handle_row_deletes","handle_table_delete","init","into","into_request","into_request","is_in_subset","key_column_names","lift_into","new","or","partition_manager","phantom","ptr","sculpt","subset","to_subset","to_subset_unchecked","trim_columns","try_from","try_into","try_into","type_id","validate_column_count_match","vzip","AlterExprToRequest","AlterExprToRequestSnafu","BuildBackend","BuildBackendSnafu","BuildColumnVectors","BuildColumnVectorsSnafu","BuildCreateExprOnInsertion","BuildCreateExprOnInsertionSnafu","BuildCsvConfig","BuildCsvConfigSnafu","BuildDfLogicalPlan","BuildDfLogicalPlanSnafu","BuildFileStream","BuildFileStreamSnafu","BuildParquetRecordBatchStream","BuildParquetRecordBatchStreamSnafu","BuildRegex","BuildRegexSnafu","BuildTableMeta","BuildTableMetaSnafu","Catalog","CatalogSnafu","ColumnDataType","ColumnDataTypeSnafu","ColumnDefaultValue","ColumnDefaultValueSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ConvertColumnDefaultConstraint","ConvertColumnDefaultConstraintSnafu","ConvertSqlValue","ConvertSqlValueSnafu","CopyTable","CopyTableSnafu","CreateTableInfo","CreateTableInfoSnafu","DescribeStatement","DescribeStatementSnafu","DeserializePartition","DeserializePartitionSnafu","EncodeJson","EncodeJsonSnafu","Err","Error","ExecLogicalPlan","ExecLogicalPlanSnafu","ExecuteDdl","ExecuteDdlSnafu","ExecuteStatement","ExecuteStatementSnafu","External","ExternalSnafu","FindNewColumnsOnInsertion","FindNewColumnsOnInsertionSnafu","FindRegionLeader","FindRegionLeaderSnafu","FindTablePartitionRule","FindTablePartitionRuleSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","InferFileTableSchema","InferFileTableSchemaSnafu","InferSchema","InferSchemaSnafu","Insert","InsertSnafu","IntoVectors","IntoVectorsSnafu","InvalidColumnDef","InvalidColumnDefSnafu","InvalidCopyParameter","InvalidCopyParameterSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidPartitionColumns","InvalidPartitionColumnsSnafu","InvalidSchema","InvalidSchemaSnafu","InvalidSql","InvalidSqlSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","JoinTask","JoinTaskSnafu","ListObjects","ListObjectsSnafu","MissingInsertBody","MissingInsertBodySnafu","MissingTimeIndexColumn","MissingTimeIndexColumnSnafu","NotSupported","NotSupportedSnafu","Ok","ParseFileFormat","ParseFileFormatSnafu","ParseQuery","ParseQuerySnafu","ParseSql","ParseSqlSnafu","ParseUrl","ParseUrlSnafu","PlanStatement","PlanStatementSnafu","PrepareFileTable","PrepareFileTableSnafu","PrepareImmutableTable","PrepareImmutableTableSnafu","ProjectSchema","ProjectSchemaSnafu","ReadDfRecordBatch","ReadDfRecordBatchSnafu","ReadObject","ReadObjectSnafu","ReadOrc","ReadOrcSnafu","ReadParquet","ReadParquetSnafu","ReadRecordBatch","ReadRecordBatchSnafu","RequestDeletes","RequestDeletesSnafu","RequestInserts","RequestInsertsSnafu","Result","SchemaExists","SchemaExistsSnafu","SchemaIncompatible","SchemaIncompatibleSnafu","SchemaNotFound","SchemaNotFoundSnafu","SplitDelete","SplitDeleteSnafu","SplitInsert","SplitInsertSnafu","Table","TableAlreadyExists","TableAlreadyExistsSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableSnafu","Unexpected","UnexpectedSnafu","UnrecognizedTableOption","UnrecognizedTableOptionSnafu","UnsupportedFormat","UnsupportedFormatSnafu","WriteStreamToFile","WriteStreamToFileSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","file_schema","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","path","path","path","reason","reason","reason","schema_info","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table","table","table_name","table_name","table_name","table_name","table_name","table_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","column","column_name","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","feat","file_schema","format","index","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","path","path","path","reason","reason","reason","schema_info","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table_name","table_name","table_name","table_name","table_name","table_schema","value","value","violated","CreateExprFactory","__clone_box","and","borrow","borrow_mut","clone","clone_into","column_schemas_to_defs","columns_to_column_schemas","columns_to_expr","compat","compat_mut","compat_ref","create_external_expr","create_table_expr_by_column_schemas","create_table_expr_by_columns","create_to_expr","deref","deref_mut","drop","find_primary_keys","find_time_index","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","to_alter_expr","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Inserter","InserterRef","alloc","alter_table_on_demand","and","borrow","borrow_mut","build_create_table_expr","catalog_manager","compat","compat_mut","compat_ref","create_or_alter_tables_on_demand","create_table","datanode_manager","deref","deref_mut","do_request","drop","from","from_subset","get_table","group_requests_by_peer","handle_column_inserts","handle_row_inserts","handle_statement_insert","handle_table_insert","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","phantom","ptr","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate_column_count_match","validate_request_with_table","validate_required_columns","vzip","DIST_CREATE_TABLE","DIST_DELETE_ROW_COUNT","DIST_INGEST_ROW_COUNT","__private_field","__private_field","__private_field","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RegionRequestFactory","and","borrow","borrow_mut","build_delete","build_insert","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","header","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","common","delete","insert","column_schema","columns_to_rows","partitioner","push_column_to_rows","row_count","semantic_type","Partitioner","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_delete_requests","partition_insert_requests","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ColumnToRow","RowToRegion","TableToRegion","catalog_manager","column_to_row","ctx","partition_manager","partition_manager","row_to_region","table_info","table_to_region","ColumnToRow","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","request_column_to_row","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RowToRegion","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_table","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","TableToRegion","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","table_info","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ColumnToRow","RowToRegion","StatementToRegion","TableToRegion","catalog_manager","catalog_manager","column_to_row","ctx","ctx","partition_manager","partition_manager","partition_manager","row_to_region","semantic_type","stmt_to_region","table_info","table_to_region","ColumnToRow","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","request_column_to_row","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RowToRegion","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_table","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_PLACEHOLDER_VALUE","StatementToRegion","and","borrow","borrow_mut","catalog_manager","column_names","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_full_name","get_table","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","replace_default","sculpt","sql_value_to_grpc_value","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","TableToRegion","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","table_info","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","StatementExecutor","__clone_box","alter_table","alter_table_inner","and","backup","borrow","borrow_mut","build_file_stream","build_read_stream","cache_invalidator","catalog_manager","catalog_manager","clone","clone_into","compat","compat_mut","compat_ref","copy_database","copy_table_from","copy_table_from","copy_table_to","copy_table_to","create_database","create_external_table","create_table","create_table_inner","create_table_procedure","ddl","ddl_executor","deref","deref_mut","describe","describe_table","dml","drop","drop_table","drop_table_procedure","execute_sql","execute_stmt","execute_tql","extract_timestamp","from","from_ref","from_subset","get_table","idents_to_full_database_name","infer_schema","init","insert","inserter","into","into_request","into_request","is_in_subset","lift_into","list_copy_from_entries","new","or","partition_manager","plan","plan_exec","query_engine","sculpt","show","show_create_table","show_databases","show_tables","stream_to_file","subset","table_metadata_manager","to_copy_database_request","to_copy_table_request","to_owned","to_subset","to_subset_unchecked","tql","truncate_table","truncate_table_procedure","try_from","try_into","try_into","type_id","verify_alter","vzip","COPY_DATABASE_TIME_END_KEY","COPY_DATABASE_TIME_START_KEY","DEFAULT_BATCH_SIZE","batch_insert","ensure_schema_compatible","generated_schema_projection_and_compatible_file_schema","WRITE_BUFFER_THRESHOLD","NAME_PATTERN_REG","__private_field","and","borrow","borrow_mut","compat","compat_mut","compat_ref","create_table_info","deref","deref","deref_mut","drop","find_partition_columns","find_partition_entries","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","merge_options","or","parse_partitions","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate_partition_columns","vzip","create_partitions_stmt","TableMutationOperator","and","borrow","borrow_mut","compat","compat_mut","compat_ref","delete","deleter","deref","deref_mut","drop","from","from_subset","init","insert","inserter","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","subset","table_idents_to_full_name","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"operator"],[9,"operator::delete"],[54,"operator::error"],[2860,"operator::error::Error"],[3023,"operator::expr_factory"],[3067,"operator::insert"],[3117,"operator::metrics"],[3207,"operator::region_req_factory"],[3239,"operator::req_convert"],[3242,"operator::req_convert::common"],[3248,"operator::req_convert::common::partitioner"],[3280,"operator::req_convert::delete"],[3291,"operator::req_convert::delete::column_to_row"],[3321,"operator::req_convert::delete::row_to_region"],[3355,"operator::req_convert::delete::table_to_region"],[3387,"operator::req_convert::insert"],[3404,"operator::req_convert::insert::column_to_row"],[3434,"operator::req_convert::insert::row_to_region"],[3468,"operator::req_convert::insert::stmt_to_region"],[3507,"operator::req_convert::insert::table_to_region"],[3539,"operator::statement"],[3624,"operator::statement::backup"],[3626,"operator::statement::copy_table_from"],[3630,"operator::statement::copy_table_to"],[3631,"operator::statement::ddl"],[3667,"operator::statement::show"],[3668,"operator::table"],[3702,"tower_http::follow_redirect::policy::and"],[3703,"tower_http::follow_redirect::policy"],[3704,"async_compat"],[3705,"greptime_proto::v1::region"],[3706,"session::context"],[3707,"common_meta::datanode_manager"],[3708,"table::table"],[3709,"common_meta::peer"],[3710,"std::collections::hash::map"],[3711,"greptime_proto::v1"],[3712,"common_query"],[3713,"greptime_proto::v1"],[3714,"tonic::request"],[3715,"tonic::request"],[3716,"std::collections::hash::set"],[3717,"catalog"],[3718,"partition::manager"],[3719,"common_meta::datanode_manager"],[3720,"frunk_core::hlist"],[3721,"frunk_core::coproduct"],[3722,"core::result"],[3723,"core::option"],[3724,"core::any"],[3725,"dyn_clone::sealed"],[3726,"core::any"],[3727,"snafu::backtrace_inert"],[3728,"core::convert"],[3729,"common_datasource::file_format"],[3730,"core::clone"],[3731,"alloc::vec"],[3732,"core::fmt"],[3733,"core::fmt"],[3734,"common_error::ext"],[3735,"common_error::status_code"],[3736,"datatypes::schema::column_schema"],[3737,"greptime_proto::v1"],[3738,"sql::statements::create"],[3739,"greptime_proto::v1"],[3740,"greptime_proto::v1"],[3741,"greptime_proto::v1"],[3742,"table::requests"],[3743,"prometheus::histogram"],[3744,"prometheus::counter"],[3745,"greptime_proto::v1::region"],[3746,"datatypes::vectors"],[3747,"greptime_proto::v1"],[3748,"greptime_proto::v1::region"],[3749,"sqlparser::ast::value"],[3750,"greptime_proto::v1"],[3751,"datafusion_execution::stream"],[3752,"datafusion::datasource::physical_plan::file_stream"],[3753,"core::marker"],[3754,"opendal::types::operator::operator"],[3755,"table::requests"],[3756,"table::metadata"],[3757,"sql::statements::describe"],[3758,"common_meta::table_name"],[3759,"table::metadata"],[3760,"query::parser"],[3761,"sql::statements::tql"],[3762,"sql::statements::option_map"],[3763,"common_time::timestamp"],[3764,"alloc::boxed"],[3765,"opendal::types::entry"],[3766,"query::query_engine"],[3767,"common_meta::ddl"],[3768,"common_meta::kv_backend"],[3769,"common_meta::cache_invalidator"],[3770,"query::plan"],[3771,"sql::statements::show"],[3772,"sql::statements::show"],[3773,"sql::statements::copy"],[3774,"sql::statements::copy"],[3775,"core::future::future"],[3776,"arrow_schema::schema"],[3777,"regex::regex::string"],[3778,"partition::partition"],[3779,"table::requests"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AlterExprToRequest</code> …","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildColumnVectors</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::BuildCsvConfig</code> …","","SNAFU context selector for the <code>Error::BuildDfLogicalPlan</code> …","","SNAFU context selector for the <code>Error::BuildFileStream</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::BuildRegex</code> variant","","SNAFU context selector for the <code>Error::BuildTableMeta</code> …","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ColumnDefaultValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::CopyTable</code> variant","","SNAFU context selector for the <code>Error::CreateTableInfo</code> …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","","SNAFU context selector for the <code>Error::DeserializePartition</code> …","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::ExecLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteDdl</code> variant","","SNAFU context selector for the <code>Error::ExecuteStatement</code> …","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::FindRegionLeader</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the <code>Error::InferFileTableSchema</code> …","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::IntoVectors</code> variant","","SNAFU context selector for the <code>Error::InvalidColumnDef</code> …","","SNAFU context selector for the <code>Error::InvalidCopyParameter</code> …","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidSchema</code> variant","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MissingInsertBody</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ParseQuery</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::ParseUrl</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the <code>Error::PrepareFileTable</code> …","","SNAFU context selector for the <code>Error::PrepareImmutableTable</code>…","","SNAFU context selector for the <code>Error::ProjectSchema</code> variant","","SNAFU context selector for the <code>Error::ReadDfRecordBatch</code> …","","SNAFU context selector for the <code>Error::ReadObject</code> variant","","SNAFU context selector for the <code>Error::ReadOrc</code> variant","","SNAFU context selector for the <code>Error::ReadParquet</code> variant","","SNAFU context selector for the <code>Error::ReadRecordBatch</code> …","","SNAFU context selector for the <code>Error::RequestDeletes</code> …","","SNAFU context selector for the <code>Error::RequestInserts</code> …","","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaIncompatible</code> …","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::SplitDelete</code> variant","","SNAFU context selector for the <code>Error::SplitInsert</code> variant","","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","SNAFU context selector for the <code>Error::Table</code> variant","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::WriteStreamToFile</code> …onsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert <code>CreateTable</code> statement to <code>CreateExpr</code> gRPC request.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts timestamp from a [HashMap&lt;String, String&gt;] with …","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Converts CopyDatabaseArgument to CopyDatabaseRequest. This …","","","","","","","","","","","","","","","","","Executes all pending inserts all at once, drain pending …","","Allows the file schema is a subset of table","Buffer size to flush data to object stores.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Converts maybe fully-qualified table name (…","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,222,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,222,222,5,5,5,5,5,5,5,5,5,0,5,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,9,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,9,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,34,0,0,34,0,34,0,34,0,34,0,34,0,34,34,0,34,0,34,0,0,34,0,34,0,34,0,34,0,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,34,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,65,112,54,66,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,41,38,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,48,52,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,34,50,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,52,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,38,38,57,57,58,58,40,40,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,41,41,42,42,43,43,44,44,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,45,45,46,46,75,75,47,47,76,76,77,77,78,78,79,79,80,80,81,81,82,82,48,48,83,83,84,84,85,85,86,86,49,49,87,87,88,88,89,89,90,90,91,91,92,92,50,50,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,52,52,105,105,106,106,107,107,53,53,108,108,109,109,110,110,111,111,112,112,54,54,55,55,113,113,114,114,115,115,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,53,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,47,49,46,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,96,98,99,42,43,55,45,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,55,44,69,82,90,91,52,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,38,38,57,57,58,58,40,40,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,41,41,42,42,43,43,44,44,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,45,45,46,46,75,75,47,47,76,76,77,77,78,78,79,79,80,80,81,81,82,82,48,48,83,83,84,84,85,85,86,86,49,49,87,87,88,88,89,89,90,90,91,91,92,92,50,50,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,52,52,105,105,106,106,107,107,53,53,108,108,109,109,110,110,111,111,112,112,54,54,55,55,113,113,114,114,115,115,34,34,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,63,53,40,38,57,58,40,59,60,61,62,63,64,65,66,41,42,43,44,67,68,69,70,71,72,73,74,45,46,75,47,76,77,78,79,80,81,82,48,83,84,85,86,49,87,88,89,90,91,92,50,93,94,95,96,97,98,99,100,101,102,103,104,52,105,106,107,53,108,109,110,111,112,54,55,113,114,115,34,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,241,243,244,245,246,247,248,249,250,251,252,253,223,226,227,254,255,228,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,229,271,230,272,273,274,275,276,277,278,231,279,280,281,242,282,283,284,285,232,286,233,234,235,287,236,237,241,238,239,288,243,289,290,291,292,224,225,293,294,295,296,266,276,264,285,286,233,254,255,293,263,245,246,248,249,250,251,252,253,223,226,256,257,258,259,260,261,262,265,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,224,294,295,296,244,293,297,257,230,279,280,241,252,243,247,0,123,123,123,123,123,123,0,0,0,123,123,123,0,123,123,0,123,123,123,0,0,123,123,123,123,123,123,123,123,123,123,123,123,123,0,123,123,123,123,123,123,123,123,0,0,204,137,137,137,137,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,204,204,137,137,137,137,137,137,137,137,0,0,0,137,0,0,0,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,146,148,148,150,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,146,148,148,150,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,148,150,146,146,148,148,150,150,146,148,150,146,148,150,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,0,0,0,0,0,0,0,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,0,167,0,167,167,170,0,170,0,0,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,0,298,298,298,298,298,298,298,298,298,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,172,174,0,172,174,172,174,178,0,0,0,178,0,0,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,0,299,299,299,299,299,299,299,299,299,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,0,174,174,174,174,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,174,0,174,174,174,174,174,174,174,174,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,139,139,139,139,0,139,139,139,139,139,139,139,139,139,139,139,139,139,0,139,0,139,139,139,139,139,139,0,139,139,139,0,139,0,139,139,139,139,139,139,0,139,139,139,139,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,139,139,139,139,139,139,0,0,139,139,139,0,139,139,139,139,139,139,139,139,0,0,0,0,0,0,0,0,215,215,215,215,215,215,215,0,215,215,215,215,0,0,215,215,215,215,215,215,215,215,0,215,0,215,215,215,215,215,215,215,215,0,215,0,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,220,220,220,220,220,220,220],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[4,-1,[]],[4,-1,[]],[[5,6,7],[[9,[8]]]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[5,11,11,11],[[9,[12]]]],[[5,6],[[9,[[14,[13,6]]]]]],[[5,15,7],[[9,[16]]]],[[5,17,7],[[9,[16]]]],[[5,18,7],[[9,[4]]]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[[5,12],[[9,[[23,[22]]]]]],[-1,-2,[],[]],[[24,25,26],5],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[[5,17,7],[[9,[17]]]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[17,[[9,[10]]]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,33],10,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[34,35],[-1,36,[]],[34,[[31,[37]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],34,[[39,[22]]]],[[[40,[-1]]],34,[[39,[22]]]],[[[41,[-1]]],34,[[39,[22]]]],[[[42,[-1]]],34,[[39,[22]]]],[[[43,[-1]]],34,[[39,[22]]]],[[[44,[-1]]],34,[[39,[22]]]],[[[45,[-1]]],34,[[39,[22]]]],[[[46,[-1]]],34,[[39,[22]]]],[[[47,[-1]]],34,[[39,[22]]]],[[[48,[-1]]],34,[[39,[22]]]],[[[49,[-1]]],34,[[39,[22]]]],[[[50,[-1]]],34,[[39,[51]]]],[[[52,[-1,-2,-3]]],34,[[39,[4]]],[[39,[22]]],[[39,[22]]]],[[[53,[-1,-2]]],34,[[39,[22]]],[[39,[22]]]],[[[54,[-1]]],34,[[39,[22]]]],[[[55,[-1,-2]]],34,[[39,[22]]],[[39,[22]]]],[34,[[31,[36]]]],[[[38,[-1]]],[[38,[-1]]],56],[57,57],[58,58],[[[40,[-1]]],[[40,[-1]]],56],[59,59],[60,60],[61,61],[62,62],[[[63,[-1]]],[[63,[-1]]],56],[64,64],[[[65,[-1]]],[[65,[-1]]],56],[[[66,[-1]]],[[66,[-1]]],56],[[[41,[-1]]],[[41,[-1]]],56],[[[42,[-1]]],[[42,[-1]]],56],[[[43,[-1]]],[[43,[-1]]],56],[[[44,[-1]]],[[44,[-1]]],56],[67,67],[68,68],[[[69,[-1]]],[[69,[-1]]],56],[70,70],[71,71],[72,72],[73,73],[74,74],[[[45,[-1]]],[[45,[-1]]],56],[[[46,[-1]]],[[46,[-1]]],56],[75,75],[[[47,[-1]]],[[47,[-1]]],56],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[[[82,[-1]]],[[82,[-1]]],56],[[[48,[-1]]],[[48,[-1]]],56],[83,83],[84,84],[85,85],[86,86],[[[49,[-1]]],[[49,[-1]]],56],[87,87],[88,88],[89,89],[[[90,[-1]]],[[90,[-1]]],56],[[[91,[-1]]],[[91,[-1]]],56],[92,92],[[[50,[-1]]],[[50,[-1]]],56],[93,93],[94,94],[95,95],[[[96,[-1]]],[[96,[-1]]],56],[97,97],[[[98,[-1]]],[[98,[-1]]],56],[[[99,[-1]]],[[99,[-1]]],56],[100,100],[101,101],[102,102],[103,103],[104,104],[[[52,[-1,-2,-3]]],[[52,[-1,-2,-3]]],56,56,56],[105,105],[106,106],[107,107],[[[53,[-1,-2]]],[[53,[-1,-2]]],56,56],[108,108],[109,109],[110,110],[111,111],[[[112,[-1]]],[[112,[-1]]],56],[[[54,[-1]]],[[54,[-1]]],56],[[[55,[-1,-2]]],[[55,[-1,-2]]],56,56],[113,113],[114,114],[115,115],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,0,0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[34,4,[116,[22]]],10],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[34,11],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],[4,10],0,[[[38,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[40,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[41,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[42,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[43,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[44,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[45,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[46,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[47,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[48,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[49,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[50,[-1]]],[[30,[-2,34]]],[[39,[51]]],[]],[[[52,[-1,-2,-3]]],[[30,[-4,34]]],[[39,[4]]],[[39,[22]]],[[39,[22]]],[]],[[[53,[-1,-2]]],[[30,[-3,34]]],[[39,[22]]],[[39,[22]]],[]],[[[54,[-1]]],[[30,[-2,34]]],[[39,[22]]],[]],[[[55,[-1,-2]]],[[30,[-3,34]]],[[39,[22]]],[[39,[22]]],[]],0,0,[[[38,[-1]],117],118,119],[[57,117],118],[[58,117],118],[[[40,[-1]],117],118,119],[[59,117],118],[[60,117],118],[[61,117],118],[[62,117],118],[[[63,[-1]],117],118,119],[[64,117],118],[[[65,[-1]],117],118,119],[[[66,[-1]],117],118,119],[[[41,[-1]],117],118,119],[[[42,[-1]],117],118,119],[[[43,[-1]],117],118,119],[[[44,[-1]],117],118,119],[[67,117],118],[[68,117],118],[[[69,[-1]],117],118,119],[[70,117],118],[[71,117],118],[[72,117],118],[[73,117],118],[[74,117],118],[[[45,[-1]],117],118,119],[[[46,[-1]],117],118,119],[[75,117],118],[[[47,[-1]],117],118,119],[[76,117],118],[[77,117],118],[[78,117],118],[[79,117],118],[[80,117],118],[[81,117],118],[[[82,[-1]],117],118,119],[[[48,[-1]],117],118,119],[[83,117],118],[[84,117],118],[[85,117],118],[[86,117],118],[[[49,[-1]],117],118,119],[[87,117],118],[[88,117],118],[[89,117],118],[[[90,[-1]],117],118,119],[[[91,[-1]],117],118,119],[[92,117],118],[[[50,[-1]],117],118,119],[[93,117],118],[[94,117],118],[[95,117],118],[[[96,[-1]],117],118,119],[[97,117],118],[[[98,[-1]],117],118,119],[[[99,[-1]],117],118,119],[[100,117],118],[[101,117],118],[[102,117],118],[[103,117],118],[[104,117],118],[[[52,[-1,-2,-3]],117],118,119,119,119],[[105,117],118],[[106,117],118],[[107,117],118],[[[53,[-1,-2]],117],118,119,119],[[108,117],118],[[109,117],118],[[110,117],118],[[111,117],118],[[[112,[-1]],117],118,119],[[[54,[-1]],117],118,119],[[[55,[-1,-2]],117],118,119,119],[[113,117],118],[[114,117],118],[[115,117],118],[[34,117],118],[[34,117],118],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],34,[[39,[22]]]],[57,34],[58,34],[[[40,[-1]]],34,[[39,[22]]]],[59,34],[60,34],[61,34],[62,34],[[[63,[-1]]],34,[[39,[120]]]],[64,34],[[[65,[-1]]],34,[[39,[22]]]],[[[66,[-1]]],34,[[39,[22]]]],[[[41,[-1]]],34,[[39,[22]]]],[[[42,[-1]]],34,[[39,[22]]]],[[[43,[-1]]],34,[[39,[22]]]],[[[44,[-1]]],34,[[39,[22]]]],[67,34],[68,34],[[[69,[-1]]],34,[[39,[22]]]],[70,34],[71,34],[72,34],[73,34],[74,34],[[[45,[-1]]],34,[[39,[22]]]],[[[46,[-1]]],34,[[39,[22]]]],[75,34],[[[47,[-1]]],34,[[39,[22]]]],[76,34],[77,34],[78,34],[79,34],[80,34],[81,34],[[[82,[-1]]],34,[[39,[22]]]],[[[48,[-1]]],34,[[39,[22]]]],[83,34],[84,34],[85,34],[86,34],[[[49,[-1]]],34,[[39,[22]]]],[87,34],[88,34],[89,34],[[[90,[-1]]],34,[[39,[22]]]],[[[91,[-1]]],34,[[39,[22]]]],[92,34],[[[50,[-1]]],34,[[39,[51]]]],[93,34],[94,34],[95,34],[[[96,[-1]]],34,[[39,[22]]]],[97,34],[[[98,[-1]]],34,[[39,[22]]]],[[[99,[-1]]],34,[[39,[22]]]],[100,34],[101,34],[102,34],[103,34],[104,34],[[[52,[-1,-2,-3]]],34,[[39,[4]]],[[39,[22]]],[[39,[22]]]],[105,34],[106,34],[107,34],[[[53,[-1,-2]]],34,[[39,[22]]],[[39,[22]]]],[108,34],[109,34],[110,34],[111,34],[[[112,[-1]]],34,[[39,[22]]]],[[[54,[-1]]],34,[[39,[22]]]],[[[55,[-1,-2]]],34,[[39,[22]]],[[39,[22]]]],[113,34],[114,34],[115,34],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[34,[[31,[121]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,0,0,0,[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[34,[[31,[36]]]],[34,122],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,22,[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,33],10,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[123,123],[[-1,-2],10,[],[]],[[[116,[124]],[125,[22]]],[[9,[[116,[126]]]]]],[[[125,[127]],11],[[9,[[116,[124]]]]]],[[[125,[127]],11,[125,[22]]],[[9,[[116,[126]]]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[128,7],[[9,[129]]]],[[123,130,[125,[131]],11],[[9,[129]]]],[[123,130,[125,[132]],11],[[9,[129]]]],[[133,7],[[9,[129]]]],[4,-1,[]],[4,-1,[]],[4,10],[[[125,[127]],[125,[134]]],[[9,[[116,[22]]]]]],[[[125,[134]]],[[9,[22]]]],[[123,117],118],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[[135,7],[[9,[136]]]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,0,[[137,138,12,7,139],[[9,[10]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[130,[125,[131]]],[[9,[129]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[137,140,7,139],[[9,[10]]]],[[137,138,7,139],[[9,[10]]]],0,[4,-1,[]],[4,-1,[]],[[137,141,7],[[9,[8]]]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[137,11,11,11],[[9,[[31,[12]]]]]],[[137,141],[[9,[[14,[13,141]]]]]],[[137,142,7,139],[[9,[16]]]],[[137,140,7,139],[[9,[16]]]],[[137,143,7],[[9,[16]]]],[[137,144,7],[[9,[4]]]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[24,25,26],137],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[140,[[9,[10]]]],[[138,12],[[9,[10]]]],[[[125,[131]],145],[[9,[10]]]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[146,147],[4,-1,[]],[4,-1,[]],[148,149],[150,149],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,10],[4,10],[4,10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[151,6],152],[[151,141],152],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],0,[[],4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[153,151],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,0,[[154,[14,[22,155]]],[[9,[[116,[131]]]]]],[[[116,[132]],156],[[9,[157]]]],0,[[132,[125,[158]]],[[9,[10]]]],[[[14,[22,155]]],[[9,[4]]]],[[154,11],[[9,[159]]]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[160,161],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[161,162,157],[[9,[[116,[163]]]]]],[[161,162,157],[[9,[[116,[164]]]]]],0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[15,[[9,[17]]]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[165,[[9,[166]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[167,17],[[9,[6]]]],0,[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[167,11],[[9,[12]]]],[[],4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[168,160,169],167],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[170,18],[[9,[6]]]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[154,160],170],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],0,[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[154,11],[[9,[159]]]],0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[142,[[9,[140]]]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[171,[[9,[138]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[172,140],[[9,[141]]]],0,[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[172,11],[[9,[12]]]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[168,160,169],172],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[143,173],[[116,[22]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[174,143],[[9,[141]]]],0,[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[174,175],[[9,[[10,[22,22,22]]]]]],[[174,11,11,11],[[9,[12]]]],[[],4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[168,160,169],174],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[176,21],[-1,[[10,[28]]],[]],[[124,176],[[9,[177]]]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[178,144],[[9,[141]]]],[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[154,160],178],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],0,[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,[[-1,33],10,[]],[[139,135,7],[[9,[16]]]],[[139,136],[[9,[16]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[139,-1,11,179],[[9,[180]]],[181,182]],[[139,51,183,11,179,[116,[4]]],[[9,[180]]]],0,[139,24],0,[139,139],[[-1,-2],10,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[139,184],[[9,[16]]]],0,[[139,185,7],[[9,[4]]]],0,[[139,185,7],[[9,[4]]]],[[139,11,11,21],[[9,[16]]]],[[139,128,7],[[9,[12]]]],[[139,133,7],[[9,[12]]]],[[139,129,[31,[186]]],[[9,[12]]]],[[139,129,[116,[187]],188],[[9,[189]]]],0,0,[4,-1,[]],[4,-1,[]],0,[[139,190,7],[[9,[16]]]],0,[4,10],[[139,191],[[9,[16]]]],[[139,191,192],[[9,[189]]]],[[139,193,7],[[9,[16]]]],[[139,194,7],[[9,[16]]]],[[139,195,7],[[9,[16]]]],[[196,11],[[9,[[31,[197]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[139,130],[[9,[12]]]],[[175,7],[[9,[[10,[22,22]]]]]],[[139,51,183,11],[[9,[179]]]],[[],4],[[139,[198,[143]],7],[[9,[16]]]],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[139,185],[[9,[[10,[183,[116,[199]]]]]]]],[[24,200,201,202,203,204],139],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[[139,194,7],[[9,[205]]]],[[139,194,7],[[9,[16]]]],0,[-1,[[10,[28]]],[]],0,[[139,191,12,7],[[9,[16]]]],[[139,206,7],[[9,[16]]]],[[139,207,7],[[9,[16]]]],[[139,208,51,183,11],[[9,[4]]]],[-1,[[30,[29]]],[]],0,[[209,7],[[9,[184]]]],[[210,7],[[9,[185]]]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],0,[[139,191],[[9,[16]]]],[[139,191,192],[[9,[189]]]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[[139,192,[211,[154]],136],[[9,[10]]]],[-1,-2,[],[]],0,0,0,[[[116,[-1]],4],[[9,[4]]],212],[[179,179],[[9,[10]]]],[[179,179],[[10,[[116,[4]],[116,[4]],213]]]],0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[129,[116,[22]],214],[[9,[188]]]],[215,216],[4,-1,[]],[4,-1,[]],[4,10],[[[31,[186]]],[[9,[[116,[22]]]]]],[[129,[31,[186]],[125,[22]]],[[9,[[116,[[116,[217]]]]]]]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[218,214],218],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[129,[31,[186]]],[[9,[[10,[[116,[187]],[116,[22]]]]]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[[129,[125,[22]]],[[9,[10]]]],[-1,-2,[],[]],[[[116,[219]]],[[9,[[31,[186]]]]]],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[220,18,7],[[221,[[198,[212]]]]]],0,[4,-1,[]],[4,-1,[]],[4,10],[-1,-1,[]],[-1,-2,[],[]],[[],4],[[220,144,7],[[221,[[198,[212]]]]]],0,[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[204,222],220],[[-1,-4],[[27,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[10,[28]]],[]],[-1,[[30,[29]]],[]],[[175,7],[[9,[[10,[22,22,22]]]]]],[-1,[[31,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"And",3702],[8,"Policy",3703],[3,"Compat",3704],[15,"usize"],[3,"Deleter",9],[3,"DeleteRequests",3705],[6,"QueryContextRef",3706],[6,"AffectedRows",3707],[6,"Result",54],[15,"tuple"],[15,"str"],[6,"TableRef",3708],[3,"Peer",3709],[3,"HashMap",3710],[3,"DeleteRequests",3711],[4,"Output",3712],[3,"RowDeleteRequests",3711],[3,"DeleteRequest",3713],[3,"Request",3714],[3,"Request",3714],[15,"bool"],[3,"String",3715],[3,"HashSet",3716],[6,"CatalogManagerRef",3717],[6,"PartitionRuleManagerRef",3718],[6,"DatanodeManagerRef",3707],[3,"Or",3719],[3,"HNil",3720],[4,"CNil",3721],[4,"Result",3722],[4,"Option",3723],[3,"TypeId",3724],[3,"Private",3725],[4,"Error",54],[8,"Any",3724],[8,"Error",3726],[3,"Backtrace",3727],[3,"TableAlreadyExistsSnafu",54],[8,"Into",3728],[3,"UnexpectedSnafu",54],[3,"InvalidSqlSnafu",54],[3,"InvalidInsertRequestSnafu",54],[3,"InvalidDeleteRequestSnafu",54],[3,"TableNotFoundSnafu",54],[3,"SchemaNotFoundSnafu",54],[3,"SchemaExistsSnafu",54],[3,"ColumnNotFoundSnafu",54],[3,"NotSupportedSnafu",54],[3,"IllegalPrimaryKeysDefSnafu",54],[3,"UnsupportedFormatSnafu",54],[4,"Format",3729],[3,"InvalidSchemaSnafu",54],[3,"InvalidCopyParameterSnafu",54],[3,"ColumnNoneDefaultValueSnafu",54],[3,"InvalidPartitionColumnsSnafu",54],[8,"Clone",3730],[3,"InvalidateTableCacheSnafu",54],[3,"ExecuteDdlSnafu",54],[3,"ExternalSnafu",54],[3,"RequestInsertsSnafu",54],[3,"RequestDeletesSnafu",54],[3,"ParseSqlSnafu",54],[3,"ConvertSqlValueSnafu",54],[3,"ColumnDataTypeSnafu",54],[3,"InvalidColumnDefSnafu",54],[3,"ConvertColumnDefaultConstraintSnafu",54],[3,"JoinTaskSnafu",54],[3,"CatalogSnafu",54],[3,"FindTablePartitionRuleSnafu",54],[3,"SplitInsertSnafu",54],[3,"SplitDeleteSnafu",54],[3,"FindRegionLeaderSnafu",54],[3,"CreateTableInfoSnafu",54],[3,"BuildCreateExprOnInsertionSnafu",54],[3,"TableSnafu",54],[3,"ExecuteStatementSnafu",54],[3,"PlanStatementSnafu",54],[3,"ParseQuerySnafu",54],[3,"ExecLogicalPlanSnafu",54],[3,"BuildDfLogicalPlanSnafu",54],[3,"AlterExprToRequestSnafu",54],[3,"BuildTableMetaSnafu",54],[3,"FindNewColumnsOnInsertionSnafu",54],[3,"IntoVectorsSnafu",54],[3,"DeserializePartitionSnafu",54],[3,"DescribeStatementSnafu",54],[3,"UnrecognizedTableOptionSnafu",54],[3,"MissingTimeIndexColumnSnafu",54],[3,"BuildRegexSnafu",54],[3,"CopyTableSnafu",54],[3,"InsertSnafu",54],[3,"ParseUrlSnafu",54],[3,"ParseFileFormatSnafu",54],[3,"BuildBackendSnafu",54],[3,"ListObjectsSnafu",54],[3,"InferSchemaSnafu",54],[3,"BuildCsvConfigSnafu",54],[3,"WriteStreamToFileSnafu",54],[3,"ReadObjectSnafu",54],[3,"ReadDfRecordBatchSnafu",54],[3,"ReadParquetSnafu",54],[3,"ReadOrcSnafu",54],[3,"BuildParquetRecordBatchStreamSnafu",54],[3,"BuildFileStreamSnafu",54],[3,"ProjectSchemaSnafu",54],[3,"EncodeJsonSnafu",54],[3,"PrepareImmutableTableSnafu",54],[3,"TableMetadataManagerSnafu",54],[3,"ReadRecordBatchSnafu",54],[3,"BuildColumnVectorsSnafu",54],[3,"MissingInsertBodySnafu",54],[3,"ColumnDefaultValueSnafu",54],[3,"PrepareFileTableSnafu",54],[3,"InferFileTableSchemaSnafu",54],[3,"SchemaIncompatibleSnafu",54],[3,"Vec",3731],[3,"Formatter",3732],[6,"Result",3732],[8,"Debug",3732],[4,"Value",3733],[8,"StackError",3734],[4,"StatusCode",3735],[3,"CreateExprFactory",3023],[3,"ColumnSchema",3736],[15,"slice"],[3,"ColumnDef",3711],[3,"ColumnDef",3737],[3,"CreateExternalTable",3738],[3,"CreateTableExpr",3711],[3,"TableReference",3739],[3,"ColumnSchema",3711],[3,"Column",3711],[3,"CreateTable",3738],[4,"TableConstraint",3737],[3,"AlterTable",3740],[3,"AlterExpr",3711],[3,"Inserter",3067],[3,"RowInsertRequest",3711],[3,"StatementExecutor",3539],[3,"RowInsertRequests",3711],[3,"InsertRequests",3705],[3,"InsertRequests",3711],[3,"Insert",3741],[3,"InsertRequest",3713],[3,"Schema",3742],[3,"DIST_CREATE_TABLE",3117],[3,"Histogram",3743],[3,"DIST_INGEST_ROW_COUNT",3117],[6,"IntCounter",3744],[3,"DIST_DELETE_ROW_COUNT",3117],[3,"RegionRequestFactory",3207],[3,"RegionRequest",3705],[3,"RegionRequestHeader",3705],[3,"TableInfo",3745],[6,"VectorRef",3746],[15,"u32"],[3,"Rows",3711],[3,"Row",3711],[4,"SemanticType",3711],[3,"PartitionRuleManager",3718],[3,"Partitioner",3248],[6,"TableId",3747],[3,"DeleteRequest",3705],[3,"InsertRequest",3705],[3,"DeleteRequest",3711],[3,"RowDeleteRequest",3711],[3,"RowToRegion",3321],[8,"CatalogManager",3717],[3,"QueryContext",3706],[3,"TableToRegion",3355],[3,"InsertRequest",3711],[3,"RowToRegion",3434],[6,"SchemaRef",3742],[3,"StatementToRegion",3468],[3,"ObjectName",3748],[4,"Value",3749],[3,"Value",3711],[3,"TableToRegion",3507],[6,"SchemaRef",3750],[6,"SendableRecordBatchStream",3751],[8,"FileOpener",3752],[8,"Send",3753],[3,"Operator",3754],[3,"CopyDatabaseRequest",3713],[3,"CopyTableRequest",3713],[3,"Partitions",3738],[3,"Partition",3755],[3,"RawTableInfo",3745],[3,"SubmitDdlTaskResponse",3756],[3,"DescribeTable",3757],[3,"TableName",3758],[6,"TableId",3745],[4,"Statement",3759],[4,"QueryStatement",3760],[4,"Tql",3761],[3,"OptionMap",3762],[3,"Timestamp",3763],[3,"Box",3764],[3,"Entry",3765],[6,"QueryEngineRef",3766],[6,"DdlTaskExecutorRef",3767],[6,"KvBackendRef",3768],[6,"CacheInvalidatorRef",3769],[6,"InserterRef",3067],[4,"LogicalPlan",3770],[3,"ShowDatabases",3771],[3,"ShowTables",3771],[6,"SendableRecordBatchStream",3772],[3,"CopyDatabaseArgument",3773],[4,"CopyTable",3773],[3,"Arc",3774],[8,"Future",3775],[3,"Schema",3750],[3,"SchemaNameValue",3776],[3,"NAME_PATTERN_REG",3631],[3,"Regex",3777],[4,"PartitionBound",3778],[3,"TableOptions",3713],[3,"PartitionInfo",3718],[3,"TableMutationOperator",3668],[3,"Pin",3779],[6,"DeleterRef",9],[13,"InvalidColumnDef",2860],[13,"ColumnDefaultValue",2860],[13,"ColumnNoneDefaultValue",2860],[13,"ConvertColumnDefaultConstraint",2860],[13,"InvalidSql",2860],[13,"JoinTask",2860],[13,"BuildDfLogicalPlan",2860],[13,"BuildTableMeta",2860],[13,"BuildRegex",2860],[13,"BuildCsvConfig",2860],[13,"ReadObject",2860],[13,"ReadDfRecordBatch",2860],[13,"ReadParquet",2860],[13,"BuildParquetRecordBatchStream",2860],[13,"BuildFileStream",2860],[13,"ProjectSchema",2860],[13,"EncodeJson",2860],[13,"NotSupported",2860],[13,"InvalidSchema",2860],[13,"UnsupportedFormat",2860],[13,"InvalidCopyParameter",2860],[13,"TableAlreadyExists",2860],[13,"InvalidateTableCache",2860],[13,"ExecuteDdl",2860],[13,"Unexpected",2860],[13,"External",2860],[13,"RequestInserts",2860],[13,"RequestDeletes",2860],[13,"ParseSql",2860],[13,"ConvertSqlValue",2860],[13,"ColumnDataType",2860],[13,"InvalidInsertRequest",2860],[13,"InvalidDeleteRequest",2860],[13,"Catalog",2860],[13,"FindTablePartitionRule",2860],[13,"SplitInsert",2860],[13,"SplitDelete",2860],[13,"FindRegionLeader",2860],[13,"CreateTableInfo",2860],[13,"BuildCreateExprOnInsertion",2860],[13,"SchemaNotFound",2860],[13,"SchemaExists",2860],[13,"Table",2860],[13,"ColumnNotFound",2860],[13,"ExecuteStatement",2860],[13,"PlanStatement",2860],[13,"ParseQuery",2860],[13,"ExecLogicalPlan",2860],[13,"AlterExprToRequest",2860],[13,"FindNewColumnsOnInsertion",2860],[13,"IntoVectors",2860],[13,"DeserializePartition",2860],[13,"DescribeStatement",2860],[13,"IllegalPrimaryKeysDef",2860],[13,"UnrecognizedTableOption",2860],[13,"MissingTimeIndexColumn",2860],[13,"CopyTable",2860],[13,"Insert",2860],[13,"ParseUrl",2860],[13,"ParseFileFormat",2860],[13,"BuildBackend",2860],[13,"ListObjects",2860],[13,"InferSchema",2860],[13,"WriteStreamToFile",2860],[13,"ReadOrc",2860],[13,"PrepareImmutableTable",2860],[13,"TableMetadataManager",2860],[13,"ReadRecordBatch",2860],[13,"BuildColumnVectors",2860],[13,"MissingInsertBody",2860],[13,"InvalidPartitionColumns",2860],[13,"PrepareFileTable",2860],[13,"InferFileTableSchema",2860],[13,"SchemaIncompatible",2860],[13,"TableNotFound",2860],[3,"ColumnToRow",3291],[3,"ColumnToRow",3404]],"b":[[1237,"impl-Debug-for-Error"],[1238,"impl-Display-for-Error"]]},\
"partition":{"doc":"","t":"CCAAAAAAADLLLLMLLLLLLLLMMLLLLLLLLLLMLLLLLLMLNDNDNENDNDNNDDNDNDNDNDNDNDNDNNDNDGNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDGIGMMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMLLLLLLLLKFLLLMMMMMFLMLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLNEDDIGNMKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMKLMMMLLLLLLLLLLLLLLLLLLLMLLLDLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLL","n":["PartitionRule","PartitionRuleRef","columns","error","manager","metrics","partition","range","splitter","RangeColumnsPartitionRule","as_any","borrow","borrow_mut","column_list","column_list","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_region","find_regions_by_exprs","first_column_bounds","first_column_regions","from","from_subset","init","into","into_request","into_request","is_in_subset","new","partition_columns","regions","regions","to_subset","to_subset_unchecked","try_from","try_into","type_id","value_lists","value_lists","vzip","ConvertScalarValue","ConvertScalarValueSnafu","DeserializeJson","DeserializeJsonSnafu","Err","Error","FindDatanode","FindDatanodeSnafu","FindLeader","FindLeaderSnafu","FindRegion","FindRegionRoutes","FindRegionRoutesSnafu","FindRegionSnafu","FindRegions","FindRegionsSnafu","FindTableRoutes","FindTableRoutesSnafu","GetCache","GetCacheSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidTableRouteData","InvalidTableRouteDataSnafu","MissingDefaultValue","MissingDefaultValueSnafu","Ok","RegionKeysSize","RegionKeysSizeSnafu","RequestMeta","RequestMetaSnafu","Result","SerializeJson","SerializeJsonSnafu","TableRouteManager","TableRouteManagerSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","filters","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","reason","reason","reason","region","region_id","region_id","source","status_code","table_id","table_id","table_id","table_id","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column","err_msg","err_msg","error","error","expect","filters","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","reason","reason","reason","region","region_id","region_id","source","source","source","table_id","table_id","table_id","table_id","table_id","value","PartitionInfo","PartitionRuleManager","PartitionRuleManagerRef","TableRouteCacheInvalidator","TableRouteCacheInvalidatorRef","alloc","alloc","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","find_region_datanodes","find_region_leader","find_regions0","find_regions_by_filters","find_table_partition_rule","find_table_partitions","find_table_region_leaders","find_table_route","fmt","from","from","from_subset","from_subset","id","init","init","into","into","into_request","into_request","into_request","into_request","invalidate_table_route","is_compare_op","is_in_subset","is_in_subset","new","partition","phantom","phantom","ptr","ptr","reverse_operator","split_rows","table_route_manager","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_TABLE_ROUTE_GET","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MaxValue","PartitionBound","PartitionDef","PartitionExpr","PartitionRule","PartitionRuleRef","Value","alloc","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","column","compare","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_region","find_regions_by_exprs","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","new","new","op","partial_cmp","partition_bounds","partition_bounds","partition_columns","partition_columns","partition_columns","phantom","ptr","serialize","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vzip","vzip","vzip","RangePartitionRule","all_regions","as_any","borrow","borrow_mut","bounds","bounds","column_name","column_name","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","find_region","find_regions_by_exprs","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","new","partition_columns","regions","serialize","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RowSplitter","SplitReadRowHelper","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","iter_partition_values","new","new","partition_cols_indexes","partition_rule","partition_rule","rows","schema","split","split_rows","split_to_regions","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"partition"],[9,"partition::columns"],[44,"partition::error"],[616,"partition::error::Error"],[655,"partition::manager"],[725,"partition::metrics"],[749,"partition::partition"],[859,"partition::range"],[895,"partition::splitter"],[950,"core::any"],[951,"alloc::string"],[952,"alloc::vec"],[953,"async_compat"],[954,"datatypes::value"],[955,"store_api::storage::descriptors"],[956,"tonic::request"],[957,"tonic::request"],[958,"core::result"],[959,"core::any"],[960,"snafu::backtrace_inert"],[961,"core::convert"],[962,"table::metadata"],[963,"common_query::logical_plan::expr"],[964,"store_api::storage::descriptors"],[965,"core::fmt"],[966,"core::fmt"],[967,"common_error::ext"],[968,"common_error::status_code"],[969,"common_meta::peer"],[970,"std::collections::hash::map"],[971,"std::collections::hash::set"],[972,"common_meta::rpc::router"],[973,"core::future::future"],[974,"alloc::boxed"],[975,"core::pin"],[976,"datafusion_expr::operator"],[977,"common_meta::kv_backend"],[978,"greptime_proto::v1"],[979,"prometheus::histogram"],[980,"core::cmp"],[981,"serde::de"],[982,"serde::ser"],[983,"common_meta::rpc::router"]],"d":["","","","","","","","","","A RangeColumnsPartitionRule is very similar to …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ConvertScalarValue</code> …","","SNAFU context selector for the <code>Error::DeserializeJson</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::FindDatanode</code> variant","","SNAFU context selector for the <code>Error::FindLeader</code> variant","","","SNAFU context selector for the <code>Error::FindRegionRoutes</code> …","SNAFU context selector for the <code>Error::FindRegion</code> variant","","SNAFU context selector for the <code>Error::FindRegions</code> variant","","SNAFU context selector for the <code>Error::FindTableRoutes</code> …","","SNAFU context selector for the <code>Error::GetCache</code> variant","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the <code>Error::InvalidTableRouteData</code>…","","SNAFU context selector for the <code>Error::MissingDefaultValue</code> …","Contains the success value","","SNAFU context selector for the <code>Error::RegionKeysSize</code> …","","SNAFU context selector for the <code>Error::RequestMeta</code> variant","","","SNAFU context selector for the <code>Error::SerializeJson</code> variant","","SNAFU context selector for the <code>Error::TableRouteManager</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeartitionRuleManager manages the table routes and …","","","","","","","","","","","","","","","","","","","","","","Find datanodes of corresponding regions of given table.","","","Find regions in partition rule by filters.","Get partition rule of given table.","","Find all leader peers of given table.","Find table route of given table name.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","The right bound(exclusive) of partition range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds the target region by the partition values.","Finds the target regions by the partition expressions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RangePartitionRule manages the distribution of partitions …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,0,20,0,11,0,20,0,20,0,20,20,0,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,11,20,0,20,0,0,20,0,20,0,31,20,20,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,23,25,27,28,30,31,32,33,35,36,37,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,30,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,23,37,31,23,25,27,28,30,31,32,33,35,36,37,38,33,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,40,40,23,23,42,42,25,25,27,27,28,28,43,43,44,44,30,30,31,31,32,32,33,33,35,35,36,36,37,37,45,45,38,38,20,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,20,32,35,36,25,28,38,20,20,25,27,28,37,38,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,45,40,23,42,25,27,28,43,44,30,31,32,33,35,36,37,45,38,20,77,78,79,80,81,82,77,83,84,79,85,86,87,88,81,82,77,89,83,90,91,80,92,93,89,90,91,86,88,93,84,85,92,86,87,88,80,93,92,0,0,0,0,0,94,95,53,58,53,58,53,58,53,58,53,58,53,58,53,58,53,58,53,53,0,53,53,53,53,53,58,53,58,53,58,58,53,58,53,58,53,53,58,58,96,0,53,58,53,58,94,95,94,95,0,53,53,53,58,53,58,53,58,53,58,53,58,53,58,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,16,0,0,0,0,0,16,56,97,16,70,12,16,70,12,16,16,16,12,16,16,70,12,16,70,12,16,70,12,16,70,12,16,70,12,16,16,70,12,16,12,16,16,16,16,12,12,12,12,97,97,16,70,12,16,70,12,16,16,70,12,16,70,12,16,70,12,16,16,70,70,12,12,16,70,12,70,12,12,16,70,70,97,70,70,56,56,16,16,16,70,12,16,70,12,16,70,70,12,16,70,12,16,70,12,12,12,16,70,12,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,74,76,76,74,74,76,74,74,76,74,74,76,74,74,74,76,74,74,76,74,76,74,76,74,76,74,76,74,76,74],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[3]]]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,7],[[1,[9,[8]]],[[11,[10]]]],[[1,[9,[12]]],[[11,[[4,[10]]]]]],0,0,[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[[[4,[3]],[4,[[4,[16]]]],[4,[10]]],1],[1,[[4,[3]]]],[1,[[4,[10]]]],0,[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[1,[[4,[[4,[16]]]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,2],[-1,21,[]],[20,[[17,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1]]],20,[[24,[3]]]],[[[25,[-1,-2]]],20,[[24,[26]]],[[24,[10]]]],[[[27,[-1]]],20,[[24,[26]]]],[[[28,[-1,-2]]],20,[[24,[26]]],[[24,[29]]]],[[[30,[-1]]],20,[[24,[3]]]],[[[31,[-1,-2]]],20,[[24,[6]]],[[24,[6]]]],[[[32,[-1]]],20,[[24,[3]]]],[[[33,[-1]]],20,[[24,[[4,[34]]]]]],[[[35,[-1]]],20,[[24,[3]]]],[[[36,[-1]]],20,[[24,[3]]]],[[[37,[-1,-2]]],20,[[24,[26]]],[[24,[3]]]],[[[38,[-1,-2]]],20,[[24,[26]]],[[24,[39]]]],[20,[[17,[21]]]],[40,40],[[[23,[-1]]],[[23,[-1]]],41],[42,42],[[[25,[-1,-2]]],[[25,[-1,-2]]],41,41],[[[27,[-1]]],[[27,[-1]]],41],[[[28,[-1,-2]]],[[28,[-1,-2]]],41,41],[43,43],[44,44],[[[30,[-1]]],[[30,[-1]]],41],[[[31,[-1,-2]]],[[31,[-1,-2]]],41,41],[[[32,[-1]]],[[32,[-1]]],41],[[[33,[-1]]],[[33,[-1]]],41],[[[35,[-1]]],[[35,[-1]]],41],[[[36,[-1]]],[[36,[-1]]],41],[[[37,[-1,-2]]],[[37,[-1,-2]]],41,41],[[[45,[-1]]],[[45,[-1]]],41],[[[38,[-1,-2]]],[[38,[-1,-2]]],41,41],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[20,6,[4,[3]]],7],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[20,46],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],[6,7],0,0,0,[[[23,[-1]]],[[18,[-2,20]]],[[24,[3]]],[]],[[[25,[-1,-2]]],[[18,[-3,20]]],[[24,[26]]],[[24,[10]]],[]],[[[27,[-1]]],[[18,[-2,20]]],[[24,[26]]],[]],[[[28,[-1,-2]]],[[18,[-3,20]]],[[24,[26]]],[[24,[29]]],[]],[[[30,[-1]]],[[18,[-2,20]]],[[24,[3]]],[]],[[[31,[-1,-2]]],[[18,[-3,20]]],[[24,[6]]],[[24,[6]]],[]],[[[32,[-1]]],[[18,[-2,20]]],[[24,[3]]],[]],[[[33,[-1]]],[[18,[-2,20]]],[[24,[[4,[34]]]]],[]],[[[35,[-1]]],[[18,[-2,20]]],[[24,[3]]],[]],[[[36,[-1]]],[[18,[-2,20]]],[[24,[3]]],[]],[[[37,[-1,-2]]],[[18,[-3,20]]],[[24,[26]]],[[24,[3]]],[]],[[[38,[-1,-2]]],[[18,[-3,20]]],[[24,[26]]],[[24,[39]]],[]],0,[[40,47],48],[[[23,[-1]],47],48,49],[[42,47],48],[[[25,[-1,-2]],47],48,49,49],[[[27,[-1]],47],48,49],[[[28,[-1,-2]],47],48,49,49],[[43,47],48],[[44,47],48],[[[30,[-1]],47],48,49],[[[31,[-1,-2]],47],48,49,49],[[[32,[-1]],47],48,49],[[[33,[-1]],47],48,49],[[[35,[-1]],47],48,49],[[[36,[-1]],47],48,49],[[[37,[-1,-2]],47],48,49,49],[[[45,[-1]],47],48,49],[[[38,[-1,-2]],47],48,49,49],[[20,47],48],[[20,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,20],[[[23,[-1]]],20,[[24,[3]]]],[42,20],[[[25,[-1,-2]]],20,[[24,[26]]],[[24,[10]]]],[[[27,[-1]]],20,[[24,[26]]]],[[[28,[-1,-2]]],20,[[24,[26]]],[[24,[29]]]],[43,20],[44,20],[[[30,[-1]]],20,[[24,[3]]]],[[[31,[-1,-2]]],20,[[24,[6]]],[[24,[6]]]],[[[32,[-1]]],20,[[24,[3]]]],[[[33,[-1]]],20,[[24,[[4,[34]]]]]],[[[35,[-1]]],20,[[24,[3]]]],[[[36,[-1]]],20,[[24,[3]]]],[[[37,[-1,-2]]],20,[[24,[26]]],[[24,[3]]]],[[[45,[-1]]],20,[[24,[50]]]],[[[38,[-1,-2]]],20,[[24,[26]]],[[24,[39]]]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[20,[[17,[51]]]],0,0,0,0,0,0,[20,[[17,[21]]]],[20,52],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[6,7],[[53,26,[4,[10]]],[[11,[[55,[54,[4,[10]]]]]]]],[[53,39],[[11,[54]]]],[[56,34],[[11,[[57,[10]]]]]],[[53,56,[9,[34]]],[[11,[[4,[10]]]]]],[[53,26],[[11,[56]]]],[[53,26],[[11,[[4,[58]]]]]],[[53,26],[[11,[[4,[54]]]]]],[[53,26],[[11,[59]]]],[[58,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[[-1,26],[[62,[[61,[60]]]]],[]],[63,15],[-1,15,[]],[-1,15,[]],[64,53],0,0,0,0,0,[63,63],[[53,26,65],[[11,[[55,[10,65]]]]]],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[66,67],[6,-1,[]],[6,7],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[[-1,-2],7,[],[]],[[16,16],68],0,[[-1,-2],68,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[18,[16]]],69],[6,7],[6,7],[6,7],[[16,16],15],[[12,12],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,[9,[8]]],[[11,[10]]],[]],[[-1,[9,[12]]],[[11,[[4,[10]]]]],[]],[[16,47],48],[[70,47],48],[[12,47],48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[[[4,[3]],[4,[16]]],70],[[-1,63,8],12,[[24,[3]]]],0,[[16,16],[[17,[68]]]],[70,[[4,[16]]]],0,[-1,[[4,[3]]],[]],[70,[[4,[3]]]],0,0,0,[[16,-1],18,71],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[72,[[11,[70]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[12,8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[73,[[4,[10]]]],[73,2],[-1,-2,[],[]],[-1,-2,[],[]],[73,[[4,[8]]]],0,[73,3],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[-1,[[18,[73]]],69],[6,7],[[73,[9,[8]]],[[18,[10,20]]]],[[73,[9,[12]]],[[18,[[4,[10]],20]]]],[[73,47],48],[-1,-1,[]],[-1,-2,[],[]],[[],6],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[[-1,[4,[8]],[4,[10]]],73,[[24,[3]]]],[73,[[4,[3]]]],0,[[73,-1],18,71],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,7],[6,7],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[74,[[0,[75]]]],[56,76],[[65,56],74],0,0,0,0,0,[[76,65],[[11,[[55,[10,65]]]]]],[74,[[11,[[55,[10,65]]]]]],[74,[[11,[[55,[10,[4,[6]]]]]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"RangeColumnsPartitionRule",9],[8,"Any",950],[3,"String",951],[3,"Vec",952],[3,"Compat",953],[15,"usize"],[15,"tuple"],[4,"Value",954],[15,"slice"],[6,"RegionNumber",955],[6,"Result",44],[3,"PartitionExpr",749],[3,"Request",956],[3,"Request",956],[15,"bool"],[4,"PartitionBound",749],[4,"Option",957],[4,"Result",958],[3,"TypeId",950],[4,"Error",44],[8,"Error",959],[3,"Backtrace",960],[3,"GetCacheSnafu",44],[8,"Into",961],[3,"FindDatanodeSnafu",44],[6,"TableId",962],[3,"FindTableRoutesSnafu",44],[3,"FindRegionRoutesSnafu",44],[15,"u64"],[3,"MissingDefaultValueSnafu",44],[3,"RegionKeysSizeSnafu",44],[3,"FindRegionSnafu",44],[3,"FindRegionsSnafu",44],[3,"Expr",963],[3,"InvalidInsertRequestSnafu",44],[3,"InvalidDeleteRequestSnafu",44],[3,"InvalidTableRouteDataSnafu",44],[3,"FindLeaderSnafu",44],[3,"RegionId",955],[3,"TableRouteManagerSnafu",44],[8,"Clone",964],[3,"RequestMetaSnafu",44],[3,"SerializeJsonSnafu",44],[3,"DeserializeJsonSnafu",44],[3,"ConvertScalarValueSnafu",44],[15,"str"],[3,"Formatter",965],[6,"Result",965],[8,"Debug",965],[4,"ScalarValue",966],[8,"StackError",967],[4,"StatusCode",968],[3,"PartitionRuleManager",655],[3,"Peer",969],[3,"HashMap",970],[6,"PartitionRuleRef",749],[3,"HashSet",971],[3,"PartitionInfo",655],[3,"RegionRoutes",972],[8,"Future",973],[3,"Box",974],[3,"Pin",975],[4,"Operator",976],[6,"KvBackendRef",977],[3,"Rows",978],[3,"METRIC_TABLE_ROUTE_GET",725],[3,"Histogram",979],[4,"Ordering",980],[8,"Deserializer",981],[3,"PartitionDef",749],[8,"Serializer",982],[3,"Partition",972],[3,"RangePartitionRule",859],[3,"SplitReadRowHelper",895],[8,"Iterator",983],[3,"RowSplitter",895],[13,"RegionKeysSize",616],[13,"MissingDefaultValue",616],[13,"GetCache",616],[13,"InvalidTableRouteData",616],[13,"SerializeJson",616],[13,"DeserializeJson",616],[13,"FindRegions",616],[13,"TableRouteManager",616],[13,"RequestMeta",616],[13,"FindDatanode",616],[13,"FindTableRoutes",616],[13,"FindRegionRoutes",616],[13,"FindRegion",616],[13,"InvalidInsertRequest",616],[13,"InvalidDeleteRequest",616],[13,"ConvertScalarValue",616],[13,"FindLeader",616],[6,"TableRouteCacheInvalidatorRef",655],[6,"PartitionRuleManagerRef",655],[8,"TableRouteCacheInvalidator",655],[8,"PartitionRule",749]],"b":[[313,"impl-Debug-for-Error"],[314,"impl-Display-for-Error"]]},\
"plugins":{"doc":"","t":"AAAFFFFFFFFFFFF","n":["datanode","frontend","meta_srv","setup_datanode_plugins","setup_frontend_plugins","setup_meta_srv_plugins","start_datanode_plugins","start_frontend_plugins","start_meta_srv_plugins","setup_datanode_plugins","start_datanode_plugins","setup_frontend_plugins","start_frontend_plugins","setup_meta_srv_plugins","start_meta_srv_plugins"],"q":[[0,"plugins"],[9,"plugins::datanode"],[11,"plugins::frontend"],[13,"plugins::meta_srv"],[15,"datanode::config"],[16,"common_base"],[17,"datanode::error"],[18,"frontend::frontend"],[19,"frontend::error"],[20,"meta_srv::metasrv"],[21,"meta_srv::error"]],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[1,[[3,[2]]]],[4,[[5,[2]]]],[6,[[7,[2]]]],[2,[[3,[8]]]],[2,[[5,[8]]]],[2,[[7,[8]]]],[1,[[3,[2]]]],[2,[[3,[8]]]],[4,[[5,[2]]]],[2,[[5,[8]]]],[6,[[7,[2]]]],[2,[[7,[8]]]]],"c":[],"p":[[3,"DatanodeOptions",15],[3,"Plugins",16],[6,"Result",17],[3,"FrontendOptions",18],[6,"Result",19],[3,"MetaSrvOptions",20],[6,"Result",21],[15,"tuple"]],"b":[]},\
"promql":{"doc":"","t":"AAAAAANDNDNDNDNDNDNENDNDNDNDNDNDNDNGNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDDDDDDDGDDDDDDDDDDMMMFAMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMAMMMMMMAMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLMLLLLMMLLLLLLLLLMMMLLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLMMMLMMLLLLLMMMLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMLLMMMLLLLLLLLLLLLLLMMMLLMMLLLLLLLLLLLLLMLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMMLLLLMMMLLMMMLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMLLLMMMLLLLLLLLLLLLLLLLMMLLLLLLLMMMLLMMMLLLLLLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDDGDDDGDDDDDDGDDDDAAFAFAAAFAAMMMMAMMMDDDDDDDDDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLFLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLFLLLLLLLLLLLLLLLLLLLLGDGGLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLDLLLFLLLLLLLLFLLLLLLLLLLMMLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLDLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLRRNNRDRDDRRENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLL","n":["error","extension_plan","functions","metrics","planner","range_array","Catalog","CatalogSnafu","ColumnNotFound","ColumnNotFoundSnafu","CombineTableColumnMismatch","CombineTableColumnMismatchSnafu","DataFusionPlanning","DataFusionPlanningSnafu","Deserialize","DeserializeSnafu","EmptyRange","EmptyRangeSnafu","Err","Error","ExpectExpr","ExpectExprSnafu","ExpectRangeSelector","ExpectRangeSelectorSnafu","FunctionInvalidArgument","FunctionInvalidArgumentSnafu","IllegalRange","IllegalRangeSnafu","MultipleMetricMatchers","MultipleMetricMatchersSnafu","MultipleVector","MultipleVectorSnafu","NoMetricMatcher","NoMetricMatcherSnafu","Ok","Result","TableNameNotFound","TableNameNotFoundSnafu","TimeIndexNotFound","TimeIndexNotFoundSnafu","UnexpectedPlanExpr","UnexpectedPlanExprSnafu","UnexpectedToken","UnexpectedTokenSnafu","UnknownTable","UnknownTableSnafu","UnsupportedExpr","UnsupportedExprSnafu","UnsupportedVectorMatch","UnsupportedVectorMatchSnafu","ValueNotFound","ValueNotFoundSnafu","ZeroRangeSelector","ZeroRangeSelectorSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","col","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ensure","expr","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","left","len","length","name","name","next","offset","right","source","status_code","table","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","col","desc","error","error","expr","expr","fn_name","left","len","length","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","name","offset","right","source","table","table","token","EmptyMetric","EmptyMetricExec","EmptyMetricStream","HistogramFold","HistogramFoldExec","HistogramFoldStream","InstantManipulate","InstantManipulateExec","InstantManipulateStream","Millisecond","PromExtensionPlanner","RangeManipulate","RangeManipulateExec","RangeManipulateStream","SeriesDivide","SeriesDivideExec","SeriesDivideStream","SeriesNormalize","SeriesNormalizeExec","SeriesNormalizeStream","batch_size","bucket_size","buffer","build_special_time_expr","empty_metric","end","end","end","end","end","end","end","end","end","expr","expr","expr","field_column","field_column","field_column","field_column_index","field_column_index","field_columns","field_columns","field_columns","field_index","histogram_fold","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input_buffer","input_buffered_rows","instant_manipulate","interval","interval","interval","interval","interval","interval","interval","interval","interval","is_first_poll","le_column","le_column_index","le_column_index","lookback_delta","lookback_delta","lookback_delta","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","need_filter_out_nan","need_filter_out_nan","need_filter_out_nan","normal_indices","normalize","num_series","offset","offset","offset","output_buffer","output_buffered_rows","output_schema","output_schema","output_schema","output_schema","output_schema","output_schema","planner","quantile","quantile","quantile","range","range","range","range_manipulate","result_schema","result_schema","result_schema","schema","schema","schema","series_divide","start","start","start","start","start","start","start","start","start","tag_columns","tag_columns","tag_indices","time_index","time_index","time_index","time_index","time_index_column","time_index_column","time_index_column","time_index_column_name","time_index_column_name","time_index_schema","time_index_schema","time_index_schema","time_range_column","ts_column","ts_column_index","EmptyMetric","EmptyMetricExec","EmptyMetricStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_special_time_expr","build_ts_only_schema","children","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","execute","expr","expr","expr","expressions","expressions","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","inputs","inputs","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_first_poll","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","result_schema","result_schema","result_schema","schema","schema","schema","schema","start","start","start","statistics","time_index_schema","time_index_schema","time_index_schema","to_execution_plan","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","HistogramFold","HistogramFoldExec","HistogramFoldStream","as_any","as_any","batch_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket_size","calculate_bucket_num","check_schema","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","convert_schema","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","empty_output_buffer","eq","equivalent","equivalent","equivalent","equivalent","evaluate_row","execute","expressions","expressions","field_column","field_column_index","field_column_index","find_positive_inf","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","fold_buf","fold_input","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","input_buffer","input_buffered_rows","inputs","inputs","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","le_column","le_column_index","le_column_index","maintains_input_order","metric","metric","metrics","name","name","name","new","normal_indices","output_buffer","output_buffered_rows","output_ordering","output_partitioning","output_schema","output_schema","output_schema","poll_next","prevent_predicate_push_down_columns","push_input_buf","quantile","quantile","quantile","required_input_distribution","required_input_ordering","schema","schema","schema","schema","statistics","tag_col_exprs","take_output_buf","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","ts_column","ts_column_index","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","InstantManipulate","InstantManipulateExec","InstantManipulateStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","field_column","field_column","field_index","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","lookback_delta","lookback_delta","lookback_delta","maintains_input_order","manipulate","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","schema","schema","schema","schema","schema","serialize","start","start","start","statistics","take_record_batch_optional","time_index","time_index_column","time_index_column","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","SeriesNormalize","SeriesNormalizeExec","SeriesNormalizeStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","metric","metric","metrics","name","name","name","need_filter_out_nan","need_filter_out_nan","need_filter_out_nan","new","normalize","offset","offset","offset","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","required_input_distribution","schema","schema","schema","schema","schema","serialize","statistics","time_index","time_index_column_name","time_index_column_name","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","PromExtensionPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","plan_extension","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RangeManipulate","RangeManipulateExec","RangeManipulateStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_timestamp_range_name","calculate_output_schema","calculate_range","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","field_columns","field_columns","field_columns","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","internal_range_end_col_name","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","manipulate","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","output_schema","output_schema","output_schema","poll_next","prevent_predicate_push_down_columns","range","range","range","range_timestamp_name","schema","schema","schema","schema","serialize","start","start","start","statistics","time_index","time_index","time_index_column","time_range_column","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","SeriesDivide","SeriesDivideExec","SeriesDivideStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","fetch_next_batch","find_first_diff_row","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","metric","metric","metrics","name","name","name","new","num_series","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","required_input_distribution","required_input_ordering","schema","schema","schema","schema","schema","serialize","statistics","tag_columns","tag_columns","tag_indices","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","AbsentOverTime","AvgOverTime","Changes","CountOverTime","Delta","Deriv","HoltWinters","IDelta","Increase","LastOverTime","MaxOverTime","MinOverTime","PredictLinear","PresentOverTime","QuantileOverTime","Rate","Resets","StddevOverTime","StdvarOverTime","SumOverTime","aggr_over_time","changes","compensated_sum_inc","deriv","extract_array","extrapolate_rate","holt_winters","idelta","linear_regression","predict_linear","quantile","quantile","range_length","range_length","range_length","resets","sf","t","tf","AbsentOverTime","AvgOverTime","CountOverTime","LastOverTime","MaxOverTime","MinOverTime","PresentOverTime","StddevOverTime","StdvarOverTime","SumOverTime","absent_over_time","avg_over_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc","calc","calc","calc","calc","calc","calc","calc","calc","calc","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","count_over_time","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_over_time","max_over_time","min_over_time","name","name","name","name","name","name","name","name","name","name","present_over_time","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","stddev_over_time","stdvar_over_time","sum_over_time","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Changes","borrow","borrow_mut","calc","changes","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Deriv","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","deriv","drop","fmt","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Delta","ExtrapolatedRate","Increase","Rate","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","extrapolate_factor","fmt","fmt","fmt","fmt","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","name","name","new","range_length","range_length","range_length","range_length","return_type","scalar_udf","scalar_udf","scalar_udf","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HoltWinters","borrow","borrow_mut","calc","calc_trend_value","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","holt_winter_impl","init","input_type","into","into_request","into_request","is_in_subset","name","new","return_type","scalar_udf","sf","tf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","IDelta","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","fmt","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","return_type","scalar_udf","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PredictLinear","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","new","predict_linear_impl","return_type","scalar_udf","t","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","QuantileOverTime","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","new","quantile","quantile_impl","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Resets","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","input_type","into","into_request","into_request","is_in_subset","name","resets","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PROMQL_SERIES_COUNT","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_FIELD_COLUMN","DEFAULT_TIME_INDEX_COLUMN","DataFusionBuiltin","ExtrapolateUdf","FIELD_COLUMN_MATCHER","FunctionArgs","LE_COLUMN_NAME","PromPlanner","PromPlannerContext","SPECIAL_HISTOGRAM_QUANTILE","SPECIAL_TIME_FUNCTION","ScalarFunc","Udf","agg_modifier_to_col","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create_aggregate_exprs","create_empty_values_filter_expr","create_function_args","create_function_expr","create_table_scan_plan","create_tag_and_time_index_column_sort_exprs","create_tag_column_exprs","create_time_index_column_expr","ctx","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","end","field_column_matcher","field_columns","filter_on_field_column","fmt","fmt","fmt","from","from","from","from","from_eval_stmt","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","has_le_tag","init","init","init","init","input","interval","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_token_a_comparison_op","is_token_a_set_op","join_on_non_field_columns","literals","lookback_delta","matchers_to_expr","preprocess_label_matchers","projection_for_each_field_column","prom_expr_to_plan","prom_token_to_binary_expr_builder","range","reset","selector_to_series_normalize_plan","set_op_on_non_field_columns","setup_context","start","stmt_to_plan","table_name","table_provider","tag_columns","time_index_column","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_build_float_literal","try_build_literal_expr","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","RangeArray","RangeTuple","array","as_any","borrow","borrow_mut","check_ranges","compat","compat_mut","compat_ref","convert_data_type","convert_field","data_type","deref","deref_mut","drop","fmt","from","from_ranges","from_ranges_unchecked","from_subset","get","get","get_array_memory_size","get_buffer_memory_size","init","into","into_data","into_dict","into_request","into_request","is_empty","is_empty","is_in_subset","key_type","len","len","nulls","offset","pack","ranges","slice","to_data","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","unpack","value_type","values","vzip"],"q":[[0,"promql"],[6,"promql::error"],[758,"promql::error::Error"],[798,"promql::extension_plan"],[950,"promql::extension_plan::empty_metric"],[1094,"promql::extension_plan::histogram_fold"],[1246,"promql::extension_plan::instant_manipulate"],[1387,"promql::extension_plan::normalize"],[1518,"promql::extension_plan::planner"],[1542,"promql::extension_plan::range_manipulate"],[1690,"promql::extension_plan::series_divide"],[1820,"promql::functions"],[1859,"promql::functions::aggr_over_time"],[2159,"promql::functions::changes"],[2189,"promql::functions::deriv"],[2219,"promql::functions::extrapolate_rate"],[2265,"promql::functions::holt_winters"],[2298,"promql::functions::idelta"],[2329,"promql::functions::predict_linear"],[2360,"promql::functions::quantile"],[2391,"promql::functions::resets"],[2421,"promql::metrics"],[2446,"promql::planner"],[2601,"promql::range_array"],[2655,"core::any"],[2656,"core::error"],[2657,"snafu::backtrace_inert"],[2658,"core::option"],[2659,"alloc::string"],[2660,"core::convert"],[2661,"promql_parser::parser::ast"],[2662,"promql_parser::parser::token"],[2663,"promql_parser::parser::ast"],[2664,"core::clone"],[2665,"async_compat"],[2666,"datafusion_common::error"],[2667,"core::result"],[2668,"core::fmt"],[2669,"core::fmt"],[2670,"tonic::request"],[2671,"common_error::status_code"],[2672,"core::any"],[2673,"datafusion_common::dfschema"],[2674,"datafusion_physical_plan"],[2675,"alloc::sync"],[2676,"datafusion_expr::logical_plan::extension"],[2677,"core::hash"],[2678,"datafusion_execution::task"],[2679,"datafusion_execution::stream"],[2680,"datafusion_common::error"],[2681,"datafusion_physical_plan::display"],[2682,"core::fmt"],[2683,"core::hash"],[2684,"core::hash"],[2685,"datafusion_physical_expr::sort_expr"],[2686,"datafusion_physical_expr::partitioning"],[2687,"core::pin"],[2688,"core::task::wake"],[2689,"core::task::poll"],[2690,"std::collections::hash::map"],[2691,"std::collections::hash::set"],[2692,"arrow_schema::schema"],[2693,"datafusion_common::dfschema"],[2694,"datafusion::execution::context"],[2695,"datafusion::physical_planner"],[2696,"arrow_array::record_batch"],[2697,"datatypes::vectors"],[2698,"alloc::boxed"],[2699,"datafusion_physical_expr::partitioning"],[2700,"core::convert"],[2701,"arrow_array::array"],[2702,"datafusion_expr::columnar_value"],[2703,"arrow_array::array::primitive_array"],[2704,"arrow_array::array::primitive_array"],[2705,"datafusion_expr::udf"],[2706,"prometheus::histogram"],[2707,"promql_parser::parser::ast"],[2708,"core::ops::function"],[2709,"promql_parser::parser::ast"],[2710,"promql_parser::label::matcher"],[2711,"core::ops::function"],[2712,"core::iter::traits::collect"],[2713,"arrow_schema::field"],[2714,"arrow_array::array"],[2715,"arrow_array::types"],[2716,"arrow_array::array::dictionary_array"],[2717,"arrow_buffer::buffer::null"],[2718,"core::iter::traits::iterator"]],"d":["","","","","","","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DataFusionPlanning</code> …","","SNAFU context selector for the <code>Error::Deserialize</code> variant","","SNAFU context selector for the <code>Error::EmptyRange</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::ExpectExpr</code> variant","","SNAFU context selector for the <code>Error::ExpectRangeSelector</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalRange</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MultipleVector</code> …","","SNAFU context selector for the <code>Error::NoMetricMatcher</code> …","Contains the success value","","","SNAFU context selector for the <code>Error::TableNameNotFound</code> …","","SNAFU context selector for the <code>Error::TimeIndexNotFound</code> …","","SNAFU context selector for the <code>Error::UnexpectedPlanExpr</code> …","","SNAFU context selector for the <code>Error::UnexpectedToken</code> …","","SNAFU context selector for the <code>Error::UnknownTable</code> variant","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ValueNotFound</code> variant","","SNAFU context selector for the <code>Error::ZeroRangeSelector</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codempty source plan that generate record batch with two …","","","<code>HistogramFold</code> will fold the conventional (non-native) …","","","Manipulate the input record batch to make it suitable for …","","","","","Time series manipulator for range function.","","","","","Assume the input stream is ordered on the tag columns.","Normalize the input record batch. Notice that for …","","","Expected output batch size","","","","","","","","","","","","","","","","","","A optional column for validating staleness","","","Index for field column in the schema of input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This stream only generate one record batch at the first …","Name of the <code>le</code> column. It’s a special column in …","","Index for <code>le</code> column in the schema of input.","","","","","","","","","","","","","","","","","","","Columns need not folding. This indices is based on input …","","","","","","","","","","","","","","","","","","","","","","Schema of the output record batch","Schema of the output record batch","Schema of the output record batch","","","","","","","","","","","","","","","","","","","","","","","","","","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","","","","Empty source plan that generate record batch with two …","","","","","","","","","","","","Build a schema that only contains <strong>millisecond</strong> timestamp …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","This stream only generate one record batch at the first …","","","","","","","","","","","","","","","","Schema of the output record batch","Schema of the output record batch","Schema of the output record batch","","","","","","","","","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>HistogramFold</code> will fold the conventional (non-native) …","","","","","Expected output batch size","","","","","","","","","","","","","","","","","","","","Transform the schema","","","","","","","","","","","","Generate a group of empty MutableVectors from the output …","","","","","","Evaluate the field column and return the result","","","","","","Index for field column in the schema of input.","Find the first <code>+Inf</code> which indicates the end of the bucket …","","","","","","Fold record batches from input buffer and put to output …","The inner most <code>Result</code> is for <code>poll_next()</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Name of the <code>le</code> column. It’s a special column in …","","Index for <code>le</code> column in the schema of input.","","","","","","","","","Columns need not folding. This indices is based on input …","","","","","","","","","","","","","","","","","","","","","Return all the PhysicalExpr of tag columns in order.","Compute result from output buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","Manipulate the input record batch to make it suitable for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A optional column for validating staleness","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to apply “take” on record batch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Normalize the input record batch. Notice that for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Time series manipulator for range function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assume the input stream is ordered on the tag columns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","absent_over_time returns an empty vector if the range …","The average value of all points in the specified interval.","used to count the number of value changes that occur …","The count of all values in the specified interval.","","","There are 3 variants of smoothing functions:","The <code>funcIdelta</code> in Promql, from …","","The most recent point value in specified interval.","The maximum value of all points in the specified interval.","The minimum value of all points in the specified interval.","","the value 1 for any series in the specified interval.","","","used to count the number of times the time series starts …","the population standard deviation of the values in the …","the population standard variance of the values in the …","The sum of all values in the specified interval.","","Implementation of <code>changes</code> in PromQL. Refer to the original …","compensation(Kahan) summation algorithm - a technique for …","Implementation of <code>deriv</code> in PromQL. Refer to the original …","","Implementations of <code>rate</code>, <code>increase</code> and <code>delta</code> functions in …","Implementation of <code>holt_winters</code> in PromQL. Refer to the …","","linear_regression performs a least-square linear …","Implementation of <code>predict_linear</code> in PromQL. Refer to the …","","","Range duration in millisecond","Range duration in millisecond","Range duration in millisecond","Implementation of <code>reset</code> in PromQL. Refer to the original …","","","","absent_over_time returns an empty vector if the range …","The average value of all points in the specified interval.","The count of all values in the specified interval.","The most recent point value in specified interval.","The maximum value of all points in the specified interval.","The minimum value of all points in the specified interval.","the value 1 for any series in the specified interval.","the population standard deviation of the values in the …","the population standard variance of the values in the …","The sum of all values in the specified interval.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","used to count the number of value changes that occur …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Part of the <code>extrapolatedRate</code> in Promql, from …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Constructor. Other public usage should use scalar_udf() …","Range duration in millisecond","Range duration in millisecond","Range duration in millisecond","Range duration in millisecond","","","","","","","","","","","","","There are 3 variants of smoothing functions:","","","","","","","","","","","Returns the argument unchanged.","","Refer to …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The <code>funcIdelta</code> in Promql, from …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Refer to …","","","","","","","","","","used to count the number of times the time series starts …","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Counter for the number of series processed per query.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","default value column name for empty metric","","","UDF that require extra information like range length to be …","Special modifier to project field columns under …","","<code>le</code> column for conventional histogram.","","","<code>histogram_quantile</code> function in PromQL","<code>time()</code> function in PromQL.","","","Convert LabelModifier to Column exprs for aggregation. …","","","","","","","","","","","","","","","","","","","","","","","","","Create DfExpr::AggregateFunction expr for each value …","","","Side Effects","","","","","","","","","","","","","","","","","","","","","","","Build a filter plan that filter on value column. Notice …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Check if <code>le</code> is present in tag columns","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Check if the given op is a comparison operator.","Check if the given op is a set operator (UNION, INTERSECT …","Build a inner join on time index column and tag columns to …","","","","Extract metric name from <code>__name__</code> matcher and set it into …","Build a projection that project and perform operation expr …","","Return a lambda to build binary expression from token. …","The range in millisecond of range selector. None if there …","Reset all planner states","","","Setup PromPlannerContext’s state fields.","","","","","","","","","","","","","","","","","Try to build a f64 from PromExpr.","Try to build a DataFusion Literal Expression from PromQL …","","","","","","","","","","","","","","","","","","","","","An compound logical “array” type. Represent serval …","","","","","","","","","","Build datatype of wrapped RangeArray on given value type.","Change the field’s datatype to the type after processed …","","","","","","Returns the argument unchanged.","","Construct RangeArray from given range without checking its …","","","","","","","Calls <code>U::from(self)</code>.","","Return the underlying Arrow’s DictionaryArray. Notes the …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,98,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,98,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,27,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,13,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,0,17,19,6,9,11,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,1,30,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,6,6,9,9,11,11,34,34,13,13,14,14,15,15,16,16,17,17,19,19,20,20,35,35,23,23,24,24,36,36,25,25,26,26,27,27,28,28,29,29,30,30,31,31,1,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,31,20,20,6,9,1,20,31,1,1,15,16,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,11,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,6,9,9,11,11,34,34,13,13,14,14,15,15,16,16,17,17,19,19,20,20,35,35,23,23,24,24,36,36,25,25,26,26,27,27,28,28,29,29,30,30,31,31,1,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,6,9,11,34,13,14,15,16,17,19,20,35,23,24,36,25,26,27,28,29,30,31,1,162,163,164,165,166,167,168,169,170,170,171,172,173,164,163,174,175,176,166,167,170,165,177,178,179,180,181,162,182,183,168,169,171,172,170,169,179,175,176,173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,86,112,0,0,74,99,107,56,52,97,95,109,106,74,56,52,90,97,95,86,85,107,109,106,99,0,86,99,103,107,112,90,85,97,95,101,100,109,106,111,110,86,86,0,74,99,107,56,52,97,95,109,106,74,90,86,85,99,97,95,74,86,99,103,107,112,52,85,95,100,106,110,103,101,100,86,0,112,103,101,100,86,86,86,107,90,85,109,106,0,86,90,85,107,109,106,0,74,56,52,99,103,112,0,74,99,107,56,52,97,95,109,106,111,110,112,99,103,107,109,97,95,106,101,100,74,56,52,106,90,85,0,0,0,56,52,74,56,52,74,56,52,0,0,52,56,52,56,52,74,56,52,74,56,52,74,56,52,74,56,52,74,56,52,74,56,52,56,56,74,56,52,56,56,56,56,56,52,74,56,52,56,56,56,52,52,56,56,74,56,52,56,52,74,56,52,56,56,56,56,74,56,52,56,56,74,56,52,74,56,52,74,74,56,56,52,52,74,74,74,74,56,52,52,74,52,52,56,56,56,56,52,52,74,56,74,56,52,74,56,56,52,74,56,52,52,74,56,52,56,56,52,74,56,52,74,56,52,74,56,52,74,74,56,56,52,52,74,74,56,52,74,56,52,52,0,0,0,90,85,86,86,90,85,86,90,85,86,86,90,85,86,90,85,86,90,85,86,90,85,90,86,90,85,86,90,85,86,90,85,90,90,86,90,90,90,90,90,86,85,90,90,90,86,85,86,90,85,85,90,90,86,86,86,90,85,86,90,85,90,90,90,90,86,90,85,86,90,85,86,86,90,90,86,90,85,86,86,90,90,85,85,86,86,86,90,85,90,86,85,85,86,85,85,90,90,90,90,86,86,86,85,85,86,90,85,86,90,86,86,90,85,85,85,86,90,90,85,85,85,86,90,86,90,85,86,90,85,86,90,85,86,86,90,90,85,85,86,90,85,86,90,85,86,90,85,85,0,0,0,97,95,99,97,95,99,97,95,95,99,97,95,99,97,95,99,97,95,99,97,95,99,97,95,97,99,97,95,97,97,99,97,95,97,97,97,97,97,95,97,97,97,95,99,97,95,95,97,97,99,97,95,99,97,95,97,97,97,97,99,97,95,99,97,95,97,97,99,97,95,99,97,95,99,99,97,97,95,95,99,99,99,97,95,99,97,95,95,99,99,95,95,97,97,97,97,95,95,99,97,99,97,97,95,99,97,99,97,95,95,99,99,97,95,97,99,97,95,99,97,95,99,97,95,99,99,97,97,95,95,99,99,97,95,99,97,95,95,0,0,0,101,100,103,101,100,103,101,100,100,103,101,100,103,101,100,103,101,100,103,101,100,103,101,100,101,103,101,100,101,101,101,101,101,101,101,100,101,101,101,100,100,101,101,103,101,100,103,101,100,101,101,101,101,103,101,100,103,101,100,101,101,103,101,100,103,103,101,101,100,100,103,103,103,101,100,103,100,100,101,101,101,103,101,100,101,103,103,101,100,100,100,103,101,100,103,101,101,100,103,101,100,103,101,100,101,103,101,100,103,101,100,103,101,100,103,103,101,101,100,100,103,103,101,100,103,101,100,100,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,109,106,107,109,106,107,109,106,109,109,107,106,107,109,106,107,109,106,107,109,106,107,109,106,107,109,106,109,107,109,106,109,109,107,109,106,109,109,109,109,109,106,109,109,107,109,106,109,106,106,109,109,107,109,106,107,109,106,109,109,109,109,107,109,106,107,109,106,109,109,109,107,109,106,107,109,106,107,107,109,109,106,106,107,107,107,109,106,106,107,107,106,106,109,109,109,109,106,106,107,109,106,107,109,107,109,106,109,107,109,109,106,109,107,109,106,106,107,109,106,106,109,107,109,106,107,109,106,107,109,106,107,107,109,109,106,106,107,107,109,106,107,109,106,106,0,0,0,111,110,112,111,110,112,111,110,112,110,112,111,110,112,111,110,112,111,110,112,111,110,112,111,110,111,112,111,110,111,111,111,111,111,111,111,110,111,111,112,112,111,110,110,111,111,112,111,110,112,111,110,111,111,111,111,112,111,110,112,111,110,111,111,112,111,110,112,112,111,111,110,110,112,112,112,111,110,110,112,110,110,111,111,111,111,112,110,110,112,111,110,110,112,111,111,110,112,111,110,111,110,112,111,112,111,110,112,111,110,112,111,110,112,112,111,111,110,110,112,112,111,110,112,111,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,184,185,186,0,132,134,132,0,0,0,0,0,0,0,0,0,0,0,0,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,0,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,117,118,119,120,121,122,123,124,125,126,0,0,0,117,118,119,120,121,122,123,124,125,126,0,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,0,0,0,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,117,118,119,120,121,122,123,124,125,126,117,118,119,120,121,122,123,124,125,126,0,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,184,185,186,131,131,131,131,131,131,131,131,131,131,131,131,131,0,132,132,132,0,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,134,134,134,134,134,134,134,134,134,134,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,135,135,135,135,135,135,135,135,135,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,136,136,136,136,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,0,142,142,0,0,0,0,0,0,0,0,142,139,139,141,143,142,139,141,143,142,141,142,141,142,139,141,143,142,139,141,143,142,139,141,143,142,139,139,139,139,139,139,139,139,139,141,143,139,141,143,142,139,141,143,142,139,141,143,142,141,141,141,139,141,143,142,139,141,143,142,141,141,142,139,141,143,142,141,139,141,143,142,143,141,139,141,143,142,139,139,141,141,143,143,142,142,139,141,143,142,139,139,139,143,141,139,139,139,139,139,141,141,139,139,139,141,139,141,139,141,141,141,142,139,141,143,142,139,141,143,142,139,139,139,141,143,142,139,139,141,141,143,143,142,142,139,141,143,142,139,141,143,142,0,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,153,153,153,153,153,153,153,153,153,153,0,153,153,153],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,3,[]],[1,[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],1,[[8,[7]]]],[[[9,[-1]]],1,[[8,[10]]]],[[[11,[-1]]],1,[[8,[12]]]],[[[13,[-1]]],1,[[8,[7]]]],[14,1],[[[15,[-1]]],1,[[8,[7]]]],[[[16,[-1]]],1,[[8,[7]]]],[[[17,[-1]]],1,[[8,[18]]]],[[[19,[-1]]],1,[[8,[18]]]],[[[20,[-1,-2,-3]]],1,[[8,[21]]],[[8,[21]]],[[8,[22]]]],[23,1],[24,1],[25,1],[26,1],[[[27,[-1]]],1,[[8,[7]]]],[28,1],[29,1],[[[30,[-1]]],1,[[8,[7]]]],[[[31,[-1,-2]]],1,[[8,[[32,[7]]]]],[[8,[[32,[7]]]]]],[1,[[5,[3]]]],[[[6,[-1]]],[[6,[-1]]],33],[[[9,[-1]]],[[9,[-1]]],33],[[[11,[-1]]],[[11,[-1]]],33],[34,34],[[[13,[-1]]],[[13,[-1]]],33],[14,14],[[[15,[-1]]],[[15,[-1]]],33],[[[16,[-1]]],[[16,[-1]]],33],[[[17,[-1]]],[[17,[-1]]],33],[[[19,[-1]]],[[19,[-1]]],33],[[[20,[-1,-2,-3]]],[[20,[-1,-2,-3]]],33,33,33],[35,35],[23,23],[24,24],[36,36],[25,25],[26,26],[[[27,[-1]]],[[27,[-1]]],33],[28,28],[29,29],[[[30,[-1]]],[[30,[-1]]],33],[[[31,[-1,-2]]],[[31,[-1,-2]]],33,33],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],0,[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[[1,22,[32,[7]]],37],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],0,[1,39],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[[40,41],[[42,[37,41]]]],0,0,[[[6,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[[[9,[-1]]],[[42,[-2,1]]],[[8,[10]]],[]],[[[11,[-1]]],[[42,[-2,1]]],[[8,[12]]],[]],[[[13,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[14,[[42,[-1,1]]],[]],[[[15,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[[[16,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[[[17,[-1]]],[[42,[-2,1]]],[[8,[18]]],[]],[[[19,[-1]]],[[42,[-2,1]]],[[8,[18]]],[]],[[[20,[-1,-2,-3]]],[[42,[-4,1]]],[[8,[21]]],[[8,[21]]],[[8,[22]]],[]],[23,[[42,[-1,1]]],[]],[24,[[42,[-1,1]]],[]],[25,[[42,[-1,1]]],[]],[26,[[42,[-1,1]]],[]],[[[27,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[28,[[42,[-1,1]]],[]],[29,[[42,[-1,1]]],[]],[[[30,[-1]]],[[42,[-2,1]]],[[8,[7]]],[]],[[[31,[-1,-2]]],[[42,[-3,1]]],[[8,[[32,[7]]]]],[[8,[[32,[7]]]]],[]],[[[6,[-1]],43],44,45],[[[9,[-1]],43],44,45],[[[11,[-1]],43],44,45],[[34,43],44],[[[13,[-1]],43],44,45],[[14,43],44],[[[15,[-1]],43],44,45],[[[16,[-1]],43],44,45],[[[17,[-1]],43],44,45],[[[19,[-1]],43],44,45],[[[20,[-1,-2,-3]],43],44,45,45,45],[[35,43],44],[[23,43],44],[[24,43],44],[[36,43],44],[[25,43],44],[[26,43],44],[[[27,[-1]],43],44,45],[[28,43],44],[[29,43],44],[[[30,[-1]],43],44,45],[[[31,[-1,-2]],43],44,45,45],[[1,43],44],[[1,43],44],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],1,[[8,[7]]]],[[[9,[-1]]],1,[[8,[10]]]],[[[11,[-1]]],1,[[8,[12]]]],[34,1],[[[13,[-1]]],1,[[8,[7]]]],[14,1],[[[15,[-1]]],1,[[8,[7]]]],[[[16,[-1]]],1,[[8,[7]]]],[[[17,[-1]]],1,[[8,[18]]]],[[[19,[-1]]],1,[[8,[18]]]],[[[20,[-1,-2,-3]]],1,[[8,[21]]],[[8,[21]]],[[8,[22]]]],[35,1],[23,1],[24,1],[36,1],[25,1],[26,1],[[[27,[-1]]],1,[[8,[7]]]],[28,1],[29,1],[[[30,[-1]]],1,[[8,[7]]]],[[[31,[-1,-2]]],1,[[8,[[32,[7]]]]],[[8,[[32,[7]]]]]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,0,0,0,0,[1,[[5,[48]]]],0,0,[1,[[5,[3]]]],[1,49],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,7,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[39,51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,2,[]],[52,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,51],[39,53],[52,[[32,[[55,[54]]]]]],[56,56],[52,52],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],0,0,0,[[56,56],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[52,22,[55,[59]]],[[61,[60]]]],0,0,0,[-1,[[32,[51,62]]],[]],[56,[[32,[51]]]],[[56,43],44],[[52,43],44],[[52,63,43],44],[[-1,43],[[42,[37,64]]],[]],[[56,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[56,[65,[51]],[65,[66]]],56],[[-1,-2],67,[68,69],70],[[56,-1],37,58],[[],22],[[],22],[[],22],[56,[[32,[66]]]],[-1,[[32,[66,62]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],0,[-1,40,[]],[-1,40,[]],[-1,40,[]],[52,[[32,[40]]]],0,0,[52,[[5,[71]]]],[-1,39,[]],[56,39],[[],39],[[7,7,51],[[61,[56]]]],[52,[[5,[[65,[72]]]]]],[52,73],[[[75,[74]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],0,0,0,[74,80],[56,81],[-1,[[55,[53,62]]],[]],[52,80],0,0,0,[52,82],0,0,0,[[56,83,84],[[61,[[55,[54]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[52]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,0,0,[-1,2,[]],[85,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[86,87],[[61,[[5,[22]]]]]],[[81,39,39,39],[[61,[37]]]],[85,[[32,[[55,[54]]]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[[81,39],[[61,[81]]]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],[[80,22],[[61,[[32,[[89,[88]]]]]]]],[[90,90],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[91,[65,[91]],[65,[91]]],[[61,[91]]]],[[85,22,[55,[59]]],[[61,[60]]]],[-1,[[32,[51,62]]],[]],[90,[[32,[51]]]],0,0,0,[[86,87],[[61,[22]]]],[[90,43],44],[[85,43],44],[[85,63,43],44],[[-1,43],[[42,[37,64]]],[]],[[90,43],44],[[86,22,87],[[61,[37]]]],[[86,87],[[61,[[5,[[61,[87]]]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[90,[65,[51]],[65,[66]]],90],[[-1,-2],67,[68,69],70],[[90,-1],37,58],[[],22],[[],22],[[],22],0,0,0,0,0,[90,[[32,[66]]]],[-1,[[32,[66,62]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,0,0,[85,[[32,[40]]]],0,0,[85,[[5,[71]]]],[-1,39,[]],[[],39],[90,39],[[7,7,7,91,66],[[61,[90]]]],0,0,0,[85,[[5,[[65,[72]]]]]],[85,73],0,0,0,[[[75,[86]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],[[86,87],37],0,0,0,[85,[[32,[92]]]],[85,[[32,[[5,[[32,[93]]]]]]]],[86,80],[90,81],[-1,[[55,[53,62]]],[]],[85,80],[85,82],[85,[[32,[[55,[94]]]]]],[86,[[61,[[5,[87]]]]]],[[90,[55,[54]]],[[55,[54]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],0,0,[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[85]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,0,0,[-1,2,[]],[95,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,[[32,[[55,[54]]]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[[65,[96]]],[[98,[97]]]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],0,0,0,[[97,97],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[95,22,[55,[59]]],[[61,[60]]]],[97,[[32,[51]]]],[-1,[[32,[51,62]]],[]],0,0,0,[[97,43],44],[[95,43],44],[[95,63,43],44],[[-1,43],[[42,[37,64]]],[]],[[97,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[97,[65,[51]],[65,[66]]],97],[[-1,-2],67,[68,69],70],[[97,-1],37,58],[[],22],[[],22],[[],22],0,0,0,[-1,[[32,[66,62]]],[]],[97,[[32,[66]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,0,0,[95,[[32,[40]]]],[[99,87],[[61,[87]]]],0,0,[95,[[5,[71]]]],[[],39],[97,39],[-1,39,[]],[[7,[5,[7]],66],97],[95,[[5,[[65,[72]]]]]],[95,73],[[[75,[99]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],[99,80],[-1,[[55,[53,62]]],[]],[97,81],[95,80],0,[97,[[32,[96]]]],0,0,0,[95,82],[[99,87,[32,[67]],32],[[61,[87]]]],0,0,0,[[97,[55,[54]]],[[55,[54]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[95]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,0,0,[-1,2,[]],[100,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,[[32,[[55,[54]]]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[[65,[96]]],[[98,[101]]]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],[[101,101],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[100,22,[55,[59]]],[[61,[60]]]],[101,[[32,[51]]]],[-1,[[32,[51,62]]],[]],[[101,43],44],[[100,43],44],[[100,63,43],44],[[101,43],44],[[-1,43],[[42,[37,64]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[101,[65,[51]],[65,[66]]],101],[[-1,-2],67,[68,69],70],[[101,-1],37,58],[[],22],[[],22],[[],22],0,0,0,[101,[[32,[66]]]],[-1,[[32,[66,62]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],0,0,[100,[[5,[71]]]],[[],39],[101,39],[-1,39,[]],0,0,0,[[-1,40,66],101,[[102,[39]]]],[[103,87],[[61,[87]]]],0,0,0,[100,[[5,[[65,[72]]]]]],[100,73],[[[75,[103]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],[100,[[32,[92]]]],[103,80],[-1,[[55,[53,62]]],[]],[101,81],[100,80],0,[101,[[32,[96]]]],[100,82],0,0,0,[[101,[55,[54]]],[[55,[54]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[100]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[-1,-1,[]],[-1,-2,[],[]],[[],22],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[[104,84,57,[65,[66]],[65,[[55,[54]]]],83],[[75,[[89,[105]]]]]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,0,0,[-1,2,[]],[106,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,7],[[81,39,[65,[7]]],[[61,[81]]]],[[107,87],[[37,[108,[32,[[37,[21,21]]]]]]]],[106,[[32,[[55,[54]]]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[[65,[96]]],[[98,[109]]]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],0,0,0,[[109,109],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[106,22,[55,[59]]],[[61,[60]]]],[-1,[[32,[51,62]]],[]],[109,[[32,[51]]]],0,0,0,[[109,43],44],[[106,43],44],[[106,63,43],44],[[-1,43],[[42,[37,64]]],[]],[[109,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[109,[65,[51]],[65,[66]]],109],[[-1,-2],67,[68,69],70],[[109,-1],37,58],[[],22],[[],22],[[],22],0,0,0,[-1,[[32,[66,62]]],[]],[109,[[32,[66]]]],[[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[106,[[32,[40]]]],[[107,87],[[61,[[5,[87]]]]]],0,0,[106,[[5,[71]]]],[109,39],[-1,39,[]],[[],39],[[7,[32,[7]],66],[[61,[109]]]],[106,[[5,[[65,[72]]]]]],[106,73],0,0,0,[[[75,[107]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],0,0,0,[109,7],[107,80],[-1,[[55,[53,62]]],[]],[109,81],[106,80],[109,[[32,[96]]]],0,0,0,[106,82],0,0,0,0,[[109,[55,[54]]],[[55,[54]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[106]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,0,0,[-1,2,[]],[110,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[110,[[32,[[55,[54]]]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[[[65,[96]]],[[98,[111]]]],[22,37],[22,37],[22,37],[[-1,57],40,[]],[[-1,58],37,[]],[[111,111],40],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[-1,-2],40,[],[]],[[110,22,[55,[59]]],[[61,[60]]]],[111,[[32,[51]]]],[-1,[[32,[51,62]]],[]],[[[75,[112]],76],[[77,[[5,[[61,[87]]]]]]]],[[112,87],22],[[111,43],44],[[110,43],44],[[110,63,43],44],[[-1,43],[[42,[37,64]]],[]],[[111,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[65,[51]],[65,[66]]],[[55,[57,62]]],[]],[[111,[65,[51]],[65,[66]]],111],[[-1,-2],67,[68,69],70],[[111,-1],37,58],[[],22],[[],22],[[],22],0,0,0,[-1,[[32,[66,62]]],[]],[111,[[32,[66]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[110,[[32,[40]]]],0,0,[110,[[5,[71]]]],[-1,39,[]],[111,39],[[],39],[[[32,[7]],66],111],0,[110,[[5,[[65,[72]]]]]],[110,73],[[[75,[112]],76],[[77,[5]]]],[-1,[[79,[7,78]]],[]],[110,[[32,[92]]]],[110,[[32,[[5,[[32,[93]]]]]]]],[112,80],[-1,[[55,[53,62]]],[]],[111,81],[110,80],0,[111,[[32,[96]]]],[110,82],0,0,0,[[111,[55,[54]]],[[55,[54]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[75,[-1]],76],[[77,[[5,[42]]]]],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[110]],[32,[[55,[54]]]]],[[61,[[55,[54]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[91,91,91],[[37,[91,91]]]],0,[113,[[42,[108,41]]]],0,0,0,[[114,115,116],[[37,[[5,[91]],[5,[91]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[114,115],[[5,[91]]]],[[114,115],[[5,[91]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[[[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[[114,115],[[5,[91]]]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[22,37],[[117,43],44],[[118,43],44],[[119,43],44],[[120,43],44],[[121,43],44],[[122,43],44],[[123,43],44],[[124,43],44],[[125,43],44],[[126,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[[114,115],[[5,[91]]]],[[114,115],[[5,[91]]]],[[114,115],[[5,[91]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[114,115],[[5,[91]]]],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],127],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[],128],[[114,115],[[5,[91]]]],[[114,115],[[5,[91]]]],[[114,115],[[5,[91]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[113]]],[[42,[113,41]]]],[[114,115],[[5,[91]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[[129,43],44],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[[],39],[[],127],[[],128],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[[114,115],[[5,[91]]]],[22,37],[[130,43],44],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[[],39],[[],127],[[],128],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[131,[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[[65,91,91],91],[[131,43],44],[[131,43],44],[[131,43],44],[[131,43],44],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[[],39],[[],39],[[],39],[116,131],0,0,0,0,[[],127],[116,128],[116,128],[116,128],[-1,7,[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[132,[65,[113]]],[[42,[113,41]]]],[[22,91,91,91,91],91],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[-1,-1,[]],[-1,-2,[],[]],[[[65,[91]],91,91],[[5,[91]]]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[[],39],[[91,91],132],[[],127],[[91,91],128],0,0,[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[[133,43],44],[[133,43],44],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[[],39],[[],127],[[],128],[-1,7,[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[134,[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[[],39],[116,134],[[114,115,116],[[5,[91]]]],[[],127],[116,128],0,[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[135,[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[[],39],[91,135],0,[[[65,[91]],91],[[5,[91]]]],[[],127],[91,128],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[113]]],[[42,[113,41]]]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[22,-1,[]],[22,-1,[]],[22,37],[[136,43],44],[-1,-1,[]],[-1,-2,[],[]],[[],22],[[],[[32,[127]]]],[-1,-2,[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[[],39],[[114,115],[[5,[91]]]],[[],127],[[],128],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[137,138],[22,-1,[]],[22,-1,[]],[22,37],[-1,-1,[]],[-1,-2,[],[]],[[],22],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,40,[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[139,81,[5,[140]]],[[98,[[32,[51]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,141],[142,142],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[[139,12,66],[[98,[[32,[51]]]]]],[139,[[98,[51]]]],[[139,[65,[[89,[18]]]]],[[98,[143]]]],[[139,144,[32,[51]]],[[98,[[32,[51]]]]]],[[139,39,[32,[51]]],[[98,[66]]]],[139,[[98,[[32,[51]]]]]],[139,[[98,[[32,[51]]]]]],[139,[[98,[51]]]],0,[[],141],[[],143],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,-1,[]],[22,37],[22,37],[22,37],[22,37],0,0,0,[[139,66,-1],[[98,[66]]],145],[[141,43],44],[[143,43],44],[[142,43],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[146,141],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,40],[[],22],[[],22],[[],22],[[],22],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[12,40],[12,40],[[139,66,66,147,147],[[98,[66]]]],0,0,[[139,148],[[98,[[32,[51]]]]]],[[139,148,[5,[7]]],[[98,[148]]]],[[139,66,-1],[[98,[66]]],145],[[139,18],[[75,[[89,[105]]]]]],[12,[[98,[[89,[149]]]]]],0,[141,37],[[139,[5,[150]],148,40],[[98,[66]]]],[[139,66,66,[32,[7]],[32,[7]],12,[5,[151]]],[[98,[66]]]],[139,[[98,[37]]]],0,[[152,146],[[98,[66]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,[[5,[91]]]],[18,[[5,[51]]]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,50,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[153,2],[-1,-2,[],[]],[-1,-2,[],[]],[[22,-1],[[98,[37]]],154],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[127,127],[155,155],[153,127],[22,-1,[]],[22,-1,[]],[22,37],[[153,43],44],[-1,-1,[]],[[108,-1],[[98,[153]]],[154,33]],[[108,-1],153,154],[-1,-2,[],[]],[-1,[[37,[156,40]]],[]],[[153,22],[[5,[108]]]],[153,22],[153,22],[[],22],[-1,-2,[],[]],[153,157],[153,[[159,[158]]]],[-1,[[47,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[153,40],[153,40],[-1,40,[]],[[],127],[153,22],[153,22],[153,[[5,[160]]]],[153,22],[[21,21],116],[153,[[0,[161]]]],[[153,22,22],108],[153,157],[-1,[[5,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[[[159,[158]]],[[98,[153]]]],[-1,50,[]],[116,[[37,[21,21]]]],[153,127],[153,108],[-1,-2,[],[]]],"c":[],"p":[[4,"Error",6],[8,"Any",2655],[8,"Error",2656],[3,"Backtrace",2657],[4,"Option",2658],[3,"UnsupportedExprSnafu",6],[3,"String",2659],[8,"Into",2660],[3,"UnsupportedVectorMatchSnafu",6],[4,"VectorMatchCardinality",2661],[3,"UnexpectedTokenSnafu",6],[3,"TokenType",2662],[3,"UnexpectedPlanExprSnafu",6],[3,"UnknownTableSnafu",6],[3,"TimeIndexNotFoundSnafu",6],[3,"ValueNotFoundSnafu",6],[3,"MultipleVectorSnafu",6],[4,"Expr",2661],[3,"ExpectExprSnafu",6],[3,"IllegalRangeSnafu",6],[15,"u32"],[15,"usize"],[3,"EmptyRangeSnafu",6],[3,"TableNameNotFoundSnafu",6],[3,"ExpectRangeSelectorSnafu",6],[3,"ZeroRangeSelectorSnafu",6],[3,"ColumnNotFoundSnafu",6],[3,"MultipleMetricMatchersSnafu",6],[3,"NoMetricMatcherSnafu",6],[3,"FunctionInvalidArgumentSnafu",6],[3,"CombineTableColumnMismatchSnafu",6],[3,"Vec",2663],[8,"Clone",2664],[3,"DataFusionPlanningSnafu",6],[3,"DeserializeSnafu",6],[3,"CatalogSnafu",6],[15,"tuple"],[3,"Compat",2665],[15,"str"],[15,"bool"],[4,"DataFusionError",2666],[4,"Result",2667],[3,"Formatter",2668],[6,"Result",2668],[8,"Debug",2668],[3,"Request",2669],[3,"Request",2669],[8,"StackError",2670],[4,"StatusCode",2671],[3,"TypeId",2655],[4,"Expr",2672],[3,"EmptyMetricExec",950],[3,"DFSchema",2673],[8,"ExecutionPlan",2674],[3,"Arc",2675],[3,"EmptyMetric",950],[8,"UserDefinedLogicalNode",2676],[8,"Hasher",2677],[3,"TaskContext",2678],[6,"SendableRecordBatchStream",2679],[6,"Result",2666],[3,"Global",2680],[4,"DisplayFormatType",2681],[3,"Error",2668],[15,"slice"],[4,"LogicalPlan",2682],[15,"u64"],[8,"Hash",2677],[8,"Sized",2683],[8,"BuildHasher",2677],[3,"MetricsSet",2684],[3,"PhysicalSortExpr",2685],[4,"Partitioning",2686],[3,"EmptyMetricStream",950],[3,"Pin",2687],[3,"Context",2688],[4,"Poll",2689],[3,"RandomState",2690],[3,"HashSet",2691],[6,"SchemaRef",2692],[6,"DFSchemaRef",2673],[3,"Statistics",2693],[3,"SessionState",2694],[8,"PhysicalPlanner",2695],[3,"HistogramFoldExec",1094],[3,"HistogramFoldStream",1094],[3,"RecordBatch",2696],[8,"MutableVector",2697],[3,"Box",2698],[3,"HistogramFold",1094],[15,"f64"],[4,"Distribution",2686],[3,"PhysicalSortRequirement",2685],[8,"PhysicalExpr",2699],[3,"InstantManipulateExec",1246],[15,"u8"],[3,"InstantManipulate",1246],[6,"Result",6],[3,"InstantManipulateStream",1246],[3,"SeriesNormalizeExec",1387],[3,"SeriesNormalize",1387],[8,"AsRef",2660],[3,"SeriesNormalizeStream",1387],[3,"PromExtensionPlanner",1518],[8,"Future",2700],[3,"RangeManipulateExec",1542],[3,"RangeManipulateStream",1542],[6,"ArrayRef",2701],[3,"RangeManipulate",1542],[3,"SeriesDivideExec",1690],[3,"SeriesDivide",1690],[3,"SeriesDivideStream",1690],[4,"ColumnarValue",2702],[6,"TimestampMillisecondArray",2703],[6,"Float64Array",2703],[15,"i64"],[3,"AvgOverTime",1859],[3,"MinOverTime",1859],[3,"MaxOverTime",1859],[3,"SumOverTime",1859],[3,"CountOverTime",1859],[3,"LastOverTime",1859],[3,"AbsentOverTime",1859],[3,"PresentOverTime",1859],[3,"StdvarOverTime",1859],[3,"StddevOverTime",1859],[4,"DataType",2704],[3,"ScalarUDF",2705],[3,"Changes",2159],[3,"Deriv",2189],[3,"ExtrapolatedRate",2219],[3,"HoltWinters",2265],[3,"IDelta",2298],[3,"PredictLinear",2329],[3,"QuantileOverTime",2360],[3,"Resets",2391],[3,"PROMQL_SERIES_COUNT",2421],[3,"Histogram",2706],[3,"PromPlanner",2446],[4,"LabelModifier",2661],[3,"PromPlannerContext",2446],[4,"ScalarFunc",2446],[3,"FunctionArgs",2446],[3,"Function",2707],[8,"FnMut",2708],[3,"EvalStmt",2661],[6,"OwnedTableReference",2709],[3,"Matchers",2710],[8,"Fn",2708],[4,"Offset",2661],[3,"BinModifier",2661],[3,"DfTableSourceProvider",2711],[3,"RangeArray",2601],[8,"IntoIterator",2712],[3,"Field",2713],[8,"Array",2701],[3,"ArrayData",2714],[3,"Int64Type",2715],[3,"DictionaryArray",2716],[3,"NullBuffer",2717],[8,"Iterator",2718],[13,"ColumnNotFound",758],[13,"UnexpectedPlanExpr",758],[13,"DataFusionPlanning",758],[13,"Deserialize",758],[13,"MultipleVector",758],[13,"ExpectExpr",758],[13,"FunctionInvalidArgument",758],[13,"CombineTableColumnMismatch",758],[13,"IllegalRange",758],[13,"UnsupportedExpr",758],[13,"UnsupportedVectorMatch",758],[13,"UnexpectedToken",758],[13,"UnknownTable",758],[13,"TimeIndexNotFound",758],[13,"ValueNotFound",758],[13,"EmptyRange",758],[13,"TableNameNotFound",758],[13,"Catalog",758],[13,"ExpectRangeSelector",758],[13,"ZeroRangeSelector",758],[13,"MultipleMetricMatchers",758],[13,"NoMetricMatcher",758],[6,"Delta",2219],[6,"Rate",2219],[6,"Increase",2219]],"b":[[353,"impl-Debug-for-Error"],[354,"impl-Display-for-Error"],[1047,"impl-UserDefinedLogicalNodeCore-for-EmptyMetric"],[1048,"impl-EmptyMetric"],[1194,"impl-HistogramFold"],[1195,"impl-UserDefinedLogicalNodeCore-for-HistogramFold"],[1341,"impl-InstantManipulate"],[1342,"impl-UserDefinedLogicalNodeCore-for-InstantManipulate"],[1468,"impl-SeriesNormalize"],[1469,"impl-UserDefinedLogicalNodeCore-for-SeriesNormalize"],[1638,"impl-UserDefinedLogicalNodeCore-for-RangeManipulate"],[1640,"impl-RangeManipulate"],[1776,"impl-UserDefinedLogicalNodeCore-for-SeriesDivide"],[1777,"impl-SeriesDivide"],[2233,"impl-Display-for-ExtrapolatedRate%3Cfalse,+false%3E"],[2234,"impl-Display-for-ExtrapolatedRate%3Ctrue,+false%3E"],[2235,"impl-Display-for-ExtrapolatedRate%3Ctrue,+true%3E"],[2236,"impl-Debug-for-ExtrapolatedRate%3CIS_COUNTER,+IS_RATE%3E"],[2245,"impl-ExtrapolatedRate%3Ctrue,+true%3E"],[2246,"impl-ExtrapolatedRate%3Ctrue,+false%3E"],[2247,"impl-ExtrapolatedRate%3Cfalse,+false%3E"],[2254,"impl-ExtrapolatedRate%3Ctrue,+true%3E"],[2255,"impl-ExtrapolatedRate%3Ctrue,+false%3E"],[2256,"impl-ExtrapolatedRate%3Cfalse,+false%3E"],[2308,"impl-Debug-for-IDelta%3CIS_RATE%3E"],[2309,"impl-Display-for-IDelta%3CIS_RATE%3E"],[2632,"impl-Array-for-RangeArray"],[2633,"impl-RangeArray"],[2636,"impl-RangeArray"],[2637,"impl-Array-for-RangeArray"]]},\
"puffin":{"doc":"","t":"AAAAADDEENNNNLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLLMMLMMLMMLMMLLLMMLLLLLLLLLLLLLLLLLNDNDNDNENDNDNDNDNNDNDGNDNDNDNDNDNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMSRSDRRRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLAIDIQQKKAAKKMMDLLLLLLLLLLMLMLLLLDNNNDNENNDLLLLLLLLLLLLMMLMLLLLLLLLLLLLMLLLMLLLLLLMLMMMLLLLLLLLLLLLLLLDIDIKKMMLLMAKKALLMMMKKLLLMDLLMLLLLLLLLMMLLLLLLLLLMDMLLMLLLLLLLLLLLLDDENNLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLDALLLLLLLMLLALMLLLLLMMALLLF","n":["blob_metadata","error","file_format","file_metadata","partial_reader","BlobMetadata","BlobMetadataBuilder","BlobMetadataBuilderError","CompressionCodec","Lz4","UninitializedField","ValidationError","Zstd","as_error_source","blob_type","blob_type","blob_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","compression_codec","compression_codec","compression_codec","create_empty","default","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","input_fields","input_fields","input_fields","into","into","into","into","length","length","length","offset","offset","offset","properties","properties","properties","sequence_number","sequence_number","sequence_number","serialize","serialize","snapshot_id","snapshot_id","snapshot_id","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","BytesToInteger","BytesToIntegerSnafu","Close","CloseSnafu","DeserializeJson","DeserializeJsonSnafu","Err","Error","Flush","FlushSnafu","InvalidBlobAreaEnd","InvalidBlobAreaEndSnafu","InvalidBlobOffset","InvalidBlobOffsetSnafu","MagicNotMatched","MagicNotMatchedSnafu","Ok","ParseStageNotMatch","ParseStageNotMatchSnafu","Read","ReadSnafu","Result","Seek","SeekSnafu","SerializeJson","SerializeJsonSnafu","UnexpectedFooterPayloadSize","UnexpectedFooterPayloadSizeSnafu","UnexpectedPuffinFileSize","UnexpectedPuffinFileSizeSnafu","UnsupportedDecompression","UnsupportedDecompressionSnafu","Write","WriteSnafu","actual","actual_file_size","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","decompression","description","expected","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","min_file_size","next","offset","offset","size","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","actual","actual_file_size","decompression","error","error","error","error","error","error","error","error","expected","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","min_file_size","offset","offset","size","DEFAULT","FLAGS_SIZE","FOOTER_PAYLOAD_COMPRESSED_LZ4","Flags","MAGIC","MAGIC_SIZE","MIN_FILE_SIZE","MIN_FOOTER_SIZE","PAYLOAD_SIZE_SIZE","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","reader","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","writer","PuffinAsyncReader","PuffinFileReader","PuffinSyncReader","Reader","Reader","blob_reader","blob_reader","file","footer","metadata","metadata","metadata","source","PuffinFileReader","blob_reader","blob_reader","borrow","borrow_mut","from","get_file_size_async","get_file_size_sync","into","metadata","metadata","metadata","new","source","try_from","try_into","type_id","validate_file_size","BytesToRead","Done","Flags","FootMagic","FooterParser","HeadMagic","ParseStage","Payload","PayloadSize","StageParser","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consume_bytes","eq","file_size","file_size","finish","flags","flags_offset","fmt","foot_magic_offset","from","from","from","from","head_magic_offset","into","into","into","into","metadata","new","new","next_to_read","offset","parse_async","parse_flags","parse_payload","parse_payload_size","parse_sync","payload_offset","payload_size","payload_size_offset","size","source","stage","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_metadata","validate_payload_size","Blob","PuffinAsyncWriter","PuffinFileWriter","PuffinSyncWriter","add_blob","add_blob","blob_metadata","blob_type","borrow","borrow_mut","data","file","finish","finish","footer","from","into","next_blob_offset","properties","properties","set_properties","set_properties","try_from","try_into","type_id","writer","PuffinFileWriter","add_blob","add_blob","blob_metadata","borrow","borrow_mut","create_blob_metadata","finish","finish","from","into","new","next_blob_offset","properties","set_properties","set_properties","try_from","try_into","type_id","write_footer_async","write_footer_sync","write_header_if_needed_async","write_header_if_needed_sync","writer","FooterWriter","blob_metadata","borrow","borrow_mut","file_properties","footer_payload","from","into","into_footer_bytes","new","try_from","try_into","type_id","write_flags","write_footer_payload_size","write_magic","write_payload","FileMetadata","FileMetadataBuilder","FileMetadataBuilderError","UninitializedField","ValidationError","as_error_source","blobs","blobs","blobs","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","create_empty","default","deserialize","eq","fmt","fmt","fmt","from","from","from","from","from","into","into","into","properties","properties","properties","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PartialReader","async","borrow","borrow_mut","from","into","is_empty","is_eof","new","offset","poll_read","poll_seek","position","position","position_in_portion","project","project_ref","read","seek","size","size","source","sync","try_from","try_into","type_id","position_after_seek"],"q":[[0,"puffin"],[5,"puffin::blob_metadata"],[93,"puffin::error"],[348,"puffin::error::Error"],[379,"puffin::file_format"],[445,"puffin::file_format::reader"],[458,"puffin::file_format::reader::file"],[476,"puffin::file_format::reader::footer"],[545,"puffin::file_format::writer"],[571,"puffin::file_format::writer::file"],[595,"puffin::file_format::writer::footer"],[612,"puffin::file_metadata"],[663,"puffin::partial_reader"],[689,"puffin::partial_reader::position"],[690,"core::error"],[691,"alloc::string"],[692,"core::result"],[693,"serde::de"],[694,"core::fmt"],[695,"core::fmt"],[696,"alloc::vec"],[697,"std::collections::hash::map"],[698,"serde::ser"],[699,"core::any"],[700,"core::any"],[701,"core::option"],[702,"core::convert"],[703,"core::clone"],[704,"core::fmt"],[705,"common_error::status_code"],[706,"core::cmp"],[707,"core::iter::traits::collect"],[708,"core::hash"],[709,"bitflags::iter"],[710,"bitflags::iter"],[711,"alloc::boxed"],[712,"core::pin"],[713,"std::io"],[714,"std::io"],[715,"futures_io::if_std"],[716,"core::marker"],[717,"std::io::error"],[718,"core::task::poll"],[719,"std::io"]],"d":["","","Format specification for Puffin files","","","Blob metadata of Puffin","Builder for <code>BlobMetadata</code>.","Error type for BlobMetadataBuilder","Compression codec used to compress the blob","Single LZ4 compression frame, with content size present","Uninitialized field","Custom validation error","Single Zstandard compression frame, with content size …","","Blob type","Blob type","Blob type","","","","","","","","","Builds a new <code>BlobMetadata</code>.","","","","","","","See <code>CompressionCodec</code>. If omitted, the data is assumed to …","See <code>CompressionCodec</code>. If omitted, the data is assumed to …","See <code>CompressionCodec</code>. If omitted, the data is assumed to …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","For Iceberg, it’ list of field IDs the blob was computed …","For Iceberg, it’ list of field IDs the blob was computed …","For Iceberg, it’ list of field IDs the blob was computed …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The length of the blob stored in the file (after …","The length of the blob stored in the file (after …","The length of the blob stored in the file (after …","The offset in the file where the blob contents start","The offset in the file where the blob contents start","The offset in the file where the blob contents start","Storage for arbitrary meta-information about the blob","Storage for arbitrary meta-information about the blob","Storage for arbitrary meta-information about the blob","For Iceberg, it’s sequence number of the Iceberg …","For Iceberg, it’s sequence number of the Iceberg …","For Iceberg, it’s sequence number of the Iceberg …","","","For Iceberg, it’s ID of the Iceberg table’s snapshot …","For Iceberg, it’s ID of the Iceberg table’s snapshot …","For Iceberg, it’s ID of the Iceberg table’s snapshot …","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BytesToInteger</code> …","","SNAFU context selector for the <code>Error::Close</code> variant","","SNAFU context selector for the <code>Error::DeserializeJson</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::Flush</code> variant","","SNAFU context selector for the <code>Error::InvalidBlobAreaEnd</code> …","","SNAFU context selector for the <code>Error::InvalidBlobOffset</code> …","","SNAFU context selector for the <code>Error::MagicNotMatched</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParseStageNotMatch</code> …","","SNAFU context selector for the <code>Error::Read</code> variant","","","SNAFU context selector for the <code>Error::Seek</code> variant","","SNAFU context selector for the <code>Error::SerializeJson</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::Write</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","<code>PuffinAsyncReader</code> defines an asynchronous reader for …","Puffin file reader, implemented <code>PuffinSyncReader</code> and …","<code>PuffinSyncReader</code> defines a synchronous reader for puffin …","","","read particular blob data based on given metadata","read particular blob data based on given metadata","","","fetch the FileMetadata","fetch the FileMetadata","The metadata of the puffin file, which is parsed from the …","The source of the puffin file","Puffin file reader, implemented <code>PuffinSyncReader</code> and …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","The metadata of the puffin file, which is parsed from the …","","The source of the puffin file","","","","","Represents a read operation that needs to be performed, …","","","","Parser for the footer of a Puffin data file","","The internal stages of parsing the footer. This enum …","","","Manages the parsing process of the file’s footer.","","","","","","","","","","","Processes the bytes that have been read according to the …","","","Total file size; used for calculating offsets to read from.","Finalizes the parsing process, ensuring all stages are …","Flags from the footer, set when the <code>Flags</code> field is parsed.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Metadata from the footer’s payload, set when the <code>Payload</code> …","","","Determines the next segment of bytes to read based on the …","","Parses the footer from the IO source in a asynchronous …","","","","Parses the footer from the IO source in a synchronous …","","Size of the footer’s payload, set when the <code>PayloadSize</code> …","","","","Current stage in the parsing sequence of the footer.","","","","","","","","","","","","","","","","Blob ready to be written","The trait for writing Puffin files asynchronously","Puffin file writer, implements both <code>PuffinSyncWriter</code> and …","The trait for writing Puffin files synchronously","Add a blob to the Puffin file","Add a blob to the Puffin file","The metadata of the blobs","The type of the blob","","","The data of the blob","","Finish writing the Puffin file","Finish writing the Puffin file","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The offset of the next blob","The properties of the file","The properties of the blob","Set the properties of the Puffin file","Set the properties of the Puffin file","","","","The writer to write to","Puffin file writer, implements both <code>PuffinSyncWriter</code> and …","","","The metadata of the blobs","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","The offset of the next blob","The properties of the file","","","","","","","","","","The writer to write to","Writer for the footer of a Puffin file.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Serializes the footer to bytes","","","","","Appends reserved flags (currently zero-initialized) to the …","","","","Metadata of a Puffin file","Builder for <code>FileMetadata</code>.","Error type for FileMetadataBuilder","Uninitialized field","Custom validation error","","Metadata for each blob in the file","Metadata for each blob in the file","Metadata for each blob in the file","","","","","","","Builds a new <code>FileMetadata</code>.","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Storage for arbitrary meta-information, like writer …","Storage for arbitrary meta-information, like writer …","Storage for arbitrary meta-information, like writer …","","","","","","","","","","","","","","<code>PartialReader</code> to perform synchronous or asynchronous reads …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns whether the portion is empty.","Returns whether the current position is at the end of the …","Creates a new <code>PartialReader</code> for the given resource.","offset of the portion in the resource","","","","Returns the current position in the portion.","The current position within the portion.","","","","","Returns the size of the portion in portion.","size of the portion in the resource","Resource for the portion. The <code>offset</code> and <code>size</code> fields are …","","","","","Calculates the new position after seeking. It checks if …"],"i":[0,0,0,0,0,0,0,0,0,7,5,5,7,5,2,2,4,2,5,4,7,2,5,4,7,2,2,4,7,2,4,7,2,2,4,2,2,4,7,4,7,5,5,4,7,7,2,5,5,5,4,7,2,2,4,2,5,4,7,2,2,4,2,2,4,2,2,4,2,2,4,4,7,2,2,4,2,4,7,5,7,2,5,4,7,2,5,4,7,2,5,4,7,20,0,20,0,20,0,54,0,20,0,20,0,20,0,20,0,54,20,0,20,0,0,20,0,20,0,20,0,20,0,20,0,20,0,27,29,20,20,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,24,25,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,25,20,27,24,25,27,28,29,31,32,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,29,20,31,32,28,20,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,33,34,35,36,37,24,38,25,40,41,27,28,29,31,32,20,84,85,86,87,88,89,90,91,92,93,94,84,87,88,89,90,91,95,92,86,93,94,84,96,85,97,98,85,97,98,96,47,0,47,0,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,99,100,99,100,0,0,99,100,59,59,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,66,66,66,0,66,0,66,66,0,70,67,71,66,70,67,71,66,66,66,67,66,70,67,67,67,67,66,67,70,67,71,66,67,70,67,71,66,67,70,67,67,71,70,67,67,67,70,67,67,67,71,70,67,66,70,67,71,66,70,67,71,66,70,67,71,66,67,67,0,0,0,0,101,102,73,72,72,72,72,0,101,102,0,72,72,73,73,72,101,102,72,72,72,73,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,78,78,78,77,55,77,55,77,78,55,77,78,77,55,77,55,77,77,77,55,55,55,78,78,55,77,78,78,78,55,77,78,77,55,77,55,55,77,78,55,77,78,55,77,78,55,77,78,0,0,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,0,79,79,79,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[[2,3],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[6,[4,5]]]],[2,2],[4,4],[7,7],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[2,7],2],0,0,[[],2],[[],2],[-1,[[6,[4]]],9],[-1,[[6,[7]]],9],[[4,4],10],[[7,7],10],[[5,11],12],[[5,11],12],[[4,11],12],[[7,11],12],[[7,11],12],[-1,-1,[]],[13,5],[3,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,[15,[14]]],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,16],2],0,0,[[2,16],2],0,0,[[2,[17,[3,3]]],2],0,0,[[2,16],2],0,0,[[4,-1],6,18],[[7,-1],6,18],[[2,16],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,3,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,21],[-1,1,[]],[20,[[23,[22]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,20],[[[25,[-1]]],20,[[26,[3]]]],[[[27,[-1,-2]]],20,[[26,[3]]],[[26,[3]]]],[[[28,[-1]]],20,[[26,[14]]]],[[[29,[-1,-2]]],20,[[26,[30]]],[[26,[30]]]],[[[31,[-1]]],20,[[26,[16]]]],[[[32,[-1]]],20,[[26,[30]]]],[20,[[23,[1]]]],[33,33],[34,34],[35,35],[36,36],[37,37],[24,24],[38,38],[[[25,[-1]]],[[25,[-1]]],39],[40,40],[41,41],[[[27,[-1,-2]]],[[27,[-1,-2]]],39,39],[[[28,[-1]]],[[28,[-1]]],39],[[[29,[-1,-2]]],[[29,[-1,-2]]],39,39],[[[31,[-1]]],[[31,[-1]]],39],[[[32,[-1]]],[[32,[-1]]],39],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[20,42,[15,[3]]],8],0,[20,43],0,[24,[[6,[-1,20]]],[]],[[[25,[-1]]],[[6,[-2,20]]],[[26,[3]]],[]],[[[27,[-1,-2]]],[[6,[-3,20]]],[[26,[3]]],[[26,[3]]],[]],[[[28,[-1]]],[[6,[-2,20]]],[[26,[14]]],[]],[[[29,[-1,-2]]],[[6,[-3,20]]],[[26,[30]]],[[26,[30]]],[]],[[[31,[-1]]],[[6,[-2,20]]],[[26,[16]]],[]],[[[32,[-1]]],[[6,[-2,20]]],[[26,[30]]],[]],[[33,11],12],[[34,11],12],[[35,11],12],[[36,11],12],[[37,11],12],[[24,11],12],[[38,11],12],[[[25,[-1]],11],12,44],[[40,11],12],[[41,11],12],[[[27,[-1,-2]],11],12,44,44],[[[28,[-1]],11],12,44],[[[29,[-1,-2]],11],12,44,44],[[[31,[-1]],11],12,44],[[[32,[-1]],11],12,44],[[20,11],12],[[20,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,20],[34,20],[35,20],[36,20],[37,20],[24,20],[38,20],[[[25,[-1]]],20,[[26,[3]]]],[40,20],[41,20],[[[27,[-1,-2]]],20,[[26,[3]]],[[26,[3]]]],[[[28,[-1]]],20,[[26,[14]]]],[[[29,[-1,-2]]],20,[[26,[30]]],[[26,[30]]]],[[[31,[-1]]],20,[[26,[16]]]],[[[32,[-1]]],20,[[26,[30]]]],0,[20,[[23,[45]]]],0,0,0,[20,[[23,[1]]]],[20,46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],47],[[47,47],47],[[47,47],8],[[47,47],47],[[47,47],8],[47,48],[47,48],[[47,47],47],[[47,47],8],[-1,-2,[],[]],[-1,-2,[],[]],[47,47],[[-1,-2],8,[],[]],[[47,47],49],[47,47],[[47,47],10],[[47,47],47],[[],47],[[47,47],10],[[47,-1],8,50],[[47,11],12],[[47,11],12],[[47,11],12],[[47,11],12],[[47,11],12],[-1,-1,[]],[48,[[23,[47]]]],[48,47],[48,47],[48,47],[-1,47,50],[43,[[23,[47]]]],[[47,-1],8,51],[[47,47],8],[[47,47],47],[[47,47],10],[-1,-2,[],[]],[47],[47,10],[47,10],[47,[[52,[47]]]],[47,[[53,[47]]]],[47,47],[[47,47],[[23,[49]]]],0,[[47,47],8],[[47,47,10],8],[[47,47],47],[[47,47],8],[[47,47],47],[-1,-2,[],[]],[[47,47],8],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[[47,47],47],0,0,0,0,0,0,[[-1,4],54,[]],[[-1,4],54,[]],0,0,[-1,[[54,[55]]],[]],[-1,[[58,[[57,[56]]]]],[]],0,0,0,[[[59,[-1]],4],54,[60,61]],[[[59,[-1]],4],54,[62,63,64,65]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[[[59,[-1]]],[[54,[30]]],[62,63,65,64]],[[[59,[-1]]],[[54,[30]]],[60,61]],[-1,-2,[],[]],[[[59,[-1]]],[[54,[55]]],[60,61]],[[[59,[-1]]],[[58,[[57,[56]]]]],[62,63,64,65]],0,[-1,[[59,[-1]]],[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[30,[[54,[8]]]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[[-1,-2],8,[],[]],[[67,[69,[68]]],[[54,[8]]]],[[66,66],10],0,0,[67,[[54,[55]]]],0,[67,30],[[66,11],12],[67,30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[67,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,30],[[70,[-1]]],[]],[30,67],[67,[[23,[71]]]],0,[[[70,[-1]]],[[54,[55]]],[62,63,64]],[[[69,[68]]],[[54,[47]]]],[[67,[69,[68]]],[[54,[55]]]],[[[69,[68]]],[[54,[30]]]],[[[70,[-1]]],[[54,[55]]],[60,61]],[67,30],0,[67,30],0,0,0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[67,[[54,[8]]]],[67,[[54,[8]]]],0,0,0,0,[[-1,[72,[-2]]],[[54,[8]]],[],60],[[-1,[72,[-2]]],[[58,[[57,[56]]]]],[],[62,65]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[54,[8]]],[]],[-1,[[58,[[57,[56]]]]],[]],0,[-1,-1,[]],[-1,-2,[],[]],0,0,0,[[-1,[17,[3,3]]],8,[]],[[-1,[17,[3,3]]],8,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],0,0,[[[73,[-1]],[72,[-2]]],[[54,[8]]],74,60],[[[73,[-1]],[72,[-2]]],[[58,[[57,[56]]]]],[75,64,65],[62,65]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[-1]],3,[17,[3,3]],30],4,[]],[[[73,[-1]]],[[54,[8]]],74],[[[73,[-1]]],[[58,[[57,[56]]]]],[75,64,65]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[73,[-1]]],[]],0,0,[[[73,[-1]],[17,[3,3]]],8,[75,64,65]],[[[73,[-1]],[17,[3,3]]],8,74],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[[[73,[-1]]],[[54,[8]]],[75,64]],[[[73,[-1]]],[[54,[8]]],74],[[[73,[-1]]],[[54,[8]]],[75,64]],[[[73,[-1]]],[[54,[8]]],74],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[76,[[54,[[15,[68]]]]]],[-1,-1,[]],[-1,-2,[],[]],[76,[[54,[[15,[68]]]]]],[[[15,[4]],[17,[3,3]]],76],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[[76,[15,[68]]],8],[[76,14,[15,[68]]],8],[[76,[15,[68]]],8],[[76,[15,[68]],[69,[68]]],8],0,0,0,0,0,[-1,1,[]],[[77,[15,[4]]],77],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,[[6,[55,78]]]],[55,55],[77,77],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[],77],[[],77],[-1,[[6,[55]]],9],[[55,55],10],[[55,11],12],[[78,11],12],[[78,11],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,78],[13,78],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[77,[17,[3,3]]],77],0,0,[[55,-1],6,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[[[79,[-1]]],10,[]],[[[79,[-1]]],10,[]],[[-1,30,30],[[79,[-1]]],[]],0,[[[58,[[79,[-1]]]],80,[69,[68]]],[[82,[[81,[42]]]]],[62,63,64]],[[[58,[[79,[-1]]]],80,83],[[82,[[81,[30]]]]],[62,63,64]],0,[[[79,[-1]]],30,[]],0,[[[58,[[79,[-1]]]]],[[0,[-1]]],[]],[[[58,[[79,[-1]]]]],[[0,[-1]]],[]],[[[79,[-1]],[69,[68]]],[[81,[42]]],[60,61]],[[[79,[-1]],83],[[81,[30]]],[60,61]],[[[79,[-1]]],30,[]],0,0,0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,19,[]],[[83,30,30],[[81,[30]]]]],"c":[],"p":[[8,"Error",690],[3,"BlobMetadataBuilder",5],[3,"String",691],[3,"BlobMetadata",5],[4,"BlobMetadataBuilderError",5],[4,"Result",692],[4,"CompressionCodec",5],[15,"tuple"],[8,"Deserializer",693],[15,"bool"],[3,"Formatter",694],[6,"Result",694],[3,"UninitializedFieldError",695],[15,"i32"],[3,"Vec",696],[15,"i64"],[3,"HashMap",697],[8,"Serializer",698],[3,"TypeId",699],[4,"Error",93],[8,"Any",699],[3,"Backtrace",700],[4,"Option",701],[3,"MagicNotMatchedSnafu",93],[3,"UnsupportedDecompressionSnafu",93],[8,"Into",702],[3,"ParseStageNotMatchSnafu",93],[3,"UnexpectedFooterPayloadSizeSnafu",93],[3,"UnexpectedPuffinFileSizeSnafu",93],[15,"u64"],[3,"InvalidBlobOffsetSnafu",93],[3,"InvalidBlobAreaEndSnafu",93],[3,"SeekSnafu",93],[3,"ReadSnafu",93],[3,"WriteSnafu",93],[3,"FlushSnafu",93],[3,"CloseSnafu",93],[3,"BytesToIntegerSnafu",93],[8,"Clone",703],[3,"SerializeJsonSnafu",93],[3,"DeserializeJsonSnafu",93],[15,"usize"],[15,"str"],[8,"Debug",694],[8,"StackError",704],[4,"StatusCode",705],[3,"Flags",379],[15,"u32"],[4,"Ordering",706],[8,"IntoIterator",707],[8,"Hasher",708],[3,"Iter",709],[3,"IterNames",709],[6,"Result",93],[3,"FileMetadata",612],[8,"Future",710],[3,"Box",711],[3,"Pin",712],[3,"PuffinFileReader",458],[8,"Read",713],[8,"Seek",713],[8,"AsyncRead",714],[8,"AsyncSeek",714],[8,"Unpin",715],[8,"Send",715],[4,"ParseStage",476],[3,"StageParser",476],[15,"u8"],[15,"slice"],[3,"FooterParser",476],[3,"BytesToRead",476],[3,"Blob",545],[3,"PuffinFileWriter",571],[8,"Write",713],[8,"AsyncWrite",714],[3,"FooterWriter",595],[3,"FileMetadataBuilder",612],[4,"FileMetadataBuilderError",612],[3,"PartialReader",663],[3,"Context",716],[6,"Result",717],[4,"Poll",718],[4,"SeekFrom",713],[13,"ParseStageNotMatch",348],[13,"UnexpectedPuffinFileSize",348],[13,"UnsupportedDecompression",348],[13,"Seek",348],[13,"Read",348],[13,"Write",348],[13,"Flush",348],[13,"Close",348],[13,"BytesToInteger",348],[13,"SerializeJson",348],[13,"DeserializeJson",348],[13,"MagicNotMatched",348],[13,"UnexpectedFooterPayloadSize",348],[13,"InvalidBlobOffset",348],[13,"InvalidBlobAreaEnd",348],[8,"PuffinSyncReader",445],[8,"PuffinAsyncReader",445],[8,"PuffinSyncWriter",545],[8,"PuffinAsyncWriter",545]],"b":[[41,"impl-Display-for-BlobMetadataBuilderError"],[42,"impl-Debug-for-BlobMetadataBuilderError"],[44,"impl-Debug-for-CompressionCodec"],[45,"impl-Display-for-CompressionCodec"],[47,"impl-From%3CUninitializedFieldError%3E-for-BlobMetadataBuilderError"],[48,"impl-From%3CString%3E-for-BlobMetadataBuilderError"],[228,"impl-Display-for-Error"],[229,"impl-Debug-for-Error"],[393,"impl-Flags-for-Flags"],[394,"impl-Flags"],[408,"impl-Binary-for-Flags"],[409,"impl-Octal-for-Flags"],[410,"impl-UpperHex-for-Flags"],[411,"impl-LowerHex-for-Flags"],[412,"impl-Debug-for-Flags"],[415,"impl-Flags-for-Flags"],[416,"impl-Flags"],[459,"impl-PuffinSyncReader%3C\'a%3E-for-PuffinFileReader%3CR%3E"],[460,"impl-PuffinAsyncReader%3C\'a%3E-for-PuffinFileReader%3CR%3E"],[467,"impl-PuffinSyncReader%3C\'a%3E-for-PuffinFileReader%3CR%3E"],[468,"impl-PuffinAsyncReader%3C\'a%3E-for-PuffinFileReader%3CR%3E"],[572,"impl-PuffinSyncWriter-for-PuffinFileWriter%3CW%3E"],[573,"impl-PuffinAsyncWriter-for-PuffinFileWriter%3CW%3E"],[578,"impl-PuffinSyncWriter-for-PuffinFileWriter%3CW%3E"],[579,"impl-PuffinAsyncWriter-for-PuffinFileWriter%3CW%3E"],[585,"impl-PuffinAsyncWriter-for-PuffinFileWriter%3CW%3E"],[586,"impl-PuffinSyncWriter-for-PuffinFileWriter%3CW%3E"],[637,"impl-Display-for-FileMetadataBuilderError"],[638,"impl-Debug-for-FileMetadataBuilderError"],[642,"impl-From%3CString%3E-for-FileMetadataBuilderError"],[643,"impl-From%3CUninitializedFieldError%3E-for-FileMetadataBuilderError"]]},\
"query":{"doc":"","t":"CCCCCAAAAAAAAAAAAAAAAAAAENLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLFLLLLLLMALLLFLLLLLLLLLLLLLLALMLLLLMMMMLLLLLLLNDNDNDNDENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMDLLLLLLLLMLLLLLLLLLLLLLFMMMLLLLLLLLDDDAMAMMAAMDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLDNENNNNGNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLMLMMLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLNDDDENNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIKIKDDDDDDDDDMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLRDDRRRDDDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKIKIGMMMKNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLMLLLLLLLLKLLLMLLLLLLLDIDDGDMMKLLLLMLLLLLLALLLLKMLLKLLLLLLLLLLLLLLLMKLLAMKMMMLMKKKFKMAMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLMLMLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLLFLDDLMLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLAAANNEENGNNNDDDDDNDMMMFMLMLLLLLLLLLLLLLLLLLLMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMMMLLLLLMMMMMMLMMLLLLMMMMMMMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLMLLLLLLLLLLFLLLLLLLLFLLMLLLLLLLLLLFFMLLMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLIGMKMMRRRRRRHRRRRRHRFFFFFFFFFFFFFAFFFFFFFFFFFGIGMKKMM","n":["DfContextProviderAdapter","QueryEngine","QueryEngineContext","QueryEngineFactory","QueryEngineRef","dataframe","datafusion","dist_plan","error","executor","logical_optimizer","metrics","optimizer","parser","physical_optimizer","physical_planner","physical_wrapper","plan","planner","query_engine","range_select","region_query","sql","table_mutation","DataFrame","DataFusion","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatafusionQueryEngine","DfContextProviderAdapter","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","convert_filter_to_df_filter","create_physical_plan","delete","deref","deref_mut","describe","drop","engine_state","error","exec_dml_statement","exec_query_plan","execute","execute_show_with_filter","execute_stream","find_table","from","from_subset","init","insert","into","into_request","into_request","is_in_subset","name","new","optimize","optimize_physical_plan","planner","planner","plugins","read_table","register_aggregate_function","register_function","register_udf","session_state","state","table_provider","tables","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ConvertDfRecordBatchStream","ConvertDfRecordBatchStreamSnafu","ConvertSchema","ConvertSchemaSnafu","Datafusion","DatafusionSnafu","ExecutePhysicalPlan","ExecutePhysicalPlanSnafu","InnerError","PhysicalPlanDowncast","PhysicalPlanDowncastSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","error","location","location","location","location","location","source","source","source","DfContextProviderAdapter","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","engine_state","from","from_subset","get_aggregate_meta","get_function_meta","get_table_provider","get_variable_type","get_window_meta","init","into","into_request","into_request","is_in_subset","options","resolve_tables","session_state","table_provider","tables","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","DistExtensionPlanner","DistPlannerAnalyzer","MergeScanLogicalPlan","analyzer","catalog_manager","commutativity","input","is_placeholder","merge_scan","planner","region_query_handler","DistPlannerAnalyzer","Expanded","PlanRewriter","RewriterStatus","Unexpanded","analyze","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cmp","compare","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_parent","handle_subquery","init","init","init","inspect_plan_with_subquery","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_expanded","is_in_subset","is_in_subset","is_in_subset","level","maybe_set_partitions","mutate","name","partial_cmp","partition_cols","pop_stack","pre_visit","set_expanded","set_unexpanded","should_expand","stack","stage","status","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transform_subquery","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Categorizer","Commutative","Commutativity","ConditionalCommutative","NonCommutative","PartialCommutative","TransformedCommutative","Transformer","Unimplemented","Unsupported","alloc","borrow","borrow","borrow_mut","borrow_mut","check_expr","check_extension_plan","check_partition","check_plan","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","partial_commutative_transformer","phantom","ptr","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","MergeScanExec","MergeScanLogicalPlan","MergeScanMetric","arrow_schema","arrow_schema_to_schema","arrow_schema_without_metadata","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","finish_time","finish_time","first_consume_time","first_consume_time","fmt","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","inputs","inputs","into","into","into","into_logical_plan","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_placeholder","is_placeholder","metric","metrics","name","name","name","new","new","new","output_ordering","output_partitioning","output_rows","prevent_predicate_push_down_columns","ready_time","ready_time","record_output_batch_rows","region_query_handler","regions","schema","schema","schema","schema","statistics","substrait_plan","table","to_owned","to_owned","to_stream","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","Base","DistExtensionPlanner","TableNameExtractor","TableNameRewriter","TableType","Temporary","View","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_manager","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","extract_full_table_name","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_regions","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","optimize_input_logical_plan","plan_extension","plan_with_full_table_name","pre_visit","region_query_handler","rewrite_table_name","serialize","table_name","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AddSystemTimeOverflow","AddSystemTimeOverflowSnafu","BuildBackend","BuildBackendSnafu","BuildRegex","BuildRegexSnafu","Catalog","CatalogNotFound","CatalogNotFoundSnafu","CatalogSnafu","ColumnSchemaIncompatible","ColumnSchemaIncompatibleSnafu","ColumnSchemaNoDefault","ColumnSchemaNoDefaultSnafu","ConvertDatafusionSchema","ConvertDatafusionSchemaSnafu","ConvertSchema","ConvertSchemaSnafu","ConvertSqlType","ConvertSqlTypeSnafu","ConvertSqlValue","ConvertSqlValueSnafu","CreateRecordBatch","CreateRecordBatchSnafu","CreateSchema","CreateSchemaSnafu","DataFusion","DataFusionSnafu","EncodeSubstraitLogicalPlan","EncodeSubstraitLogicalPlanSnafu","Err","Error","InferSchema","InferSchemaSnafu","ListObjects","ListObjectsSnafu","MissingRequiredField","MissingRequiredFieldSnafu","MissingTableMutationHandler","MissingTableMutationHandlerSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","MultipleStatements","MultipleStatementsSnafu","Ok","ParseFileFormat","ParseFileFormatSnafu","ParseFloat","ParseFloatSnafu","ParseSql","ParseSqlSnafu","ParseTimestamp","ParseTimestampSnafu","PlanSql","PlanSqlSnafu","QueryAccessDenied","QueryAccessDeniedSnafu","QueryExecution","QueryExecutionSnafu","QueryParse","QueryParseSnafu","QueryPlan","QueryPlanSnafu","RangeQuery","RangeQuerySnafu","RegionQuery","RegionQuerySnafu","RemoteRequest","RemoteRequestSnafu","Result","RoutePartition","RoutePartitionSnafu","SchemaNotFound","SchemaNotFoundSnafu","Sql","SqlSnafu","TableMutation","TableMutationSnafu","TableNotFound","TableNotFoundSnafu","TimeIndexNotFound","TimeIndexNotFoundSnafu","UnexpectedOutputKind","UnexpectedOutputKindSnafu","Unimplemented","UnimplementedSnafu","UnknownTable","UnknownTableSnafu","UnsupportedExpr","UnsupportedExprSnafu","VectorComputation","VectorComputationSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","file_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","got","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","name","name","next","operation","query","query","raw","raw","schema","schema","source","status_code","table","table","table","table_name","table_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","column","column","datatype","duration","error","error","error","error","error","expected","file_type","got","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","name","name","operation","query","query","raw","raw","schema","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table","table_name","table_type","value","QueryExecutor","execute_stream","LogicalOptimizer","optimize","METRIC_CREATE_PHYSICAL_ELAPSED","METRIC_EXEC_PLAN_ELAPSED","METRIC_MERGE_SCAN_ERRORS_TOTAL","METRIC_MERGE_SCAN_POLL_ELAPSED","METRIC_MERGE_SCAN_REGIONS","METRIC_OPTIMIZE_LOGICAL_ELAPSED","METRIC_OPTIMIZE_PHYSICAL_ELAPSED","METRIC_PARSE_PROMQL_ELAPSED","METRIC_PARSE_SQL_ELAPSED","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","order_hint","string_normalization","type_conversion","OrderHintRule","OrderHintVisitor","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","name","optimize","order_expr","pre_visit","set_ordering_hint","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_optimize","type_id","type_id","vzip","vzip","StringNormalizationConverter","StringNormalizationRule","analyze","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","mutate","name","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","trim_utf_expr","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","TypeConversionRule","TypeConverter","analyze","borrow","borrow","borrow_mut","borrow_mut","cast_scalar_value","column_type","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_type","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","mutate","name","schema","string_to_timestamp_ms","timestamp_to_timestamp_ms_expr","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","ANALYZE_NODE_NAME","Analyze","AnalyzeExpr","DEFAULT_LOOKBACK","DEFAULT_LOOKBACK_STRING","EXPLAIN_NODE_NAME","Explain","ExplainExpr","PromQuery","Promql","QueryLanguageParser","QueryStatement","Sql","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","children","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_extension_node","default","define_node_ast_extension","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","end","eq","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","new","new","parse_promql","parse_promql_timestamp","parse_sql","post_process","query","start","step","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_type","value_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","PhysicalOptimizer","optimize_physical_plan","PhysicalPlanner","create_physical_plan","PhysicalPlanWrapper","PhysicalPlanWrapperRef","alloc","phantom","ptr","wrap","DfPlan","LogicalPlan","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","display_indent","drop","fmt","from","from","from_ref","from_subset","get_param_types","init","into","into_request","into_request","is_in_subset","replace_params_with_values","schema","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DfLogicalPlanner","LogicalPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","engine_state","from","from_subset","init","into","into_request","into_request","is_in_subset","new","plan","plan","plan_pql","plan_sql","session_state","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DescribeResult","QueryEngine","QueryEngineContext","QueryEngineFactory","QueryEngineRef","QueryEngineState","aggregate_functions","alloc","as_any","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","context","deref","deref","deref_mut","deref_mut","describe","df_context","drop","drop","execute","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","logical_plan","name","new","new_with_plugins","options","phantom","planner","plugins","ptr","query_ctx","query_engine","query_engine","read_table","register_aggregate_function","register_function","register_functions","register_udf","schema","state","state","table_mutation_handler","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","QueryEngineContext","borrow","borrow_mut","build_task_ctx","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","new","query_ctx","query_ctx","state","state","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","QueryOptions","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","disallow_cross_schema_query","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate_catalog_and_schema","vzip","DfQueryPlanner","QueryEngineState","aggregate_function","aggregate_functions","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","catalog_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_physical_plan","deref","deref","deref_mut","deref_mut","df_context","disallow_cross_schema_query","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","physical_planner","plugins","read_table","register_aggregate_function","register_udf","remove_analyzer_rule","session_state","table_mutation_handler","table_mutation_handler","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","plan","plan_rewrite","planner","Const","Done","ExecutionState","Fill","Linear","Millisecond","Null","Prev","ProducingOutput","RangeFn","RangeFnExec","RangeSelect","RangeSelectExec","RangeSelectStream","ReadingInput","SeriesState","align","align","align","align_to_calendar","align_ts_accumulator","apply_fill_strategy","args","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","by","by","by_schema","by_schema","cast_scalar_values","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_physical_expr_list","data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate_many","exec_state","execute","expr","expr","expressions","expressions","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_template","from_template","generate_output","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","init","init","init","init","input","input","input","inputs","inputs","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","metric","metric","metrics","modify_map","name","name","name","need_cast","need_cast","output_num_rows","output_ordering","output_partitioning","partial_cmp","poll_next","prevent_predicate_push_down_columns","random_state","range","range","range_exec","range_exec","range_expr","required_input_distribution","row","row_converter","schema","schema","schema","schema","schema","schema","schema","schema_before_project","schema_before_project","schema_before_project","schema_project","schema_project","schema_project","series_map","statistics","time_index","time_index","time_index","to_execution_plan","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_str","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_range_context","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_new_children","RangeExprRewriter","RangePlanRewriter","align","borrow","borrow","borrow_mut","borrow_mut","by","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","dispose_parse_error","drop","drop","from","from","from_subset","from_subset","get_index_by","get_range_expr","have_range_in_exprs","init","init","input_plan","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","mutate","new","parse_expr_list","parse_str_expr","range_fn","rewrite","rewrite_logical_plan","sub_aggr","table_provider","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","RangeSelectPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","plan_extension","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionQueryHandler","RegionQueryHandlerRef","alloc","do_get","phantom","ptr","COLUMN_DEFAULT_COLUMN","COLUMN_KEY_COLUMN","COLUMN_NAME_COLUMN","COLUMN_NULLABLE_COLUMN","COLUMN_SEMANTIC_TYPE_COLUMN","COLUMN_TYPE_COLUMN","DESCRIBE_TABLE_OUTPUT_SCHEMA","GREPTIME_TIMESTAMP","NULLABLE_NO","NULLABLE_YES","PRI_KEY","SCHEMAS_COLUMN","SHOW_CREATE_TABLE_OUTPUT_SCHEMA","TABLES_COLUMN","check_file_to_table_schema_compatibility","describe_column_defaults","describe_column_keys","describe_column_names","describe_column_nullables","describe_column_semantic_types","describe_column_types","describe_table","file_column_schemas_to_table","get_table_types","infer_file_table_schema","parse_file_table_format","prepare_file_table_files","show_create_table","show_create_table","show_databases","show_tables","column_option_def","create_column_def","create_sql_options","create_table_constraints","create_table_stmt","number_value","sql_option","string_value","AffectedRows","TableMutationHandler","TableMutationHandlerRef","alloc","delete","insert","phantom","ptr"],"q":[[0,"query"],[24,"query::dataframe"],[52,"query::datafusion"],[105,"query::datafusion::error"],[292,"query::datafusion::error::InnerError"],[301,"query::datafusion::planner"],[336,"query::dist_plan"],[347,"query::dist_plan::analyzer"],[449,"query::dist_plan::commutativity"],[511,"query::dist_plan::merge_scan"],[651,"query::dist_plan::planner"],[772,"query::error"],[2189,"query::error::Error"],[2285,"query::executor"],[2287,"query::logical_optimizer"],[2289,"query::metrics"],[2514,"query::optimizer"],[2517,"query::optimizer::order_hint"],[2570,"query::optimizer::string_normalization"],[2620,"query::optimizer::type_conversion"],[2675,"query::parser"],[2902,"query::physical_optimizer"],[2904,"query::physical_planner"],[2906,"query::physical_wrapper"],[2912,"query::plan"],[2946,"query::planner"],[2977,"query::query_engine"],[3057,"query::query_engine::context"],[3087,"query::query_engine::options"],[3117,"query::query_engine::state"],[3186,"query::range_select"],[3189,"query::range_select::plan"],[3516,"query::range_select::plan_rewrite"],[3578,"query::range_select::planner"],[3602,"query::region_query"],[3608,"query::sql"],[3639,"query::sql::show_create_table"],[3647,"query::table_mutation"],[3655,"async_compat"],[3656,"tonic::request"],[3657,"tonic::request"],[3658,"core::result"],[3659,"core::any"],[3660,"core::any"],[3661,"datafusion_expr::expr"],[3662,"core::future::future"],[3663,"alloc::boxed"],[3664,"core::pin"],[3665,"datafusion_common::table_reference"],[3666,"table::table"],[3667,"alloc::string"],[3668,"datatypes::vectors"],[3669,"std::collections::hash::map"],[3670,"session::context"],[3671,"datafusion_expr::logical_plan::dml"],[3672,"common_query"],[3673,"common_recordbatch::recordbatch"],[3674,"common_query::physical_plan"],[3675,"alloc::sync"],[3676,"common_recordbatch"],[3677,"common_base"],[3678,"common_function::scalars::aggregate"],[3679,"common_function::scalars::function"],[3680,"common_query::logical_plan::udf"],[3681,"core::error"],[3682,"snafu::backtrace_inert"],[3683,"alloc::vec"],[3684,"core::fmt"],[3685,"core::fmt"],[3686,"common_error::status_code"],[3687,"datafusion_expr::udaf"],[3688,"datafusion_expr::udf"],[3689,"datafusion_common::table_reference"],[3690,"datafusion_common::error"],[3691,"arrow_schema::datatype"],[3692,"datafusion_expr::udwf"],[3693,"datafusion_common::config"],[3694,"datafusion_common::table_reference"],[3695,"datafusion::execution::context"],[3696,"datafusion_sql::parser"],[3697,"datafusion_expr::logical_plan::plan"],[3698,"core::cmp"],[3699,"datafusion_expr::logical_plan::plan"],[3700,"datafusion_common::tree_node"],[3701,"arrow_schema::schema"],[3702,"datatypes::schema"],[3703,"arrow_schema::schema"],[3704,"core::hash"],[3705,"datafusion_execution::task"],[3706,"datafusion_execution::stream"],[3707,"alloc::alloc"],[3708,"datafusion_physical_plan::metrics::value"],[3709,"datafusion_physical_plan::display"],[3710,"core::fmt"],[3711,"core::hash"],[3712,"common_meta::table_name"],[3713,"store_api::storage::descriptors"],[3714,"common_base::bytes"],[3715,"datafusion_physical_plan::metrics"],[3716,"datafusion_physical_expr::partitioning"],[3717,"std::collections::hash::map"],[3718,"datafusion_common::dfschema"],[3719,"datafusion_common::dfschema"],[3720,"serde::de"],[3721,"catalog"],[3722,"datafusion::physical_planner"],[3723,"datafusion_common::tree_node"],[3724,"core::convert"],[3725,"core::time"],[3726,"datatypes::data_type"],[3727,"core::clone"],[3728,"core::fmt"],[3729,"prometheus::histogram"],[3730,"prometheus::counter"],[3731,"datafusion_expr::expr"],[3732,"datafusion_common::scalar"],[3733,"common_time::timestamp"],[3734,"promql_parser::parser::ast"],[3735,"promql_parser::parser::ast"],[3736,"promql_parser::parser::value"],[3737,"core::fmt"],[3738,"datafusion::dataframe"],[3739,"datafusion_optimizer::analyzer"],[3740,"arrow_array::array::primitive_array"],[3741,"datafusion_physical_expr::physical_expr"],[3742,"arrow_array::record_batch"],[3743,"arrow_array::array"],[3744,"core::task::wake"],[3745,"core::task::poll"],[3746,"datafusion_physical_expr::partitioning"],[3747,"datatypes::schema::column_schema"],[3748,"datatypes::vectors"],[3749,"datatypes::schema::raw"],[3750,"common_datasource::file_format"],[3751,"sql::statements::create"],[3752,"sql::statements::show"],[3753,"sql::statements::show"],[3754,"sqlparser::ast::ddl"],[3755,"sqlparser::ast"],[3756,"table::requests"],[3757,"table::requests"]],"d":["","","","","","","Planner, QueryEngine implementations based on DataFusion.","","","","","","","","","","","","","","","","","","DataFrame represents a logical set of rows with the same …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a table in memory and executes a show statement on …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Note in SQL queries, aggregate names are looked up using …","","","","","","","","","","","","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>InnerError::ConvertSchema</code> …","","SNAFU context selector for the <code>InnerError::Datafusion</code> …","","SNAFU context selector for the …","Inner error of datafusion based query engine.","","SNAFU context selector for the …","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","In logical plan phase it only contains one input","If this plan is a placeholder","","ExtensionPlanner implementation for distributed planner","","","","","Status of the rewriter to mark if the current pass is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Current level in the tree","","ascend","","","Partition columns of the table in current pass","pop one stack item and reduce the level by 1","descend","","","Return true if should stop and expand. The input plan is …","Simulated stack for the <code>rewrite</code> recursion","Stages to be expanded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For unrelated plans like DDL","","","","","","","","Return true if the given expr and partition cols satisfied …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nanosecond elapsed till the scan operator finished …","","Nanosecond elapsed till the first record batch emitted …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","In logical plan phase it only contains one input","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a LogicalPlan::Extension node from this merge scan …","","","","","","","","","","","If this plan is a placeholder","","","","","","","","","","","Count of rows fetched from remote","","","Nanosecond elapsed till the scan operator is ready to emit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ordinary physical table.","","Visitor to extract table name from logical plan (TableScan …","","Indicates the type of this table for metadata/catalog …","A transient table.","A non-materialised table that itself uses a query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract fully resolved table name from logical plan","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Apply the fully resolved table name to the TableScan plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AddSystemTimeOverflow</code>…","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildRegex</code> variant","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnSchemaNoDefault</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertSchema</code> variant","","SNAFU context selector for the <code>Error::ConvertSqlType</code> …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::CreateSchema</code> variant","","SNAFU context selector for the <code>Error::DataFusion</code> variant","","SNAFU context selector for the …","Contains the error value","","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MultipleStatements</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ParseFloat</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::ParseTimestamp</code> …","","SNAFU context selector for the <code>Error::PlanSql</code> variant","","SNAFU context selector for the <code>Error::QueryAccessDenied</code> …","","SNAFU context selector for the <code>Error::QueryExecution</code> …","","SNAFU context selector for the <code>Error::QueryParse</code> variant","","SNAFU context selector for the <code>Error::QueryPlan</code> variant","","SNAFU context selector for the <code>Error::RangeQuery</code> variant","","SNAFU context selector for the <code>Error::RegionQuery</code> variant","","SNAFU context selector for the <code>Error::RemoteRequest</code> variant","","","SNAFU context selector for the <code>Error::RoutePartition</code> …","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::Sql</code> variant","","SNAFU context selector for the <code>Error::TableMutation</code> variant","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TimeIndexNotFound</code> …","","SNAFU context selector for the <code>Error::UnexpectedOutputKind</code> …","","SNAFU context selector for the <code>Error::Unimplemented</code> variant","","SNAFU context selector for the <code>Error::UnknownTable</code> variant","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the <code>Error::VectorComputation</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codexecutor to run PhysicalPlan.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This rule will pass the nearest order requirement to the …","Find the most closest order requirement to the leaf node.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","StringNormalizationRule normalizes(trims) string values in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","remove extra whitespaces from the String value when there …","","","","","","","","","","","","","","","","","TypeConversionRule converts some literal values in logical …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The implementation of the <code>$name_expr</code> extension AST node","","","","","The implementation of the <code>$name_expr</code> extension AST node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Physical query planner that converts a <code>LogicalPlan</code> to an …","Create a physical plan from a logical plan","wrap physical plan with additional layer e.g: metrics …","","","","","","","A LogicalPlan represents the different types of relational …","","","","","","","","","","Return a <code>format</code>able structure that produces a single line …","","","","Returns the argument unchanged.","","","Walk the logical plan, find any <code>PlaceHolder</code> tokens, and …","","Calls <code>U::from(self)</code>.","","","","Return a logical plan with all placeholders/params (e.g $1 …","Get the schema for this logical plan","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Describe statement result","","","","","Query engine global state","","","Returns the query engine as Any so that it can be downcast …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The logical plan for statement","","","","","","","","","","","","Create a DataFrame from a table.","","","","","The schema of statement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Query engine global state","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a DataFrame for a table","Register an aggregate function.","Register a udf function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the unit of <code>align</code> is millisecond","","","According to <code>align</code>, produces a calendar-based aligned time.","key: align_ts value: a vector, each element is a range_fn …","The input <code>data</code> contains data on a complete time series. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The incoming logical plan","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key: <code>(hash of by rows, align_ts)</code> value: <code>[row_ids]</code> It is …","","","with format like <code>max(a) 300s null</code>","If the <code>FIll</code> strategy is <code>Linear</code> and the output is an …","","The number of rows of the final output","","","","","","","","","","","all range expressions","","by values written by <code>RowWriter</code>","Converter for the by values","","","","","the schema of output column","","","","The schema before run projection, follow the order of …","","","If the <code>schema</code> of the <code>RangeSelect</code> happens to be the same as …","","key: time series’s hash value value: time series’s …","","Column index of TIME INDEX column’s position in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>RangeExprRewriter</code> will recursively search certain <code>Expr</code>, …","In order to implement RangeSelect query like …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","this function use to find the time_index column and row …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Use <code>BTreeSet</code> to avoid in case like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function checks if the column schemas from a file can …","","","","","","","","","","","","","Implementation of <code>SHOW CREATE TABLE</code> statement.","","","","","","","","Create a CreateTable statement from table info.","","","","","A trait for handling table mutations in <code>QueryEngine</code>.","","","Delete rows from the table.","Inserts rows into the table.","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,11,11,11,11,11,11,0,11,11,11,11,11,11,53,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,53,11,53,53,11,11,11,11,11,11,11,40,0,40,0,40,0,40,0,0,40,0,40,40,40,44,43,45,46,47,40,44,43,45,46,47,40,43,40,44,43,45,46,47,44,43,45,46,47,44,43,45,46,47,40,44,43,45,46,47,40,44,43,45,46,47,40,40,44,43,45,46,47,40,44,43,45,46,47,40,40,44,43,45,46,47,40,43,44,43,45,46,47,40,40,44,43,45,46,47,40,44,43,45,46,47,44,43,45,46,47,40,44,43,45,46,47,40,44,43,45,46,47,40,44,43,45,46,47,44,44,43,43,45,45,46,46,47,47,40,40,44,43,45,46,47,40,40,40,40,44,43,45,46,47,40,44,43,45,46,47,40,44,43,45,46,47,40,44,43,45,46,47,40,44,44,43,43,45,45,46,46,47,47,40,40,44,43,45,46,47,40,44,43,45,46,47,40,252,252,253,254,255,256,254,255,256,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,111,0,82,82,0,0,111,0,69,0,0,69,67,67,69,71,67,69,71,69,69,67,69,71,67,69,71,67,69,71,69,71,67,69,71,67,69,71,67,69,71,69,69,69,69,69,69,71,67,69,71,67,69,71,71,67,67,69,71,67,67,69,71,67,67,69,69,71,71,71,67,69,71,71,71,71,67,69,71,71,71,71,71,71,71,71,71,67,69,71,67,69,71,67,67,69,71,67,67,69,69,71,71,67,69,71,67,69,71,0,75,0,75,75,75,75,0,75,75,257,75,258,75,258,258,258,258,258,75,258,75,258,75,258,75,258,75,258,75,258,75,258,75,258,75,258,75,258,75,75,258,258,75,258,0,257,257,75,258,75,258,75,258,75,75,258,258,75,258,75,258,0,0,0,80,80,80,80,82,80,82,83,80,82,83,80,82,83,82,83,80,82,83,80,82,83,80,82,83,80,82,83,80,82,83,80,82,83,82,82,82,82,82,82,82,80,82,82,83,83,83,83,80,82,83,80,82,82,80,82,83,82,83,80,82,83,82,82,82,82,80,82,83,82,82,82,82,80,82,83,82,80,80,82,82,83,83,80,82,83,82,82,80,80,82,82,82,80,82,83,80,80,83,82,83,83,83,80,80,80,82,82,80,80,80,80,82,83,80,80,82,83,80,82,83,80,82,83,80,80,82,82,83,83,80,82,83,80,82,83,80,108,0,0,0,0,108,108,111,259,108,109,111,259,108,109,111,108,108,111,259,108,109,111,259,108,109,111,259,108,109,109,111,259,108,109,111,259,108,109,108,111,259,108,109,108,108,108,108,108,111,108,108,111,259,108,109,108,111,259,108,109,111,111,259,108,109,111,259,108,109,111,111,259,259,108,108,109,109,111,259,108,109,111,111,111,111,109,111,259,108,109,108,108,111,259,108,109,111,259,108,109,111,259,108,109,111,111,259,259,108,108,109,109,111,259,108,109,111,259,108,109,116,0,116,0,116,0,116,116,0,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,15,0,116,0,116,0,116,0,116,0,116,0,116,0,15,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,0,116,116,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,120,121,122,123,124,125,126,127,128,129,130,132,134,135,136,120,123,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,132,134,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,153,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,130,126,117,119,120,121,122,123,124,125,126,127,128,129,130,132,134,135,136,132,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,126,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,117,117,119,119,138,138,120,120,121,121,122,122,139,139,140,140,141,141,142,142,143,143,144,144,123,123,124,124,145,145,146,146,147,147,148,148,149,149,150,150,151,151,125,125,152,152,153,153,154,154,155,155,156,156,126,126,127,127,157,157,158,158,159,159,160,160,161,161,162,162,128,128,129,129,130,130,132,132,134,134,163,163,164,164,135,135,136,136,116,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,136,117,127,116,119,144,124,146,147,121,123,116,116,122,154,129,125,132,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,117,117,119,119,138,138,120,120,121,121,122,122,139,139,140,140,141,141,142,142,143,143,144,144,123,123,124,124,145,145,146,146,147,147,148,148,149,149,150,150,151,151,125,125,152,152,153,153,154,154,155,155,156,156,126,126,127,127,157,157,158,158,159,159,160,160,161,161,162,162,128,128,129,129,130,130,132,132,134,134,163,163,164,164,135,135,136,136,116,116,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,152,117,119,138,120,121,122,139,140,141,142,143,144,123,124,145,146,147,148,149,150,151,125,152,153,154,155,156,126,127,157,158,159,160,161,162,128,129,130,132,134,163,164,135,136,116,260,261,262,263,264,265,266,267,268,269,270,271,262,271,272,273,274,260,275,276,277,278,279,280,281,282,261,283,284,266,267,268,285,286,269,287,288,264,289,290,291,271,292,270,293,294,295,296,297,298,299,265,262,263,300,301,302,303,303,272,292,273,282,283,266,267,275,261,274,277,278,279,280,281,282,284,285,286,288,264,289,290,291,293,294,295,296,297,300,301,276,289,299,287,262,288,0,304,0,305,0,0,0,0,0,0,0,0,0,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,167,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,167,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,167,167,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,167,169,170,171,172,173,174,175,176,167,169,170,171,172,173,174,175,176,0,0,0,0,0,179,178,179,178,179,178,179,178,179,178,178,179,178,179,178,179,178,179,178,179,178,179,178,179,178,179,179,178,178,179,178,179,179,178,178,179,179,178,179,178,179,178,179,179,178,178,179,179,178,179,178,0,0,182,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,183,182,182,183,183,182,183,183,182,182,183,182,183,0,182,183,182,182,183,183,182,183,182,183,0,0,184,184,186,184,186,186,186,184,186,184,186,184,186,186,184,186,184,186,184,186,184,186,184,186,184,186,184,186,184,184,186,186,184,186,186,184,186,0,0,184,186,184,186,184,186,184,184,186,186,184,186,184,186,0,0,0,0,0,0,0,0,0,192,0,0,192,189,190,306,192,193,189,194,190,195,306,192,193,189,194,190,195,189,190,192,193,189,194,190,195,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,192,193,0,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,193,193,193,193,193,193,189,194,190,195,192,193,189,194,190,195,306,192,193,189,194,190,195,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,306,192,192,193,193,189,189,194,194,190,190,195,195,306,192,193,189,194,190,195,189,190,194,195,306,306,306,192,193,193,193,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,192,193,189,194,190,195,306,306,192,192,193,193,189,189,194,194,190,190,195,195,306,192,193,189,194,190,195,189,190,306,192,193,189,194,190,195,0,307,0,308,0,0,309,309,309,310,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,36,201,201,201,201,201,201,201,201,201,201,201,0,0,0,0,0,0,34,207,311,206,204,206,204,34,206,204,206,204,206,204,0,206,204,206,204,311,34,206,204,311,204,206,204,206,204,206,204,206,204,206,206,204,204,206,204,204,311,206,206,0,207,311,34,207,16,206,206,311,311,311,0,311,204,0,16,34,206,204,206,204,206,204,206,206,204,204,206,204,206,204,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,0,208,0,0,34,34,209,34,209,34,34,34,34,34,209,34,209,34,209,34,209,209,34,209,34,34,34,209,34,34,209,34,34,209,34,209,34,209,34,209,209,34,34,209,34,209,34,209,34,34,34,34,34,34,34,34,34,209,34,209,34,209,34,209,209,34,34,209,34,209,34,0,0,0,214,312,0,0,214,0,214,214,312,0,0,0,0,0,312,0,220,218,215,0,223,214,217,218,215,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,220,218,215,218,215,0,215,214,216,217,214,216,217,216,216,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,218,216,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,218,218,214,216,218,214,214,214,214,216,216,216,216,218,218,218,218,220,220,215,216,217,218,218,216,217,214,214,216,216,218,217,215,223,215,218,218,220,312,214,216,218,217,215,223,214,216,217,220,312,214,216,218,217,215,223,218,218,220,214,216,218,214,216,218,220,312,214,216,218,217,215,223,220,218,215,218,218,220,312,214,216,218,217,215,223,220,220,312,312,214,214,216,216,218,218,217,217,215,215,223,223,220,220,220,312,214,216,218,217,215,223,220,215,215,220,218,218,216,216,217,220,215,215,216,220,218,220,216,217,220,215,218,215,223,220,220,218,218,215,220,218,215,220,218,215,220,218,215,220,215,220,218,215,218,214,216,217,214,216,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,220,312,214,216,218,217,215,223,214,220,220,312,312,214,214,216,216,218,218,217,217,215,215,223,223,218,220,220,312,214,216,218,217,215,223,220,220,312,214,216,218,217,215,223,215,0,0,229,229,228,229,228,229,229,228,229,228,229,228,229,228,229,228,0,229,228,229,228,229,228,228,229,0,229,228,229,229,228,229,229,228,228,229,228,229,228,0,0,229,228,228,229,228,229,228,229,228,229,228,229,229,228,228,229,228,229,228,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,0,99,313,99,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,314,314,205,205],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[11,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[13,[[15,[14]]]],[[11,16,17],[[20,[[19,[18]]]]]],[[11,21,22,[25,[23,24]],26],[[15,[4]]]],[4,-1,[]],[4,-1,[]],[[11,17],[[20,[[19,[18]]]]]],[4,2],0,0,[[11,27,26],[[15,[28]]]],[[11,17,26],[[15,[28]]]],[[11,17,26],[[20,[[19,[18]]]]]],[[29,[8,[13]]],[[15,[28]]]],[[11,16,[31,[30]]],[[15,[32]]]],[[11,21],[[15,[22]]]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[[11,21,[25,[23,24]],26],[[15,[4]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[11,33],[[[31,[34]],35],11],[[11,17],[[15,[17]]]],[[11,16,[31,[30]]],[[15,[[31,[30]]]]]],0,[11,[[31,[36]]]],0,[[11,22],[[15,[1]]]],[[11,37],2],[[11,38],2],[[11,39],2],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[40,12],[-1,41,[]],[40,[[8,[42]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,40],[40,[[8,[41]]]],[44,44],[43,43],[45,45],[46,46],[47,47],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[40,4,[48,[23]]],2],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[40,33],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[43,[[9,[-1,40]]],[]],[[44,49],50],[[43,49],50],[[45,49],50],[[46,49],50],[[47,49],50],[[40,49],50],[[40,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,40],[43,40],[45,40],[46,40],[47,40],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[40,[[8,[51]]]],[40,[[8,[41]]]],[40,52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,2],0,[-1,-1,[]],[-1,-2,[],[]],[[53,33],[[8,[[31,[54]]]]]],[[53,33],[[8,[[31,[55]]]]]],[[53,56],[[58,[[31,[57]]]]]],[[53,[59,[23]]],[[8,[60]]]],[[53,33],[[8,[[31,[61]]]]]],[[],4],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[53,62],[[[48,[63]],64],[[15,[[25,[23,[31,[57]]]]]]]],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[31,[34]],65,66,26],[[15,[53]]]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[67,68,62],[[58,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[69,69],70],[[-1,-2],70,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[],69],[[],71],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[[69,69],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[69,49],50],[[71,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,[[8,[68]]]],[72,[[58,[72]]]],[[],4],[[],4],[[],4],[68,[[58,[[73,[68]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[71,7],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,[[71,68],2],[71,58],[67,33],[[69,69],[[8,[70]]]],0,[71,2],[71,[[58,[74]]]],[71,2],[71,2],[[71,68],7],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,[[58,[[73,[14]]]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,75],[76,75],[[[59,[14]],[59,[23]]],7],[[68,[8,[[48,[23]]]]],75],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[68,[[8,[68]]]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[77,[[58,[78]]]],[79,77],[80,12],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,[[48,[[31,[81]]]]]],[82,82],[83,83],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[[-1,76],7,[]],[[-1,84],2,[]],[[82,82],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[80,4,[31,[85]]],[[58,[86]]]],[-1,[[48,[14,87]]],[]],[82,[[48,[14]]]],[83,88],0,[83,88],0,[[80,49],50],[[82,49],50],[[83,49],50],[[80,89,49],50],[[-1,49],[[9,[2,90]]],[]],[[82,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,[59,[14]],[59,[68]]],82],[[-1,[59,[14]],[59,[68]]],[[31,[76,87]]],[]],[[-1,-2],91,[92,93],94],[[82,-1],2,84],[[],4],[[],4],[[],4],[82,68],0,[82,[[48,[68]]]],[-1,[[48,[68,87]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82,68],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[82,7],0,0,[80,[[8,[95]]]],[-1,33,[]],[[],33],[82,33],[[96,[48,[97]],98,79,99],[[58,[80]]]],[[68,7],82],[100,83],[80,[[8,[[59,[101]]]]]],[80,102],0,[-1,[[104,[23,103]]],[]],[83,88],0,[[83,4],2],0,0,[80,77],[-1,[[31,[105,87]]],[]],[82,106],0,[80,107],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[80,[31,[85]]],[[58,[32]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[80]],[48,[[31,[81]]]]],[[58,[[31,[81]]]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[108,108],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[],109],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[-1,[[9,[108]]],110],[4,2],[4,2],[4,2],[4,2],[[108,108],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[68,[[58,[[8,[96]]]]]],[[108,49],[[9,[2,90]]]],[[108,49],[[9,[2,90]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[111,96],[[58,[[48,[97]]]]]],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[[112,99],111],[[111,65,68],[[58,[68]]]],[[111,113,76,[59,[68]],[59,[[31,[81]]]],65],[[20,[[19,[18]]]]]],[[68,96],[[58,[68]]]],[109,[[58,[114]]]],0,[[68,96],[[58,[[73,[68]]]]]],[[108,-1],9,115],0,[-1,-2,[],[]],[-1,23,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[116,12],[-1,41,[]],[116,[[8,[42]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[117,[-1]]],116,[[118,[23]]]],[[[119,[-1]]],116,[[118,[23]]]],[[[120,[-1]]],116,[[118,[23]]]],[[[121,[-1]]],116,[[118,[23]]]],[[[122,[-1]]],116,[[118,[23]]]],[[[123,[-1,-2]]],116,[[118,[23]]],[[118,[23]]]],[[[124,[-1]]],116,[[118,[23]]]],[[[125,[-1]]],116,[[118,[23]]]],[[[126,[-1,-2]]],116,[[118,[23]]],[[118,[23]]]],[[[127,[-1]]],116,[[118,[23]]]],[128,116],[[[129,[-1]]],116,[[118,[23]]]],[[[130,[-1]]],116,[[118,[131]]]],[[[132,[-1,-2,-3]]],116,[[118,[23]]],[[118,[133]]],[[118,[133]]]],[[[134,[-1]]],116,[[118,[23]]]],[135,116],[[[136,[-1]]],116,[[118,[23]]]],0,0,[116,[[8,[41]]]],[[[117,[-1]]],[[117,[-1]]],137],[[[119,[-1]]],[[119,[-1]]],137],[138,138],[[[120,[-1]]],[[120,[-1]]],137],[[[121,[-1]]],[[121,[-1]]],137],[[[122,[-1]]],[[122,[-1]]],137],[139,139],[140,140],[141,141],[142,142],[143,143],[[[144,[-1]]],[[144,[-1]]],137],[[[123,[-1,-2]]],[[123,[-1,-2]]],137,137],[[[124,[-1]]],[[124,[-1]]],137],[145,145],[[[146,[-1]]],[[146,[-1]]],137],[[[147,[-1]]],[[147,[-1]]],137],[148,148],[149,149],[150,150],[151,151],[[[125,[-1]]],[[125,[-1]]],137],[[[152,[-1]]],[[152,[-1]]],137],[[[153,[-1]]],[[153,[-1]]],137],[[[154,[-1]]],[[154,[-1]]],137],[155,155],[156,156],[[[126,[-1,-2]]],[[126,[-1,-2]]],137,137],[[[127,[-1]]],[[127,[-1]]],137],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[128,128],[[[129,[-1]]],[[129,[-1]]],137],[[[130,[-1]]],[[130,[-1]]],137],[[[132,[-1,-2,-3]]],[[132,[-1,-2,-3]]],137,137,137],[[[134,[-1]]],[[134,[-1]]],137],[163,163],[164,164],[135,135],[[[136,[-1]]],[[136,[-1]]],137],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[[116,4,[48,[23]]],2],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[116,33],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],0,0,[[[117,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[119,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[120,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[121,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[122,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[123,[-1,-2]]],[[9,[-3,116]]],[[118,[23]]],[[118,[23]]],[]],[[[124,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[125,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[126,[-1,-2]]],[[9,[-3,116]]],[[118,[23]]],[[118,[23]]],[]],[[[127,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[128,[[9,[-1,116]]],[]],[[[129,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[[[130,[-1]]],[[9,[-2,116]]],[[118,[131]]],[]],[[[132,[-1,-2,-3]]],[[9,[-4,116]]],[[118,[23]]],[[118,[133]]],[[118,[133]]],[]],[[[134,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],[135,[[9,[-1,116]]],[]],[[[136,[-1]]],[[9,[-2,116]]],[[118,[23]]],[]],0,[[[117,[-1]],49],50,165],[[[119,[-1]],49],50,165],[[138,49],50],[[[120,[-1]],49],50,165],[[[121,[-1]],49],50,165],[[[122,[-1]],49],50,165],[[139,49],50],[[140,49],50],[[141,49],50],[[142,49],50],[[143,49],50],[[[144,[-1]],49],50,165],[[[123,[-1,-2]],49],50,165,165],[[[124,[-1]],49],50,165],[[145,49],50],[[[146,[-1]],49],50,165],[[[147,[-1]],49],50,165],[[148,49],50],[[149,49],50],[[150,49],50],[[151,49],50],[[[125,[-1]],49],50,165],[[[152,[-1]],49],50,165],[[[153,[-1]],49],50,165],[[[154,[-1]],49],50,165],[[155,49],50],[[156,49],50],[[[126,[-1,-2]],49],50,165,165],[[[127,[-1]],49],50,165],[[157,49],50],[[158,49],50],[[159,49],50],[[160,49],50],[[161,49],50],[[162,49],50],[[128,49],50],[[[129,[-1]],49],50,165],[[[130,[-1]],49],50,165],[[[132,[-1,-2,-3]],49],50,165,165,165],[[[134,[-1]],49],50,165],[[163,49],50],[[164,49],50],[[135,49],50],[[[136,[-1]],49],50,165],[[116,49],50],[[116,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[117,[-1]]],116,[[118,[23]]]],[[[119,[-1]]],116,[[118,[23]]]],[138,116],[[[120,[-1]]],116,[[118,[23]]]],[[[121,[-1]]],116,[[118,[23]]]],[[[122,[-1]]],116,[[118,[23]]]],[139,116],[140,116],[141,116],[142,116],[143,116],[[[144,[-1]]],116,[[118,[23]]]],[[[123,[-1,-2]]],116,[[118,[23]]],[[118,[23]]]],[[[124,[-1]]],116,[[118,[23]]]],[145,116],[[[146,[-1]]],116,[[118,[23]]]],[[[147,[-1]]],116,[[118,[23]]]],[148,116],[149,116],[150,116],[151,116],[[[125,[-1]]],116,[[118,[23]]]],[[[152,[-1]]],116,[[118,[166]]]],[[[153,[-1]]],116,[[118,[133]]]],[[[154,[-1]]],116,[[118,[96]]]],[155,116],[156,116],[[[126,[-1,-2]]],116,[[118,[23]]],[[118,[23]]]],[[[127,[-1]]],116,[[118,[23]]]],[157,116],[158,116],[159,116],[160,116],[161,116],[162,116],[128,116],[[[129,[-1]]],116,[[118,[23]]]],[[[130,[-1]]],116,[[118,[131]]]],[[[132,[-1,-2,-3]]],116,[[118,[23]]],[[118,[133]]],[[118,[133]]]],[[[134,[-1]]],116,[[118,[23]]]],[163,116],[164,116],[135,116],[[[136,[-1]]],116,[[118,[23]]]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,0,0,[116,[[8,[51]]]],0,0,0,0,0,0,0,[116,[[8,[41]]]],[116,52],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,16,[31,[30]]],[[15,[32]]],[]],0,[[-1,17],[[15,[17]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[167,168],[169,168],[4,-1,[]],[170,168],[4,-1,[]],[4,-1,[]],[171,168],[4,-1,[]],[172,168],[4,-1,[]],[173,168],[174,168],[4,-1,[]],[175,168],[4,-1,[]],[176,177],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[],178],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[179,33],[68,[[58,[68]]]],0,[178,[[58,[114]]]],[[68,[59,[180]]],[[58,[[73,[68]]]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[179,68,181],[[58,[[8,[68]]]]]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[182,68,62],[[58,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[183,14],[[58,[14]]]],[182,33],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,14],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[184,68,62],[[58,[68]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[185,60],[[58,[185]]]],[[186,14],[[8,[60]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[186,14,14],[[58,[[2,[14,14]]]]]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[186,14],[[58,[14]]]],[184,33],0,[33,[[58,[185]]]],[[187,188],14],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[189,12],[190,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[189,[[59,[191]]]],[190,[[59,[191]]]],[192,192],[193,193],[189,189],[194,194],[190,190],[195,195],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[33,191],[[8,[196]]]],[[],193],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],0,[[193,193],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,0,0,0,[[192,49],50],[[193,49],50],[[189,49],50],[[194,49],50],[[190,49],50],[[195,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[189,33],[190,33],[191,194],[191,195],[193,[[15,[192]]]],[33,[[15,[197]]]],[33,[[15,[192]]]],[[192,[25,[23,23]]],[[15,[192]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[189,198],[190,198],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,16,[31,[30]]],[[15,[[31,[30]]]]],[]],0,[[-1,16,17],[[20,[[19,[18]]]]],[]],0,0,0,0,0,[[-1,[31,[30]],26],[[31,[30]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[17,[[0,[199]]]],[4,2],[[17,49],50],[68,17],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[17,[[15,[[25,[23,[8,[133]]]]]]]],[[],4],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[[17,[59,[185]]],[[15,[17]]]],[17,[[15,[200]]]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,2],0,[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[[[31,[34]]],201],[[-1,192,26],[[20,[[19,[18]]]]],[]],[[201,192,26],[[20,[[19,[18]]]]]],[[201,202,26],[[15,[17]]]],[[201,203,26],[[15,[17]]]],0,[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[[-1,17],[[20,[[19,[18]]]]],[]],0,[4,2],[4,2],[[-1,17,26],[[20,[[19,[18]]]]],[]],[[204,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],0,[-1,33,[]],[[112,[8,[99]],[8,[205]],7],206],[[112,[8,[99]],[8,[205]],7,35],206],0,0,[-1,[[31,[36]]],[]],0,0,0,[206,207],0,[[-1,22],[[15,[1]]],[]],[[-1,37],2,[]],[[-1,38],2,[]],[[[31,[11]]],2],[[-1,39],2,[]],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[16,[[31,[85]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,2],[[16,49],50],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[[65,26],16],[16,26],0,[16,65],0,[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[208,208],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[],208],[4,-1,[]],[4,-1,[]],0,[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[33,33,26],[[15,[2]]]],[-1,-2,[],[]],0,0,[[34,33],[[8,[37]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,112],0,[34,34],[[-1,-2],2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[209,68,65],[[20,[[19,[18]]]]]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],0,[34,7],[4,2],[4,2],[[34,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[112,[8,[99]]],209],[[112,[8,[99]],[8,[205]],7,35],34],0,0,[[34,22],[[58,[210]]]],[[34,37],2],[[34,39],2],[[[48,[[31,[211]]]],33],2],[34,65],[34,[[8,[205]]]],0,[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[212,[59,[91]],[25,[[2,[91]],[48,[213]]]]],2],0,[[214,[59,[185]]],[[58,[2]]]],0,[-1,12,[]],[215,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[[59,[185]],60],[[58,[2]]]],[215,[[48,[[31,[81]]]]]],[214,214],[216,216],[217,217],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[216,216],70],[[-1,-2],70,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[218,[59,[14]],[31,[105]],79,65],[[58,[[48,[[31,[219]]]]]]]],0,[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[[-1,76],7,[]],[[-1,84],2,[]],[[214,214],7],[[216,216],7],[[218,218],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[220,221,[59,[[31,[219]]]]],[[58,[[48,[222]]]]]],0,[[215,4,[31,[85]]],[[58,[86]]]],0,0,[218,[[48,[14]]]],[-1,[[48,[14,87]]],[]],0,0,[[214,49],50],[[214,49],50],[[216,49],50],[[216,49],50],[[218,49],50],[[217,49],50],[[215,49],50],[[223,49],50],[[215,89,49],50],[[-1,49],[[9,[2,90]]],[]],[[218,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[59,[14]],[59,[68]]],[[31,[76,87]]],[]],[[218,[59,[14]],[59,[68]]],218],[220,[[58,[221]]]],[[-1,-2],91,[92,93],94],[[-1,-2],91,[92,93],94],[[-1,-2],91,[92,93],94],[[214,-1],2,84],[[216,-1],2,84],[[218,-1],2,84],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,[218,[[48,[68]]]],[-1,[[48,[68,87]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,0,[215,[[8,[95]]]],0,[218,33],[-1,33,[]],0,0,0,0,[215,[[8,[[59,[101]]]]]],[215,102],[[216,216],[[8,[70]]]],[[[20,[220]],224],[[225,[8]]]],[-1,[[104,[23,103]]],[]],0,0,0,0,0,0,[215,[[48,[226]]]],0,0,[220,77],[-1,[[31,[105,87]]],[]],[218,106],[215,77],0,0,0,0,0,0,0,0,0,0,[215,107],0,0,0,[[218,68,[31,[81]],65],[[58,[[31,[81]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,23,[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[33,60],[[58,[214]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[31,[68]],[48,[216]],131,14,[48,[14]],[59,[14]]],[[15,[218]]]],[[[20,[-1]],224],[[225,[[8,[9]]]]],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[220,221],[[58,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[215]],[48,[[31,[81]]]]],[[58,[[31,[81]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[[[8,[14]]],227],[4,2],[4,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[228,[31,[105]]],[[15,[[2,[14,[48,[14]]]]]]]],[[229,[59,[14]],4],[[58,[14]]]],[[[59,[14]]],7],[[],4],[[],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[[229,14],[[58,[14]]]],[64,228],[[[59,[14]],4,4],[[58,[[48,[14]]]]]],[[[59,[14]],4],[[58,[33]]]],0,[[228,68],[[15,[68]]]],[[228,68],[[20,[[19,[18]]]]]],0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[4,-1,[]],[4,-1,[]],[4,2],[-1,-1,[]],[-1,-2,[],[]],[[],4],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[[230,113,76,[59,[68]],[59,[[31,[81]]]],65],[[20,[[19,[18]]]]]],[-1,[[8,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,-2,[],[]],0,0,0,[[-1,231],[[20,[[19,[18]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[59,[232]],[59,[232]]],[[15,[2]]]],[[[59,[232]]],24],[[[59,[232]],[59,[4]]],24],[[[59,[232]]],24],[[[59,[232]]],24],[[[59,[232]],[59,[4]]],24],[[[59,[232]]],24],[22,[[15,[28]]]],[[[59,[232]]],[[2,[[48,[232]],23]]]],[[[59,[23]],112,26,33],[[15,[[31,[233]]]]]],[[234,[59,[23]],[25,[23,23]]],[[15,[235]]]],[[[25,[23,23]]],[[15,[[19,[236]]]]]],[[[25,[23,23]]],[[15,[[2,[234,[48,[23]]]]]]]],0,[[22,[8,[237]],26],[[15,[28]]]],[[238,112,26],[[15,[28]]]],[[239,112,26],[[15,[28]]]],[240,241],[[232,242],[[15,[243]]]],[244,[[48,[245]]]],[[78,244,242],[[48,[246]]]],[[247,242],[[15,[248]]]],[-1,249,199],[[33,249],245],[-1,249,[[118,[23]]]],0,0,0,0,[[-1,250,26],[[20,[[19,[18]]]]],[]],[[-1,251,26],[[20,[[19,[18]]]]],[]],0,0],"c":[],"p":[[4,"DataFrame",24],[15,"tuple"],[3,"Compat",3655],[15,"usize"],[3,"Request",3656],[3,"Request",3656],[15,"bool"],[4,"Option",3657],[4,"Result",3658],[3,"TypeId",3659],[3,"DatafusionQueryEngine",52],[8,"Any",3659],[4,"Expr",3660],[4,"Expr",3661],[6,"Result",772],[3,"QueryEngineContext",3057],[4,"LogicalPlan",2912],[8,"Future",3662],[3,"Box",3663],[3,"Pin",3664],[3,"ResolvedTableReference",3665],[6,"TableRef",3666],[3,"String",3667],[6,"VectorRef",3668],[3,"HashMap",3669],[6,"QueryContextRef",3670],[3,"DmlStatement",3671],[4,"Output",3672],[3,"RecordBatch",3673],[8,"PhysicalPlan",3674],[3,"Arc",3675],[6,"SendableRecordBatchStream",3676],[15,"str"],[3,"QueryEngineState",3117],[3,"Plugins",3677],[8,"LogicalPlanner",2946],[6,"AggregateFunctionMetaRef",3678],[6,"FunctionRef",3679],[3,"ScalarUdf",3680],[4,"InnerError",105],[8,"Error",3681],[3,"Backtrace",3682],[3,"PhysicalPlanDowncastSnafu",105],[3,"DatafusionSnafu",105],[3,"ConvertSchemaSnafu",105],[3,"ConvertDfRecordBatchStreamSnafu",105],[3,"ExecutePhysicalPlanSnafu",105],[3,"Vec",3683],[3,"Formatter",3684],[6,"Result",3684],[8,"StackError",3685],[4,"StatusCode",3686],[3,"DfContextProviderAdapter",301],[3,"AggregateUDF",3687],[3,"ScalarUDF",3688],[4,"TableReference",3665],[8,"TableSource",3689],[6,"Result",3690],[15,"slice"],[4,"DataType",3691],[3,"WindowUDF",3692],[3,"ConfigOptions",3693],[6,"OwnedTableReference",3665],[3,"DfTableSourceProvider",3694],[3,"SessionState",3695],[4,"Statement",3696],[3,"DistPlannerAnalyzer",347],[4,"LogicalPlan",3697],[4,"RewriterStatus",347],[4,"Ordering",3698],[3,"PlanRewriter",347],[3,"Subquery",3697],[4,"Transformed",3699],[4,"RewriteRecursion",3699],[4,"Commutativity",449],[8,"UserDefinedLogicalNode",3700],[6,"SchemaRef",3701],[6,"SchemaRef",3702],[3,"Schema",3701],[3,"MergeScanExec",511],[8,"ExecutionPlan",3703],[3,"MergeScanLogicalPlan",511],[3,"MergeScanMetric",511],[8,"Hasher",3704],[3,"TaskContext",3705],[6,"SendableRecordBatchStream",3706],[3,"Global",3707],[3,"Time",3708],[4,"DisplayFormatType",3709],[3,"Error",3684],[15,"u64"],[8,"Hash",3704],[8,"Sized",3710],[8,"BuildHasher",3704],[3,"MetricsSet",3711],[3,"TableName",3712],[3,"RegionId",3713],[3,"Bytes",3714],[6,"RegionQueryHandlerRef",3602],[3,"ExecutionPlanMetricsSet",3711],[3,"PhysicalSortExpr",3715],[4,"Partitioning",3716],[3,"RandomState",3669],[3,"HashSet",3717],[3,"DFSchema",3718],[6,"DFSchemaRef",3718],[3,"Statistics",3719],[4,"TableType",651],[3,"TableNameExtractor",651],[8,"Deserializer",3720],[3,"DistExtensionPlanner",651],[6,"CatalogManagerRef",3721],[8,"PhysicalPlanner",3722],[4,"VisitRecursion",3699],[8,"Serializer",3723],[4,"Error",772],[3,"UnsupportedExprSnafu",772],[8,"Into",3724],[3,"UnimplementedSnafu",772],[3,"CatalogNotFoundSnafu",772],[3,"SchemaNotFoundSnafu",772],[3,"TableNotFoundSnafu",772],[3,"QueryAccessDeniedSnafu",772],[3,"MultipleStatementsSnafu",772],[3,"MissingTimestampColumnSnafu",772],[3,"UnexpectedOutputKindSnafu",772],[3,"MissingRequiredFieldSnafu",772],[3,"UnknownTableSnafu",772],[3,"TimeIndexNotFoundSnafu",772],[3,"AddSystemTimeOverflowSnafu",772],[3,"Duration",3725],[3,"ColumnSchemaIncompatibleSnafu",772],[4,"ConcreteDataType",3726],[3,"ColumnSchemaNoDefaultSnafu",772],[3,"MissingTableMutationHandlerSnafu",772],[3,"RangeQuerySnafu",772],[8,"Clone",3727],[3,"CatalogSnafu",772],[3,"VectorComputationSnafu",772],[3,"CreateRecordBatchSnafu",772],[3,"CreateSchemaSnafu",772],[3,"QueryExecutionSnafu",772],[3,"QueryPlanSnafu",772],[3,"QueryParseSnafu",772],[3,"ConvertDatafusionSchemaSnafu",772],[3,"ParseTimestampSnafu",772],[3,"ParseFloatSnafu",772],[3,"DataFusionSnafu",772],[3,"EncodeSubstraitLogicalPlanSnafu",772],[3,"SqlSnafu",772],[3,"PlanSqlSnafu",772],[3,"ConvertSqlValueSnafu",772],[3,"ConvertSqlTypeSnafu",772],[3,"RoutePartitionSnafu",772],[3,"ParseSqlSnafu",772],[3,"RemoteRequestSnafu",772],[3,"BuildRegexSnafu",772],[3,"BuildBackendSnafu",772],[3,"ListObjectsSnafu",772],[3,"ParseFileFormatSnafu",772],[3,"InferSchemaSnafu",772],[3,"ConvertSchemaSnafu",772],[3,"RegionQuerySnafu",772],[3,"TableMutationSnafu",772],[8,"Debug",3684],[4,"Value",3728],[3,"METRIC_PARSE_SQL_ELAPSED",2289],[3,"Histogram",3729],[3,"METRIC_PARSE_PROMQL_ELAPSED",2289],[3,"METRIC_OPTIMIZE_LOGICAL_ELAPSED",2289],[3,"METRIC_OPTIMIZE_PHYSICAL_ELAPSED",2289],[3,"METRIC_CREATE_PHYSICAL_ELAPSED",2289],[3,"METRIC_EXEC_PLAN_ELAPSED",2289],[3,"METRIC_MERGE_SCAN_POLL_ELAPSED",2289],[3,"METRIC_MERGE_SCAN_REGIONS",2289],[3,"METRIC_MERGE_SCAN_ERRORS_TOTAL",2289],[6,"IntCounter",3730],[3,"OrderHintVisitor",2517],[3,"OrderHintRule",2517],[3,"Sort",3661],[8,"OptimizerConfig",3731],[3,"StringNormalizationRule",2570],[3,"StringNormalizationConverter",2570],[3,"TypeConversionRule",2620],[4,"ScalarValue",3732],[3,"TypeConverter",2620],[15,"i64"],[4,"TimeUnit",3733],[3,"AnalyzeExpr",2675],[3,"ExplainExpr",2675],[4,"Expr",3734],[4,"QueryStatement",2675],[3,"PromQuery",2675],[3,"Analyze",2675],[3,"Explain",2675],[3,"Extension",3734],[3,"SystemTime",3735],[4,"ValueType",3736],[8,"Display",3684],[3,"Schema",3702],[3,"DfLogicalPlanner",2946],[3,"EvalStmt",3734],[4,"Statement",3737],[3,"DescribeResult",2977],[6,"TableMutationHandlerRef",3647],[3,"QueryEngineFactory",2977],[6,"QueryEngineRef",2977],[3,"QueryOptions",3087],[3,"DfQueryPlanner",3117],[3,"DataFrame",3738],[8,"AnalyzerRule",3739],[6,"TimestampMillisecondArray",3740],[15,"u32"],[4,"Fill",3189],[3,"RangeSelectExec",3189],[3,"RangeFn",3189],[3,"RangeFnExec",3189],[3,"RangeSelect",3189],[8,"PhysicalExpr",3741],[3,"RangeSelectStream",3189],[3,"RecordBatch",3742],[6,"ArrayRef",3743],[3,"SeriesState",3189],[3,"Context",3744],[4,"Poll",3745],[4,"Distribution",3716],[4,"DataFusionError",3690],[3,"RangePlanRewriter",3516],[3,"RangeExprRewriter",3516],[3,"RangeSelectPlanner",3578],[3,"QueryRequest",3746],[3,"ColumnSchema",3747],[8,"Vector",3668],[3,"Operator",3748],[3,"RawSchema",3749],[8,"FileFormat",3750],[3,"Partitions",3751],[3,"ShowDatabases",3752],[3,"ShowTables",3752],[4,"ColumnOption",3753],[3,"ColumnOptionDef",3753],[15,"char"],[3,"ColumnDef",3753],[3,"TableMeta",3754],[3,"SqlOption",3660],[4,"TableConstraint",3753],[6,"TableInfoRef",3754],[3,"CreateTable",3751],[4,"Value",3755],[3,"DeleteRequest",3756],[3,"InsertRequest",3756],[13,"Datafusion",292],[13,"PhysicalPlanDowncast",292],[13,"ConvertSchema",292],[13,"ConvertDfRecordBatchStream",292],[13,"ExecutePhysicalPlan",292],[6,"Transformer",449],[3,"Categorizer",449],[3,"TableNameRewriter",651],[13,"CatalogNotFound",2189],[13,"QueryAccessDenied",2189],[13,"ColumnSchemaIncompatible",2189],[13,"ColumnSchemaNoDefault",2189],[13,"ConvertSqlType",2189],[13,"AddSystemTimeOverflow",2189],[13,"ParseTimestamp",2189],[13,"ParseFloat",2189],[13,"DataFusion",2189],[13,"PlanSql",2189],[13,"BuildRegex",2189],[13,"UnexpectedOutputKind",2189],[13,"UnsupportedExpr",2189],[13,"Unimplemented",2189],[13,"Catalog",2189],[13,"SchemaNotFound",2189],[13,"TableNotFound",2189],[13,"VectorComputation",2189],[13,"CreateRecordBatch",2189],[13,"CreateSchema",2189],[13,"QueryExecution",2189],[13,"QueryPlan",2189],[13,"QueryParse",2189],[13,"MultipleStatements",2189],[13,"ConvertDatafusionSchema",2189],[13,"EncodeSubstraitLogicalPlan",2189],[13,"Sql",2189],[13,"MissingTimestampColumn",2189],[13,"ConvertSqlValue",2189],[13,"RoutePartition",2189],[13,"ParseSql",2189],[13,"RemoteRequest",2189],[13,"MissingRequiredField",2189],[13,"BuildBackend",2189],[13,"ListObjects",2189],[13,"ParseFileFormat",2189],[13,"InferSchema",2189],[13,"ConvertSchema",2189],[13,"UnknownTable",2189],[13,"TimeIndexNotFound",2189],[13,"RegionQuery",2189],[13,"TableMutation",2189],[13,"MissingTableMutationHandler",2189],[13,"RangeQuery",2189],[8,"QueryExecutor",2285],[8,"LogicalOptimizer",2287],[3,"QueryLanguageParser",2675],[8,"PhysicalOptimizer",2902],[8,"PhysicalPlanner",2904],[6,"PhysicalPlanWrapperRef",2906],[8,"PhysicalPlanWrapper",2906],[8,"QueryEngine",2977],[4,"ExecutionState",3189],[8,"RegionQueryHandler",3602],[8,"TableMutationHandler",3647]],"b":[[187,"impl-Display-for-InnerError"],[188,"impl-Debug-for-InnerError"],[605,"impl-MergeScanLogicalPlan"],[606,"impl-UserDefinedLogicalNodeCore-for-MergeScanLogicalPlan"],[701,"impl-Debug-for-TableType"],[702,"impl-Display-for-TableType"],[1404,"impl-Debug-for-Error"],[1405,"impl-Display-for-Error"],[3321,"impl-Debug-for-Fill"],[3322,"impl-Display-for-Fill"],[3323,"impl-Display-for-RangeFn"],[3324,"impl-Debug-for-RangeFn"]]},\
"script":{"doc":"","t":"AAOAAADQQDIQILLKKLLLLLLLLLLKLLLLLLLLKKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLNDNDNDNDNENDNDNDNDNGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLMLLLLLLLLMLLLLLLLLLLMMLLLMLLLLLLLLDDMAAAAMMAADRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNENDNNDNDNDNDNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLFMMFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMAAAANDENDGEDDNNLLLLLLLMLLLLLLMMLLLLLLLLLLLLLFLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLAMMMLMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFDLLMMLLFFLLLLLLLLLLLLLLLLLLFFLLLLLLLFFFFFFFFMFLMLLLLLLLFLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFFFDGLLLLLLLLFFFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFLFFLLLLLLLLMLLLFLLLLLLLLLLLLLLLLLFLLLLLFMLLLLLFDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAFOOFFFAFFFFFFRRDLLLFFLLFFFFFFFFLLFLFLLFLLLLFFFFFFFLLFLLFFLFFLLFFLLLLLLLFFLLMLFLLLLLFLLFFFFFFFFFFLFFFFFFFFFFLLLFFLFLFFLFFLLLLLLLLLLLFFFLRFFFFFFAFRRDGLLLLLLLLLLLLLLLLLLLFLLLLLLLLMLLLLLLFLLMLLFLLLLLLLLLLLLLLFFFFFGFMFFFFFRDGMLLLFFLLLLLLLLLFLMLLLLLLLLLMMFMLLLMLLLLLLLL","n":["engine","error","fail_parse_error","manager","python","table","CompileContext","Error","Error","EvalContext","Script","Script","ScriptEngine","and","and","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","compile","default","default","deref","deref","deref_mut","deref_mut","drop","drop","engine_name","execute","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","name","or","or","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","BuildDfLogicalPlan","BuildDfLogicalPlanSnafu","CastType","CastTypeSnafu","CollectRecords","CollectRecordsSnafu","CompilePython","CompilePythonSnafu","Err","Error","ExecuteInternalStatement","ExecuteInternalStatementSnafu","ExecutePython","ExecutePythonSnafu","FindColumnInScriptsTable","FindColumnInScriptsTableSnafu","InsertScript","InsertScriptSnafu","Ok","Result","ScriptNotFound","ScriptNotFoundSnafu","ScriptsTableNotFound","ScriptsTableNotFoundSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","name","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","location","location","location","location","location","location","location","location","location","location","msg","name","name","name","name","name","source","source","source","source","source","ScriptManager","and","borrow","borrow_mut","compat","compat_mut","compat_ref","compile","compile_without_cache","compiled","create_table_request","deref","deref_mut","drop","execute","from","from_subset","get_scripts_table","grpc_handler","init","insert_and_compile","insert_scripts_table","into","into_request","into_request","is_in_subset","lift_into","new","or","py_engine","query_engine","sculpt","start","subset","tables","to_subset","to_subset_unchecked","try_find_script_and_compile","try_from","try_into","try_into","type_id","vzip","PyEngine","PyScript","copr","engine","error","ffi_types","metric","query_engine","query_engine","rspython","utils","CoprStream","PY_ENGINE","PyEngine","PyScript","PyUDF","and","and","and","and","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compile","copr","copr","copr","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","engine_name","eval","execute","fake_schema","fmt","fmt","from","from","from","from","from_copr","from_script","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","name","name","new","or","or","or","or","params","poll_next","query_engine","query_engine","register_as_udf","register_to_query_engine","register_udf","ret_schema","return_type","schema","sculpt","sculpt","sculpt","sculpt","signature","size_hint","stream","subset","subset","subset","subset","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_poll_next","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Arrow","ArrowSnafu","CoprParse","CoprParseSnafu","DataFusion","DataFusionSnafu","DatabaseQuery","DatabaseQuerySnafu","Err","Error","NewRecordBatch","NewRecordBatchSnafu","Ok","Other","OtherSnafu","PyCompile","PyCompileSnafu","PyParse","PyParseSnafu","PyRuntime","PyRuntimeSnafu","RecordBatch","RecordBatchSnafu","Result","TokioJoin","TokioJoinSnafu","TypeCast","TypeCastSnafu","UnsupportedSql","UnsupportedSqlSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ensure","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_error_reason_loc","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","loc","msg","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","pretty_print_error_in_src","reason","reason","ret_other_error_with","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","sql","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visualize_loc","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","loc","location","location","location","location","location","location","location","location","location","location","location","location","msg","reason","reason","source","source","source","source","sql","copr","py_recordbatch","utils","vector","AffectedRows","AnnotationInfo","BackendType","CPython","Coprocessor","CoprocessorRef","Either","PyQueryEngine","QueryEngineWeakRef","Rb","RustPython","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__extend_py_class","__extend_slots","alloc","and","and","and","and","and","and","arg_types","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_and_cast_type","check_args_anno_real_type","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code_obj","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compile","datatype","deco_args","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exec_parsed","extend_slots","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_weakref","gen_schema","impl_extend_class","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nullable","kwarg","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","name","or","or","or","or","or","or","parse","phantom","ptr","query_engine","query_with_new_thread","return_types","script","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","select_from_rb","sql","sql_to_rb","static_cell","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_pyobject","to_pyresult","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","compile_script","create_located","gen_call","DecoratorArgs","__clone_box","and","arg_names","backend","borrow","borrow_mut","check_annotation_ret_slice","check_bin_op","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","get_arg_annotations","get_return_annotations","init","into","into_request","into_request","is_in_subset","lift_into","or","parse_and_compile_copr","parse_annotation","parse_bin_op","parse_decorator","parse_keywords","parse_native_type","py_str_to_string","pylist_to_vec","ret_names","ret_parse_error","sculpt","sql","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_into_datatype","type_id","vzip","PyRecordBatch","__extend_py_class","__extend_slots","and","as_mapping","borrow","borrow_mut","class","compat","compat_mut","compat_ref","deref","deref_mut","drop","extend_slots","fmt","from","from","from_subset","get_item","impl_extend_class","init","into","into_request","into_request","is_in_subset","len","lift_into","new","or","record_batch","rspy_repr","sculpt","static_cell","subset","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","all_to_f64","collect_diff_types_string","new_item_field","PyVector","PyVectorRef","__clone_box","__extend_py_class","__extend_slots","_getitem","add","and","and","arrow_data_type","arrow_rfloordiv","arrow_rsub","arrow_rtruediv","as_mapping","as_number","as_ref","as_sequence","as_vector_ref","borrow","borrow_mut","cast","class","clone","clone_into","cmp","coerce_types","compat","compat_mut","compat_ref","concat","data_type","default","deref","deref_mut","doc","drop","extend_slots","filter","floordiv","fmt","from","from","from_ref","from_subset","get_arrow_op","get_arrow_scalar_op","getitem_by_index","getitem_by_slice","impl_extend_class","init","into","into_request","into_request","invert","is_float","is_in_subset","is_signed","is_unsigned","len","len_rspy","lift_into","mul","new","obj_to_vector","or","or","ptr","repr_str","rfloordiv","richcompare","rspy_is_pyobj_scalar","rspy_scalar_arith_op","rspy_vector_arith_op","rsub","rtruediv","scalar_arith_op","sculpt","setitem_by_index","slot_richcompare","static_cell","sub","subset","to_arrow_array","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","to_type_error","truediv","try_from","try_into","try_into","type_id","val_to_pyobj","vector","vector_and","vector_arith_op","vector_invert","vector_or","vzip","wrap_result","METRIC_RSPY_EXEC_ELAPSED","METRIC_RSPY_EXEC_TOTAL_ELAPSED","METRIC_RSPY_INIT_ELAPSED","__private_field","__private_field","__private_field","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","builtins","copr_impl","dataframe_impl","utils","vector_impl","all_to_f64","bind_aggr_fn","bind_call_unary_math_function","collect_diff_types_string","eval_aggr_fn","from_df_err","greptime_builtin","init_greptime_builtins","new_item_field","scalar_val_try_into_py_obj","try_into_columnar_value","try_into_py_obj","type_cast_error","DOC","MODULE_NAME","PyDataFrame","__clone_box","__extend_py_class","__extend_slots","abs","acos","aggregate","and","approx_distinct","approx_percentile_cont","argmax","argmin","array_agg","asin","atan","avg","borrow","borrow_mut","ceil","class","clip","clone","clone_into","col","collect","compat","compat_mut","compat_ref","correlation","cos","count","covariance","covariance_pop","dataframe","datetime","deref","deref_mut","diff","distinct","drop","eval_aggr_func","eval_func","except","exp","extend_module","extend_slots","filter","first","floor","fmt","from","from","from_record_batch","from_ref","from_sql","from_subset","gen_inteveral","gen_none_array","impl_extend_class","init","inner","intersect","interval","into","into_request","into_request","is_in_subset","join","last","lift_into","limit","lit","ln","log10","log2","make_module","max","mean","median","min","next","or","percentile","polyval","pow","pow_gp","prev","query","random","round","scipy_stats_norm_cdf","scipy_stats_norm_pdf","sculpt","select","select_columns","signum","sin","sort","sqrt","static_cell","stddev","stddev_pop","subset","sum","tan","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","union","union_distinct","variance","variance_pop","vector","vzip","INTERPRETER","exec_with_cached_vm","init_interpreter","rspy_exec_parsed","set_items_in_scope","set_query_engine_in_scope","try_into_columns","data_frame","init_data_frame","DOC","MODULE_NAME","PyExpr","PyExprRef","__clone_box","__extend_py_class","__extend_slots","alias","and","and","as_number","borrow","borrow_mut","class","clone","clone_into","cmp","compat","compat_mut","compat_ref","deref","deref_mut","drop","extend_module","extend_slots","fmt","from","from","from_ref","from_subset","impl_extend_class","init","inner","into","into_request","into_request","invert","is_in_subset","lift_into","make_module","or","or","ptr","richcompare","sculpt","set_dataframe_in_scope","slot_richcompare","sort","static_cell","subset","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","format_py_error","is_instance","obj_cast_to","py_obj_to_value","py_obj_to_vec","PyVectorRef","get_concrete_type","ptr","pyobj_try_to_typed_val","to_type_error","block_on_async","format_py_error","spawn_blocking_script","SCRIPTS_TABLE_NAME","ScriptsTable","ScriptsTableRef","alloc","and","borrow","borrow_mut","build_insert_column_schemas","build_scripts_schema","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_script_by_name","from","from_subset","get_primary_key_indices","get_str_col_by_name","grpc_handler","init","insert","into","into_request","into_request","is_in_subset","lift_into","new","or","phantom","ptr","query_ctx","query_engine","recompile_register_udf","sculpt","subset","table","table_full_scan","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"script"],[6,"script::engine"],[77,"script::error"],[494,"script::error::Error"],[516,"script::manager"],[559,"script::python"],[570,"script::python::engine"],[718,"script::python::error"],[1247,"script::python::error::Error"],[1273,"script::python::ffi_types"],[1277,"script::python::ffi_types::copr"],[1532,"script::python::ffi_types::copr::compile"],[1535,"script::python::ffi_types::copr::parse"],[1593,"script::python::ffi_types::py_recordbatch"],[1637,"script::python::ffi_types::utils"],[1640,"script::python::ffi_types::vector"],[1742,"script::python::metric"],[1832,"script::python::rspython"],[1837,"script::python::rspython::builtins"],[1850,"script::python::rspython::builtins::greptime_builtin"],[1972,"script::python::rspython::copr_impl"],[1979,"script::python::rspython::dataframe_impl"],[1981,"script::python::rspython::dataframe_impl::data_frame"],[2041,"script::python::rspython::utils"],[2046,"script::python::rspython::vector_impl"],[2051,"script::python::utils"],[2054,"script::table"],[2100,"tower_http::follow_redirect::policy::and"],[2101,"tower_http::follow_redirect::policy"],[2102,"core::any"],[2103,"async_compat"],[2104,"core::future::future"],[2105,"alloc::boxed"],[2106,"core::pin"],[2107,"alloc::string"],[2108,"std::collections::hash::map"],[2109,"core::fmt"],[2110,"core::fmt"],[2111,"tonic::request"],[2112,"frunk_core::hlist"],[2113,"frunk_core::coproduct"],[2114,"core::result"],[2115,"core::option"],[2116,"core::any"],[2117,"core::error"],[2118,"snafu::backtrace_inert"],[2119,"core::convert"],[2120,"core::clone"],[2121,"alloc::vec"],[2122,"core::fmt"],[2123,"common_error::status_code"],[2124,"alloc::sync"],[2125,"common_error::ext"],[2126,"core::marker"],[2127,"common_query"],[2128,"table::table"],[2129,"servers::query_handler::grpc"],[2130,"query::query_engine"],[2131,"common_function::scalars::function"],[2132,"datatypes::vectors"],[2133,"common_query::error"],[2134,"datatypes::schema"],[2135,"core::task::wake"],[2136,"core::task::poll"],[2137,"datatypes::data_type"],[2138,"common_query::signature"],[2139,"common_recordbatch"],[2140,"rustpython_compiler_core::location"],[2141,"rustpython_vm::vm::context"],[2142,"rustpython_vm::builtins::type_"],[2143,"rustpython_vm::object::core"],[2144,"rustpython_vm::types::slot"],[2145,"common_recordbatch::recordbatch"],[2146,"query::query_engine"],[2147,"rustpython_vm::object::core"],[2148,"rustpython_vm::builtins::type_"],[2149,"rustpython_vm::exceptions::types"],[2150,"rustpython_vm::object::core"],[2151,"rustpython_ast::ast_gen"],[2152,"rustpython_ast::ast_gen"],[2153,"rustpython_vm::object::core"],[2154,"datafusion_common::scalar"],[2155,"arrow_schema::datatype"],[2156,"arrow_schema::field"],[2157,"arrow_array::scalar"],[2158,"arrow_array::array"],[2159,"rustpython_vm::protocol::number"],[2160,"rustpython_vm::protocol::sequence"],[2161,"rustpython_vm::types::slot"],[2162,"rustpython_vm::builtins::pystr"],[2163,"core::ops::function"],[2164,"rustpython_vm::sliceable"],[2165,"rustpython_vm::function::argument"],[2166,"datatypes::value"],[2167,"rustpython_vm::function::either"],[2168,"core::ops::function"],[2169,"datafusion_physical_expr::aggregate"],[2170,"datafusion_common::error"],[2171,"rustpython_vm::exceptions::types"],[2172,"arrow_array::record_batch"],[2173,"rustpython_vm::builtins::function"],[2174,"rustpython_vm::vm::interpreter"],[2175,"alloc::rc"],[2176,"rustpython_vm::scope"],[2177,"datafusion_expr::expr"],[2178,"rustpython_vm::object::payload"],[2179,"std::thread"],[2180,"tokio::runtime::task::join"],[2181,"greptime_proto::v1"],[2182,"datatypes::schema::raw"],[2183,"datatypes::vectors::string"],[2184,"table::metadata"],[2185,"session::context"],[2186,"catalog::error"]],"d":["Script engine","","append a <code>.fail()</code> after <code>ret_parse_error</code>, so compiler can …","Scripts manager","Python script coprocessor","Scripts table","Compile script context","","","Evaluate script context","","","","","","","","","","","","","","","","","","Compile a script text into a script instance.","","","","","","","","","Returns the script engine name such as <code>python</code> etc.","Execute the script and returns the output.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the script engine name such as <code>python</code> etc.","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildDfLogicalPlan</code> …","","SNAFU context selector for the <code>Error::CastType</code> variant","","SNAFU context selector for the <code>Error::CollectRecords</code> …","","SNAFU context selector for the <code>Error::CompilePython</code> variant","Contains the error value","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ExecutePython</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InsertScript</code> variant","Contains the success value","","","SNAFU context selector for the <code>Error::ScriptNotFound</code> …","","SNAFU context selector for the <code>Error::ScriptsTableNotFound</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codecompile script, and register them to the query engine and …","compile script to PyScript, but not register them to the …","","","","","","","Returns the argument unchanged.","","Get the scripts table in the catalog","","","","Insert a scripts table.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Python script engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fake a schema, should only be used with dynamically eval a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Register to <code>FUNCTION_REGISTRY</code>","","Register Current Script as UDF, register name is same as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Arrow</code> variant","errors in coprocessors’ parse check for types and etc.","SNAFU context selector for the <code>Error::CoprParse</code> variant","","SNAFU context selector for the <code>Error::DataFusion</code> variant","","SNAFU context selector for the <code>Error::DatabaseQuery</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::NewRecordBatch</code> …","Contains the success value","Other types of error that isn’t any of above","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::PyCompile</code> variant","","SNAFU context selector for the <code>Error::PyParse</code> variant","rustpython problem, using python virtual machines’ …","SNAFU context selector for the <code>Error::PyRuntime</code> variant","","SNAFU context selector for the <code>Error::RecordBatch</code> variant","","","SNAFU context selector for the <code>Error::TokioJoin</code> variant","","SNAFU context selector for the <code>Error::TypeCast</code> variant","","SNAFU context selector for the <code>Error::UnsupportedSql</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure a condition is true. If it is not, return from the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","extract a reason for <code>Error</code> in string format, also return a …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pretty print <code>Error</code> in given script, basically print a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pretty print a location in script with desc.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PyRecordBatch is a Python class that wraps a RecordBatch, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","get from python function args’ annotation, first is …","Use which backend to run this script Ideally in test both …","","","","","","","","","","","","","check if real types and annotation types(if have) is the …","match between arguments’ real type and annotation types …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","compile script to code object","if None, use types inferred by PyVector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","using a parsed <code>Coprocessor</code> struct as input to execute …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","generate <code>Schema</code> according to return names, types, if no …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","kwargs in coprocessor function’s signature","","","","","","","","","","","","","","","","","","","get from python function returns’ annotation, first is …","store its corresponding script, also skip serde when in …","","","","","","","select columns according to <code>fetch_names</code> from <code>rb</code> and cast …","return sql query results in <code>PyRecordBatch</code>,  ora empty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stripe the decorator(<code>@xxxx</code>) and type annotation(for type …","","generate a call to the coprocessor function with arguments …","","","","","","","","check for the grammar correctness of annotation, also …","check if binary op expr is legal(with one typename and one …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","parse script and return <code>Coprocessor</code> struct with info …","where:","parse a <code>DataType | None</code> or a single <code>DataType</code>","returns args and returns in Vec of String","parse a list of keyword and return args and returns list …","Item =&gt; NativeType default to be not nullable","","turn a python list of string in ast form(a <code>ast::Expr</code>) of …","","Return a CoprParseSnafu for you to chain fail() to return …","","","","","","","","","","","","","This is a Wrapper around a RecordBatch, impl PyMapping …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Because most of the datafusion’s UDF only support …","Generate friendly error message when the type of the input …","","The Main FFI type <code>PyVector</code> that is used both in RustPython …","","","","","","","","","","Performs <code>val / arr</code>, but cast to i64.","Performs <code>val - arr</code>.","Performs <code>val / arr</code>","","","","","create a ref to inner vector","","","","","","","","Returns the type that should be used for the result of an …","","","","","","","","","","","","take a boolean array and filters the Array, returning …","","","Returns the argument unchanged.","","","","get corresponding arrow op function according to given …","get corresponding arrow scalar op function according to …","","Return a <code>PyVector</code> in <code>PyObjectRef</code>","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","rich compare, return a boolean array, accept type are vec …","if this pyobj can be cast to a scalar value(i.e …","","","","","","","Unsupported TODO(discord9): make it work","","","","","","","","","","","","","","","","","convert a DataType <code>Value</code> into a <code>PyObjectRef</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin module contains GreptimeDB builtin udf/udaf","","","","","Because most of the datafusion’s UDF only support …","The macro for binding function in …","use to bind to Data Fusion’s UDF function P.S: seems due …","","evaluate Aggregate Expr using its backing accumulator","","GrepTime User Define Function module","","","turn a ScalarValue into a Python Object, currently support","try to turn a Python Object into a PyVector or a scalar …","cast a columnar value into python object","“Can’t cast operand of type <code>{name}</code> into <code>{ty}</code>.”","","","","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","","","Not implement in datafusion TODO(discord9): use greptime’…","","","effectively equals to <code>list(vector)</code>","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","directly port from datafusion’s <code>avg</code> function","","","simple math function, the backing implement is datafusion…","","","","","","collect <code>DataFrame</code> results into <code>PyRecordBatch</code> that impl …","","","","","simple math function, the backing implement is datafusion…","","","","get <code>__dataframe__</code> from globals and return it …","","","","","","","","","","simple math function, the backing implement is datafusion…","","","","return first element in a <code>PyVector</code> in sliced new <code>PyVector</code>, …","simple math function, the backing implement is datafusion…","","","Returns the argument unchanged.","TODO(discord9): error handling","","","","generate interval time point","","","","","","<code>func</code>: exec on sliding window slice of given <code>arr</code>, expect it …","Calls <code>U::from(self)</code>.","","","","","return last element in a <code>PyVector</code> in sliced new <code>PyVector</code>, …","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","","","","","","","","","Pow function, bind from gp’s <code>PowFunction</code>","GrepTime’s own impl of pow function","","get <code>__query__</code> from globals and return it TODO(discord9): …","return a random vector range from 0 to 1 and length of len","simple math function, the backing implement is datafusion…","","","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","simple math function, the backing implement is datafusion…","","","","","","simple math function, the backing implement is datafusion…","","","","","","","","","","","","","","","","","","init interpreter with type PyVector and Module: greptime","Using <code>RustPython</code> to run a parsed <code>Coprocessor</code> struct as …","set arguments with given name and values in python scopes","","convert a tuple of <code>PyVector</code> or one <code>PyVector</code>(wrapped in a …","with <code>register_batch</code>, and then wrap DataFrame API in it","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","<code>~</code> operator, return <code>!self</code>","","","","","","","","","set DataFrame instance into current scope with given name","","sort ascending&amp;nulls_first","","","","","","","","","","","","","","use <code>rustpython</code>’s <code>is_instance</code> method to check if a …","","","convert a single PyVector or a number(a constant)(wrapping …","","","","convert a <code>PyObjectRef</code> into a <code>datatypes::Value</code>(is that ok?) …","PyVectors’ rustpython specify methods","Please only use this method because you are calling from …","","just like <code>tokio::task::spawn_blocking</code> but using a …","","The scripts table that keeps the script content etc.","","","","","","Build the inserted column schemas","Build scripts table","","","","","","","","Returns the argument unchanged.","","Returns the scripts schema’s primary key indices","","","","","Calls <code>U::from(self)</code>.","","","","","Create a new <code>[ScriptsTable]</code> based on the table.","","","","","","this is used as a callback function when scripts table is …","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,165,166,0,0,166,0,10,6,165,166,10,6,10,6,10,6,10,6,10,6,166,10,6,10,6,10,6,10,6,165,165,10,6,10,6,10,6,10,6,10,6,10,10,6,6,10,6,10,6,166,10,6,10,6,10,6,10,6,10,6,10,6,10,10,6,6,10,6,10,6,27,0,27,0,27,0,27,0,49,0,27,0,27,0,27,0,27,0,49,0,27,0,27,0,30,32,36,37,38,33,39,34,40,41,30,32,36,37,38,33,39,34,40,41,27,27,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,33,34,27,30,32,36,37,38,33,39,34,40,41,30,32,36,37,38,33,39,34,40,41,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,33,34,30,32,36,37,38,33,39,34,40,41,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,30,30,32,32,36,36,37,37,38,38,33,33,39,39,34,34,40,40,41,41,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,34,30,36,37,38,33,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,30,30,32,32,36,36,37,37,38,38,33,33,39,39,34,34,40,40,41,41,27,27,30,32,36,37,38,33,39,34,40,41,27,30,32,36,37,38,33,39,34,40,41,27,167,168,169,170,171,172,173,174,175,167,176,175,168,170,171,172,173,170,171,172,174,176,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,47,0,0,0,0,47,53,0,0,0,0,0,0,0,47,68,53,60,47,53,47,68,53,60,47,68,53,60,47,68,53,60,47,68,53,60,47,68,53,60,53,47,68,60,47,68,53,60,47,68,53,60,47,68,53,60,47,60,47,60,60,60,47,68,53,60,60,47,47,68,53,60,47,68,53,60,47,68,53,60,47,47,68,68,53,53,60,60,68,68,47,68,53,60,47,68,53,60,53,60,53,47,68,53,60,68,68,47,53,60,60,47,68,60,68,47,68,53,60,60,68,68,47,68,53,60,60,47,68,53,60,47,68,53,60,47,68,53,60,47,47,68,68,53,53,60,60,68,68,47,68,53,60,47,68,53,60,74,0,74,0,74,0,74,0,67,0,74,0,67,74,0,74,0,74,0,74,0,74,0,0,74,0,74,0,74,0,80,81,82,83,75,84,85,76,78,79,86,87,88,80,81,82,83,75,84,85,76,78,79,86,87,88,74,74,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,75,76,78,79,74,80,81,82,83,75,84,85,76,78,79,86,87,88,80,81,82,83,75,84,85,76,78,79,86,87,88,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,0,75,76,78,79,80,81,82,83,75,84,85,76,78,79,86,87,88,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,80,81,82,83,75,84,85,76,78,79,86,87,88,74,0,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,80,80,81,81,82,82,83,83,75,75,84,84,85,85,76,76,78,78,79,79,86,86,87,87,88,88,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,76,75,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,0,76,78,0,80,81,82,83,75,84,85,76,78,79,86,87,88,74,74,79,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,80,80,81,81,82,82,83,83,75,75,84,84,85,85,76,76,78,78,79,79,86,86,87,87,88,88,74,74,80,81,82,83,75,84,85,76,78,79,86,87,88,74,0,80,81,82,83,75,84,85,76,78,79,86,87,88,74,177,178,179,180,181,182,183,184,177,178,185,179,180,182,186,187,188,189,185,182,186,183,184,188,189,187,0,0,0,0,101,0,0,96,0,0,0,0,0,101,96,95,96,66,97,98,98,98,190,101,95,96,66,97,98,66,66,101,95,96,66,97,98,101,95,96,66,97,98,66,0,98,95,96,66,97,98,95,96,66,97,98,66,101,95,96,66,97,98,101,95,96,66,97,98,101,95,96,66,97,98,0,95,66,96,101,95,96,66,97,98,101,95,96,66,97,98,101,95,96,66,97,98,95,96,66,95,95,95,95,96,96,96,96,66,66,66,66,0,98,95,96,66,97,98,101,95,96,66,97,97,97,98,95,96,66,97,98,101,95,96,66,97,98,98,66,98,101,95,96,66,97,98,98,101,95,96,66,97,98,101,101,95,95,96,96,66,66,97,97,98,98,101,95,96,66,97,98,95,66,101,95,96,66,97,98,66,101,95,96,66,97,98,0,190,190,66,98,66,66,101,95,96,66,97,98,0,98,98,98,101,95,96,66,97,98,95,96,66,97,98,98,98,101,95,96,66,97,98,101,95,96,66,97,98,101,95,96,66,97,98,101,101,95,95,96,96,66,66,97,97,98,98,101,95,96,66,97,98,101,95,96,66,97,98,0,0,0,0,109,109,109,109,109,109,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,109,109,109,109,109,109,109,0,0,0,0,0,0,0,0,109,0,109,109,109,109,109,109,109,109,109,0,109,109,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,0,93,93,93,93,93,93,93,93,0,0,0,93,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,93,93,93,93,93,93,93,93,0,93,0,0,93,93,93,93,93,93,93,93,191,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,93,93,93,93,93,0,93,93,93,93,93,93,0,0,0,0,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,137,139,139,140,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,137,139,139,140,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,139,140,137,137,139,139,140,140,137,139,140,137,139,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,0,0,144,144,0,0,0,0,0,0,0,0,144,144,0,144,0,144,144,0,144,144,144,144,0,0,0,0,0,0,0,144,144,0,144,144,0,0,144,0,0,144,144,0,0,144,144,144,144,144,144,144,0,0,144,144,144,144,0,144,144,144,144,144,0,144,144,0,0,0,0,0,0,0,0,0,0,144,0,0,0,0,0,0,0,0,0,0,144,144,144,0,0,144,0,144,0,0,144,0,0,144,144,144,144,144,144,144,144,144,144,144,0,0,0,144,0,0,0,0,0,0,0,0,0,0,0,0,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,145,145,192,145,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,0,0,0,0,0,193,0,0,0,0,0,0,0,0,56,160,160,160,0,0,160,160,160,160,160,160,160,160,160,0,160,160,160,160,160,160,160,160,160,160,160,56,56,0,160,160,160,160,160,160,160,160,160,160,160,160,160],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,3,[]],[-1,3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[-1,5,6],[[9,[[8,[7]]]]],[]],[[],10],[[],6],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,12],[11,12],[-1,5,[]],[[-1,[14,[13,13]],10],[[9,[[8,[7]]]]],[]],[[10,15],16],[[6,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,5,[]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[27,3],[-1,28,[]],[27,[[24,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1]]],27,[[31,[13]]]],[32,27],[[[33,[-1]]],27,[[31,[13]]]],[[[34,[-1]]],27,[[31,[13]]]],[27,[[24,[28]]]],[[[30,[-1]]],[[30,[-1]]],35],[32,32],[[[36,[-1]]],[[36,[-1]]],35],[[[37,[-1]]],[[37,[-1]]],35],[[[38,[-1]]],[[38,[-1]]],35],[[[33,[-1]]],[[33,[-1]]],35],[39,39],[[[34,[-1]]],[[34,[-1]]],35],[40,40],[41,41],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[27,11,[42,[13]]],12],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[27,5],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[[[30,[-1]]],[[23,[-2,27]]],[[31,[13]]],[]],[32,[[23,[-1,27]]],[]],[[[33,[-1]]],[[23,[-2,27]]],[[31,[13]]],[]],[[[34,[-1]]],[[23,[-2,27]]],[[31,[13]]],[]],[[[30,[-1]],15],16,43],[[32,15],16],[[[36,[-1]],15],16,43],[[[37,[-1]],15],16,43],[[[38,[-1]],15],16,43],[[[33,[-1]],15],16,43],[[39,15],16],[[[34,[-1]],15],16,43],[[40,15],16],[[41,15],16],[[27,15],16],[[27,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[30,[-1]]],27,[[31,[13]]]],[32,27],[[[36,[-1]]],27,[[31,[13]]]],[[[37,[-1]]],27,[[31,[13]]]],[[[38,[-1]]],27,[[31,[13]]]],[[[33,[-1]]],27,[[31,[13]]]],[39,27],[[[34,[-1]]],27,[[31,[13]]]],[40,27],[41,27],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[27,[[24,[44]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[27,[[24,[28]]]],[27,45],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[46,[-1]],5,5],[[49,[[48,[47]]]]],[50,51,52]],[[53,5,5],[[49,[47]]]],0,[[[46,[-1]],5],54,[50,51,52]],[11,-1,[]],[11,-1,[]],[11,12],[[[46,[-1]],5,5,5,[14,[13,13]]],[[49,[55]]],[50,51,52]],[-1,-1,[]],[-1,-2,[],[]],[[[46,[-1]],5],[[24,[[56,[-1]]]]],[50,51,52]],0,[[],11],[[[46,[-1]],5,5,5,5],[[49,[[48,[47]]]]],[50,51,52]],[[[46,[-1]],5,57],12,[50,51,52]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[[[58,[-1]],59],[[49,[[46,[-1]]]]],[50,51,52]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[-1,[[12,[21]]],[]],[[[46,[-1]],[58,[-1]]],[[49,[12]]],[50,51,52]],[-1,[[23,[22]]],[]],0,[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[[[46,[-1]],5,5,5],[[49,[[24,[[48,[47]]]]]]],[50,51,52]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[47,3],[53,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[53,5,6],[[9,[[8,[7]]]]]],0,0,0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,12],[11,12],[11,12],[11,12],[47,5],[[60,61,[63,[62]]],[[64,[62]]]],[[47,[14,[13,13]],10],[[9,[[8,[7]]]]]],[[60,[63,[62]]],65],[[60,15],16],[[60,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[48,[66]]],[[48,[60]]]],[[5,59],[[67,[47]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,5],[60,5],[59,53],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[[[9,[68]],69],[[70,[24]]]],0,0,[[[48,[60]]],12],[[[48,[60]],59],12],[47,12],0,[[60,[63,[71]]],[[64,[71]]]],[68,65],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[60,72],[68,[[12,[11,[24,[11]]]]]],0,[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,13,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[73,[48,[66]],[14,[13,13]]],[[67,[68]]]],[[[9,[-1]],69],[[70,[[24,[23]]]]],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[74,3],[-1,28,[]],[74,[[24,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[75,[-1]]],74,[[31,[13]]]],[[[76,[-1,-2]]],74,[[31,[13]]],[[31,[[24,[77]]]]]],[[[78,[-1]]],74,[[31,[13]]]],[[[79,[-1]]],74,[[31,[13]]]],[74,[[24,[28]]]],[80,80],[81,81],[82,82],[83,83],[[[75,[-1]]],[[75,[-1]]],35],[84,84],[85,85],[[[76,[-1,-2]]],[[76,[-1,-2]]],35,35],[[[78,[-1]]],[[78,[-1]]],35],[[[79,[-1]]],[[79,[-1]]],35],[86,86],[87,87],[88,88],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[74,11,[42,[13]]],12],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[74,5],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],0,[[[75,[-1]]],[[23,[-2,74]]],[[31,[13]]],[]],[[[76,[-1,-2]]],[[23,[-3,74]]],[[31,[13]]],[[31,[[24,[77]]]]],[]],[[[78,[-1]]],[[23,[-2,74]]],[[31,[13]]],[]],[[[79,[-1]]],[[23,[-2,74]]],[[31,[13]]],[]],[[80,15],16],[[81,15],16],[[82,15],16],[[83,15],16],[[[75,[-1]],15],16,43],[[84,15],16],[[85,15],16],[[[76,[-1,-2]],15],16,43,43],[[[78,[-1]],15],16,43],[[[79,[-1]],15],16,43],[[86,15],16],[[87,15],16],[[88,15],16],[[74,15],16],[[74,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,[[12,[13,[24,[77]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,74],[81,74],[82,74],[83,74],[[[75,[-1]]],74,[[31,[13]]]],[84,74],[85,74],[[[76,[-1,-2]]],74,[[31,[13]]],[[31,[[24,[77]]]]]],[[[78,[-1]]],74,[[31,[13]]]],[[[79,[-1]]],74,[[31,[13]]]],[86,74],[87,74],[88,74],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[74,[[24,[44]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[5,74,11,5],13],0,0,[13,[[78,[13]]]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[74,[[24,[28]]]],0,[74,45],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[5,77,5,5,11,5],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[-1,26],12,[]],[[89,[91,[90]]],12],[92,12],0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[66,[63,[62]]],[[67,[12]]]],[[[63,[13]],[63,[93]],66,94],[[67,[12]]]],[89,[[91,[90]]]],[95,95],[96,96],[66,66],[97,97],[98,98],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,0,[[],96],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,12],[11,12],[11,12],[11,12],[11,12],[11,12],[[95,95],19],[[96,96],19],[[66,66],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[66,[24,[94]],[14,[13,13]]],[[67,[94]]]],[92,12],[[95,15],16],[[96,15],16],[[66,15],16],[[97,15],16],[[98,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[100,[99]]],97],[-1,-1,[]],[[[48,[99]]],97],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,98],[[66,[63,[62]]],[[67,[65]]]],[[89,[91,[90]]],12],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,0,0,[[98,13],[[23,[101,13]]]],0,0,[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[[94,[63,[13]]],[[67,[[42,[93]]]]]],[[98,13,102],[[104,[103]]]],[[98,13],[[23,[94,13]]]],[[],[[106,[105]]]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,102],103,[]],[[-1,102],[[23,[103,[108,[107]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,109,[24,[13]],5],[[67,[110]]]],[[-1,77],[[111,[-1]]],[]],[[5,109,[24,[13]],77],[[112,[12]]]],0,[[-1,26],12,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[113,[12]]],[[67,[[113,[12]]]]]],[[[113,[12]]],[[67,[12]]]],[109,109],[[-1,-2],12,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[],109],[11,-1,[]],[11,-1,[]],[11,12],[[109,109],19],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[109,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[114,[[67,[[42,[[24,[95]]]]]]]],[[[113,[12]]],[[67,[[42,[[24,[95]]]]]]]],[[],11],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[5,[24,[59]]],[[67,[66]]]],[[[113,[12]]],[[67,[95]]]],[[[113,[12]]],[[67,[95]]]],[[[113,[12]]],[[67,[109]]]],[[[42,[[115,[12]]]]],[[67,[109]]]],[[[113,[12]]],[[67,[95]]]],[[[113,[12]]],[[67,[13]]]],[[[113,[12]]],[[67,[[42,[13]]]]]],0,[[13,[24,[77]]],[[76,[13,[24,[77]]]]]],[-1,[[12,[21]]],[]],0,[-1,[[23,[22]]],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[[5,77],[[67,[[24,[71]]]]]],[-1,25,[]],[-1,-2,[],[]],0,[[89,[91,[90]]],12],[92,12],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[],116],[-1,-2,[],[]],[-1,-2,[],[]],[89,[[91,[90]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[11,-1,[]],[11,-1,[]],[11,12],[92,12],[[117,15],16],[-1,-1,[]],[94,117],[-1,-2,[],[]],[[117,118,102],104],[[89,[91,[90]]],12],[[],11],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[117,11],[-1,-2,[],[]],[94,117],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[117,13],[-1,[[12,[21]]],[]],[[],[[106,[105]]]],[-1,[[23,[22]]],[]],[[-1,102],103,[]],[[-1,102],[[23,[103,[108,[107]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[119,[[23,[119,13]]]],[[[63,[120]],121],13],[121,122],0,0,[[-1,26],12,[]],[[89,[91,[90]]],12],[92,12],[[93,118,102],[[104,[103]]]],[[103,103,102],[[104,[93]]]],[[103,103,102],[[104,[93]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[93,121],[[123,123],[[23,[124,13]]]],[[123,123],[[23,[124,13]]]],[[123,123],[[23,[124,13]]]],[[],116],[[],125],[93,93],[[],126],[93,62],[-1,-2,[],[]],[-1,-2,[],[]],[[124,121],[[23,[124,13]]]],[89,[[91,[90]]]],[93,93],[[-1,-2],12,[],[]],[[[91,[93]],118,127,102],[[104,[128]]]],[[121,121,[24,[121]]],121],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[93,[108,[93]],102],[[104,[93]]]],[93,71],[[],93],[11,-1,[]],[11,-1,[]],[93,[[104,[129]]]],[11,12],[92,12],[[93,[108,[93]],102],[[104,[93]]]],[[103,103,102],[[104,[93]]]],[[93,15],16],[-1,-1,[]],[62,93],[-1,-1,[]],[-1,-2,[],[]],[127,[[0,[130]]]],[127,[[0,[130]]]],[[93,131,102],[[104,[103]]]],[[93,132,102],[[104,[103]]]],[[89,[91,[90]]],12],[[],11],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[103,102],[[104,[93]]]],[121,19],[-1,19,[]],[121,19],[121,19],[93,11],[93,11],[-1,-2,[],[]],[[103,103,102],[[104,[93]]]],[[[133,[103]],102],[[104,[93]]]],[[103,102],[[104,[[108,[93]]]]]],[[103,103,102],[[104,[93]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[[[91,[93]],102],[[104,[13]]]],[[93,103,102],[[104,[93]]]],[[93,103,127,102],[[104,[93]]]],[[103,102],19],[[93,103,[24,[121]],-1,102],[[104,[93]]],130],[[93,103,[24,[121]],-1,102],[[104,[93]]],130],[[103,103,102],[[104,[93]]]],[[93,103,102],[[104,[93]]]],[[93,134,[24,[121]],-1],[[23,[93,13]]],130],[-1,[[12,[21]]],[]],[[[108,[93]],131,103,102],[[104,[12]]]],[[118,118,127,102],[[104,[[135,[103,128]]]]]],[[],[[106,[105]]]],[[103,103,102],[[104,[93]]]],[-1,[[23,[22]]],[]],[93,124],[-1,-2,[],[]],[[-1,102],103,[]],[[-1,102],[[23,[103,[108,[107]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[102,[[0,[136]]]],[[103,103,102],[[104,[93]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[[134,102],104],0,[[93,93],[[23,[93,13]]]],[[93,93,[24,[121]],-1],[[23,[93,13]]],130],[93,[[23,[93,13]]]],[[93,93],[[23,[93,13]]]],[-1,-2,[],[]],[-1,[[0,[130]]],130],0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[11,-1,[]],[137,138],[139,138],[11,-1,[]],[11,-1,[]],[140,138],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,12],[11,12],[11,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[12,[21]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[23,[22]]],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[119,102],[[104,[119]]]],0,0,[[[63,[120]],121],13],[[-1,[63,[124]],102],[[104,[103]]],141],[[142,102],143],0,[[5,102],12],[121,122],[[120,102],[[104,[103]]]],[[103,102],[[104,[119]]]],[[119,102],[[104,[103]]]],[[5,5,102],143],0,0,0,[[-1,26],12,[]],[[89,[91,[90]]],12],[92,12],[[103,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[144,[42,[[108,[145]]]],[42,[[108,[145]]]],102],[[104,[144]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],146,102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[103,102],[[104,[103]]]],[89,[[91,[90]]]],[[[108,[93]],[108,[93]],[108,[93]],102],[[104,[93]]]],[144,144],[[-1,-2],12,[],[]],[[13,102],[[108,[145]]]],[[144,102],[[104,[103]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[102,[[104,[144]]]],[[129,102],[[104,[147]]]],[11,-1,[]],[11,-1,[]],[[[108,[93]],102],[[104,[103]]]],[[144,102],[[104,[144]]]],[11,12],[[5,[63,[[108,[93]]]],102],[[104,[103]]]],[[5,[63,[[108,[93]]]],102],[[104,[93]]]],[[144,[108,[144]],102],[[104,[144]]]],[[103,102],[[104,[103]]]],[[102,118],12],[92,12],[[144,[108,[145]],102],[[104,[144]]]],[[[108,[93]],102],[[104,[93]]]],[[103,102],[[104,[103]]]],[[144,15],16],[148,144],[-1,-1,[]],[149,[[67,[144]]]],[-1,-1,[]],[[13,102],[[104,[144]]]],[-1,-2,[],[]],[[147,147,147,102],[[104,[[42,[147]]]]]],[[121,11,102],[[104,[124]]]],[[89,[91,[90]]],12],[[],11],0,[[144,[108,[144]],102],[[104,[144]]]],[[[108,[93]],[108,[93]],147,[108,[150]],102],[[104,[93]]]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,19,[]],[[144,[108,[144]],13,[42,[13]],[42,[13]],[24,[[108,[145]]]],102],[[104,[144]]]],[[[108,[93]],102],[[104,[93]]]],[-1,-2,[],[]],[[144,11,[24,[11]],102],[[104,[144]]]],[[103,102],[[104,[[108,[145]]]]]],[[103,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[102,103],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[93]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[[103,103,102],[[104,[93]]]],[[[108,[93]],[108,[93]],102],[[104,[93]]]],[[[108,[93]],102],[[104,[93]]]],[102,[[104,[98]]]],[[11,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[[[108,[93]],[108,[93]],102],[[104,[103]]]],[-1,[[12,[21]]],[]],[[144,[42,[[108,[145]]]],102],[[104,[144]]]],[[144,[42,[13]],102],[[104,[144]]]],[[103,102],[[104,[103]]]],[[103,102],[[104,[103]]]],[[144,[42,[[108,[145]]]],102],[[104,[144]]]],[[103,102],[[104,[103]]]],[[],[[106,[105]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[-1,[[23,[22]]],[]],[[[108,[93]],102],[[104,[103]]]],[[103,102],[[104,[103]]]],[-1,-2,[],[]],[[-1,102],103,[]],[[-1,102],[[23,[103,[108,[107]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[[144,[108,[144]],102],[[104,[144]]]],[[144,[108,[144]],102],[[104,[144]]]],[[[108,[93]],102],[[104,[103]]]],[[[108,[93]],102],[[104,[103]]]],[[[133,[103]],102],[[104,[93]]]],[-1,-2,[],[]],0,[[66,[24,[94]],[42,[93]],[14,[13,13]],[152,[151]]],[[67,[94]]]],[[],[[152,[151]]]],[[66,[24,[94]],[14,[13,13]]],[[67,[94]]]],[[153,102,[63,[13]],[42,[93]]],[[67,[12]]]],[[153,102,5,98],[[67,[12]]]],[[103,102,11],[[67,[[42,[62]]]]]],0,[[5,102],12],0,0,0,0,[[-1,26],12,[]],[[89,[91,[90]]],12],[92,12],[[145,13],[[104,[145]]]],[[103,103,102],[[104,[145]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[],125],[-1,-2,[],[]],[-1,-2,[],[]],[89,[[91,[90]]]],[145,145],[[-1,-2],12,[],[]],[[[91,[145]],118,127,102],[[104,[128]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[11,-1,[]],[11,-1,[]],[11,12],[[102,118],12],[92,12],[[145,15],16],[-1,-1,[]],[154,145],[-1,-1,[]],[-1,-2,[],[]],[[89,[91,[90]]],12],[[],11],0,[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[103,102],[[104,[145]]]],[-1,19,[]],[-1,-2,[],[]],[102,103],[[103,103,102],[[104,[145]]]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[[145,103,127,102],[[104,[145]]]],[-1,[[12,[21]]],[]],[[153,102,5,94],[[67,[12]]]],[[118,118,127,102],[[104,[[135,[103,128]]]]]],[145,145],[[],[[106,[105]]]],[-1,[[23,[22]]],[]],[-1,-2,[],[]],[[-1,102],103,[]],[[-1,102],[[23,[103,[108,[107]]]]],[]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]],[[143,102],74],[[103,102],19],[[103,102],[[104,[[108,[-1]]]]],155],[[103,102],[[104,[134]]]],[[103,102,11],[[23,[62,74]]]],0,[[103,102],[[104,[71]]]],0,[[103,102,[24,[71]]],[[24,[134]]]],[102,[[0,[136]]]],[-1,[[156,[-2]]],[7,51],51],[[143,102],74],[-1,[[157,[-2]]],[136,51],51],0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[42,[158]]]],[[],159],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[11,-1,[]],[11,-1,[]],[11,12],[[[160,[-1]],5,5],[[49,[13]]],[50,51,52]],[-1,-1,[]],[-1,-2,[],[]],[[],[[42,[11]]]],[[94,5],[[49,[161]]]],0,[[],11],[[[160,[-1]],5,5,5],[[49,[12]]],[50,51,52]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[[57,[58,[-1]],59],[[160,[-1]]],[50,51,52]],[[-1,-4],[[20,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,0,[162,163],0,[[57,59],[[164,[12]]]],[-1,[[12,[21]]],[]],[-1,[[23,[22]]],[]],0,[[57,59],[[49,[73]]]],[-1,[[24,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"And",2100],[8,"Policy",2101],[8,"Any",2102],[3,"Compat",2103],[15,"str"],[3,"CompileContext",6],[8,"Future",2104],[3,"Box",2105],[3,"Pin",2106],[3,"EvalContext",6],[15,"usize"],[15,"tuple"],[3,"String",2107],[3,"HashMap",2108],[3,"Formatter",2109],[6,"Result",2109],[3,"Request",2110],[3,"Request",2110],[15,"bool"],[3,"Or",2111],[3,"HNil",2112],[4,"CNil",2113],[4,"Result",2114],[4,"Option",2115],[3,"TypeId",2102],[3,"Private",2116],[4,"Error",77],[8,"Error",2117],[3,"Backtrace",2118],[3,"FindColumnInScriptsTableSnafu",77],[8,"Into",2119],[3,"ScriptsTableNotFoundSnafu",77],[3,"ScriptNotFoundSnafu",77],[3,"CastTypeSnafu",77],[8,"Clone",2120],[3,"InsertScriptSnafu",77],[3,"CompilePythonSnafu",77],[3,"ExecutePythonSnafu",77],[3,"CollectRecordsSnafu",77],[3,"BuildDfLogicalPlanSnafu",77],[3,"ExecuteInternalStatementSnafu",77],[3,"Vec",2121],[8,"Debug",2109],[8,"StackError",2122],[4,"StatusCode",2123],[3,"ScriptManager",516],[3,"PyScript",570],[3,"Arc",2124],[6,"Result",77],[8,"ErrorExt",2122],[8,"Send",2125],[8,"Sync",2125],[3,"PyEngine",570],[3,"RegisterSystemTableRequest",2126],[4,"Output",2127],[6,"ScriptsTableRef",2054],[6,"TableRef",2128],[6,"GrpcQueryHandlerRef",2129],[6,"QueryEngineRef",2130],[3,"PyUDF",570],[3,"FunctionContext",2131],[6,"VectorRef",2132],[15,"slice"],[6,"Result",2133],[6,"SchemaRef",2134],[3,"Coprocessor",1277],[6,"Result",718],[3,"CoprStream",570],[3,"Context",2135],[4,"Poll",2136],[4,"ConcreteDataType",2137],[3,"Signature",2138],[6,"SendableRecordBatchStream",2139],[4,"Error",718],[3,"PyRuntimeSnafu",718],[3,"CoprParseSnafu",718],[3,"Location",2140],[3,"OtherSnafu",718],[3,"UnsupportedSqlSnafu",718],[3,"TypeCastSnafu",718],[3,"DatabaseQuerySnafu",718],[3,"PyParseSnafu",718],[3,"PyCompileSnafu",718],[3,"ArrowSnafu",718],[3,"DataFusionSnafu",718],[3,"RecordBatchSnafu",718],[3,"NewRecordBatchSnafu",718],[3,"TokioJoinSnafu",718],[3,"Context",2141],[3,"PyType",2142],[3,"Py",2143],[3,"PyTypeSlots",2144],[3,"PyVector",1640],[3,"RecordBatch",2145],[3,"AnnotationInfo",1277],[4,"BackendType",1277],[3,"QueryEngineWeakRef",1277],[3,"PyQueryEngine",1277],[8,"QueryEngine",2130],[3,"Weak",2124],[4,"Either",1277],[3,"VirtualMachine",2146],[3,"PyObjectRef",2143],[6,"PyResult",2147],[6,"PyTypeRef",2142],[3,"StaticCell",2148],[3,"PyBaseException",2149],[3,"PyRef",2143],[3,"DecoratorArgs",1535],[3,"CodeObject",2150],[3,"Located",2151],[6,"Stmt",2151],[6,"Expr",2151],[3,"Arguments",2151],[6,"Keyword",2151],[3,"PyMappingMethods",2152],[3,"PyRecordBatch",1593],[3,"PyObject",2143],[4,"ColumnarValue",2153],[4,"ScalarValue",2154],[4,"DataType",2155],[3,"Field",2156],[8,"Datum",2157],[6,"ArrayRef",2158],[3,"PyNumberMethods",2159],[3,"PySequenceMethods",2160],[3,"PyComparisonOp",2144],[6,"PyComparisonValue",2161],[3,"PyStr",2162],[8,"Fn",2163],[15,"isize"],[3,"SaturatedSlice",2164],[4,"OptionalArg",2165],[4,"Value",2166],[4,"Either",2167],[8,"FnOnce",2163],[3,"METRIC_RSPY_INIT_ELAPSED",1742],[3,"Histogram",2168],[3,"METRIC_RSPY_EXEC_ELAPSED",1742],[3,"METRIC_RSPY_EXEC_TOTAL_ELAPSED",1742],[8,"AggregateExpr",2169],[4,"DataFusionError",2170],[6,"PyBaseExceptionRef",2149],[3,"PyDataFrame",1850],[3,"PyExpr",1981],[15,"f64"],[15,"i64"],[3,"DataFrame",2171],[3,"RecordBatch",2172],[3,"PyFunction",2173],[3,"Interpreter",2174],[3,"Rc",2175],[3,"Scope",2176],[4,"Expr",2177],[8,"PyObjectPayload",2178],[6,"Result",2179],[3,"JoinHandle",2180],[3,"ColumnSchema",2181],[3,"RawSchema",2182],[3,"ScriptsTable",2054],[3,"StringVector",2183],[3,"TableInfo",2184],[6,"QueryContextRef",2185],[6,"Result",2186],[8,"Script",6],[8,"ScriptEngine",6],[13,"BuildDfLogicalPlan",494],[13,"FindColumnInScriptsTable",494],[13,"ScriptsTableNotFound",494],[13,"InsertScript",494],[13,"CompilePython",494],[13,"ExecutePython",494],[13,"ScriptNotFound",494],[13,"CollectRecords",494],[13,"CastType",494],[13,"ExecuteInternalStatement",494],[13,"PyParse",1247],[13,"PyCompile",1247],[13,"Arrow",1247],[13,"DataFusion",1247],[13,"TokioJoin",1247],[13,"CoprParse",1247],[13,"TypeCast",1247],[13,"DatabaseQuery",1247],[13,"PyRuntime",1247],[13,"Other",1247],[13,"UnsupportedSql",1247],[13,"RecordBatch",1247],[13,"NewRecordBatch",1247],[6,"CoprocessorRef",1277],[6,"PyVectorRef",1640],[6,"PyExprRef",1981],[6,"PyVectorRef",2046]],"b":[[254,"impl-Display-for-Error"],[255,"impl-Debug-for-Error"],[621,"impl-Display-for-PyUDF"],[622,"impl-Debug-for-PyUDF"],[941,"impl-Display-for-Error"],[942,"impl-Debug-for-Error"],[1396,"impl-From%3CWeak%3Cdyn+QueryEngine%3E%3E-for-QueryEngineWeakRef"],[1398,"impl-From%3C%26Arc%3Cdyn+QueryEngine%3E%3E-for-QueryEngineWeakRef"]]},\
"servers":{"doc":"","t":"NEDNLLLLLLLLLLLLLLLLLLAOLLLLLLLLLLLLALLLLLLLAAAALLALLLLLLLLLLAAAAALLAMAAAMAAMLLLAALLALLLLLLLLLLLLLLLLIGMLLMMNDNDNDNDNDNDNDNDNDNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNRDDDNGLLLLLLLLLLLLLLLLLLLLLMLLLLLAMLLLLLLLLLLAMLLLLLLLLALLLLLLLLLLLLLLLLLLLMMLLLLLAMAMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLIGDDGMLLLLLLLLLLKLLLMLMLLLLLLLLLLLLLLLLLMLLLLMMMLALFLLLLLLLDLLLLLLLLMLLMLLLLLLLLLLMLLLLLLMLLLLLLLLLLDDLLLFLLLLLLLLLLLLFMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLMLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLIGDLMLLLLLLLLLLLLLLKLLMLLLLLLLLMMMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLNDDRDRRRDDDDEDHNDLLLMLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFAAAMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLMLLLLLAMMLLLLLLLLLLAMLMMAMAAMLLLLLLLLLMLMLLLLLLLLLLAMMLLLLLLLLLLLLLLLLFFLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLENGDGGLMLLFLLLLLLLLLLLLLFLLLLLLFFFFLLLLLLFLLMLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFMMLLDDDDDLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFMMLLLLLLLLLLLLLLLLLLLLMFMFMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFDNNNEDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFFLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFLLLLLLLLFLLLLLLLLLLACFDLLLLLLMFFLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLDNDDNNDDDNDDEDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLMMLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLMMMMLLLLLLLLLLLFMMMFLFFMMFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMDLLLMLLLMLLLLLLLLLLLLLOLLMLMFLLFLLLLLLLLLOLRRDLLLLLLLLLLLLLLLLLLMLMLLLLLLLLFLQQQIGIGIGMMMMMMLLLLLLLLMMMGGDLLLMLLLLMMLLLMLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLDDRRDRDDDDDDDDDDDDDDDDDRRDDDRRRDRDDRRRDDDRDDLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAHHHHHHHHHHHHFFFFFFFFFDLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLFMMMFFLMLLMLLLLLLLMFLFFFFFRRDDDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLMLLLDDLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLFLLLMRDLLMLLALLLALFLLLLLALLLLLLLMLMLLLLLLLLLLLDRRLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLMLLMLDGLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLDLLLLLLMLLLLLLLLLLLLLMLLMLLLLLLLLRRRAAARRFFFFFFFFFFFFIGMKMMKRRAFAFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDGLLLLLLLLLLMMLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLMFMMMMLLLLLLLLLMMMMMMMMMMFLLLLLMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLDRRRRDDEDDNNLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLMMMLMLMMMLMLLLLLALMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMMLLLLLEDNDNLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFMLLLFFLLLLLLLLLLLLLLLLLLLLLMMLLLDLLLLLLLLLLLLLLLLLLLFLMFLMLLLLLLLLRDLLMLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLFAFFFFFFFFDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLRRDRDLLLLLLLFLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLFFFLLLFFFLLFFLLFFLLLLLLLLLLLLLLRIGMKKMMIGIGIGIGDIGMMMMMLMLLLLLMMLLLKKKLLAKLKLLLLLLKLMMMMMMMMMMKLALLLKLLLLLKQIGDGMMLLLLLLLLLKLLLLLLLLLLLMMMMLLLLLLLLLQDGIGMMLLLLLLLLLKLKLKLKLLLLLLLLLKLLLMMMMLLLLLLLLLDDLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLFFFFFFFGDDIGGMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLMLLKMLLLLKLLKFLLLLMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLNNNEDNNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Distributed","Mode","SqlPlan","Standalone","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","configurator","define_into_tonic_status","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","from","from","from_ref","from_ref","from_subset","from_subset","grpc","heartbeat_options","http","influxdb","init","init","interceptor","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","line_writer","metrics","metrics_handler","mysql","opentsdb","or","or","otlp","plan","postgres","prom_store","prometheus_handler","query","query_handler","row_writer","schema","sculpt","sculpt","serialize","server","shutdown","subset","subset","tls","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Configurator","ConfiguratorRef","alloc","config_grpc","config_http","phantom","ptr","AlreadyStarted","AlreadyStartedSnafu","Auth","AuthSnafu","BuildHttpResponse","BuildHttpResponseSnafu","CatalogError","CatalogSnafu","CheckDatabaseValidity","CheckDatabaseValiditySnafu","CollectRecordbatch","CollectRecordbatchSnafu","ConnResetByPeer","ConnResetByPeerSnafu","ConvertScalarValue","ConvertScalarValueSnafu","DataFrame","DataFrameSnafu","DatabaseNotFound","DatabaseNotFoundSnafu","DecodeOtlpRequest","DecodeOtlpRequestSnafu","DecodePromRemoteRequest","DecodePromRemoteRequestSnafu","DecompressPromRemoteRequest","DecompressPromRemoteRequestSnafu","DescribeStatement","DescribeStatementSnafu","Err","Error","ExecuteGrpcQuery","ExecuteGrpcQuerySnafu","ExecuteGrpcRequest","ExecuteGrpcRequestSnafu","ExecutePlan","ExecutePlanSnafu","ExecuteQuery","ExecuteQuerySnafu","ExecuteScript","ExecuteScriptSnafu","GetPreparedStmtParams","GetPreparedStmtParamsSnafu","GrpcReflectionService","GrpcReflectionServiceSnafu","Hyper","HyperSnafu","IncompatibleSchema","IncompatibleSchemaSnafu","InfluxdbLineProtocol","InfluxdbLineProtocolSnafu","InfluxdbLinesWrite","InfluxdbLinesWriteSnafu","InsertScript","InsertScriptSnafu","Internal","InternalIo","InternalIoSnafu","InternalSnafu","InvalidAuthorizationHeader","InvalidAuthorizationHeaderSnafu","InvalidBase64Value","InvalidBase64ValueSnafu","InvalidFlightTicket","InvalidFlightTicketSnafu","InvalidFlushArgument","InvalidFlushArgumentSnafu","InvalidOpentsdbJsonRequest","InvalidOpentsdbJsonRequestSnafu","InvalidOpentsdbLine","InvalidOpentsdbLineSnafu","InvalidParameter","InvalidParameterSnafu","InvalidPrepareStatement","InvalidPrepareStatementSnafu","InvalidPromRemoteReadQueryResult","InvalidPromRemoteReadQueryResultSnafu","InvalidPromRemoteRequest","InvalidPromRemoteRequestSnafu","InvalidQuery","InvalidQuerySnafu","InvalidUtf8Value","InvalidUtf8ValueSnafu","InvisibleASCII","InvisibleASCIISnafu","JoinTask","JoinTaskSnafu","NotFoundAuthHeader","NotFoundAuthHeaderSnafu","NotFoundInfluxAuth","NotFoundInfluxAuthSnafu","NotSupported","NotSupportedSnafu","Ok","Other","OtherSnafu","OtlpMetricsWrite","OtlpMetricsWriteSnafu","ParsePromQL","ParsePromQLSnafu","PreparedStmtTypeMismatch","PreparedStmtTypeMismatchSnafu","PromSeriesWrite","PromSeriesWriteSnafu","ReplacePreparedStmtParams","ReplacePreparedStmtParamsSnafu","Result","StartGrpc","StartGrpcSnafu","StartHttp","StartHttpSnafu","TcpBind","TcpBindSnafu","TcpIncoming","TcpIncomingSnafu","TimePrecision","TimePrecisionSnafu","TlsRequired","TlsRequiredSnafu","ToJson","ToJsonSnafu","TokioIo","TokioIoSnafu","UnexpectedResult","UnexpectedResultSnafu","UnsupportedAuthScheme","UnsupportedAuthSchemeSnafu","UpdateJemallocMetrics","UpdateJemallocMetricsSnafu","UrlDecode","UrlDecodeSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","actual","actual","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","expected","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","query","query","reason","reason","reason","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","server","server","source","status_code","status_to_tonic_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","addr","catalog","column_name","datatype","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expected","expected","feat","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","name","name","name","query","query","reason","reason","reason","schema","server","server","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","Err","GRPC_SERVER","GrpcServer","GrpcServerConfig","HealthCheckHandler","Ok","TonicResult","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","create_flight_service","create_healthcheck_service","create_prom_query_gateway_service","create_reflection_service","create_region_service","database","database_handler","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","flight","flight_handler","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","greptime_handler","health_check","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","max_recv_message_size","max_send_message_size","name","new","or","or","or","prom_query_gateway","prometheus_handler","region_server","region_server_handler","sculpt","sculpt","sculpt","serve_state","shutdown","shutdown_tx","start","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user_provider","vzip","vzip","vzip","wait_for_serve","DatabaseService","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","handle_requests","handler","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FlightCraft","FlightCraftRef","FlightCraftWrapper","FlightRecordBatchStream","TonicStream","alloc","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_action","do_exchange","do_get","do_get","do_get","do_put","done","drop","encoder","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_socketlike","from_subset","get_flight_info","get_schema","handshake","init","into","into_request","into_request","is_in_subset","join_handle","lift_into","list_actions","list_flights","or","phantom","ptr","rx","sculpt","stream","subset","to_flight_data_stream","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FlightRecordBatchStream","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","done","drop","drop","encoder","flight_data_stream","from","from_subset","init","into","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","join_handle","lift_into","new","or","poll_next","project","project_ref","rx","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_poll_next","type_id","vzip","GreptimeRequestHandler","RequestTimer","__clone_box","and","and","auth","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_query_context","db","deref","deref","deref_mut","deref_mut","do_get","drop","drop","drop","from","from","from_ref","from_subset","from_subset","handle_request","handler","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","new","or","or","record","request_type","runtime","sculpt","sculpt","start","status_code","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","user_provider","vzip","vzip","PrometheusGatewayService","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","handle_inner","handler","init","into","into_request","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","user_provider","vzip","RegionServerHandler","RegionServerHandlerRef","RegionServerRequestHandler","__clone_box","alloc","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle","handle","handle","handler","init","into","into_request","into_request","is_in_subset","lift_into","new","or","phantom","ptr","runtime","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HeartbeatOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","datanode_default","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","frontend_default","init","interval","into","into_request","into_request","is_in_subset","lift_into","or","retry_interval","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","AffectedRows","ApiState","ColumnSchema","DEFAULT_BODY_LIMIT","GreptimeOptionsConfigState","HTTP_API_PREFIX","HTTP_API_VERSION","HTTP_SERVER","HttpOptions","HttpRecordsOutput","HttpServer","HttpServerBuilder","JsonOutput","JsonResponse","PUBLIC_APIS","Records","Schema","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","authorize","body_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","code","code","column_schemas","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disable_dashboard","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","execution_time_ms","execution_time_ms","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_output","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","greptime_config_options","greptime_config_options","grpc_handler","handle_error","handler","header","influxdb","influxdb_handler","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","make_app","mem_prof","metrics_handler","name","name","new","new","new","num_cols","num_rows","opentsdb","opentsdb_handler","options","or","or","or","or","or","or","or","or","or","or","otlp","otlp_handler","output","output","plugins","pprof","prom_handler","prom_store","prometheus","prometheus_handler","route_config","route_influxdb","route_metrics","route_opentsdb","route_otlp","route_prom","route_prometheus","route_sql","rows","rows","schema","schema","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","script","script_handler","script_handler","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","serialize","serve_api","serve_docs","shutdown","shutdown_tx","sql_handler","sql_handler","start","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","success","timeout","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","track_metrics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_provider","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_error","with_error_message","with_execution_time","with_greptime_config_options","with_grpc_handler","with_influxdb_handler","with_metrics_handler","with_opentsdb_handler","with_otlp_handler","with_output","with_plugins","with_prom_handler","with_prometheus_handler","with_script_handler","with_sql_handler","with_user_provider","AuthScheme","Basic","Credential","HttpAuth","Password","Username","__clone_box","_ty","and","and","auth_header","authorize","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","decode_basic","deref","deref","deref_mut","deref_mut","drop","drop","extract_catalog_and_schema","extract_db_from_query","extract_influxdb_user_from_query","extract_username_and_password","fmt","from","from","from_ref","from_subset","from_subset","get_influxdb_credentials","init","init","inner_secret","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","need_auth","new","or","or","sculpt","sculpt","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","unauthorized_resp","user_provider","vec","vzip","vzip","HealthQuery","HealthResponse","PromqlQuery","SqlQuery","StatusResponse","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","commit","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","db","db","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","end","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","health","hostname","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","lift_into","lift_into","lift_into","lift_into","lift_into","metrics","or","or","or","or","or","promql","query","rustc_version","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","source_time","sql","sql","sql_docs","start","status","step","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_schema","version","vzip","vzip","vzip","vzip","vzip","GREPTIME_DB_NAME_HEADER_NAME","GreptimeDbName","and","borrow","borrow_mut","compat","compat_mut","compat_ref","decode","deref","deref_mut","drop","encode","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","name","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","value","vzip","influxdb_health","influxdb_ping","influxdb_write","influxdb_write_v1","influxdb_write_v2","parse_time_precision","mem_prof_handler","DataPointRequest","Debug","Empty","One","OneOrMany","OpentsdbDebuggingResponse","OpentsdbDetailError","OpentsdbPutResponse","Vec","__clone_box","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datapoint","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","error","errors","failed","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","metric","on_failed","on_success","or","or","or","or","or","parse_data_points","put","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","subset","subset","subset","subset","subset","success","tags","timestamp","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","OtlpMetricsResponse","OtlpTracesResponse","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","into_response","into_response","is_in_subset","is_in_subset","lift_into","lift_into","metrics","or","or","parse_metrics_body","parse_traces_body","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","traces","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","handler","pprof_handler","pprof_handler","DatabaseQuery","and","borrow","borrow_mut","compat","compat_mut","compat_ref","db","decode_remote_read_request","decode_remote_write_request","default","deref","deref_mut","deserialize","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","json_schema","lift_into","or","remote_read","remote_write","schema_id","schema_name","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FormatQuery","FormatQuery","InstantQuery","LabelValueQuery","LabelValues","Labels","LabelsQuery","Matches","PromData","PromData","PromSeries","PrometheusJsonResponse","PrometheusResponse","RangeQuery","Series","SeriesQuery","and","and","and","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data","db","db","db","db","db","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","end","end","end","eq","eq","eq","eq","error","error","error_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_query","from","from","from","from","from","from","from","from","from","from","from","from_query_result","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_all_column_names","init","init","init","init","init","init","init","init","init","init","init","instant_query","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","label_values_query","labels_query","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","matches","matches","matches","metric","or","or","or","or","or","or","or","or","or","or","or","promql_expr_to_metric_name","query","query","query","range_query","record_batches_to_data","record_batches_to_labels_name","record_batches_to_series","result","result_type","retrieve_label_values","retrieve_label_values_from_record_batch","retrieve_labels_name_from_query_result","retrieve_metric_name_and_result_type","retrieve_series_from_query_result","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","series_query","start","start","start","start","status","step","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","success","time","timeout","timeout","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warnings","ScriptQuery","and","borrow","borrow_mut","catalog","compat","compat_mut","compat_ref","db","default","deref","deref_mut","deserialize","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","json_err","json_schema","lift_into","name","or","params","run_script","schema_id","schema_name","scripts","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unwrap_or_json_err","vzip","DEFAULT_TIME_PRECISION","INFLUXDB_TIMESTAMP_COLUMN_NAME","InfluxdbRequest","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","lines","or","precision","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unwrap_or_default_precision","vzip","Error","Error","Error","GrpcQueryInterceptor","GrpcQueryInterceptorRef","PromQueryInterceptor","PromQueryInterceptorRef","SqlQueryInterceptor","SqlQueryInterceptorRef","alloc","alloc","alloc","phantom","phantom","phantom","post_execute","post_execute","post_execute","post_parsing","pre_execute","pre_execute","pre_execute","pre_parsing","ptr","ptr","ptr","ColumnLen","ColumnName","LineWriter","and","borrow","borrow_mut","columns_builders","commit","compat","compat_mut","compat_ref","current_rows","db","deref","deref_mut","drop","expected_rows","finish","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","sculpt","subset","table_name","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vec","vzip","with_lines","write","write_bool","write_f64","write_i64","write_string","write_tag","write_ts","write_u64","HTTP_TRACK_METRICS","METRIC_AUTH_FAILURE","METRIC_CODE_LABEL","METRIC_DB_LABEL","METRIC_ERROR_COUNTER","METRIC_ERROR_COUNTER_LABEL_MYSQL","METRIC_GRPC_REQUESTS_ELAPSED","METRIC_GRPC_REQUESTS_TOTAL","METRIC_HTTP_INFLUXDB_WRITE_ELAPSED","METRIC_HTTP_OPENTELEMETRY_METRICS_ELAPSED","METRIC_HTTP_OPENTELEMETRY_TRACES_ELAPSED","METRIC_HTTP_PROMQL_ELAPSED","METRIC_HTTP_PROMQL_FORMAT_QUERY_ELAPSED","METRIC_HTTP_PROMQL_INSTANT_QUERY_ELAPSED","METRIC_HTTP_PROMQL_LABEL_QUERY_ELAPSED","METRIC_HTTP_PROMQL_LABEL_VALUE_QUERY_ELAPSED","METRIC_HTTP_PROMQL_RANGE_QUERY_ELAPSED","METRIC_HTTP_PROMQL_SERIES_QUERY_ELAPSED","METRIC_HTTP_PROM_STORE_READ_ELAPSED","METRIC_HTTP_PROM_STORE_WRITE_ELAPSED","METRIC_HTTP_REQUESTS_ELAPSED","METRIC_HTTP_REQUESTS_TOTAL","METRIC_HTTP_SQL_ELAPSED","METRIC_METHOD_LABEL","METRIC_MYSQL_BINQUERY","METRIC_MYSQL_CONNECTIONS","METRIC_MYSQL_PREPARED_COUNT","METRIC_MYSQL_QUERY_TIMER","METRIC_MYSQL_SUBPROTOCOL_LABEL","METRIC_MYSQL_TEXTQUERY","METRIC_PATH_LABEL","METRIC_POSTGRES_CONNECTIONS","METRIC_POSTGRES_EXTENDED_QUERY","METRIC_POSTGRES_PREPARED_COUNT","METRIC_POSTGRES_QUERY_TIMER","METRIC_POSTGRES_SIMPLE_QUERY","METRIC_POSTGRES_SUBPROTOCOL_LABEL","METRIC_PROTOCOL_LABEL","METRIC_SERVER_GRPC_DB_REQUEST_TIMER","METRIC_SERVER_GRPC_PROM_REQUEST_TIMER","METRIC_TCP_OPENTSDB_LINE_WRITE_ELAPSED","METRIC_TYPE_LABEL","MetricsMiddleware","MetricsMiddlewareLayer","__clone_box","__clone_box","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jemalloc","layer","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","make_service","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","poll_ready","poll_ready","poll_ready","poll_ready","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","JEMALLOC_COLLECTOR","JemallocCollector","SYS_JEMALLOC_ALLOCATED","SYS_JEMALLOC_RESIDEN","__private_field","__private_field","allocated","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","epoch","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","resident","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","update","vzip","vzip","vzip","MetricsHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","render","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","federated","handler","helper","server","writer","MYSQL_CONN_JAVA_PATTERN","OTHER_NOT_SUPPORTED_STMT","SELECT_DATABASE_PATTERN","SELECT_TIME_DIFF_FUNC_PATTERN","SELECT_VAR_PATTERN","SELECT_VERSION_PATTERN","SET_TIME_ZONE_PATTERN","SHOW_COLLATION_PATTERN","SHOW_LOWER_CASE_PATTERN","SHOW_SQL_MODE_PATTERN","SHOW_VARIABLES_PATTERN","VAR_VALUES","check","check_others","check_select_variable","check_set_variables","check_show_variables","get_version","select_function","select_variable","show_variables","MysqlInstanceShim","and","authenticate","borrow","borrow_mut","compat","compat_mut","compat_ref","create","deref","deref_mut","do_describe","do_exec_plan","do_query","drop","dummy_params","format_duration","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","on_close","on_execute","on_init","on_prepare","on_query","or","plan","prepared_params","prepared_stmts","prepared_stmts_counter","query_handler","replace_params","replace_params_with_values","salt","salt","save_plan","sculpt","session","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","user_provider","validate_query","vzip","convert_value","format_placeholder","replace_placeholders","transform_placeholders","visit_placeholders","DEFAULT_RESULT_SET_WRITE_BUFFER_SIZE","MYSQL_SERVER","MysqlServer","MysqlSpawnConfig","MysqlSpawnRef","accept","and","and","and","base_server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_server","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_handle","drop","drop","drop","force_tls","from","from","from","from_subset","from_subset","from_subset","handle","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","name","new","new","or","or","or","query_handler","query_handler","reject_no_database","sculpt","sculpt","sculpt","shutdown","spawn_config","spawn_ref","start","subset","subset","subset","tls","tls","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user_provider","user_provider","vzip","vzip","vzip","MysqlResultWriter","QueryResult","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_mysql_column","create_mysql_column_def","deref","deref","deref_mut","deref_mut","drop","drop","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","or","or","query_context","schema","sculpt","sculpt","stream","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_write_one","type_id","type_id","vzip","vzip","write_affected_rows","write_output","write_query_error","write_query_result","write_recordbatch","writer","OPENTSDB_SERVER","OpentsdbServer","accept","and","base_server","borrow","borrow_mut","codec","compat","compat_mut","compat_ref","connection","create_server","data_point_to_grpc_row_insert_requests","deref","deref_mut","drop","from","from_subset","handler","init","into","into_request","into_request","is_in_subset","lift_into","name","notify_shutdown","or","query_handler","sculpt","shutdown","start","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DataPoint","OPENTSDB_FIELD_COLUMN_NAME","OPENTSDB_TIMESTAMP_COLUMN_NAME","__clone_box","and","as_grpc_insert","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","metric","metric","new","or","sculpt","subset","tags","tags","tags_mut","timestamp_to_millis","to_owned","to_subset","to_subset_unchecked","try_create","try_from","try_into","try_into","ts_millis","ts_millis","type_id","value","value","vzip","Connection","Line","and","borrow","borrow_mut","buffer","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","parse_line","read_line","sculpt","stream","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vec","vzip","write_line","Handler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","connection","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","query_handler","run","sculpt","shutdown","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","GREPTIME_COUNT","GREPTIME_TIMESTAMP","GREPTIME_VALUE","metrics","plugin","trace","APPROXIMATE_COLUMN_COUNT","HISTOGRAM_LE_COLUMN","encode_exponential_histogram","encode_gauge","encode_histogram","encode_metrics","encode_sum","encode_summary","normalize_otlp_name","to_grpc_insert_requests","write_attributes","write_data_point_value","write_tags_and_timestamp","write_timestamp","TraceParser","TraceParserRef","alloc","parse","phantom","ptr","table_name","APPROXIMATE_COLUMN_COUNT","TRACE_TABLE_NAME","attributes","parse","span","to_grpc_insert_requests","write_span_to_row","Attributes","OtlpAnyValue","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","get_mut","get_ref","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","none","or","or","sculpt","sculpt","serialize","serialize","subset","subset","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","SpanEvent","SpanEvents","SpanLink","SpanLinks","TraceSpan","TraceSpans","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","attributes","attributes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","bytes_to_hex_string","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_in_nanosecond","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_mut","get_mut","get_ref","get_ref","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","lift_into","lift_into","lift_into","lift_into","lift_into","name","or","or","or","or","or","parent_span_id","parse_span","resource_attributes","scope_attributes","scope_name","scope_version","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","span_attributes","span_events","span_id","span_id","span_kind","span_links","span_name","span_status_code","span_status_message","start_in_nanosecond","status_to_string","subset","subset","subset","subset","subset","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_id","trace_id","trace_state","trace_state","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uplifted_span_attributes","vzip","vzip","vzip","vzip","vzip","GreptimeDBStartupParameters","METADATA_CATALOG","METADATA_DATABASE","METADATA_SCHEMA","METADATA_USER","MakePostgresServerHandler","MakePostgresServerHandlerBuilder","MakePostgresServerHandlerBuilderError","PostgresServer","PostgresServerHandler","UninitializedField","ValidationError","__clone_box","and","and","and","and","and","as_error_source","auth_handler","base_server","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_describe","do_query","do_query","drop","drop","drop","drop","drop","fmt","fmt","force_tls","force_tls","force_tls","force_tls","from","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","handler","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","login_verifier","make","make_handler","new","on_startup","or","or","or","or","or","param_provider","param_provider","param_provider","param_provider","portal_store","portal_store","query_handler","query_handler","query_handler","query_handler","query_parser","query_parser","sculpt","sculpt","sculpt","sculpt","sculpt","server","server_parameters","session","subset","subset","subset","subset","subset","tls","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","user_provider","user_provider","user_provider","version","vzip","vzip","vzip","vzip","vzip","DbResolution","LoginInfo","NotFound","PgLoginVerifier","Resolved","and","and","and","auth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_client_info","from_subset","from_subset","from_subset","host","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","new","or","or","or","resolve_db_info","schema","sculpt","sculpt","sculpt","send_error","set_client_info","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user","user_provider","vzip","vzip","vzip","DefaultQueryParser","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","new","or","output_to_query_response","parse_sql","query_handler","recordbatches_to_query_response","sculpt","session","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","POSTGRES_SERVER","PostgresServer","accept","and","base_server","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","make_handler","name","new","or","sculpt","shutdown","start","subset","tls","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","encode_value","interval","invalid_parameter_error","param_types_to_pg_types","parameter_to_string","parameters_to_scalar_values","schema_to_pg","to_timestamp_scalar_value","type_gt_to_pg","type_pg_to_gt","PgInterval","__clone_box","accepts","accepts","and","borrow","borrow_mut","borrow_to_sql","clone","clone_into","compat","compat_mut","compat_ref","days","default","deref","deref_mut","drop","fmt","fmt","from","from","from_ref","from_sql","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","microseconds","months","or","sculpt","subset","to_owned","to_sql","to_sql_checked","to_sql_text","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FIELD_COLUMN_NAME","METRIC_NAME_LABEL","Metrics","TIMESTAMP_COLUMN_NAME","TimeSeriesId","and","and","borrow","borrow","borrow_mut","borrow_mut","cmp","collect_timeseries_ids","compare","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","exposition","fmt","from","from","from_subset","from_subset","get_hash","hash","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","labels","lift_into","lift_into","lit_timestamp_millisecond","mock_timeseries","new_label","or","or","partial_cmp","query_to_plan","recordbatch_to_timeseries","recordbatches_to_timeseries","sculpt","sculpt","snappy_compress","snappy_decompress","subset","subset","table_name","to_grpc_row_insert_requests","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","PROMETHEUS_API_VERSION","PrometheusHandler","PrometheusHandlerRef","alloc","catalog_manager","do_query","phantom","ptr","InfluxdbLineProtocolHandler","InfluxdbLineProtocolHandlerRef","OpenTelemetryProtocolHandler","OpenTelemetryProtocolHandlerRef","OpentsdbProtocolHandler","OpentsdbProtocolHandlerRef","PromStoreProtocolHandler","PromStoreProtocolHandlerRef","PromStoreResponse","ScriptHandler","ScriptHandlerRef","alloc","alloc","alloc","alloc","alloc","and","body","borrow","borrow_mut","compat","compat_mut","compat_ref","content_encoding","content_type","deref","deref_mut","drop","exec","exec","execute_script","from","from_subset","grpc","ingest_metrics","init","insert_script","into","into_request","into_request","into_response","is_in_subset","lift_into","metrics","or","phantom","phantom","phantom","phantom","phantom","ptr","ptr","ptr","ptr","ptr","read","sculpt","sql","subset","to_subset","to_subset_unchecked","traces","try_from","try_into","try_into","type_id","vzip","write","Error","GrpcQueryHandler","GrpcQueryHandlerRef","ServerGrpcQueryHandlerAdaptor","ServerGrpcQueryHandlerRef","alloc","alloc","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_query","do_query","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","lift_into","or","phantom","phantom","ptr","ptr","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Error","ServerSqlQueryHandlerAdaptor","ServerSqlQueryHandlerRef","SqlQueryHandler","SqlQueryHandlerRef","alloc","alloc","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_describe","do_describe","do_exec_plan","do_exec_plan","do_promql_query","do_promql_query","do_query","do_query","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","is_valid_schema","is_valid_schema","lift_into","or","phantom","phantom","ptr","ptr","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MultiTableData","TableData","add_row","add_table_data","alloc_one_row","and","and","borrow","borrow","borrow_mut","borrow_mut","check_schema","column_indexes","columns","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_or_default_table_data","init","init","into","into","into_request","into_request","into_request","into_request","into_row_insert_requests","into_schema_and_rows","is_in_subset","is_in_subset","lift_into","lift_into","new","new","num_columns","num_rows","num_tables","or","or","rows","schema","sculpt","sculpt","subset","subset","table_data_map","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","write_by_semantic_type","write_f64","write_fields","write_tag","write_tags","write_ts_millis","write_ts_precision","AbortableStream","AcceptTask","BaseTcpServer","Server","ServerHandler","ServerHandlers","abort_handle","abort_registration","accept_task","and","and","base","bind","bind","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_server","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","inner","into","into","into_request","into_request","into_request","into_request","io_runtime","io_runtime","is_in_subset","is_in_subset","join_handle","lift_into","lift_into","name","name","or","or","sculpt","sculpt","shutdown","shutdown","shutdown","start","start_server","start_with","start_with","subset","subset","task","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Shutdown","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","is_shutdown","lift_into","new","notify","or","recv","sculpt","shutdown","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Disable","Prefer","Require","TlsMode","TlsOption","VerifyCa","VerifyFull","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","cert_path","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_str","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","key_path","lift_into","lift_into","mode","new","or","or","sculpt","sculpt","serialize","serialize","setup","should_force_tls","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"servers"],[101,"servers::configurator"],[108,"servers::error"],[2489,"servers::error::Error"],[2604,"servers::grpc"],[2725,"servers::grpc::database"],[2757,"servers::grpc::flight"],[2816,"servers::grpc::flight::stream"],[2857,"servers::grpc::greptime_handler"],[2933,"servers::grpc::prom_query_gateway"],[2966,"servers::grpc::region_server"],[3010,"servers::heartbeat_options"],[3056,"servers::http"],[3509,"servers::http::authorize"],[3591,"servers::http::handler"],[3794,"servers::http::header"],[3827,"servers::http::influxdb"],[3833,"servers::http::mem_prof"],[3834,"servers::http::opentsdb"],[4011,"servers::http::otlp"],[4073,"servers::http::pprof"],[4075,"servers::http::pprof::handler"],[4076,"servers::http::prom_store"],[4116,"servers::http::prometheus"],[4562,"servers::http::script"],[4605,"servers::influxdb"],[4639,"servers::interceptor"],[4665,"servers::line_writer"],[4712,"servers::metrics"],[5677,"servers::metrics::jemalloc"],[5771,"servers::metrics_handler"],[5805,"servers::mysql"],[5810,"servers::mysql::federated"],[5831,"servers::mysql::handler"],[5884,"servers::mysql::helper"],[5889,"servers::mysql::server"],[5995,"servers::mysql::writer"],[6065,"servers::opentsdb"],[6106,"servers::opentsdb::codec"],[6156,"servers::opentsdb::connection"],[6193,"servers::opentsdb::handler"],[6226,"servers::otlp"],[6232,"servers::otlp::metrics"],[6246,"servers::otlp::plugin"],[6253,"servers::otlp::trace"],[6260,"servers::otlp::trace::attributes"],[6339,"servers::otlp::trace::span"],[6556,"servers::postgres"],[6753,"servers::postgres::auth_handler"],[6850,"servers::postgres::handler"],[6884,"servers::postgres::server"],[6921,"servers::postgres::types"],[6931,"servers::postgres::types::interval"],[6979,"servers::prom_store"],[7062,"servers::prometheus_handler"],[7070,"servers::query_handler"],[7138,"servers::query_handler::grpc"],[7179,"servers::query_handler::sql"],[7228,"servers::row_writer"],[7309,"servers::server"],[7390,"servers::shutdown"],[7424,"servers::tls"],[7522,"dyn_clone::sealed"],[7523,"tower_http::follow_redirect::policy::and"],[7524,"tower_http::follow_redirect::policy"],[7525,"async_compat"],[7526,"core::result"],[7527,"serde::de"],[7528,"core::fmt"],[7529,"core::fmt"],[7530,"tonic::request"],[7531,"frunk_core::hlist"],[7532,"serde::ser"],[7533,"frunk_core::coproduct"],[7534,"core::option"],[7535,"core::any"],[7536,"tonic::transport::server"],[7537,"axum::routing"],[7538,"core::any"],[7539,"snafu::backtrace_inert"],[7540,"alloc::string"],[7541,"core::convert"],[7542,"datatypes::data_type"],[7543,"mysql_common::constants"],[7544,"core::clone"],[7545,"alloc::vec"],[7546,"core::fmt"],[7547,"core::net::socket_addr"],[7548,"query::parser"],[7549,"axum_core::response"],[7550,"common_error::ext"],[7551,"common_error::status_code"],[7552,"tonic::status"],[7553,"arrow_flight::gen::flight_service_server"],[7554,"arrow_flight::gen::flight_service_server"],[7555,"greptime_proto::v1::health_check_server"],[7556,"greptime_proto::v1::prometheus_gateway_server"],[7557,"tonic_reflection::generated::grpc_reflection_v1alpha::server_reflection_server"],[7558,"greptime_proto::v1::region::region_server"],[7559,"core::future::future"],[7560,"alloc::boxed"],[7561,"core::pin"],[7562,"auth"],[7563,"common_runtime::runtime"],[7564,"alloc::sync"],[7565,"greptime_proto::v1"],[7566,"arrow_flight::gen"],[7567,"arrow_flight::gen"],[7568,"io_lifetimes::portability"],[7569,"io_lifetimes::portability"],[7570,"common_telemetry::tracing_context"],[7571,"common_recordbatch"],[7572,"common_grpc::flight"],[7573,"tonic::status"],[7574,"core::task::wake"],[7575,"core::task::poll"],[7576,"greptime_proto::v1"],[7577,"auth"],[7578,"greptime_proto::v1::region"],[7579,"greptime_proto::v1::region"],[7580,"axum::json"],[7581,"schemars::gen"],[7582,"schemars::schema"],[7583,"aide::axum"],[7584,"serde_json::value"],[7585,"alloc::borrow"],[7586,"aide::openapi::openapi"],[7587,"axum::extension"],[7588,"aide::axum"],[7589,"http::request"],[7590,"axum::middleware::from_fn"],[7591,"axum_core::response::into_response"],[7592,"common_recordbatch::recordbatch"],[7593,"common_error::ext"],[7594,"http_body"],[7595,"core::default"],[7596,"core::marker"],[7597,"core::marker"],[7598,"axum::extract::state"],[7599,"axum::extract::query"],[7600,"std::collections::hash::map"],[7601,"axum::form"],[7602,"aide::transform"],[7603,"headers_core"],[7604,"core::iter::traits::iterator"],[7605,"http::header::value"],[7606,"core::iter::traits::collect"],[7607,"http::header::name"],[7608,"common_grpc::writer"],[7609,"serde::de"],[7610,"axum::extract::request_parts"],[7611,"http::status"],[7612,"serde::ser"],[7613,"opentelemetry_proto::proto::tonic::collector::trace::v1"],[7614,"greptime_proto::prometheus::remote"],[7615,"greptime_proto::prometheus::remote"],[7616,"catalog"],[7617,"catalog::error"],[7618,"axum::extract::path"],[7619,"promql_parser::parser::ast"],[7620,"common_recordbatch"],[7621,"sql::statements::statement"],[7622,"query::plan"],[7623,"greptime_proto::v1::greptime_request"],[7624,"table::requests"],[7625,"datatypes::value"],[7626,"tower_service"],[7627,"prometheus::counter"],[7628,"prometheus::histogram"],[7629,"prometheus::histogram"],[7630,"prometheus::counter"],[7631,"axum::extract::connect_info"],[7632,"session"],[7633,"query::query_engine"],[7634,"opensrv_mysql"],[7635,"core::time"],[7636,"opensrv_mysql::params"],[7637,"opensrv_mysql::resultset"],[7638,"tokio::io::async_write"],[7639,"core::marker"],[7640,"sqlparser::ast::visitor"],[7641,"tokio_stream::wrappers::tcp_listener"],[7642,"futures_util::abortable"],[7643,"tokio::net::tcp::stream"],[7644,"rustls::server::server_conn"],[7645,"datatypes::schema"],[7646,"opensrv_mysql::resultset"],[7647,"opentelemetry_proto::proto::tonic::metrics::v1"],[7648,"opentelemetry_proto::proto::tonic::metrics::v1"],[7649,"opentelemetry_proto::proto::tonic::metrics::v1"],[7650,"opentelemetry_proto::proto::tonic::common::v1"],[7651,"opentelemetry_proto::proto::tonic::trace::v1::span"],[7652,"opentelemetry_proto::proto::tonic::trace::v1"],[7653,"pgwire::api"],[7654,"pgwire::api::portal"],[7655,"derive_builder::error"],[7656,"pgwire::messages"],[7657,"pgwire::messages"],[7658,"core::sync::exclusive"],[7659,"pgwire::error"],[7660,"session"],[7661,"postgres_types"],[7662,"futures_core::stream"],[7663,"tokio_rustls"],[7664,"pgwire::api::results"],[7665,"postgres_types"],[7666,"bytes::bytes_mut"],[7667,"postgres_types"],[7668,"core::hash"],[7669,"core::marker"],[7670,"greptime_proto::prometheus::remote"],[7671,"greptime_proto::prometheus::remote"],[7672,"tokio::sync::broadcast"]],"d":["","","Cached SQL and logical plan for database interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","prometheus protocol supportings handles prometheus …","prom supply the prometheus HTTP API Server compliance","","All query handler traits for various request protocols, …","","","","","","","Copied from tokio’s mini-redis example.","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AlreadyStarted</code> …","","SNAFU context selector for the <code>Error::Auth</code> variant","","SNAFU context selector for the <code>Error::BuildHttpResponse</code> …","","SNAFU context selector for the <code>Error::CatalogError</code> variant","","SNAFU context selector for the <code>Error::CheckDatabaseValidity</code>…","","SNAFU context selector for the <code>Error::CollectRecordbatch</code> …","","SNAFU context selector for the <code>Error::ConnResetByPeer</code> …","","SNAFU context selector for the <code>Error::ConvertScalarValue</code> …","","SNAFU context selector for the <code>Error::DataFrame</code> variant","","SNAFU context selector for the <code>Error::DatabaseNotFound</code> …","","SNAFU context selector for the <code>Error::DecodeOtlpRequest</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","Contains the error value","","","SNAFU context selector for the <code>Error::ExecuteGrpcQuery</code> …","","SNAFU context selector for the <code>Error::ExecuteGrpcRequest</code> …","","SNAFU context selector for the <code>Error::ExecutePlan</code> variant","","SNAFU context selector for the <code>Error::ExecuteQuery</code> variant","","SNAFU context selector for the <code>Error::ExecuteScript</code> variant","","SNAFU context selector for the <code>Error::GetPreparedStmtParams</code>…","","SNAFU context selector for the <code>Error::GrpcReflectionService</code>…","","SNAFU context selector for the <code>Error::Hyper</code> variant","","SNAFU context selector for the <code>Error::IncompatibleSchema</code> …","","SNAFU context selector for the <code>Error::InfluxdbLineProtocol</code> …","","SNAFU context selector for the <code>Error::InfluxdbLinesWrite</code> …","","SNAFU context selector for the <code>Error::InsertScript</code> variant","","","SNAFU context selector for the <code>Error::InternalIo</code> variant","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidBase64Value</code> …","","SNAFU context selector for the <code>Error::InvalidFlightTicket</code> …","","SNAFU context selector for the <code>Error::InvalidFlushArgument</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidOpentsdbLine</code> …","","SNAFU context selector for the <code>Error::InvalidParameter</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidQuery</code> variant","","SNAFU context selector for the <code>Error::InvalidUtf8Value</code> …","","SNAFU context selector for the <code>Error::InvisibleASCII</code> …","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::NotFoundAuthHeader</code> …","","SNAFU context selector for the <code>Error::NotFoundInfluxAuth</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::OtlpMetricsWrite</code> …","","SNAFU context selector for the <code>Error::ParsePromQL</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::PromSeriesWrite</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::StartGrpc</code> variant","","SNAFU context selector for the <code>Error::StartHttp</code> variant","","SNAFU context selector for the <code>Error::TcpBind</code> variant","","SNAFU context selector for the <code>Error::TcpIncoming</code> variant","","SNAFU context selector for the <code>Error::TimePrecision</code> variant","","SNAFU context selector for the <code>Error::TlsRequired</code> variant","","SNAFU context selector for the <code>Error::ToJson</code> variant","","SNAFU context selector for the <code>Error::TokioIo</code> variant","","SNAFU context selector for the <code>Error::UnexpectedResult</code> …","","SNAFU context selector for the <code>Error::UnsupportedAuthScheme</code>…","","SNAFU context selector for the <code>Error::UpdateJemallocMetrics</code>…","","SNAFU context selector for the <code>Error::UrlDecode</code> variantonsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the tonic Code of a StatusCodeontains the error value","","","Grpc Server configuration","","Contains the success value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handler for DatabaseService service.","","","","","","","","","","","","Handler for FlightService.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Handler for Greptime Database service. It’s implemented …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","PrometheusGateway provides a gRPC interface to query …","Handler for Prometheus-compatible PromQL queries (…","","Handler for RegionServer.","","","","gRPC serving state receiver. Only present if the gRPC …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A subset of FlightService","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Histogram timer for handling gRPC request.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns a new timer.","","","","Consumes the timer and record the elapsed time with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Default http body limiteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a json response from query result","","","","","","","","","","","","","","","","","handle error middleware","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prom supply the prometheus HTTP API Server compliance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A middleware to record metrics for HTTP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handler to expose configuration information info about …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Handler to export healthy check","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Handler to export metrics","","","","","","Handler to execute promql","","","","","","","","","","","","","","","","","","","","","","","","Handler to execute sql","","","","Handler to expose information info about runtime, build, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from <code>Result&lt;Output&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert RecordBatches to PromData","Retrieve labels name from record batches","","","","","","Retrieve labels name from query result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For ValueType::Vector result type","For ValueType::Matrix result type","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Handler to execute script","","","Handler to insert and compile script","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","GrpcQueryInterceptor can track life cycle of a grpc …","","PromQueryInterceptor can track life cycle of a prometheus …","","SqlQueryInterceptor can track life cycle of a sql query …","","","","","","","","Called after execution finished. The implementation can …","Called after execution finished. The implementation can …","Called after execution finished. The implementation can …","Called after sql is parsed into statements. This …","Called before sql is actually executed. This hook is not …","Called before request is actually executed.","Called before request is actually executed.","Called before a query string is parsed into sql statements.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A metrics middlewareeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a server that serves metrics only start when datanode …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Use regex to filter out some MySQL federated components’ …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describe the statement","Execute the logical plan and return the output","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Retrieve the query and logical plan by id","Parameters that the client must provide when executing the …","","","","","","","","Save query and logical plan, return the unique id","","","","","","","","","","","","","Convert <code>ParamValue</code> into <code>Value</code> according to param type. It …","Returns the placeholder string “$i”.","Replace all the “?” placeholder into “$i” in SQL, …","Transform all the “?” placeholder into “$i”. Only …","","","","","<code>MysqlSpawnConfig</code> stores config values which are used to …","<code>MysqlSpawnRef</code> stores arc refs that should be passed to new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates MySQL columns definition from our column schema.","","","","","","","Indicate no more result set to write. No need to call this …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to write one result set. If there are more than one …","","","","","","Try to write multiple output to the writer if possible.","","","","","","","","","","","","","","","","Modified from Tokio’s mini-redis example.","","","","","","Returns the argument unchanged.","","Modified from Tokio’s mini-redis example.","","Calls <code>U::from(self)</code>.","","","","","","Broadcasts a shutdown signal to all active connections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Tries to parse a line from the buffer.","Read one line from the underlying stream.","","","","","","","","","","","","","Per-connection handler. Reads requests from <code>connection</code> and …","","","","","","","The TCP connection decorated with OpenTSDB line protocol …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Listen for shutdown notifications.","","","","","","","","","","","","","","","the default column count for table writer","","","encode this gauge metric","Encode histogram data. This function returns 3 insert …","","encode this sum metric","","Normalize otlp instrumentation, metric and attribute names","Convert OpenTelemetry metrics to GreptimeDB insert requests","","","","","Transformer helps to transform ExportTraceServiceRequest …","","","","","","","","","","Convert OpenTelemetry traces to SpanTraces","","Convert SpanTraces to GreptimeDB row insert requests. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key to store our parsed catalog","","key to store our parsed schema","","","Builder for <code>MakePostgresServerHandler</code>.","Error type for MakePostgresServerHandlerBuilder","","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","Builds a new <code>MakePostgresServerHandler</code>.","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A function extracted to resolve lifetime and readability …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Creates a new Postgres server with provided query_handler …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Metrics for push gateway protocol","","","","","","","","","","Collect each row’s timeseries id This processing is …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Mock timeseries for test, it is both used in servers and …","","","","","Create a DataFrame from a remote Query","","","","","","","","","Get table name from remote query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A successful request will not return a response. Only on …","A successful request will not return a response. Only on …","","Returns the argument unchanged.","","","Handling push gateway requests","","","Calls <code>U::from(self)</code>.","","","","","","Handling opentelemetry metrics request","","","","","","","","","","","","Handling prometheus remote read requests","","","","","","Handling opentelemetry traces request","","","","","","Handling prometheus remote write requests","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the request and number of rows in it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Shutdown the server gracefully.","","","Starts the server and binds on <code>listening</code>.","","","","","","","","","","","","","","","","","","","","","Listens for the server shutdown signal.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if the shutdown signal has been received.","","Create a new <code>Shutdown</code> backed by the given …","The receive half of the channel used to listen for …","","Receive the shutdown notice, waiting if necessary.","","<code>true</code> if the shutdown signal has been received","","","","","","","","","","","","TlsMode is used for Mysql and Postgres server start up.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,0,0,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,0,0,5,6,5,6,5,5,6,5,5,5,5,5,0,5,5,6,5,6,5,6,0,0,0,0,5,6,0,5,6,5,5,6,6,5,6,5,6,0,0,0,0,0,5,6,0,6,0,0,0,6,0,0,6,5,6,5,0,0,5,6,0,5,6,5,6,5,6,5,6,5,5,6,6,5,6,5,6,0,0,446,447,447,446,446,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,131,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,24,0,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,131,24,0,24,0,24,0,24,0,24,0,24,0,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,24,0,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,48,51,59,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,24,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,44,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,51,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,51,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,55,45,46,48,51,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,51,32,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,28,28,54,54,55,55,56,56,57,57,58,58,31,31,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,32,32,33,33,34,34,69,69,70,70,71,71,72,72,35,35,36,36,73,73,74,74,75,75,76,76,77,77,78,78,37,37,38,38,79,79,39,39,80,80,40,40,41,41,81,81,42,42,43,43,82,82,83,83,84,84,44,44,45,45,46,46,85,85,86,86,87,87,88,88,47,47,89,89,90,90,91,91,92,92,93,93,94,94,48,48,51,51,95,95,96,96,24,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,37,38,67,68,35,42,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,61,87,33,34,47,44,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,31,39,24,24,0,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,28,54,54,55,55,56,56,57,57,58,58,31,31,59,59,60,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,32,32,33,33,34,34,69,69,70,70,71,71,72,72,35,35,36,36,73,73,74,74,75,75,76,76,77,77,78,78,37,37,38,38,79,79,39,39,80,80,40,40,41,41,81,81,42,42,43,43,82,82,83,83,84,84,44,44,45,45,46,46,85,85,86,86,87,87,88,88,47,47,89,89,90,90,91,91,92,92,93,93,94,94,48,48,51,51,95,95,96,96,24,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,28,54,55,56,57,58,31,59,60,61,62,63,64,65,66,67,68,32,33,34,69,70,71,72,35,36,73,74,75,76,77,78,37,38,79,39,80,40,41,81,42,43,82,83,84,44,45,46,85,86,87,88,47,89,90,91,92,93,94,48,51,95,96,24,448,449,450,451,449,449,452,453,454,455,456,453,457,458,450,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,448,449,478,479,480,481,482,483,484,485,486,487,488,489,460,490,491,492,493,494,462,463,464,465,466,495,496,467,497,468,498,469,470,471,472,499,500,501,502,473,474,475,503,504,448,449,476,477,495,496,486,487,493,505,481,499,488,489,501,451,480,506,479,481,482,483,484,485,507,486,487,490,491,492,497,508,499,500,502,503,504,509,0,0,0,0,509,0,107,108,120,107,108,120,107,108,120,107,107,107,108,120,107,108,120,107,108,120,107,108,108,108,108,108,108,0,108,107,108,120,107,108,120,107,108,120,107,0,108,107,108,120,107,107,108,120,107,0,120,108,120,107,108,120,107,108,108,120,120,107,107,108,120,107,108,120,107,107,107,108,108,108,120,107,0,108,0,108,108,120,107,108,108,108,108,108,120,107,107,108,120,107,108,120,107,108,120,107,108,108,120,120,107,107,108,120,107,108,108,120,107,108,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,0,126,136,136,136,136,136,136,136,136,136,136,138,126,136,136,152,136,152,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,152,136,136,136,136,126,126,152,136,0,136,0,136,136,136,136,136,136,136,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,135,162,135,0,162,135,162,135,135,135,162,135,162,135,162,135,0,162,162,135,162,135,135,162,162,135,162,135,135,162,135,135,135,162,135,162,135,162,162,135,135,162,135,162,135,162,135,162,135,162,162,135,162,135,162,162,162,135,135,162,135,162,135,162,135,162,162,135,135,162,135,135,162,135,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,0,167,127,167,167,167,167,167,167,167,167,167,167,167,167,167,167,171,167,167,167,167,167,167,167,167,167,167,167,127,127,167,167,167,167,167,167,167,167,167,167,167,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,183,0,175,176,177,175,173,175,180,181,182,183,178,176,177,174,0,175,173,175,180,181,182,183,178,176,177,174,173,175,180,181,182,183,178,176,177,174,173,174,175,176,177,175,176,177,178,178,181,173,175,180,181,182,183,178,176,177,174,173,175,180,181,182,183,178,176,177,174,173,175,180,181,182,183,178,176,177,174,180,173,175,174,173,175,180,181,182,183,178,176,177,174,173,175,180,181,182,183,178,176,177,174,175,180,181,182,183,178,175,173,175,180,181,182,183,178,176,177,174,175,180,181,182,183,175,175,175,175,180,180,180,180,181,181,181,181,182,182,182,182,183,183,183,183,178,178,178,178,175,180,181,182,183,178,173,175,180,181,182,183,178,176,177,174,178,175,176,177,173,175,180,181,182,183,178,176,177,174,173,177,173,0,0,0,0,173,173,175,180,181,182,183,178,176,177,174,174,173,175,180,181,182,183,178,176,177,174,173,173,175,175,180,180,181,181,182,182,183,183,178,178,176,176,177,177,174,174,173,175,180,181,182,183,178,176,177,174,180,181,182,183,178,173,175,180,181,182,183,178,176,177,174,173,0,173,173,180,180,181,174,182,182,0,173,173,173,175,180,181,182,183,178,176,177,174,0,173,178,178,173,0,173,0,0,173,173,173,173,173,173,173,173,173,182,182,182,182,180,181,182,183,178,180,181,182,183,178,0,173,176,173,175,180,181,182,183,178,176,177,174,175,180,181,182,183,178,0,0,173,173,173,176,173,173,175,180,181,182,183,178,176,177,174,178,175,175,176,177,173,175,180,181,182,183,178,176,177,174,173,175,180,181,182,183,178,176,177,174,0,173,175,180,181,182,182,183,178,176,177,174,173,173,175,175,180,180,181,181,182,182,183,183,178,178,176,176,177,177,174,174,173,175,180,181,182,183,178,176,177,174,173,173,175,180,181,182,183,178,176,177,174,178,178,178,174,174,174,174,174,174,178,174,174,174,174,174,174,0,210,0,0,0,0,211,211,211,210,0,211,211,210,211,210,211,211,211,210,211,210,211,210,0,211,210,211,210,211,210,0,0,0,0,210,211,210,211,211,210,0,211,210,510,211,210,211,211,210,210,211,210,211,210,0,211,211,210,211,210,211,210,211,211,210,211,210,211,210,210,211,211,210,210,211,210,0,211,511,211,210,0,0,0,0,0,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,222,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,0,218,219,218,219,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,219,221,222,221,221,221,221,222,222,222,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,0,222,218,219,220,221,222,218,219,220,221,222,218,218,219,219,220,220,221,221,222,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,0,218,219,220,221,222,0,219,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,222,0,218,0,219,0,219,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,218,219,220,221,222,218,218,219,219,220,220,221,221,222,222,218,219,220,221,222,0,222,218,219,220,221,222,0,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,0,0,0,0,0,0,0,0,237,237,235,0,0,0,0,235,234,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,234,234,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,238,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,234,238,239,239,234,237,238,239,235,234,237,238,239,234,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,235,235,234,234,237,237,238,238,239,239,235,234,237,238,239,235,234,237,238,239,234,239,239,235,234,237,238,239,0,0,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,239,234,234,234,235,234,237,238,239,235,234,237,238,239,235,234,237,238,239,235,235,234,234,237,237,238,238,239,239,235,234,237,238,239,234,235,234,237,238,239,0,0,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,245,244,244,245,245,244,245,244,245,244,245,0,244,245,0,0,244,245,244,245,244,245,244,245,0,244,245,244,244,245,245,244,245,244,245,0,0,0,0,250,250,250,250,250,250,250,0,0,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,0,0,250,250,250,250,250,250,250,250,250,250,250,250,0,254,0,0,254,254,0,0,0,254,0,0,0,0,254,0,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,166,256,257,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,257,259,260,261,252,253,254,166,166,166,166,252,253,254,166,255,256,257,258,259,260,261,0,252,253,254,166,255,256,257,258,259,260,261,166,252,253,254,166,255,256,257,258,259,260,261,0,252,253,254,166,255,256,257,258,259,260,261,0,252,253,254,166,255,256,257,258,259,260,261,252,252,253,253,254,254,166,166,255,255,256,256,257,257,258,258,259,259,260,260,261,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,0,0,252,253,254,166,255,256,257,258,259,260,261,259,260,261,252,252,253,254,166,255,256,257,258,259,260,261,0,255,256,257,0,166,0,0,253,253,0,0,0,0,0,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,0,257,259,260,261,166,257,252,253,254,166,255,256,257,258,259,260,261,166,256,256,257,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,253,254,166,255,256,257,258,259,260,261,252,252,253,253,254,254,166,166,255,255,256,256,257,257,258,258,259,259,260,260,261,261,252,253,254,166,255,256,257,258,259,260,261,252,252,252,253,254,166,255,256,257,258,259,260,261,166,0,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,0,269,269,269,269,269,0,269,269,0,269,269,269,269,269,269,269,269,269,0,269,0,0,0,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,0,270,512,513,514,0,0,0,0,0,0,515,516,517,515,516,517,512,513,514,512,512,513,514,512,515,516,517,0,0,0,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,518,274,274,274,274,274,274,274,274,274,274,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,280,280,280,282,280,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,282,283,283,285,285,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,296,296,297,297,298,298,299,299,300,300,301,301,302,302,304,304,305,305,306,306,307,307,308,308,310,310,311,311,312,312,313,313,314,314,315,315,316,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,280,280,283,283,285,285,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,296,296,297,297,298,298,299,299,300,300,301,301,302,302,304,304,305,305,306,306,307,307,308,308,310,310,311,311,312,312,313,313,314,314,315,315,316,316,282,282,280,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,0,282,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,280,280,280,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,283,285,285,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,296,296,297,297,298,298,299,299,300,300,301,301,302,302,304,304,305,305,306,306,307,307,308,308,310,310,311,311,312,312,313,313,314,314,315,315,316,316,282,282,280,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,283,285,287,288,289,290,291,292,293,294,296,297,298,299,300,301,302,304,305,306,307,308,310,311,312,313,314,315,316,282,280,0,0,0,0,319,320,321,321,319,320,321,319,320,321,319,320,321,319,320,321,319,320,321,319,320,321,319,319,320,320,321,319,320,321,319,320,321,321,319,320,321,319,320,321,319,320,321,319,320,321,321,319,319,320,320,321,319,320,321,319,320,321,319,320,321,321,319,320,321,319,320,321,319,320,321,319,320,321,319,320,321,321,319,319,320,320,321,321,319,320,321,321,319,320,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,323,323,323,323,323,323,323,323,323,323,323,323,323,323,0,0,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,0,323,323,323,0,0,323,323,323,323,323,323,323,323,323,323,323,323,323,0,323,0,0,0,0,0,0,0,0,0,0,338,341,342,338,338,341,342,338,341,342,338,341,342,338,341,342,338,341,342,338,338,341,342,338,341,342,338,338,341,342,338,342,341,342,338,341,342,338,338,341,342,338,341,342,338,341,341,342,342,338,338,341,342,338,341,342,338,338,341,342,341,342,338,341,341,342,341,342,338,338,338,338,338,341,342,338,342,342,341,342,338,341,342,338,341,342,338,341,341,342,342,338,338,341,342,338,341,341,341,342,338,0,0,348,347,348,347,348,347,348,347,348,347,348,347,0,0,348,347,348,347,348,347,347,348,347,348,347,348,347,348,347,348,348,347,347,348,347,348,347,347,348,347,347,348,348,347,348,348,347,348,347,348,347,348,347,348,348,347,347,347,348,347,348,347,347,0,347,347,347,347,0,0,350,350,350,350,350,0,350,350,350,0,350,0,350,350,350,350,350,0,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,0,0,0,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,0,0,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,519,354,354,0,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,520,521,520,520,521,0,0,0,0,0,0,0,0,0,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,371,372,372,371,371,372,372,371,372,371,372,372,372,371,372,371,372,371,371,372,372,371,372,371,372,371,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,372,371,371,372,372,371,372,371,372,0,0,0,0,0,0,370,374,375,376,377,370,374,375,376,377,374,376,370,374,375,376,377,370,374,375,376,377,369,0,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,374,375,376,377,370,370,374,375,375,376,377,377,370,374,374,375,375,376,376,377,377,370,374,375,376,377,370,374,375,376,377,375,377,375,377,370,374,375,376,377,370,374,375,376,377,370,370,374,374,375,375,376,376,377,377,370,374,375,376,377,369,370,374,375,376,377,376,370,374,375,376,377,370,0,370,370,370,370,370,374,375,376,377,374,375,376,377,370,370,370,374,370,370,370,370,370,370,0,370,374,375,376,377,376,370,374,375,376,377,375,377,370,374,375,376,377,370,374,375,376,377,370,374,370,374,370,374,375,376,377,370,370,374,374,375,375,376,376,377,377,370,374,375,376,377,370,370,374,375,376,377,0,0,0,0,0,0,0,0,0,0,385,385,383,391,386,384,383,385,385,0,406,391,386,384,383,385,391,386,384,383,385,383,383,383,391,386,384,383,385,391,386,384,383,385,391,386,384,383,385,383,383,391,386,384,383,385,391,386,384,383,385,386,386,386,391,386,384,383,385,385,385,383,386,384,383,391,386,384,383,385,385,385,383,391,386,384,383,385,0,391,386,384,383,385,391,386,384,383,385,391,391,386,386,384,384,383,383,385,385,391,386,384,383,385,391,386,384,383,385,386,384,406,391,386,391,386,384,383,385,383,386,384,383,386,386,383,386,384,383,386,386,391,386,384,383,385,0,391,386,391,386,384,383,385,406,383,385,391,386,384,383,385,391,386,384,383,385,391,386,384,383,385,391,391,386,386,384,384,383,383,385,385,391,386,384,383,385,0,383,384,383,391,391,386,384,383,385,0,0,398,0,398,395,396,398,395,395,396,398,395,396,398,396,395,396,398,395,396,398,395,396,398,395,396,398,395,396,398,395,396,398,395,396,398,396,395,396,398,396,395,396,398,395,396,398,395,395,396,396,398,398,395,396,398,395,396,398,395,395,396,398,0,396,395,396,398,0,0,395,396,398,395,396,398,395,396,398,395,396,398,395,395,396,396,398,398,395,396,398,396,395,395,396,398,0,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,0,401,401,0,401,401,401,401,401,401,401,401,401,401,0,0,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,0,0,0,0,0,0,0,0,0,0,0,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,0,0,0,0,0,430,419,430,419,430,419,419,0,419,430,419,430,419,430,419,430,419,430,419,430,419,419,419,419,419,419,430,419,430,419,430,419,419,419,430,419,430,419,430,430,419,419,430,419,419,430,419,0,0,0,430,419,419,0,0,0,430,419,0,0,430,419,0,0,430,419,430,419,430,419,430,430,419,419,430,419,430,419,0,0,0,113,522,522,113,113,0,0,0,0,0,0,0,0,0,0,0,193,191,195,194,208,251,251,251,251,251,251,251,251,251,251,251,251,523,524,525,251,251,0,526,251,525,251,251,251,251,251,251,527,251,193,191,195,194,208,193,191,195,194,208,526,251,0,251,251,251,527,251,251,251,251,251,526,528,0,0,0,0,431,125,432,432,432,432,432,432,432,432,432,528,432,432,432,432,432,432,432,432,432,432,432,431,125,431,125,432,432,432,432,432,432,432,432,432,529,0,0,0,0,433,209,434,434,434,434,434,434,434,434,434,529,434,529,434,529,434,529,434,434,434,434,434,434,434,434,434,529,434,434,434,433,209,433,209,434,434,434,434,434,434,434,434,434,0,0,366,359,366,366,359,366,359,366,359,0,366,366,366,359,366,359,366,359,359,366,359,366,359,366,359,366,359,366,359,359,366,359,366,359,366,366,359,359,359,366,366,359,366,359,366,359,366,366,359,366,359,366,366,366,359,366,359,359,366,359,366,359,366,359,366,366,359,359,366,359,366,359,0,0,0,0,0,0,0,0,0,0,0,0,0,440,440,441,440,441,530,440,441,440,441,440,441,440,441,440,441,440,441,441,440,441,440,441,440,441,440,441,440,441,440,441,531,440,441,440,440,441,441,441,441,440,441,440,440,441,343,441,440,441,440,441,343,440,441,343,0,440,441,440,441,531,440,441,440,441,440,441,440,440,441,441,440,441,440,441,0,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,445,445,445,0,0,445,445,445,408,445,408,445,408,445,408,408,445,408,445,408,445,408,445,408,445,408,445,408,445,408,445,408,445,408,445,408,445,408,445,445,445,445,408,408,408,408,445,408,445,408,445,408,445,445,408,445,408,445,408,445,445,408,408,445,408,408,445,408,408,408,445,408,445,408,445,408,408,408,445,408,445,408,445,408,445,408,445,445,445,408,445,445,408,408,445,408,445,408],"f":[0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[6,6],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[5]]],10],[8,2],[8,2],[[5,5],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[[5,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[],8],[[],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[5,-1],9,18],0,0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,22],22,[]],[[-1,23],23,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[24,25],[-1,26,[]],[24,[[20,[27]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],24,[[30,[29]]]],[[[31,[-1]]],24,[[30,[29]]]],[[[32,[-1]]],24,[[30,[29]]]],[[[33,[-1]]],24,[[30,[29]]]],[[[34,[-1]]],24,[[30,[29]]]],[[[35,[-1]]],24,[[30,[29]]]],[36,24],[[[37,[-1]]],24,[[30,[29]]]],[[[38,[-1]]],24,[[30,[29]]]],[[[39,[-1]]],24,[[30,[29]]]],[40,24],[41,24],[[[42,[-1]]],24,[[30,[29]]]],[43,24],[[[44,[-1,-2]]],24,[[30,[29]]],[[30,[29]]]],[[[45,[-1]]],24,[[30,[29]]]],[[[46,[-1]]],24,[[30,[29]]]],[[[47,[-1]]],24,[[30,[29]]]],[[[48,[-1,-2]]],24,[[30,[49]]],[[30,[50]]]],[[[51,[-1,-2,-3,-4]]],24,[[30,[29]]],[[30,[29]]],[[30,[52]]],[[30,[52]]]],0,[24,[[20,[26]]]],[[[28,[-1]]],[[28,[-1]]],53],[54,54],[[[55,[-1]]],[[55,[-1]]],53],[56,56],[57,57],[58,58],[[[31,[-1]]],[[31,[-1]]],53],[[[59,[-1]]],[[59,[-1]]],53],[60,60],[[[61,[-1]]],[[61,[-1]]],53],[62,62],[63,63],[64,64],[65,65],[66,66],[[[67,[-1]]],[[67,[-1]]],53],[[[68,[-1]]],[[68,[-1]]],53],[[[32,[-1]]],[[32,[-1]]],53],[[[33,[-1]]],[[33,[-1]]],53],[[[34,[-1]]],[[34,[-1]]],53],[69,69],[70,70],[71,71],[72,72],[[[35,[-1]]],[[35,[-1]]],53],[36,36],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[[[37,[-1]]],[[37,[-1]]],53],[[[38,[-1]]],[[38,[-1]]],53],[79,79],[[[39,[-1]]],[[39,[-1]]],53],[80,80],[40,40],[41,41],[81,81],[[[42,[-1]]],[[42,[-1]]],53],[43,43],[82,82],[83,83],[84,84],[[[44,[-1,-2]]],[[44,[-1,-2]]],53,53],[[[45,[-1]]],[[45,[-1]]],53],[[[46,[-1]]],[[46,[-1]]],53],[85,85],[86,86],[[[87,[-1]]],[[87,[-1]]],53],[88,88],[[[47,[-1]]],[[47,[-1]]],53],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[[[48,[-1,-2]]],[[48,[-1,-2]]],53,53],[[[51,[-1,-2,-3,-4]]],[[51,[-1,-2,-3,-4]]],53,53,53,53],[95,95],[96,96],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[24,8,[97,[29]]],2],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[24,98],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],0,0,0,0,0,0,[[[28,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[31,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[32,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[33,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[34,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[35,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[36,[[9,[-1,24]]],[]],[[[37,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[38,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[39,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[40,[[9,[-1,24]]],[]],[41,[[9,[-1,24]]],[]],[[[42,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[43,[[9,[-1,24]]],[]],[[[44,[-1,-2]]],[[9,[-3,24]]],[[30,[29]]],[[30,[29]]],[]],[[[45,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[46,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[47,[-1]]],[[9,[-2,24]]],[[30,[29]]],[]],[[[48,[-1,-2]]],[[9,[-3,24]]],[[30,[49]]],[[30,[50]]],[]],[[[51,[-1,-2,-3,-4]]],[[9,[-5,24]]],[[30,[29]]],[[30,[29]]],[[30,[52]]],[[30,[52]]],[]],0,[[[28,[-1]],12],13,99],[[54,12],13],[[[55,[-1]],12],13,99],[[56,12],13],[[57,12],13],[[58,12],13],[[[31,[-1]],12],13,99],[[[59,[-1]],12],13,99],[[60,12],13],[[[61,[-1]],12],13,99],[[62,12],13],[[63,12],13],[[64,12],13],[[65,12],13],[[66,12],13],[[[67,[-1]],12],13,99],[[[68,[-1]],12],13,99],[[[32,[-1]],12],13,99],[[[33,[-1]],12],13,99],[[[34,[-1]],12],13,99],[[69,12],13],[[70,12],13],[[71,12],13],[[72,12],13],[[[35,[-1]],12],13,99],[[36,12],13],[[73,12],13],[[74,12],13],[[75,12],13],[[76,12],13],[[77,12],13],[[78,12],13],[[[37,[-1]],12],13,99],[[[38,[-1]],12],13,99],[[79,12],13],[[[39,[-1]],12],13,99],[[80,12],13],[[40,12],13],[[41,12],13],[[81,12],13],[[[42,[-1]],12],13,99],[[43,12],13],[[82,12],13],[[83,12],13],[[84,12],13],[[[44,[-1,-2]],12],13,99,99],[[[45,[-1]],12],13,99],[[[46,[-1]],12],13,99],[[85,12],13],[[86,12],13],[[[87,[-1]],12],13,99],[[88,12],13],[[[47,[-1]],12],13,99],[[89,12],13],[[90,12],13],[[91,12],13],[[92,12],13],[[93,12],13],[[94,12],13],[[[48,[-1,-2]],12],13,99,99],[[[51,[-1,-2,-3,-4]],12],13,99,99,99,99],[[95,12],13],[[96,12],13],[[24,12],13],[[24,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[100,24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],24,[[30,[29]]]],[54,24],[[[55,[-1]]],24,[[30,[29]]]],[56,24],[57,24],[58,24],[[[31,[-1]]],24,[[30,[29]]]],[[[59,[-1]]],24,[[30,[101]]]],[60,24],[[[61,[-1]]],24,[[30,[29]]]],[62,24],[63,24],[64,24],[65,24],[66,24],[[[67,[-1]]],24,[[30,[29]]]],[[[68,[-1]]],24,[[30,[29]]]],[[[32,[-1]]],24,[[30,[29]]]],[[[33,[-1]]],24,[[30,[29]]]],[[[34,[-1]]],24,[[30,[29]]]],[69,24],[70,24],[71,24],[72,24],[[[35,[-1]]],24,[[30,[29]]]],[36,24],[73,24],[74,24],[75,24],[76,24],[77,24],[78,24],[[[37,[-1]]],24,[[30,[29]]]],[[[38,[-1]]],24,[[30,[29]]]],[79,24],[[[39,[-1]]],24,[[30,[29]]]],[80,24],[40,24],[41,24],[81,24],[[[42,[-1]]],24,[[30,[29]]]],[43,24],[82,24],[83,24],[84,24],[[[44,[-1,-2]]],24,[[30,[29]]],[[30,[29]]]],[[[45,[-1]]],24,[[30,[29]]]],[[[46,[-1]]],24,[[30,[29]]]],[85,24],[86,24],[[[87,[-1]]],24,[[30,[102]]]],[88,24],[[[47,[-1]]],24,[[30,[29]]]],[89,24],[90,24],[91,24],[92,24],[93,24],[94,24],[[[48,[-1,-2]]],24,[[30,[49]]],[[30,[50]]]],[[[51,[-1,-2,-3,-4]]],24,[[30,[29]]],[[30,[29]]],[[30,[52]]],[[30,[52]]]],[95,24],[96,24],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[24,103],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[24,[[20,[104]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],0,0,[24,[[20,[26]]]],[24,105],[105,106],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,107],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[108,[[110,[[0,[109]]]]]],[108,[[112,[[0,[111]]]]]],[[108,113],[[115,[[0,[114]]]]]],[108,[[117,[[0,[116]]]]]],[108,[[119,[[0,[118]]]]]],0,0,[[],107],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[8,2],0,0,[[107,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[120,[15,[121]]],[[124,[[123,[122]]]]]],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[108,98],[[[20,[107]],[20,[125]],[20,[113]],[20,[126]],[20,[127]],[20,[128]],[130,[129]]],108],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],0,[108,[[124,[[123,[122]]]]]],0,[[108,101],[[124,[[123,[122]]]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108,[[131,[2]]]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[132,[15,[133]]],[[124,[[123,[122]]]]]],[[132,[15,[[134,[133]]]]],[[124,[[123,[122]]]]]],0,[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[135,132],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[[[136,[-1]],[15,[137]]],[[124,[[123,[122]]]]],138],[[[136,[-1]],[15,[[134,[139]]]]],[[124,[[123,[122]]]]],138],[[-1,[15,[140]]],[[124,[[123,[122]]]]],[]],[[126,[15,[140]]],[[124,[[123,[122]]]]]],[[[136,[-1]],[15,[140]]],[[124,[[123,[122]]]]],138],[[[136,[-1]],[15,[[134,[139]]]]],[[124,[[123,[122]]]]],138],0,[8,2],0,[-1,[[136,[-1]]],138],[141,-1,[]],[-1,-1,[]],[142,-1,[]],[142,-1,[]],[-1,-2,143,[]],[-1,-2,144,[]],[142,-1,[]],[-1,-2,[],[]],[[[136,[-1]],[15,[145]]],[[124,[[123,[122]]]]],138],[[[136,[-1]],[15,[145]]],[[124,[[123,[122]]]]],138],[[[136,[-1]],[15,[[134,[146]]]]],[[124,[[123,[122]]]]],138],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],0,[-1,-2,[],[]],[[[136,[-1]],[15,[147]]],[[124,[[123,[122]]]]],138],[[[136,[-1]],[15,[148]]],[[124,[[123,[122]]]]],138],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[[149,150],[[151,[139]]]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],0,[152,2],[8,2],0,[[153,[156,[[9,[154,155]]]]],2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],0,[-1,-2,[],[]],[[153,150],152],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[124,[152]],157],[[158,[20]]]],0,0,0,[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[124,[-1]],157],[[158,[[20,[9]]]]],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[20,[128]],[20,[159]],160],[[131,[[20,[161]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,135],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[20,[159]]],160],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[[135,[15,[140]]],[[124,[[123,[122]]]]]],[8,2],[162,2],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[135,133],[[131,[149]]]],0,[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,29],162],[[125,[20,[128]],[130,[129]]],135],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[162,105],2],0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],0,0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[163,[15,[164]]],[[124,[[123,[122]]]]]],[[163,102,[130,[165]],11],166],0,[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[113,[20,[128]]],163],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[167,167],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,168],[[124,[[123,[122]]]]],[]],[[167,169],[[131,[170]]]],[[167,[15,[169]]],[[124,[[123,[122]]]]]],0,[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[[130,[171]],[130,[129]]],167],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[172,172],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],172],[[],172],[8,-1,[]],[8,-1,[]],[-1,[[9,[172]]],10],[8,2],[[172,172],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[172,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],172],[[],8],0,[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[17]]],[]],[[172,-1],9,18],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[173,23],23],[174,173],[175,175],[176,176],[177,177],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[178,179],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[],173],[[],175],[[],174],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[175]]],10],[-1,[[9,[180]]],10],[-1,[[9,[181]]],10],[-1,[[9,[182]]],10],[-1,[[9,[183]]],10],[-1,[[9,[178]]],10],0,[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[[175,175],11],[[180,180],11],[[181,181],11],[[182,182],11],[[183,183],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[178,[[20,[29]]]],0,[178,[[20,[184]]]],0,[[175,12],13],[[180,12],13],[[181,12],13],[[182,12],13],[[183,12],13],[[178,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[97,[[131,[149]]]]],178],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[185,[[186,[178]]]],0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[187,188],[187,188],[187,188],[187,188],[187,188],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,23],0,0,[173,98],0,[[29,29],180],[[[97,[180]]],181],[175,174],[182,8],[182,8],0,0,0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[178,[[20,[[189,[183]]]]]],0,0,0,0,0,0,0,[[173,177],[[190,[-1]]],[]],[[173,191],[[23,[-1]]],[]],[[173,192],[[23,[-1]]],[]],[[173,193],[[23,[-1]]],[]],[[173,194],[[23,[-1]]],[]],[[173,195],[[23,[-1]]],[]],[[173,113],[[23,[-1]]],[]],[[173,176],[[190,[-1]]],[]],[182,[[97,[[97,[196]]]]]],0,[182,[[20,[181]]]],0,[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[175,-1],9,18],[[180,-1],9,18],[[181,-1],9,18],[[182,-1],9,18],[[183,-1],9,18],[[178,-1],9,18],[[[199,[198]]],[[0,[200]]]],[[],[[201,[29]]]],[173,[[124,[[123,[122]]]]]],0,0,0,[[173,101],[[124,[[123,[122]]]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[178,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[202,[-1]],[203,[-1]]],[[0,[204]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[97,[205]]],[[9,[182]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,178,206],[[29,105],178],[[178,184],178],[[174,29],174],[[174,125],174],[[174,191],174],[[174,192],174],[[174,193],174],[[174,194],174],[[[20,[[97,[183]]]]],178],[[174,207],174],[[174,195],174],[[174,113],174],[[174,208],174],[[174,209],174],[[174,128],174],0,0,0,0,0,0,[[-1,1],2,[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[202,[-1]]],[[131,[210]]],[]],[[[211,[-1]],[202,[-2]]],[],[212,213],[214,215]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[211,[-1]]],[[211,[-1]]],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[98,[[131,[[2,[29,216]]]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[[[202,[-1]]],[[2,[98,98]]],[214,215]],[98,[[20,[98]]]],[98,[[2,[[20,[98]],[20,[98]]]]]],[[[202,[-1]]],[[131,[[2,[29,216]]]]],[214,215]],[[210,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[202,[-1]]],[[131,[[20,[[2,[29,216]]]]]]],[214,215]],[[],8],[[],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[202,[-1]]],11,[]],[[[20,[128]]],[[211,[-1]]],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[98,[[131,[210]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[[],[[103,[-1]]],[212,213]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[217,[177]]],103],0,0,[[],218],[[],219],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[218]]],10],[-1,[[9,[219]]],10],[-1,[[9,[220]]],10],[-1,[[9,[221]]],10],[-1,[[9,[222]]],10],[8,2],[8,2],[8,2],[8,2],[8,2],0,[[221,221],11],[[222,222],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[218,12],13],[[219,12],13],[[220,12],13],[[221,12],13],[[222,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[223,[220]]],[[186,[221]]]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[187,188],[187,188],[187,188],[187,188],[187,188],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[217,[192]],[223,[[224,[29,29]]]]],29],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[217,[176]],[223,[219]],[199,[160]]],[[186,[178]]]],0,0,[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[218,-1],9,18],[[219,-1],9,18],[[220,-1],9,18],[[221,-1],9,18],[[222,-1],9,18],0,[[[217,[176]],[223,[218]],[199,[160]],[225,[218]]],[[186,[178]]]],0,[226,226],0,[[],[[186,[222]]]],0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[[209,160],[[20,[178]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[9,[227,228]]],229],[8,-1,[]],[8,-1,[]],[8,2],[[227,-1],2,[[231,[230]]]],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[],232],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[227,[[20,[29]]]],[-1,-2,[],[]],[[],[[131,[[0,[204]]]]]],[[],[[131,[[0,[204]]]]]],[[98,[20,[233]],29,191,160],[[131,[[0,[204]]]]]],[[[217,[191]],[223,[[224,[29,29]]]],[199,[160]],29],[[131,[[0,[204]]]]]],[[[217,[191]],[223,[[224,[29,29]]]],[199,[160]],29],[[131,[[0,[204]]]]]],[98,[[131,[233]]]],[[],[[131,[[0,[204]]]]]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[234,234],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[[235,[-2]]]]],10,236],[-1,[[9,[234]]],10],[-1,[[9,[237]]],10],[-1,[[9,[238]]],10],[-1,[[9,[239]]],10],[8,2],[8,2],[8,2],[8,2],[8,2],[[234,234],11],0,0,0,[[234,12],13],[[237,12],13],[[238,12],13],[[239,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[239,234,-1],2,206],[[239,8],2],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[240,[[131,[[97,[234]]]]]],[[[217,[193]],[223,[[224,[29,29]]]],[199,[160]],241],[[131,[[2,[242,[186,[237]]]]]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[[235,[-1]],-2],9,243,18],[[234,-1],9,18],[[237,-1],9,18],[[238,-1],9,18],[[239,-1],9,18],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,0,0,[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[244,103],[245,103],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[217,[194]],[199,[160]],241],[[131,[244]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[240,[[131,[246]]]],[240,[[131,[247]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[217,[194]],[199,[160]],241],[[131,[245]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[131,[[0,[204]]]]]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[240,[[131,[248]]]],[240,[[131,[249]]]],[[],250],[8,-1,[]],[8,-1,[]],[-1,[[9,[250]]],10],[8,2],[[250,12],13],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[187,188],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[217,[195]],[223,[250]],[199,[160]],241],[[131,[251]]]],[[[217,[195]],[223,[250]],[199,[160]],241],[[131,[[2,[242,2]]]]]],[[],[[197,[98]]]],[[],29],[-1,[[2,[17]]],[]],[[250,-1],9,18],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,0,0,0,0,[[],252],[[],253],[[],254],[[],166],[[],255],[[],256],[[],257],[[],258],[[],259],[[],260],[[],261],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[252]]],10],[-1,[[9,[253]]],10],[-1,[[9,[254]]],10],[-1,[[9,[166]]],10],[-1,[[9,[255]]],10],[-1,[[9,[256]]],10],[-1,[[9,[257]]],10],[-1,[[9,[258]]],10],[-1,[[9,[259]]],10],[-1,[[9,[260]]],10],[-1,[[9,[261]]],10],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],0,0,0,0,[[252,252],11],[[253,253],11],[[254,254],11],[[166,166],11],[[-1,-2],[[186,[166]]],[[30,[29]]],[[30,[29]]]],0,0,[[252,12],13],[[253,12],13],[[254,12],13],[[166,12],13],[[255,12],13],[[256,12],13],[[257,12],13],[[258,12],13],[[259,12],13],[[260,12],13],[[261,12],13],[[[217,[113]],[223,[256]],[199,[160]],[225,[256]]],[[186,[166]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[131,[149]],29,262],[[186,[166]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[98,98,263],[[9,[[97,[29]],264]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[217,[113]],[223,[256]],[199,[160]],[225,[256]]],[[186,[166]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[187,188],[[[217,[113]],[265,[29]],[199,[160]],[223,[260]]],[[186,[166]]]],[[[217,[113]],[223,[259]],[199,[160]],[225,[259]]],[[186,[166]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[266,[[20,[29]]]],0,0,0,[[[217,[113]],[223,[257]],[199,[160]],[225,[257]]],[[186,[166]]]],[[267,29,262],[[131,[254]]]],[[267,[268,[29]]],[[131,[2]]]],[[267,[97,[[224,[29,29]]]],98],[[131,[2]]]],0,0,[[[131,[149]],98,[268,[29]]],[[131,[2]]]],[[267,98,[268,[29]]],[[131,[2]]]],[[[131,[149]],[268,[29]]],[[131,[2]]]],[98,[[131,[[2,[[20,[29]],262]]]]]],[[[131,[149]],[97,[[224,[29,29]]]],98],[[131,[2]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],[[197,[98]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[252,-1],9,18],[[253,-1],9,18],[[254,-1],9,18],[[166,-1],9,18],[[255,-1],9,18],[[256,-1],9,18],[[257,-1],9,18],[[258,-1],9,18],[[259,-1],9,18],[[260,-1],9,18],[[261,-1],9,18],[[[217,[113]],[223,[261]],[199,[160]],[225,[261]]],[[186,[166]]]],0,0,0,0,0,0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[254,[[186,[166]]]],0,0,0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[],269],[8,-1,[]],[8,-1,[]],[-1,[[9,[269]]],10],[8,2],[[269,12],13],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],0,[187,188],[-1,-2,[],[]],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[[217,[176]],[223,[269]]],[[186,[178]]]],[[],[[197,[98]]]],[[],29],[[[217,[176]],[223,[269]],241],[[186,[178]]]],[-1,[[2,[17]]],[]],[[269,-1],9,18],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[[270,12],13],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[[[20,[233]]],233],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,149,160],[[9,[149]]],[]],[[-1,149,160],[[9,[149]]],[]],[[-1,149,160],[[9,[149]]],[]],[[-1,[97,[271]],160],[[9,[[97,[271]]]]],[]],[[-1,271,[20,[272]],160],[[9,[2]]],[]],[[-1,273,160],[[9,[2]]],[]],[[-1,102,160],[[9,[2]]],[]],[[-1,98,160],[[9,[[197,[98]]]]],[]],0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[274,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[8,-1,[]],[8,-1,[]],[8,2],0,[274,275],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],0,[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],[[-1,-2,8],274,[[30,[29]]],[[30,[29]]]],[[274,98,49,276],2],[[274,98,11],2],[[274,98,277],2],[[274,98,278],2],[[274,98,98],2],[[274,98,98],2],[[274,98,[2,[278,233]]],2],[[274,98,279],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[280,[-1]],[202,[240]]],[],[[281,[[202,[240]]]],53,214]],[[-1,[202,[-2]]],[],[],[]],[[-1,[202,[-2]]],[],[],[]],[282,282],[[[280,[-1]]],[[280,[-1]]],53],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],282],[8,-1,[]],[283,284],[8,-1,[]],[285,286],[287,286],[8,-1,[]],[8,-1,[]],[288,284],[8,-1,[]],[289,286],[290,286],[8,-1,[]],[8,-1,[]],[291,286],[292,286],[8,-1,[]],[8,-1,[]],[293,286],[8,-1,[]],[294,295],[8,-1,[]],[296,295],[8,-1,[]],[297,295],[8,-1,[]],[298,295],[8,-1,[]],[299,295],[300,295],[8,-1,[]],[301,295],[8,-1,[]],[8,-1,[]],[302,303],[8,-1,[]],[304,286],[8,-1,[]],[305,284],[306,303],[8,-1,[]],[307,286],[8,-1,[]],[308,309],[8,-1,[]],[8,-1,[]],[310,286],[311,286],[8,-1,[]],[312,284],[8,-1,[]],[313,286],[8,-1,[]],[8,-1,[]],[314,284],[8,-1,[]],[315,286],[8,-1,[]],[316,286],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[8,2],[[282,12],13],[[[280,[-1]],12],13,99],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[317,[-2]]],[],[]],[-1,[[318,[-2,-3]]],[],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[[282,-1],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[],[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,157],[[158,[[9,[2]]]]],[]],[[-1,157],[[158,[[9,[2]]]]],[]],[[-1,157],[[158,[[9,[2]]]]],[]],[[[280,[-1]],157],[[158,[[9,[2]]]]],[[281,[[202,[240]]]],53,214]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[319,303],[8,-1,[]],[8,-1,[]],[320,303],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[8,2],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[],[[131,[321]]]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[321,[[131,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[192,192],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[192,29],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[98,160,322],[[20,[149]]]],[[98,160],[[20,[149]]]],[[98,160],[[20,[149]]]],[[98,322],[[20,[149]]]],[98,[[20,[149]]]],[[],29],[[98,98],267],[[98,160],[[20,[149]]]],[[98,98],267],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[323,98,[189,[324]],[189,[324]],[189,[324]]],[[124,[[123,[122]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[209,[20,[128]],101],323],[8,-1,[]],[8,-1,[]],[[323,271,160],[[131,[[20,[325]]]]]],[[323,98,272,160],[[131,[149]]]],[[323,98,160],[[97,[[131,[149]]]]]],[8,2],[8,[[131,[[97,[326]]]]]],[327,29],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[323,179],[[124,[[123,[122]]]]]],[[323,179,328,[329,[-1]]],[[124,[[123,[122]]]]],[330,214,215,331]],[[323,98,[332,[-1]]],[[124,[[123,[122]]]]],[330,214,215,331]],[[323,98,[333,[-1]]],[[124,[[123,[122]]]]],[330,214,215,331]],[[323,98,[329,[-1]]],[[124,[[123,[122]]]]],[330,214,215,331]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[323,179],[[20,[6]]]],[[[224,[29,[20,[49]]]]],[[131,[[97,[326]]]]]],0,0,0,[[[97,[334]],29],29],[[272,[224,[29,[20,[49]]]],[97,[334]]],[[131,[272]]]],[323,[[335,[324]]]],0,[[323,6],179],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],0,[98,[[131,[271]]]],[-1,-2,[],[]],[[334,49],[[131,[336]]]],[8,29],[98,[[2,[29,8]]]],[271,271],[-1,2,337],0,0,0,0,0,[[338,[130,[129]],[340,[339]]],[[0,[122]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[130,[129]],[130,[341]],[130,[342]]],[[123,[343]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[[344,[130,[341]],[130,[342]]],[[131,[2]]]],[8,2],[8,2],[8,2],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[344,[130,[129]],[130,[341]],[130,[342]]],[[131,[2]]]],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[338,98],[[209,[20,[128]]],341],[[11,[20,[[130,[345]]]],11],342],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[341,209],0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[338,[[124,[[123,[122]]]]]],0,0,[[338,101],[[124,[[123,[122]]]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[342,[[20,[[130,[345]]]]]],0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[341,[[20,[128]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[49,98],[[131,[326]]]],[346,[[131,[[97,[326]]]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[[[347,[-1]]],[[131,[2]]],[330,331]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[329,[-1]],160],[[347,[-1]]],[330,331]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[[347,[-1]],[131,[149]]],[[131,[[20,[[347,[-1]]]]]]],[330,331]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[329,[-1]],8],[[131,[[329,[-1]]]]],[330,331]],[[[329,[-1]],160,[97,[[131,[149]]]]],[[131,[2]]],[330,214,215,331]],[[-1,[329,[-2]]],[[131,[2]]],206,[330,331]],[[348,[329,[-1]],160],[[131,[2]]],[330,331]],[[[349,[-1]],205,160],[[131,[2]]],[330,331]],0,0,0,[[350,[130,[129]],[340,[339]]],[[0,[122]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[193,[130,[129]]],[[123,[343]]]],[[[97,[351]]],[[131,[[2,[352,8]]]]]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],0,[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[350,98],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,[[2,[17]]],[]],[350,[[124,[[123,[122]]]]]],[[350,101],[[124,[[123,[122]]]]]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[351,353],[-1,-2,[],[]],[-1,-2,[],[]],[351,351],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[[351,12],13],[234,351],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[351,98],0,[[29,278,277,[97,[[2,[29,29]]]]],351],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[351,[[97,[[2,[29,29]]]]]],0,[351,[[97,[[2,[29,29]]]]]],[278,278],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[98,[[131,[351]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[351,278],0,[-1,21,[]],[351,277],0,[-1,-2,[],[]],0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[[[354,[-1]],12],13,[99,330,355,331]],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[-1,[[354,[-1]]],[330,355,331]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[354,[-1]]],[[131,[[20,[29]]]]],[330,355,331]],[[[354,[-1]]],[[131,[[20,[29]]]]],[330,355,331]],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],0,[-1,-2,[],[]],[[[354,[-1]],29],[[131,[2]]],[330,355,331]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[193,[354,[-1]],356],[[357,[-1]]],[330,355,331]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[[357,[-1]]],[[131,[2]]],[330,355,331]],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[98,358],[[131,[2]]]],[[359,98,360,[20,[[97,[361]]]],[20,[[97,[361]]]]],[[131,[2]]]],[[359,98,362,[20,[[97,[361]]]],[20,[[97,[361]]]]],[[131,[2]]]],[[359,363,[20,[[97,[361]]]],[20,[[97,[361]]]]],[[131,[2]]]],[[359,98,364,[20,[[97,[361]]]],[20,[[97,[361]]]]],[[131,[2]]]],[[359,98,365,[20,[[97,[361]]]],[20,[[97,[361]]]]],[[131,[2]]]],[98,29],[246,[[131,[[2,[352,8]]]]]],[[366,[97,[367]],[20,[[97,[361]]]]],[[131,[2]]]],[[366,[97,[367]],98,[20,[368]]],[[131,[2]]]],[[366,[97,[367]],[20,[[97,[361]]]],[20,[[97,[361]]]],[20,[[97,[361]]]],278],[[131,[2]]]],[[366,[97,[367]],278],[[131,[2]]]],0,0,0,[[-1,247],369,[]],0,0,[-1,29,[]],0,0,0,[247,369],0,[[29,369],[[131,[[2,[352,8]]]]]],[[366,370],[[131,[2]]]],0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[371,371],[372,372],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[[371,12],13],[[371,12],13],[[372,12],13],[[372,12],13],[373,371],[-1,-1,[]],[[[97,[361]]],372],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[372,[[97,[361]]]],[372,[[97,[361]]]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],371],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[371,-1],9,18],[[372,-1],9,18],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[189,[324]]],29],[370,370],[374,374],[375,375],[376,376],[377,377],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[8,2],[8,2],[8,2],0,[[370,12],13],[[374,12],13],[[375,12],13],[[375,12],13],[[376,12],13],[[377,12],13],[[377,12],13],[-1,-1,[]],[378,374],[-1,-1,[]],[[[97,[378]]],375],[-1,-1,[]],[-1,-1,[]],[379,376],[-1,-1,[]],[[[97,[379]]],377],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[375,[[97,[374]]]],[377,[[97,[376]]]],[375,[[97,[374]]]],[377,[[97,[376]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[[97,[361]],380,381],370],0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[374,-1],9,18],[[375,-1],9,18],[[376,-1],9,18],[[377,-1],9,18],0,0,0,0,0,0,0,0,0,0,[[[20,[382]]],[[2,[29,29]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,26,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[383,[[9,[384,385]]]],[383,383],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],383],[[],383],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[[386,-1,387],[[124,[[123,[122]]]]],[388,331,214,215]],[[386,-1,389,8],[[124,[[123,[122]]]]],[388,331,214,215]],[[386,-1,98],[[124,[[123,[122]]]]],[388,331,214,215]],[8,2],[8,2],[8,2],[8,2],[8,2],[[385,12],13],[[385,12],13],[[383,11],383],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,385],[-1,-1,[]],[390,385],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[384,[20,[101]]],386],0,[[],391],[[386,-1,392],[[124,[[123,[122]]]]],[388,[394,[393]],331,214]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[383,[130,[391]]],383],0,0,0,[386,130],0,[[383,209],383],0,0,0,[386,130],0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],0,[[391,-1],[[20,[[224,[29,29]]]]],388],0,[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,[-1,-2,[],[]],[-1,29,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,[[383,[20,[128]]],383],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[395,396,98],[[131,[[20,[161]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,396,388],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[128]]],395],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[397,[-1]],209],[[399,[398]]],[388,331,214]],0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[-1,98,98,29],[[399,[2]]],[388,[394,[393]],331,214]],[[-1,400],2,388],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[209,[130,[400]]],401],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[131,[149]],402],[[399,[403]]]],[[401,98,[189,[404]]],[[124,[[123,[122]]]]]],0,[[-1,346,402],[[399,[403]]],[405,214,331]],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[[406,[130,[129]],[340,[339]],[20,[[130,[407]]]]],[[0,[122]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,[406,98],[[209,408,[130,[129]],[20,[128]]],406],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[406,[[124,[[123,[122]]]]]],[[406,101],[[124,[[123,[122]]]]]],[-1,[[9,[19]]],[]],0,[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[276,409],[[399,[2]]]],0,[[98,[20,[98]]],410],[[[224,[29,[20,[49]]]]],[[131,[[97,[404]]]]]],[[[389,[6]],8],[[399,[29]]]],[[272,[389,[6]]],[[399,[[97,[336]]]]]],[[411,402],[[131,[[97,[412]]]]]],[[[20,[-1]],413,49],[[399,[336]]],[[30,[278]]]],[49,[[131,[404]]]],[404,[[131,[49]]]],0,[[-1,1],2,[]],[404,11],[404,11],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,414,[]],[415,415],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[[],415],[8,-1,[]],[8,-1,[]],[8,2],[[415,12],13],[[415,12],13],[-1,-1,[]],[416,415],[-1,-1,[]],[[404,[189,[324]]],[[9,[415,[123,[26]]]]]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],0,0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[[415,404,417],[[9,[418,[123,[26]]]]]],[[415,404,417],[[9,[418,[123,[26]]]]]],[[415,404,417],[[9,[418,[123,[26]]]]]],[-1,29,[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[419,419],420],[[98,205],[[97,[419]]]],[[-1,-2],420,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[[419,419],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,[[419,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],279,[421,422],423],[[419,-1],2,424],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[278,425],[[],[[97,[426]]]],[[29,29],427],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[419,419],[[20,[420]]]],[[428,429],[[131,[272]]]],[[98,205],[[131,[[97,[426]]]]]],[[98,267],[[131,[[97,[426]]]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[[189,[324]]],[[131,[[97,[324]]]]]],[[[189,[324]]],[[131,[[97,[324]]]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[429,[[131,[29]]]],[249,[[131,[[2,[352,8]]]]]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,263,[]],[[-1,102,160],[[124,[[123,[122]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[8,-1,[]],[8,-1,[]],[8,2],[[-1,270,160],[[124,[[123,[122]]]]],[]],[[-1,[97,[351]],160],[[124,[[123,[122]]]]],[]],[[-1,160,98,[224,[29,29]]],[[124,[[123,[122]]]]],[]],[-1,-1,[]],[-1,-2,[],[]],0,[[-1,430],[[124,[[123,[122]]]]],[]],[[],8],[[-1,160,98,98],[[124,[[123,[122]]]]],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[251,103],[-1,11,[]],[-1,-2,[],[]],[[-1,246,160],[[124,[[123,[122]]]]],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,0,0,0,0,0,0,[[-1,248,160],[[124,[[123,[122]]]]],[]],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[[-1,247,160],[[124,[[123,[122]]]]],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],[[-1,249,160],[[124,[[123,[122]]]]],[]],0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[431,[-1]]],[[130,[[432,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[[-1,273,160],[[124,[[123,[122]]]]],[]],[[[432,[-1]],273,160],[[124,[[123,[122]]]]],[206,214,215]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,11,[]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[[433,[-1]]],[[130,[[434,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[[-1,271,160],[[124,[[123,[122]]]]],[]],[[[434,[-1]],271,160],[[124,[[123,[122]]]]],[206,214,215]],[[-1,272,160],[[124,[[123,[122]]]]],[]],[[[434,[-1]],272,160],[[124,[[123,[122]]]]],[206,214,215]],[[-1,102,160],[[124,[[123,[122]]]]],[]],[[[434,[-1]],102,160],[[124,[[123,[122]]]]],[206,214,215]],[[-1,98,160],[[124,[[123,[122]]]]],[]],[[[434,[-1]],98,160],[[124,[[123,[122]]]]],[206,214,215]],[8,2],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[[-1,98,98],[[124,[[123,[122]]]]],[]],[[[434,[-1]],98,98],[[124,[[123,[122]]]]],[206,214,215]],[-1,-2,[],[]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,0,0,[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,[[366,[97,[367]]],2],[[359,-1,366],2,435],[366,[[97,[367]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[436,437,438],[[131,[2]]]],0,[366,[[97,[438]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],359],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[359,-1,8,8],366,435],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[359,[[2,[352,8]]]],[366,[[2,[[97,[438]],[97,[439]]]]]],[-1,11,[]],[-1,11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[8,8],366],[[],359],[366,8],[366,8],[359,8],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,0,[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[366,437,-1,[97,[367]]],[[131,[2]]],229],[[366,-1,277,[97,[367]]],[[131,[2]]],435],[[366,-1,[97,[367]]],[[131,[2]]],229],[[366,-1,-2,[97,[367]]],[[131,[2]]],435,435],[[366,-1,[97,[367]]],[[131,[2]]],229],[[366,-1,[20,[278]],[97,[367]]],[[131,[2]]],435],[[366,-1,[20,[278]],233,[97,[367]]],[[131,[2]]],435],0,0,0,0,0,0,0,0,0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],0,[[440,101,98],[[131,[[2,[[340,[339]],101]]]]]],[[441,101],[[131,[[2,[[340,[339]],101]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[-1,[130,[129]]],441,[[30,[29]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,2],[8,2],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[441,[[130,[129]]]],0,[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,98,[]],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[-1,[[124,[[123,[122]]]]],[]],[[440,98],[[131,[2]]]],[441,[[131,[2]]]],[[-1,101],[[124,[[123,[122]]]]],[]],[442,[[131,[[20,[101]]]]]],[[440,[443,[2]],98],[[131,[2]]]],[[441,[443,[2]]],[[131,[2]]]],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],0,[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[8,-1,[]],[8,-1,[]],[8,2],[[356,12],13],[-1,-1,[]],[-1,-2,[],[]],[[],8],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[356,11],[-1,-2,[],[]],[[[444,[2]]],356],0,[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[356,2],[-1,[[2,[17]]],[]],0,[-1,[[9,[19]]],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[3,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[445,445],[408,408],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[],445],[[],408],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[9,[445]]],10],[-1,[[9,[408]]],10],[8,2],[8,2],[[445,445],11],[[408,408],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[445,12],13],[[408,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[98,[[9,[445]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[20,[445]],[20,[29]],[20,[29]]],408],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[[-1,-4],[[16,[-5,-4]]],[],[],[],[[4,[-2,-3]]],[[4,[-2,-3]]]],[-1,[[2,[17]]],[]],[-1,[[2,[17]]],[]],[[445,-1],9,18],[[408,-1],9,18],[408,[[9,[[20,[345]],100]]]],[408,11],[-1,[[9,[19]]],[]],[-1,[[9,[19]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,[[9,[-1]]],[]],[98,[[9,[445]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",7522],[15,"tuple"],[3,"And",7523],[8,"Policy",7524],[4,"Mode",0],[3,"SqlPlan",0],[3,"Compat",7525],[15,"usize"],[4,"Result",7526],[8,"Deserializer",7527],[15,"bool"],[3,"Formatter",7528],[6,"Result",7528],[3,"Request",7529],[3,"Request",7529],[3,"Or",7530],[3,"HNil",7531],[8,"Serializer",7532],[4,"CNil",7533],[4,"Option",7534],[3,"TypeId",7535],[3,"Router",7536],[3,"Router",7537],[4,"Error",108],[8,"Any",7535],[8,"Error",7538],[3,"Backtrace",7539],[3,"InternalSnafu",108],[3,"String",7540],[8,"Into",7541],[3,"AlreadyStartedSnafu",108],[3,"NotSupportedSnafu",108],[3,"InvalidParameterSnafu",108],[3,"InvalidQuerySnafu",108],[3,"TimePrecisionSnafu",108],[3,"ConnResetByPeerSnafu",108],[3,"InvalidPromRemoteRequestSnafu",108],[3,"InvalidPromRemoteReadQueryResultSnafu",108],[3,"TlsRequiredSnafu",108],[3,"NotFoundAuthHeaderSnafu",108],[3,"NotFoundInfluxAuthSnafu",108],[3,"UnsupportedAuthSchemeSnafu",108],[3,"InvalidAuthorizationHeaderSnafu",108],[3,"DatabaseNotFoundSnafu",108],[3,"InvalidPrepareStatementSnafu",108],[3,"InvalidFlushArgumentSnafu",108],[3,"UnexpectedResultSnafu",108],[3,"PreparedStmtTypeMismatchSnafu",108],[4,"ConcreteDataType",7542],[4,"ColumnType",7543],[3,"IncompatibleSchemaSnafu",108],[15,"i32"],[8,"Clone",7544],[3,"InternalIoSnafu",108],[3,"TokioIoSnafu",108],[3,"CollectRecordbatchSnafu",108],[3,"StartHttpSnafu",108],[3,"StartGrpcSnafu",108],[3,"TcpBindSnafu",108],[3,"TcpIncomingSnafu",108],[3,"ExecuteQuerySnafu",108],[3,"ExecutePlanSnafu",108],[3,"ExecuteGrpcQuerySnafu",108],[3,"ExecuteGrpcRequestSnafu",108],[3,"CheckDatabaseValiditySnafu",108],[3,"DescribeStatementSnafu",108],[3,"InsertScriptSnafu",108],[3,"ExecuteScriptSnafu",108],[3,"InfluxdbLineProtocolSnafu",108],[3,"InfluxdbLinesWriteSnafu",108],[3,"PromSeriesWriteSnafu",108],[3,"OtlpMetricsWriteSnafu",108],[3,"HyperSnafu",108],[3,"InvalidOpentsdbLineSnafu",108],[3,"InvalidOpentsdbJsonRequestSnafu",108],[3,"DecodePromRemoteRequestSnafu",108],[3,"DecodeOtlpRequestSnafu",108],[3,"DecompressPromRemoteRequestSnafu",108],[3,"InvalidFlightTicketSnafu",108],[3,"AuthSnafu",108],[3,"InvisibleASCIISnafu",108],[3,"InvalidBase64ValueSnafu",108],[3,"InvalidUtf8ValueSnafu",108],[3,"CatalogSnafu",108],[3,"GrpcReflectionServiceSnafu",108],[3,"BuildHttpResponseSnafu",108],[3,"ParsePromQLSnafu",108],[3,"GetPreparedStmtParamsSnafu",108],[3,"OtherSnafu",108],[3,"JoinTaskSnafu",108],[3,"UpdateJemallocMetricsSnafu",108],[3,"DataFrameSnafu",108],[3,"ReplacePreparedStmtParamsSnafu",108],[3,"ConvertScalarValueSnafu",108],[3,"ToJsonSnafu",108],[3,"UrlDecodeSnafu",108],[3,"Vec",7545],[15,"str"],[8,"Debug",7528],[3,"Error",7546],[4,"SocketAddr",7547],[3,"PromQuery",7548],[6,"Response",7549],[8,"StackError",7550],[4,"StatusCode",7551],[4,"Code",7552],[3,"GrpcServerConfig",2604],[3,"GrpcServer",2604],[8,"FlightService",7553],[3,"FlightServiceServer",7553],[8,"HealthCheck",7554],[3,"HealthCheckServer",7554],[6,"PrometheusHandlerRef",7062],[8,"PrometheusGateway",7555],[3,"PrometheusGatewayServer",7555],[8,"ServerReflection",7556],[3,"ServerReflectionServer",7556],[8,"Region",7557],[3,"RegionServer",7557],[3,"HealthCheckHandler",2604],[3,"HealthCheckRequest",7558],[8,"Future",7559],[3,"Box",7560],[3,"Pin",7561],[6,"ServerGrpcQueryHandlerRef",7138],[6,"FlightCraftRef",2757],[6,"RegionServerHandlerRef",2966],[6,"UserProviderRef",7562],[3,"Runtime",7563],[3,"Arc",7564],[6,"Result",108],[3,"DatabaseService",2725],[3,"GreptimeRequest",7558],[3,"Streaming",7565],[3,"GreptimeRequestHandler",2857],[3,"FlightCraftWrapper",2757],[3,"Action",7566],[8,"FlightCraft",2757],[3,"FlightData",7566],[3,"Ticket",7566],[15,"never"],[3,"OwnedFd",7567],[8,"IntoFilelike",7568],[8,"IntoSocketlike",7568],[3,"FlightDescriptor",7566],[3,"HandshakeRequest",7566],[3,"Empty",7566],[3,"Criteria",7566],[4,"Output",7569],[3,"TracingContext",7570],[6,"TonicStream",2757],[3,"FlightRecordBatchStream",2816],[6,"SendableRecordBatchStream",7571],[4,"FlightMessage",7572],[3,"Status",7552],[3,"Sender",7573],[3,"Context",7574],[4,"Poll",7575],[3,"RequestHeader",7558],[6,"QueryContextRef",7576],[6,"UserInfoRef",7562],[3,"RequestTimer",2857],[3,"PrometheusGatewayService",2933],[3,"PromqlRequest",7558],[3,"QueryContext",7576],[3,"PrometheusJsonResponse",4116],[3,"RegionServerRequestHandler",2966],[4,"Body",7577],[3,"RegionRequest",7578],[3,"RegionResponse",7578],[8,"RegionServerHandler",2966],[3,"HeartbeatOptions",3010],[3,"HttpServer",3056],[3,"HttpServerBuilder",3056],[3,"HttpOptions",3056],[3,"ApiState",3056],[3,"GreptimeOptionsConfigState",3056],[3,"JsonResponse",3056],[15,"u32"],[3,"ColumnSchema",3056],[3,"Schema",3056],[3,"HttpRecordsOutput",3056],[4,"JsonOutput",3056],[15,"u128"],[6,"BoxError",7579],[3,"Json",7580],[3,"SchemaGenerator",7581],[4,"Schema",7582],[15,"slice"],[3,"ApiRouter",7583],[6,"InfluxdbLineProtocolHandlerRef",7070],[3,"MetricsHandler",5771],[6,"OpentsdbProtocolHandlerRef",7070],[6,"OpenTelemetryProtocolHandlerRef",7070],[6,"PromStoreProtocolHandlerRef",7070],[4,"Value",7584],[4,"Cow",7585],[3,"OpenApi",7586],[3,"Extension",7587],[8,"IntoApiResponse",7583],[3,"Html",7588],[3,"Request",7589],[3,"Next",7590],[8,"IntoResponse",7591],[3,"RecordBatch",7592],[8,"ErrorExt",7550],[3,"Plugins",7593],[6,"ScriptHandlerRef",7070],[6,"ServerSqlQueryHandlerRef",7179],[4,"AuthScheme",3509],[3,"HttpAuth",3509],[8,"Body",7594],[8,"Default",7595],[8,"Send",7596],[8,"Sync",7596],[6,"SecretString",7597],[3,"State",7598],[3,"SqlQuery",3591],[3,"PromqlQuery",3591],[3,"HealthQuery",3591],[3,"HealthResponse",3591],[3,"StatusResponse",3591],[3,"Query",7599],[3,"HashMap",7600],[3,"Form",7601],[3,"TransformOperation",7602],[3,"GreptimeDbName",3794],[3,"Error",7603],[8,"Iterator",7604],[3,"HeaderValue",7605],[8,"Extend",7606],[3,"HeaderName",7607],[4,"Precision",7608],[3,"DataPointRequest",3834],[4,"OneOrMany",3834],[8,"Deserialize",7527],[4,"OpentsdbPutResponse",3834],[3,"OpentsdbDetailError",3834],[3,"OpentsdbDebuggingResponse",3834],[3,"Body",7609],[3,"RawBody",7610],[3,"StatusCode",7611],[8,"Serialize",7532],[3,"OtlpMetricsResponse",4011],[3,"OtlpTracesResponse",4011],[3,"ExportMetricsServiceRequest",7612],[3,"ExportTraceServiceRequest",7613],[3,"ReadRequest",7614],[3,"WriteRequest",7614],[3,"DatabaseQuery",4076],[3,"PromStoreResponse",7070],[3,"PromSeries",4116],[3,"PromData",4116],[4,"PrometheusResponse",4116],[3,"FormatQuery",4116],[3,"InstantQuery",4116],[3,"RangeQuery",4116],[3,"Matches",4116],[3,"LabelsQuery",4116],[3,"LabelValueQuery",4116],[3,"SeriesQuery",4116],[4,"ValueType",7615],[6,"CatalogManagerRef",7616],[4,"Error",7617],[3,"Path",7618],[4,"Expr",7619],[3,"RecordBatches",7571],[3,"HashSet",7620],[3,"ScriptQuery",4562],[3,"InfluxdbRequest",4605],[4,"Statement",7621],[4,"LogicalPlan",7622],[4,"Request",7623],[3,"LineWriter",4665],[3,"InsertRequest",7624],[4,"Value",7625],[15,"f64"],[15,"i64"],[15,"u64"],[3,"MetricsMiddleware",4712],[8,"Service",7626],[3,"MetricsMiddlewareLayer",4712],[3,"METRIC_ERROR_COUNTER",4712],[6,"IntCounterVec",7627],[3,"METRIC_HTTP_SQL_ELAPSED",4712],[6,"HistogramVec",7628],[3,"METRIC_HTTP_PROMQL_ELAPSED",4712],[3,"METRIC_AUTH_FAILURE",4712],[3,"METRIC_HTTP_INFLUXDB_WRITE_ELAPSED",4712],[3,"METRIC_HTTP_PROM_STORE_WRITE_ELAPSED",4712],[3,"METRIC_HTTP_PROM_STORE_READ_ELAPSED",4712],[3,"METRIC_HTTP_OPENTELEMETRY_METRICS_ELAPSED",4712],[3,"METRIC_HTTP_OPENTELEMETRY_TRACES_ELAPSED",4712],[3,"METRIC_TCP_OPENTSDB_LINE_WRITE_ELAPSED",4712],[3,"Histogram",7628],[3,"METRIC_HTTP_PROMQL_FORMAT_QUERY_ELAPSED",4712],[3,"METRIC_HTTP_PROMQL_INSTANT_QUERY_ELAPSED",4712],[3,"METRIC_HTTP_PROMQL_RANGE_QUERY_ELAPSED",4712],[3,"METRIC_HTTP_PROMQL_LABEL_QUERY_ELAPSED",4712],[3,"METRIC_HTTP_PROMQL_SERIES_QUERY_ELAPSED",4712],[3,"METRIC_HTTP_PROMQL_LABEL_VALUE_QUERY_ELAPSED",4712],[3,"METRIC_MYSQL_CONNECTIONS",4712],[6,"IntGauge",7629],[3,"METRIC_MYSQL_QUERY_TIMER",4712],[3,"METRIC_MYSQL_PREPARED_COUNT",4712],[3,"METRIC_POSTGRES_CONNECTIONS",4712],[3,"METRIC_POSTGRES_QUERY_TIMER",4712],[3,"METRIC_POSTGRES_PREPARED_COUNT",4712],[6,"IntCounter",7627],[3,"METRIC_SERVER_GRPC_DB_REQUEST_TIMER",4712],[3,"METRIC_SERVER_GRPC_PROM_REQUEST_TIMER",4712],[3,"METRIC_HTTP_REQUESTS_TOTAL",4712],[3,"METRIC_HTTP_REQUESTS_ELAPSED",4712],[3,"METRIC_GRPC_REQUESTS_TOTAL",4712],[3,"METRIC_GRPC_REQUESTS_ELAPSED",4712],[3,"HTTP_TRACK_METRICS",4712],[3,"IntoMakeService",7630],[3,"IntoMakeServiceWithConnectInfo",7631],[3,"SYS_JEMALLOC_RESIDEN",5677],[3,"SYS_JEMALLOC_ALLOCATED",5677],[3,"JemallocCollector",5677],[6,"SessionRef",7632],[3,"MysqlInstanceShim",5831],[15,"u8"],[3,"DescribeResult",7633],[3,"Column",7634],[3,"Duration",7635],[3,"ParamParser",7636],[3,"QueryResultWriter",7637],[8,"AsyncWrite",7638],[8,"Unpin",7596],[3,"InitWriter",7637],[3,"StatementMetaWriter",7637],[3,"ParamValue",7636],[15,"array"],[4,"ScalarValue",7639],[8,"VisitMut",7640],[3,"MysqlServer",5889],[3,"TcpListenerStream",7641],[3,"Abortable",7642],[3,"MysqlSpawnRef",5889],[3,"MysqlSpawnConfig",5889],[8,"Server",7309],[3,"TcpStream",7643],[3,"ServerConfig",7644],[6,"SchemaRef",7645],[3,"MysqlResultWriter",5995],[3,"QueryResult",5995],[3,"RowWriter",7637],[3,"OpentsdbServer",6065],[3,"DataPoint",6106],[3,"RowInsertRequests",7558],[3,"InsertRequest",7558],[3,"Connection",6156],[8,"AsyncRead",7646],[3,"Shutdown",7390],[3,"Handler",6193],[3,"ExponentialHistogram",7647],[3,"MultiTableData",7228],[3,"Gauge",7647],[3,"KeyValue",7648],[3,"Histogram",7647],[3,"Metric",7647],[3,"Sum",7647],[3,"Summary",7647],[3,"TableData",7228],[3,"Value",7558],[4,"Value",7649],[6,"TraceSpans",6339],[3,"TraceSpan",6339],[3,"OtlpAnyValue",6260],[3,"Attributes",6260],[3,"AnyValue",7648],[3,"SpanLink",6339],[3,"SpanLinks",6339],[3,"SpanEvent",6339],[3,"SpanEvents",6339],[3,"Link",7650],[3,"Event",7650],[3,"InstrumentationScope",7648],[3,"Span",7651],[3,"Status",7651],[3,"MakePostgresServerHandlerBuilder",6556],[3,"MakePostgresServerHandler",6556],[4,"MakePostgresServerHandlerBuilderError",6556],[3,"PostgresServerHandler",6556],[4,"StatementOrPortal",7652],[8,"ClientInfo",7653],[3,"Portal",7654],[3,"UninitializedFieldError",7655],[3,"GreptimeDBStartupParameters",6556],[4,"PgWireFrontendMessage",7656],[4,"PgWireBackendMessage",7656],[8,"Sink",7657],[3,"PgLoginVerifier",6753],[3,"LoginInfo",6753],[3,"Exclusive",7658],[4,"DbResolution",6753],[6,"PgWireResult",7659],[3,"Session",7632],[3,"DefaultQueryParser",6850],[4,"Format",7654],[4,"Response",7660],[3,"Type",7661],[8,"Stream",7662],[3,"PostgresServer",6884],[3,"TlsAcceptor",7663],[3,"TlsOption",7424],[3,"DataRowEncoder",7660],[4,"PgWireError",7659],[3,"Schema",7645],[3,"FieldInfo",7660],[4,"TimestampType",7664],[8,"ToSql",7661],[3,"PgInterval",6931],[3,"Interval",7665],[3,"BytesMut",7666],[4,"IsNull",7661],[3,"TimeSeriesId",6979],[4,"Ordering",7667],[8,"Hash",7668],[8,"Sized",7596],[8,"BuildHasher",7668],[8,"Hasher",7668],[4,"Expr",7669],[3,"TimeSeries",7614],[3,"Label",7614],[4,"DataFrame",7670],[3,"Query",7614],[3,"Metrics",6979],[6,"GrpcQueryHandlerRef",7138],[3,"ServerGrpcQueryHandlerAdaptor",7138],[6,"SqlQueryHandlerRef",7179],[3,"ServerSqlQueryHandlerAdaptor",7179],[8,"ToString",7540],[4,"ColumnDataType",7558],[4,"SemanticType",7558],[3,"ColumnSchema",7558],[3,"Row",7558],[3,"AcceptTask",7309],[3,"BaseTcpServer",7309],[6,"ServerHandler",7309],[3,"JoinHandle",7671],[3,"Receiver",7672],[4,"TlsMode",7424],[6,"ConfiguratorRef",101],[8,"Configurator",101],[13,"PreparedStmtTypeMismatch",2489],[13,"IncompatibleSchema",2489],[13,"TcpBind",2489],[13,"DatabaseNotFound",2489],[13,"Internal",2489],[13,"TokioIo",2489],[13,"InvalidPrepareStatement",2489],[13,"InvalidFlushArgument",2489],[13,"InternalIo",2489],[13,"StartHttp",2489],[13,"StartGrpc",2489],[13,"TcpIncoming",2489],[13,"InfluxdbLineProtocol",2489],[13,"Hyper",2489],[13,"InvalidOpentsdbLine",2489],[13,"InvalidOpentsdbJsonRequest",2489],[13,"DecodePromRemoteRequest",2489],[13,"DecodeOtlpRequest",2489],[13,"DecompressPromRemoteRequest",2489],[13,"InvalidFlightTicket",2489],[13,"InvisibleASCII",2489],[13,"InvalidBase64Value",2489],[13,"InvalidUtf8Value",2489],[13,"GrpcReflectionService",2489],[13,"BuildHttpResponse",2489],[13,"JoinTask",2489],[13,"UpdateJemallocMetrics",2489],[13,"DataFrame",2489],[13,"ToJson",2489],[13,"UrlDecode",2489],[13,"NotSupported",2489],[13,"CollectRecordbatch",2489],[13,"AlreadyStarted",2489],[13,"ExecuteQuery",2489],[13,"ExecutePlan",2489],[13,"ExecuteGrpcQuery",2489],[13,"ExecuteGrpcRequest",2489],[13,"CheckDatabaseValidity",2489],[13,"InsertScript",2489],[13,"ExecuteScript",2489],[13,"InvalidParameter",2489],[13,"InvalidQuery",2489],[13,"InfluxdbLinesWrite",2489],[13,"PromSeriesWrite",2489],[13,"OtlpMetricsWrite",2489],[13,"TimePrecision",2489],[13,"ConnResetByPeer",2489],[13,"InvalidPromRemoteRequest",2489],[13,"InvalidPromRemoteReadQueryResult",2489],[13,"Auth",2489],[13,"InvalidAuthorizationHeader",2489],[13,"ParsePromQL",2489],[13,"GetPreparedStmtParams",2489],[13,"UnexpectedResult",2489],[13,"Other",2489],[13,"ReplacePreparedStmtParams",2489],[13,"ConvertScalarValue",2489],[13,"UnsupportedAuthScheme",2489],[13,"TlsRequired",2489],[13,"DescribeStatement",2489],[13,"CatalogError",2489],[6,"TonicResult",2604],[6,"Password",3509],[6,"Username",3509],[8,"SqlQueryInterceptor",4639],[8,"GrpcQueryInterceptor",4639],[8,"PromQueryInterceptor",4639],[6,"SqlQueryInterceptorRef",4639],[6,"GrpcQueryInterceptorRef",4639],[6,"PromQueryInterceptorRef",4639],[6,"ColumnName",4665],[6,"Line",6156],[6,"TraceParserRef",6246],[8,"TraceParser",6246],[8,"PrometheusHandler",7062],[8,"InfluxdbLineProtocolHandler",7070],[8,"OpentsdbProtocolHandler",7070],[8,"ScriptHandler",7070],[8,"PromStoreProtocolHandler",7070],[8,"OpenTelemetryProtocolHandler",7070],[8,"GrpcQueryHandler",7138],[8,"SqlQueryHandler",7179],[6,"ServerHandlers",7309],[6,"AbortableStream",7309]],"b":[[1125,"impl-Debug-for-Error"],[1126,"impl-Display-for-Error"],[2986,"impl-RegionServerRequestHandler"],[2987,"impl-Region-for-RegionServerRequestHandler"],[6286,"impl-Display-for-OtlpAnyValue%3C\'_%3E"],[6287,"impl-Debug-for-OtlpAnyValue%3C\'a%3E"],[6288,"impl-Display-for-Attributes"],[6289,"impl-Debug-for-Attributes"],[6412,"impl-Display-for-SpanLinks"],[6413,"impl-Debug-for-SpanLinks"],[6415,"impl-Debug-for-SpanEvents"],[6416,"impl-Display-for-SpanEvents"],[6618,"impl-ExtendedQueryHandler-for-PostgresServerHandler"],[6619,"impl-SimpleQueryHandler-for-PostgresServerHandler"],[6625,"impl-Debug-for-MakePostgresServerHandlerBuilderError"],[6626,"impl-Display-for-MakePostgresServerHandlerBuilderError"],[6635,"impl-From%3CString%3E-for-MakePostgresServerHandlerBuilderError"],[6637,"impl-From%3CUninitializedFieldError%3E-for-MakePostgresServerHandlerBuilderError"],[6933,"impl-ToSql-for-PgInterval"],[6934,"impl-FromSql%3C\'a%3E-for-PgInterval"],[6949,"impl-Display-for-PgInterval"],[6950,"impl-Debug-for-PgInterval"]]},\
"session":{"doc":"","t":"DGMLLMLLLLMALLLLLLLLLLLLLLLMMMLLLLLMLLLLLLMLEDGNNDDEGNNMMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Session","SessionRef","alloc","borrow","borrow_mut","catalog","compat","compat_mut","compat_ref","conn_info","conn_info","context","deref","deref_mut","drop","fmt","from","from_subset","get_db_string","init","into","into_request","into_request","is_in_subset","mut_conn_info","new","new_query_context","phantom","ptr","schema","set_catalog","set_schema","set_time_zone","set_user_info","time_zone","time_zone","to_subset","to_subset_unchecked","try_from","try_into","type_id","user_info","user_info","vzip","Channel","ConnInfo","ConnInfoRef","Mysql","Postgres","QueryContext","QueryContextBuilder","QueryContextBuilderError","QueryContextRef","UninitializedField","ValidationError","alloc","alloc","arc","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","channel","client_addr","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","current_catalog","current_catalog","current_catalog","current_catalog","current_schema","current_schema","current_schema","current_schema","current_user","current_user","current_user","current_user","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dialect","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","get_db_string","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","phantom","phantom","ptr","ptr","set_current_user","sql_dialect","sql_dialect","sql_dialect","sql_dialect","time_zone","time_zone","time_zone","time_zone","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with","with_db_name"],"q":[[0,"session"],[44,"session::context"],[215,"async_compat"],[216,"core::fmt"],[217,"core::fmt"],[218,"tonic::request"],[219,"tonic::request"],[220,"core::option"],[221,"common_time::timezone"],[222,"auth"],[223,"core::result"],[224,"core::any"],[225,"core::error"],[226,"arc_swap"],[227,"sqlparser::dialect"],[228,"alloc::boxed"],[229,"derive_builder::error"],[230,"greptime_proto::v1::region"]],"d":["Session for persistent connection such as MySQL, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder for <code>QueryContext</code>.","Error type for QueryContextBuilder","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,30,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,30,30,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,14,14,0,0,0,0,27,27,15,31,22,27,21,27,22,3,14,21,27,22,3,14,21,3,3,21,27,22,3,14,21,27,22,3,14,21,27,22,3,14,21,21,22,21,22,21,22,21,22,21,22,21,22,21,21,27,22,3,14,21,27,22,3,14,14,21,27,22,3,14,14,27,27,22,22,3,3,14,14,21,27,27,27,22,22,3,14,21,27,22,3,14,22,21,27,22,3,14,21,27,22,3,14,21,21,27,27,22,22,3,3,14,14,21,27,22,3,14,3,15,31,15,31,22,21,22,21,22,21,22,21,22,27,22,3,14,21,27,22,3,14,21,27,22,3,14,21,27,22,3,14,21,27,22,3,14,21,27,22,3,14,21,27,22,3,14,22,22],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[2,3],0,0,[4,-1,[]],[4,-1,[]],[4,5],[[2,6],7],[-1,-1,[]],[-1,-2,[],[]],[2,8],[[],4],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[2,3],[[[13,[12]],14],2],[2,15],0,0,0,[[2,8],5],[[2,8],5],[[2,[13,[16]]],5],[[2,17],5],[2,[[13,[16]]]],0,[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[2,17],0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],15],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,15],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],21],[[21,8],21],[22,23],0,0,[[21,8],21],[22,23],0,0,[[21,[24,[[13,[17]]]]],21],[22,[[13,[17]]]],0,0,[[],21],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[4,-1,[]],[14,[[26,[25]]]],[4,5],[4,5],[4,5],[4,5],[4,5],[[14,14],11],[[27,6],7],[[27,6],7],[[22,6],7],[[22,6],7],[[3,6],7],[[3,6],7],[[14,6],7],[[14,6],7],[-1,-1,[]],[28,27],[8,27],[-1,-1,[]],[29,22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,8],[[],4],[[],4],[[],4],[[],4],[[],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[[[13,[12]],14],3],0,0,0,0,[[22,[13,[17]]],5],[[21,[26,[25]]],21],[22,25],0,0,[[21,[13,[16]]],21],[22,[[13,[16]]]],0,0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,23],15],[[[13,[8]]],15]],"c":[],"p":[[3,"Compat",215],[3,"Session",0],[3,"ConnInfo",44],[15,"usize"],[15,"tuple"],[3,"Formatter",216],[6,"Result",216],[3,"String",217],[3,"Request",218],[3,"Request",218],[15,"bool"],[4,"SocketAddr",219],[4,"Option",220],[4,"Channel",44],[6,"QueryContextRef",44],[4,"TimeZone",221],[6,"UserInfoRef",222],[4,"Result",223],[3,"TypeId",224],[8,"Error",225],[3,"QueryContextBuilder",44],[3,"QueryContext",44],[15,"str"],[6,"ArcSwap",226],[8,"Dialect",227],[3,"Box",228],[4,"QueryContextBuilderError",44],[3,"UninitializedFieldError",229],[3,"RegionRequestHeader",230],[6,"SessionRef",0],[6,"ConnInfoRef",44]],"b":[[118,"impl-Debug-for-QueryContextBuilderError"],[119,"impl-Display-for-QueryContextBuilderError"],[120,"impl-Debug-for-QueryContext"],[121,"impl-Display-for-QueryContext"],[122,"impl-Debug-for-ConnInfo"],[123,"impl-Display-for-ConnInfo"],[124,"impl-Display-for-Channel"],[125,"impl-Debug-for-Channel"],[127,"impl-From%3CUninitializedFieldError%3E-for-QueryContextBuilderError"],[128,"impl-From%3CString%3E-for-QueryContextBuilderError"]]},\
"sql":{"doc":"","t":"RRCRAAAAAAANNNNNNNNNNNNNNNNENNNNNNNQQNNNNNNNNNNNNNNNDEDNNNNNNENNNNNNNNNNNNNNNNNENNNNNNNNNDNEENNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNENNNENNNNNNNNNNNNNNNNNNNNNENNNIIIINNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNENDNDNDNDNDNDNDNDNDNDNNDGNDNDNDNDNDNNDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLAAAAAAAAAAAAGGMMRHRHFFFFFFFFFRRRRDAFFAAAAAAFFAMAFFOFFAAFFFFFAAAFAFNNDENNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMENDENDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMRDDDRRDDRLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLMLLLLOLFLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLALLALDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLNNDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNDNNNNNENNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIMLLLLLLLLLLLCLLLLLLLFLLALLLLDLLLLLLLLLLFLLLLLFLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLHFFFF","n":["ENGINE","MAXVALUE","TIME_INDEX","TQL","ast","dialect","error","parser","parsers","statements","util","AggregateExpressionWithFilter","AllOp","And","AnyOp","Array","Array","ArrayAgg","ArrayIndex","ArraySubquery","AtTimeZone","Between","BigDecimal","BigInt","BigNumeric","Binary","BinaryOp","BinaryOperator","BitwiseAnd","BitwiseOr","BitwiseXor","Blob","Bool","Boolean","Boolean","Break","Break","Bytea","Case","Cast","Ceil","Char","CharLargeObject","CharVarying","Character","CharacterLargeObject","CharacterSet","CharacterVarying","Check","Check","Clob","Collate","ColumnDef","ColumnOption","ColumnOptionDef","Comment","CompositeAccess","CompoundIdentifier","Cube","Custom","Custom","DataType","Date","Datetime","Dec","Decimal","Default","DialectSpecific","Divide","DollarQuotedString","Double","DoublePrecision","DoubleQuotedByteStringLiteral","DoubleQuotedString","DuckIntegerDivide","Enum","Eq","EscapedStringLiteral","Exists","Expr","Expr","Extract","Float","Float4","Float8","Floor","ForeignKey","ForeignKey","FulltextOrSpatial","Function","Function","FunctionArg","FunctionArgExpr","Generated","GroupingSets","Gt","GtEq","HexStringLiteral","ILike","Ident","Identifier","InList","InSubquery","InUnnest","Index","Int","Int2","Int4","Int8","Integer","Interval","Interval","IntroducedString","IsDistinctFrom","IsFalse","IsNotDistinctFrom","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","JSON","JsonAccess","Like","ListAgg","Lt","LtEq","MapAccess","MatchAgainst","MediumInt","Minus","Modulo","Multiply","MyIntegerDivide","Named","NationalStringLiteral","Nested","None","NotEq","NotNull","Null","Null","Number","Numeric","Nvarchar","ObjectName","OnUpdate","Or","Overlay","PGBitwiseShiftLeft","PGBitwiseShiftRight","PGBitwiseXor","PGCustomBinaryOperator","PGExp","PGOverlap","PGRegexIMatch","PGRegexMatch","PGRegexNotIMatch","PGRegexNotMatch","Placeholder","Plus","Position","QualifiedWildcard","RawStringLiteral","Real","Regclass","Rollup","SafeCast","Set","SimilarTo","SingleQuotedByteStringLiteral","SingleQuotedString","SmallInt","Spaceship","SqlOption","String","StringConcat","Subquery","Substring","TableConstraint","Text","Time","Timestamp","TimezoneInfo","TinyInt","Trim","TryCast","Tuple","TypedString","Tz","UnQuotedString","UnaryOp","Unique","Unique","Unnamed","UnsignedBigInt","UnsignedInt","UnsignedInt2","UnsignedInt4","UnsignedInt8","UnsignedInteger","UnsignedMediumInt","UnsignedSmallInt","UnsignedTinyInt","Uuid","Value","Value","Varbinary","Varchar","Visit","VisitMut","Visitor","VisitorMut","Wildcard","WithTimeZone","WithoutTimeZone","Xor","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collation","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distinct","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","new","option","options","order_by","over","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","post_visit_expr","post_visit_expr","post_visit_relation","post_visit_relation","post_visit_statement","post_visit_statement","post_visit_table_factor","post_visit_table_factor","pre_visit_expr","pre_visit_expr","pre_visit_relation","pre_visit_relation","pre_visit_statement","pre_visit_statement","pre_visit_table_factor","pre_visit_table_factor","quote_style","special","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","verify_duration","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit_expressions_mut","visit_statements_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_quote","foreign_table","generated_as","generation_expr","is_primary","on_delete","on_update","referred_columns","sequence_options","array_expr","collation","column","columns","compare_op","compare_op","conditions","data_type","data_type","data_type","data_type","else_result","escape_char","escape_char","escape_char","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","field","field","field","filter","high","in","indexes","introducer","key","keys","left","left","left","left","list","low","match_value","negated","negated","negated","negated","negated","negated","negated","negated","obj","op","op","operand","operator","opt_search_modifier","overlay_for","overlay_from","overlay_what","pattern","pattern","pattern","results","right","right","right","right","special","subquery","subquery","substring_for","substring_from","time_zone","timestamp","trim_what","trim_where","value","value","arg","name","columns","columns","columns","columns","display_as_key","expr","foreign_table","fulltext","index_type","index_type_display","is_primary","name","name","name","name","on_delete","on_update","opt_index_name","referred_columns","Dialect","GreptimeDbDialect","MySqlDialect","PostgreSqlDialect","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get_next_precedence","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is","is_delimited_identifier_start","is_delimited_identifier_start","is_delimited_identifier_start","is_identifier_part","is_identifier_part","is_identifier_part","is_identifier_part","is_identifier_start","is_identifier_start","is_identifier_start","is_identifier_start","is_in_subset","is_in_subset","is_in_subset","is_proper_identifier_inside_quotes","parse_infix","parse_infix","parse_prefix","parse_statement","parse_statement","supports_filter_during_aggregation","supports_filter_during_aggregation","supports_filter_during_aggregation","supports_group_by_expr","supports_group_by_expr","supports_substring_from_for_expr","supports_within_after_array_aggregation","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ColumnTypeMismatch","ColumnTypeMismatchSnafu","ConvertSqlValue","ConvertSqlValueSnafu","ConvertToDfStatement","ConvertToDfStatementSnafu","ConvertToGrpcDataType","ConvertToGrpcDataTypeSnafu","ConvertValue","ConvertValueSnafu","Err","Error","InvalidCast","InvalidCastSnafu","InvalidColumnOption","InvalidColumnOptionSnafu","InvalidDatabaseName","InvalidDatabaseNameSnafu","InvalidDefault","InvalidDefaultSnafu","InvalidSql","InvalidSqlSnafu","InvalidSqlValue","InvalidSqlValueSnafu","InvalidTableName","InvalidTableNameSnafu","InvalidTableOption","InvalidTableOptionSnafu","InvalidTimeIndex","InvalidTimeIndexSnafu","MissingTimeIndex","MissingTimeIndexSnafu","Ok","ParseSqlValue","ParseSqlValueSnafu","Result","SerializeColumnDefaultConstraint","SerializeColumnDefaultConstraintSnafu","SqlTypeNotSupported","SqlTypeNotSupportedSnafu","Syntax","SyntaxSnafu","TimestampOverflow","TimestampOverflowSnafu","Unexpected","UnexpectedSnafu","Unsupported","UnsupportedDefaultValue","UnsupportedDefaultValueSnafu","UnsupportedSnafu","actual","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column_name","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","expect","expected","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","keyword","msg","msg","msg","msg","name","name","name","next","source","sql","sql","sql_value","statement","status_code","t","target_unit","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","column","column_name","column_name","datatype","datatype","error","error","expect","expected","expr","key","keyword","location","location","location","location","location","location","location","location","location","msg","msg","msg","msg","name","name","name","source","source","source","source","sql","sql","sql_value","statement","t","target_unit","timestamp","value","value","value","ParserContext","borrow","borrow_mut","canonicalize_identifier","canonicalize_object_name","compat","compat_mut","compat_ref","consume_token","create_with_dialect","deref","deref_mut","drop","expected","from","from_subset","init","into","into_request","into_request","is_in_subset","matches_keyword","parse_alter","parse_alter_table","parse_column","parse_column_def","parse_columns","parse_comma_separated","parse_copy","parse_copy_table","parse_copy_table_from","parse_copy_to","parse_create","parse_create_database","parse_create_external_table","parse_create_table","parse_delete","parse_describe","parse_describe_table","parse_drop","parse_explain","parse_function","parse_insert","parse_optional_column_option","parse_optional_table_constraint","parse_partition_entry","parse_partitions","parse_query","parse_show","parse_show_create_table","parse_show_databases","parse_show_tables","parse_statement","parse_string_or_number","parse_table_engine","parse_tql","parse_tql_analyze","parse_tql_eval","parse_tql_explain","parse_tql_query","parse_truncate","parse_value_list","parser","parser_copy_database","peek_token_as_string","sql","to_subset","to_subset_unchecked","try_from","try_into","type_id","unsupported","vzip","alter_parser","copy_parser","create_parser","delete_parser","describe_parser","drop_parser","explain_parser","insert_parser","query_parser","show_parser","tql_parser","truncate_parser","Connection","With","base","base","ENGINE","LESS","MAXVALUE","THAN","ensure_partition_columns_defined","ensure_partition_names_no_duplicate","ensure_value_list_len_matches_columns","ensure_value_lists_bounded_by_maxvalue","ensure_value_lists_strictly_increased","get_real_timestamp_type","validate_create","validate_partitions","validate_time_index","EVAL","EVALUATE","EXPLAIN","TQL","OptionMap","alter","column_def_to_schema","concrete_data_type_to_sql_data_type","copy","create","delete","describe","drop","explain","get_data_type_by_alias_name","has_primary_key_option","insert","map","option_map","parse_column_default_constraint","parse_hex_string","parse_number_to_value","parse_sql_number","parse_string_to_value","query","show","sql_column_def_to_grpc_column_def","sql_data_type_to_concrete_data_type","sql_location_to_grpc_add_column_location","sql_number_to_value","sql_value_to_value","statement","tql","transform","transform_statements","truncate","value_to_sql_value","AddColumn","AddConstraint","AlterTable","AlterTableOperation","DropColumn","RenameTable","alter_operation","alter_operation","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","table_name","table_name","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","visit","visit","visit","visit","vzip","vzip","column_def","location","name","new_table_name","Copy","CopyDatabase","CopyDatabaseArgument","CopyTable","CopyTable","CopyTableArgument","From","To","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","connection","connection","database_name","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","location","location","table_name","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","with","with","COMMA_SEP","CreateDatabase","CreateExternalTable","CreateTable","INDENT","LINE_SEP","PartitionEntry","Partitions","TIME_INDEX","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","column_list","columns","columns","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","constraints","constraints","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","engine","engine","entries","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_constraints","format_if_not_exists","format_indent","format_list_comma","format_list_indent","format_options","format_partitions","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","if_not_exists","if_not_exists","if_not_exists","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_time_index","name","name","name","name","options","options","partitions","set_quote","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value_list","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","vzip","Delete","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","DescribeTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","name","name","new","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","DropTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","new","table_name","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","Explain","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","into_request","is_in_subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","visit","visit","vzip","Insert","borrow","borrow_mut","can_extract_values","clone","clone_into","columns","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","into_request","is_in_subset","parse_fail","query_body","sql_exprs_to_values","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","values_body","visit","visit","vzip","OptionMap","as_ref","borrow","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_iter","from_ref","from_subset","get","init","insert","into","into_request","into_request","is_in_subset","map","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","visit","visit_mut","vzip","Query","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from_ref","from_subset","init","inner","into","into_request","into_request","is_in_subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","visit","visit","vzip","All","Like","ShowCreateTable","ShowDatabases","ShowKind","ShowTables","Where","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","database","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","full","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","kind","new","table_name","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","Alter","Copy","CreateDatabase","CreateExternalTable","CreateTable","Delete","DescribeTable","DropTable","Explain","Hint","Insert","Query","ShowCreateTable","ShowDatabases","ShowTables","Statement","Tql","TruncateTable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","comment","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_code","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","prefix","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","visit","visit","vzip","vzip","Analyze","Eval","Explain","Tql","TqlAnalyze","TqlEval","TqlExplain","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","end","end","end","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","query","query","query","start","start","start","step","step","step","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","RULES","TransformRule","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","get_data_type_by_alias_name","init","into","into_request","into_request","is_in_subset","to_subset","to_subset_unchecked","transform_statements","try_from","try_into","type_alias","type_id","visit_expr","visit_statement","vzip","TypeAliasTransformRule","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_data_type_by_alias_name","init","into","into_request","into_request","is_in_subset","replace_type_alias","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit_expr","visit_statement","vzip","TruncateTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","new","table_name","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","SQL_SECRET_PATTERNS","format_raw_object_name","parse_option_string","redact_sql_secrets","to_lowercase_options_map"],"q":[[0,"sql"],[11,"sql::ast"],[860,"sql::ast::ColumnOption"],[868,"sql::ast::Expr"],[957,"sql::ast::FunctionArg"],[959,"sql::ast::TableConstraint"],[978,"sql::dialect"],[1078,"sql::error"],[1845,"sql::error::Error"],[1889,"sql::parser"],[1962,"sql::parsers"],[1974,"sql::parsers::copy_parser"],[1978,"sql::parsers::create_parser"],[1991,"sql::parsers::tql_parser"],[1995,"sql::statements"],[2028,"sql::statements::alter"],[2105,"sql::statements::alter::AlterTableOperation"],[2109,"sql::statements::copy"],[2257,"sql::statements::create"],[2466,"sql::statements::delete"],[2501,"sql::statements::describe"],[2538,"sql::statements::drop"],[2575,"sql::statements::explain"],[2612,"sql::statements::insert"],[2655,"sql::statements::option_map"],[2698,"sql::statements::query"],[2736,"sql::statements::show"],[2883,"sql::statements::statement"],[2968,"sql::statements::tql"],[3119,"sql::statements::transform"],[3149,"sql::statements::transform::type_alias"],[3175,"sql::statements::truncate"],[3212,"sql::util"],[3217,"core::cmp"],[3218,"async_compat"],[3219,"core::fmt"],[3220,"core::fmt"],[3221,"sqlparser::parser"],[3222,"core::hash"],[3223,"core::marker"],[3224,"core::hash"],[3225,"tonic::request"],[3226,"core::convert"],[3227,"core::option"],[3228,"core::ops::control_flow"],[3229,"sqlparser::ast"],[3230,"sqlparser::ast::query"],[3231,"core::any"],[3232,"sqlparser::parser"],[3233,"core::fmt"],[3234,"core::iter::adapters::peekable"],[3235,"core::any"],[3236,"snafu::backtrace_inert"],[3237,"datatypes::data_type"],[3238,"common_time::timestamp"],[3239,"common_time::timestamp"],[3240,"core::clone"],[3241,"alloc::vec"],[3242,"core::fmt"],[3243,"common_error::status_code"],[3244,"sqlparser::tokenizer"],[3245,"sqlparser::keywords"],[3246,"std::collections::hash::map"],[3247,"sqlparser::tokenizer"],[3248,"datatypes::schema::constraint"],[3249,"core::str::traits"],[3250,"greptime_proto::v1"],[3251,"common_query"],[3252,"greptime_proto::v1"],[3253,"sqlparser::ast::query"]],"d":["","","","","","","","","","","","Aggregate function with filter","ALL operation e.g. <code>foo &gt; ALL(bar)</code>, comparison operator is …","And, e.g. <code>a AND b</code>","Any operation e.g. <code>foo &gt; ANY(bar)</code>, comparison operator is …","Arrays","An array expression e.g. <code>ARRAY[1, 2]</code>","The <code>ARRAY_AGG</code> function <code>SELECT ARRAY_AGG(... ORDER BY ...)</code>","An array index expression e.g. <code>(ARRAY[1, 2])[1]</code> or …","An array subquery constructor, e.g. …","AT a timestamp to a different timezone e.g. …","<code>&lt;expr&gt; [ NOT ] BETWEEN &lt;low&gt; AND &lt;high&gt;</code>","This is alias for <code>BigNumeric</code> type used in BigQuery","Big integer with optional display width e.g. BIGINT or …","BigNumeric type used in BigQuery","Fixed-length binary type with optional length e.g.  …","Binary operation e.g. <code>1 + 1</code> or <code>foo &gt; bar</code>","Binary operators","Bitwise and, e.g. <code>a &amp; b</code>","Bitwise or, e.g. <code>a | b</code>","Bitwise XOR, e.g. <code>a ^ b</code>","Large binary object with optional length e.g. BLOB, …","Bool as alias for Boolean in postgresql","Boolean","Boolean value true or false","Type returned when the recursion returns early.","Type returned when the recursion returns early.","Bytea","…","CAST an expression to a different data type e.g. …","","Fixed-length char type e.g. CHAR(10)","Large character object with optional length e.g. CHAR …","Char varying type e.g. CHAR VARYING(10)","Fixed-length character type e.g. CHARACTER(10)","Large character object with optional length e.g. CHARACTER …","","Character varying type e.g. CHARACTER VARYING(10)","<code>[ CONSTRAINT &lt;name&gt; ] CHECK (&lt;expr&gt;)</code>","<code>CHECK (&lt;expr&gt;)</code>","Large character object with optional length e.g. CLOB, …","<code>expr COLLATE collation</code>","SQL column definition","<code>ColumnOption</code>s are modifiers that follow a column …","An optionally-named <code>ColumnOption</code>: …","","CompositeAccess (postgres) eg: SELECT (information_schema._…","Multi-part identifier, e.g. <code>table_alias.column</code> or …","The <code>CUBE</code> expr.","Custom type such as enums","Support for custom operators (built by parsers outside …","SQL data types","Date","Datetime with optional time precision e.g. MySQL.","Dec type with optional precision and scale e.g. DEC(10,2), …","Decimal type with optional precision and scale e.g. …","<code>DEFAULT &lt;restricted-expr&gt;</code>","Dialect-specific options, such as:","Divide, e.g. <code>a / b</code>","","Double","Double PRECISION e.g. standard, postgresql","B“string value“","","Integer division operator <code>//</code> in DuckDB","Enums","Equal, e.g. <code>a = b</code>","e’string value’ (postgres extension) See Postgres docs …","An exists expression <code>[ NOT ] EXISTS(SELECT ...)</code>, used in …","An SQL expression of any type.","","","Floating point with optional precision e.g. FLOAT(8)","Float4 as alias for Real in postgresql","Float8 as alias for Double in postgresql","","A referential integrity constraint (…","A referential integrity constraint (…","MySQLs fulltext definition. Since the <code>SPATIAL</code> definition …","A function call","Scalar function call e.g. <code>LEFT(foo, 5)</code>","","","<code>Generated</code>s are modifiers that follow a column definition …","The <code>GROUPING SETS</code> expr.","Greater than, e.g. <code>a &gt; b</code>","Greater equal, e.g. <code>a &gt;= b</code>","X’hex value’","ILIKE (case-insensitive LIKE)","An identifier, decomposed into its value or character data …","Identifier e.g. table name or column name","<code>[ NOT ] IN (val1, val2, ...)</code>","<code>[ NOT ] IN (SELECT ...)</code>","<code>[ NOT ] IN UNNEST(array_expression)</code>","MySQLs index definition for index creation. Not present on …","Int with optional display width e.g. INT or INT(11)","Int2 as alias for SmallInt in postgresql Note: Int2 mean 2 …","Int4 as alias for Integer in postgresql Note: Int4 mean 4 …","Int8 as alias for Bigint in postgresql Note: Int8 mean 8 …","Integer with optional display width e.g. INTEGER or …","Interval","An interval expression e.g. <code>INTERVAL &#39;1&#39; YEAR</code>","…","<code>IS DISTINCT FROM</code> operator","<code>IS FALSE</code> operator","<code>IS NOT DISTINCT FROM</code> operator","<code>IS NOT FALSE</code> operator","<code>IS NOT NULL</code> operator","<code>IS NOT TRUE</code> operator","<code>IS NOT UNKNOWN</code> operator","<code>IS NULL</code> operator","<code>IS TRUE</code> operator","<code>IS UNKNOWN</code> operator","JSON type used in BigQuery","JSON access (postgres)  eg: data-&gt;‘tags’","LIKE","The <code>LISTAGG</code> function …","Less than, e.g. <code>a &lt; b</code>","Less equal, e.g. <code>a &lt;= b</code>","Access a map-like object by field (e.g. <code>column[&#39;field&#39;]</code> or …","<code>MySQL</code> specific text search function (1).","MySQL medium integer (1) with optional display width e.g. …","Minus, e.g. <code>a - b</code>","Modulo, e.g. <code>a % b</code>","Multiply, e.g. <code>a * b</code>","MySQL <code>DIV</code> integer division","","N’string value’","Nested expression e.g. <code>(foo &gt; bar)</code> or <code>(1)</code>","No information about time zone. E.g., TIMESTAMP","Not equal, e.g. <code>a &lt;&gt; b</code>","<code>NOT NULL</code>","<code>NULL</code>","<code>NULL</code> value","Numeric literal","Numeric type with optional precision and scale e.g. …","Variable-length character type e.g. NVARCHAR(10)","A name of a table, view, custom type, etc., possibly …","","Or, e.g. <code>a OR b</code>","","Bitwise shift left, e.g. <code>a &lt;&lt; b</code> (PostgreSQL-specific)","Bitwise shift right, e.g. <code>a &gt;&gt; b</code> (PostgreSQL-specific)","Bitwise XOR, e.g. <code>a # b</code> (PostgreSQL-specific)","PostgreSQL-specific custom operator.","Exponent, e.g. <code>a ^ b</code> (PostgreSQL-specific)","Overlap operator, e.g. <code>a &amp;&amp; b</code> (PostgreSQL-specific)","String matches regular expression (case insensitively), …","String matches regular expression (case sensitively), e.g. …","String does not match regular expression (case …","String does not match regular expression (case …","<code>?</code> or <code>$</code> Prepared statement arg placeholder","Plus, e.g. <code>a + b</code>","","Qualified wildcard, e.g. <code>alias.*</code> or <code>schema.table.*</code>.","R’string value’ or r’string value’ or r“string …","Floating point e.g. REAL","Regclass used in postgresql serial","The <code>ROLLUP</code> expr.","SAFE_CAST an expression to a different data type e.g. …","Set","SIMILAR TO regex","B’string value’","‘string value’","Small integer with optional display width e.g. SMALLINT or …","Spaceship, e.g. <code>a &lt;=&gt; b</code>","","String","String/Array Concat operator, e.g. <code>a || b</code>","A parenthesized subquery <code>(SELECT ...)</code>, used in expression …","","A table-level constraint, specified in a <code>CREATE TABLE</code> or an","Text","Time with optional time precision and time zone …","Timestamp with optional time precision and time zone …","Timestamp and Time data types information about TimeZone …","Tiny integer with optional display width e.g. TINYINT or …","","TRY_CAST an expression to a different data type e.g. …","ROW / TUPLE a single value, such as <code>SELECT (1, 2)</code>","A constant of form <code>&lt;data_type&gt; &#39;value&#39;</code>. This can represent …","Postgresql specific <code>WITH TIME ZONE</code> formatting, for both …","Add support of snowflake field:key - key should be a value","Unary operation e.g. <code>NOT foo</code>","<code>[ CONSTRAINT &lt;name&gt; ] { PRIMARY KEY | UNIQUE } (&lt;columns&gt;)</code>","<code>{ PRIMARY KEY | UNIQUE }</code>","","Unsigned big integer with optional display width e.g. …","Unsigned int with optional display width e.g. INT UNSIGNED …","Unsigned Int2 with optional display width e.g. INT2 …","Unsigned int4 with optional display width e.g. INT4 …","Unsigned Int8 with optional display width e.g. INT8 …","Unsigned integer with optional display width e.g. INTGER …","Unsigned medium integer (1) with optional display width …","Unsigned small integer with optional display width e.g. …","Unsigned tiny integer with optional display width e.g. …","Uuid type","Primitive SQL values such as number and string","A literal value, such as string, number, date or NULL","Variable-length binary with optional length type e.g. …","Variable-length character type e.g. VARCHAR(10)","A type that can be visited by a <code>Visitor</code>. See <code>Visitor</code> for …","A type that can be visited by a <code>VisitorMut</code>. See <code>VisitorMut</code> …","A visitor that can be used to walk an AST tree.","A visitor that can be used to mutate an AST tree.","An unqualified <code>*</code>","Temporal type ‘WITH TIME ZONE’. E.g., TIMESTAMP WITH …","Temporal type ‘WITHOUT TIME ZONE’. E.g., TIME WITHOUT …","XOR, e.g. <code>a XOR b</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new identifier with the given value and no quotes.","","","","","","","","","","","","","","","","","","","","Invoked for any expressions that appear in the AST","Invoked for any expressions that appear in the AST","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any statements that appear in the AST after …","Invoked for any statements that appear in the AST after …","Invoked for any table factors that appear in the AST after …","Invoked for any table factors that appear in the AST after …","Invoked for any expressions that appear in the AST before …","Invoked for any expressions that appear in the AST before …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any statements that appear in the AST before …","Invoked for any statements that appear in the AST before …","Invoked for any table factors that appear in the AST …","Invoked for any table factors that appear in the AST …","The starting quote if any. Valid quote characters are the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value of the identifier without quotes.","","check this value is a valid duration string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invokes the provided closure iteratively with a mutable …","Invokes the provided closure on all statements (e.g. <code>SELECT</code>…","","","","","","","","","","","","","","","","Create a new quoted identifier with the given quote and …","","","","","","","","","","","","<code>(&lt;col&gt;, &lt;col&gt;, ...)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>&lt;expr&gt;</code>.","","","","","","","","","","","","","","<code>&lt;search modifier&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Referred column identifier list.","Referred column identifier list.","Whether this index starts with KEY (true) or INDEX …","","","Whether this is a <code>FULLTEXT</code> (true) or <code>SPATIAL</code> (false) …","Optional index type.","Whether the type is followed by the keyword <code>KEY</code>, <code>INDEX</code>, or …","Whether this is a <code>PRIMARY KEY</code> or just a <code>UNIQUE</code> constraint","","","","Index name.","","","Optional index name.","","Encapsulates the differences between SQL implementations.","GreptimeDb dialect","MySQL","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Dialect-specific precedence override","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Determine if a character starts a quoted identifier. The …","","Determine if a character is a valid unquoted identifier …","","","","Determine if a character is a valid start character for an …","","","","","","","Determine if quoted characters are proper for identifier","Dialect-specific infix parser override","","Dialect-specific prefix parser override","Dialect-specific statement parser override","","","Does the dialect support <code>FILTER (WHERE expr)</code> for aggregate …","","Returns true if the dialects supports …","","Returns true if the dialect supports …","Returns true if the dialect supports …","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ColumnTypeMismatch</code> …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::ConvertToDfStatement</code> …","","SNAFU context selector for the <code>Error::ConvertToGrpcDataType</code>…","","SNAFU context selector for the <code>Error::ConvertValue</code> variant","Contains the error value","SQL parser errors.","","SNAFU context selector for the <code>Error::InvalidCast</code> variant","","SNAFU context selector for the <code>Error::InvalidColumnOption</code> …","","SNAFU context selector for the <code>Error::InvalidDatabaseName</code> …","","SNAFU context selector for the <code>Error::InvalidDefault</code> …","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidSqlValue</code> …","","SNAFU context selector for the <code>Error::InvalidTableName</code> …","","SNAFU context selector for the <code>Error::InvalidTableOption</code> …","","SNAFU context selector for the <code>Error::InvalidTimeIndex</code> …","","SNAFU context selector for the <code>Error::MissingTimeIndex</code> …","Contains the success value","","SNAFU context selector for the <code>Error::ParseSqlValue</code> variant","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::SqlTypeNotSupported</code> …","","SNAFU context selector for the <code>Error::Syntax</code> variant","","SNAFU context selector for the <code>Error::TimestampOverflow</code> …","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderepTime SQL parser context, a simple wrapper for …","","","Canonicalize the identifier to lowercase if it’s not …","Like [canonicalize_identifier] but for ObjectName.","","","","","Parses SQL with given dialect","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Parse a comma-separated list wrapped by “()”, and of …","","","","","","","","","","","","","","","","","","","","Parses select and it’s variants.","Parses SHOW statements todo(hl) support <code>show settings</code>/…","Parse SHOW CREATE TABLE statement","Parses <code>SHOW DATABASES</code> statement.","","Parses parser context to a set of statements.","","Parses the set of valid formats","","","","","","","","","","","","","","","","","Raises an “unsupported statement” error.","","","","","","","","","","","","","","","","","","","","","","Ensure that all columns used in “PARTITION BY RANGE …","Ensure that partition names do not duplicate.","Ensure that value list’s length matches the column list.","Ensure that partition ranges fully cover all values.","Ensure that value lists of partitions are strictly …","","","","","","","","","Options hashmap. Because the trait <code>Visit</code> and <code>VisitMut</code> is …","","Create a <code>ColumnSchema</code> from <code>ColumnDef</code>.","","","","","","","","","Return true when the <code>ColumnDef</code> options contain primary key","","","","","","","","","","","Convert <code>ColumnDef</code> in sqlparser to <code>ColumnDef</code> in gRPC proto.","","","Convert a sql value into datatype’s value","","","","","Transform statements by rules","","","<code>ADD [ COLUMN ] &lt;column_def&gt; [location]</code>","<code>ADD &lt;table_constraint&gt;</code>","","","<code>DROP COLUMN &lt;name&gt;</code>","<code>RENAME &lt;new_table_name&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Copy tbl [To|From] ‘location’.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time index name, used in table constraints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Create if not exists","Create if not exists","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Table name","","","Table name","Table options in <code>WITH</code>.","Table options in <code>WITH</code>. All keys are lowercase.","","set quotes to all Idents from column list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","SQL structure for <code>DESCRIBE TABLE</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Creates a statement for <code>DESCRIBE TABLE</code>","","","","","","","","","","DROP TABLE statement.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Creates a statement for <code>DROP TABLE</code>","","","","","","","","","","","","Explain statement.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns true when the insert statement can extract literal …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Extracts the literal insert statement body if possible","","","","Options hashmap. Because the trait <code>Visit</code> and <code>VisitMut</code> is …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Query statement instance.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","SQL structure for <code>SHOW CREATE TABLE</code>.","SQL structure for <code>SHOW DATABASES</code>.","Show kind for SQL expressions like <code>SHOW DATABASE</code> or …","SQL structure for <code>SHOW TABLES</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Creates a statement for <code>SHOW DATABASES</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ALTER TABLE","","","","CREATE TABLE","","","","","Comment hints from SQL. It’ll be enabled when using …","","","","","","Tokens parsed by <code>DFParser</code> are converted into these values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","TQL ANALYZE (like SQL ANALYZE): executes the plan and …","","TQL EXPLAIN (like SQL EXPLAIN): doesn’t execute the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TransformRule registry","Transform rule to transform statement or expr","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Transform statements by rules","","","","","Visit an Expr","Visit a Statement","","SQL data type alias transformer:","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","TRUNCATE TABLE statement.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Creates a statement for <code>TRUNCATE TABLE</code>","","","","","","","","","","","","","Format an ObjectName without any quote of its idents.","","Use regex to match and replace common seen secret values …","Converts options to HashMap&lt;String, String&gt;. All keys are …"],"i":[0,0,0,0,0,0,0,0,0,0,0,11,11,7,11,1,11,11,11,11,11,11,1,1,1,1,11,0,7,7,7,1,1,1,8,41,42,1,11,11,11,1,1,1,1,1,6,1,3,6,1,11,0,0,0,6,11,11,11,1,7,0,1,1,1,1,6,6,7,8,1,1,8,8,7,1,7,8,11,0,12,11,1,1,1,11,3,6,3,0,11,0,0,6,11,7,7,8,11,0,11,11,11,11,3,1,1,1,1,1,1,11,11,11,11,11,11,11,11,11,11,11,11,1,11,11,11,7,7,11,11,1,7,7,7,7,13,8,11,2,7,6,6,8,8,1,1,0,6,7,11,7,7,7,7,7,7,7,7,7,7,8,7,11,12,8,1,1,11,11,1,11,8,8,1,7,0,1,7,11,11,0,1,1,1,0,1,11,11,11,11,2,8,11,3,6,13,1,1,1,1,1,1,1,1,1,1,0,11,1,1,0,0,0,0,12,2,2,7,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,1,2,3,4,5,6,7,8,9,9,10,11,12,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,5,14,15,9,5,4,14,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,9,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,9,15,8,139,43,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,9,140,141,141,142,140,140,140,141,143,144,145,146,147,148,149,150,151,152,153,149,154,155,156,157,158,159,143,160,154,155,156,161,150,151,152,162,163,164,165,166,167,168,144,169,162,163,164,169,160,165,170,171,157,145,172,173,147,148,158,160,146,158,159,143,160,154,155,156,174,170,173,161,149,172,146,168,168,168,154,155,156,149,172,173,147,148,166,159,174,166,166,175,175,167,167,171,153,176,176,177,178,179,180,179,181,178,180,179,180,177,177,178,181,179,178,178,180,178,0,0,0,0,46,48,49,46,48,49,46,46,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,46,48,49,52,46,48,49,46,48,49,46,46,48,48,49,49,52,46,52,48,52,46,48,49,52,46,48,49,46,48,49,52,52,48,52,52,49,46,52,49,52,49,52,52,46,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,46,48,49,55,0,55,0,55,0,55,0,55,0,93,0,55,0,55,0,55,0,55,0,55,0,55,0,55,0,55,0,55,0,55,0,93,55,0,0,55,0,55,0,55,0,55,0,55,0,55,55,0,0,81,67,55,55,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,60,61,62,63,64,65,66,67,69,70,71,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,83,60,67,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,84,77,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,67,81,60,59,60,61,62,63,64,65,66,67,69,70,71,72,73,76,77,78,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,59,59,81,81,60,60,82,82,61,61,62,62,63,63,64,64,65,65,66,66,67,67,69,69,70,70,83,83,84,84,71,71,85,85,86,86,72,72,73,73,76,76,77,77,78,78,55,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,71,59,62,63,64,66,64,69,70,55,55,59,81,84,76,55,65,73,73,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,72,77,78,59,81,60,82,61,62,63,64,65,66,67,69,70,83,84,71,85,86,72,73,76,77,78,55,182,183,184,185,183,186,187,182,188,183,182,185,189,190,188,184,186,189,191,192,193,187,194,195,196,197,198,197,199,200,184,186,191,192,190,182,186,193,201,202,202,203,187,194,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,0,0,112,112,96,96,96,112,96,112,96,112,96,112,96,112,96,112,96,112,96,112,96,112,96,112,96,112,96,96,96,96,112,112,112,112,96,112,96,112,96,112,96,112,96,112,96,112,96,96,112,112,96,112,96,96,96,96,112,96,112,96,112,96,112,96,112,96,112,96,96,112,112,96,112,206,206,207,208,0,113,0,0,113,0,97,97,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,103,98,103,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,113,113,113,97,97,97,97,103,103,103,103,98,98,98,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,113,97,97,103,103,98,98,113,97,103,98,103,98,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,97,103,98,113,113,97,97,103,103,98,98,113,97,103,98,103,98,0,0,0,0,0,0,0,0,0,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,101,105,115,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,115,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,115,101,105,101,100,114,115,105,105,105,105,101,101,101,101,100,100,100,100,114,114,114,114,115,115,115,115,105,105,101,101,100,100,114,115,105,105,0,0,0,105,105,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,114,115,105,101,100,114,115,105,101,100,114,115,105,105,101,101,100,100,114,114,115,115,105,101,100,114,115,0,105,100,114,115,105,115,105,101,105,105,101,100,114,115,105,101,100,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,105,101,100,114,115,100,105,105,101,101,100,100,114,114,115,115,105,101,100,114,115,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,120,0,120,120,120,120,120,120,120,120,120,120,120,120,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,122,122,0,122,0,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,125,125,0,0,0,0,125,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,127,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,125,125,125,126,126,126,126,127,127,127,127,128,128,128,128,125,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,127,125,126,127,128,125,126,127,128,125,125,126,126,127,127,128,128,125,126,127,128,126,127,126,128,125,126,127,128,125,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,125,125,126,126,127,127,128,128,125,126,127,128,92,92,92,92,92,92,92,92,92,0,92,92,92,92,92,0,92,92,92,129,92,129,92,129,92,129,129,92,129,92,129,92,129,92,129,92,129,92,129,92,129,92,92,92,92,129,129,129,129,129,92,129,92,129,92,129,92,129,92,129,92,129,92,92,129,129,92,129,129,92,129,92,129,92,129,92,129,92,129,92,129,92,92,92,129,130,130,130,0,0,0,0,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,131,132,133,130,131,132,133,130,130,130,130,131,131,131,131,132,132,132,132,133,133,133,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,130,131,131,132,132,133,133,130,131,132,133,131,132,133,131,132,133,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,130,131,131,132,132,133,133,130,131,132,133,0,0,134,134,134,134,134,134,134,134,134,134,134,134,0,134,134,134,134,134,134,134,0,134,134,0,134,135,135,134,0,137,137,137,137,137,137,137,137,137,137,0,137,137,137,137,137,0,137,137,137,137,137,137,137,137,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[1,1],17],[[2,2],17],[[3,3],17],[[4,4],17],[[5,5],17],[[6,6],17],[[7,7],17],[[8,8],17],[[9,9],17],[[10,10],17],[[11,11],17],[[12,12],17],[[13,13],17],[[14,14],17],[[15,15],17],0,[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],0,[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[[1,1],20],[[2,2],20],[[3,3],20],[[4,4],20],[[5,5],20],[[6,6],20],[[7,7],20],[[8,8],20],[[9,9],20],[[10,10],20],[[11,11],20],[[12,12],20],[[13,13],20],[[14,14],20],[[15,15],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[1,21],[[23,[16,22]]]],[[1,21],[[23,[16,22]]]],[[2,21],[[23,[16,22]]]],[[2,21],[[23,[16,22]]]],[[3,21],[[23,[16,22]]]],[[3,21],[[23,[16,22]]]],[[4,21],[[23,[16,22]]]],[[4,21],[[23,[16,22]]]],[[5,21],[[23,[16,22]]]],[[5,21],[[23,[16,22]]]],[[6,21],[[23,[16,22]]]],[[6,21],[[23,[16,22]]]],[[7,21],[[23,[16,22]]]],[[7,21],[[23,[16,22]]]],[[8,21],[[23,[16,22]]]],[[8,21],[[23,[16,22]]]],[[9,21],[[23,[16,22]]]],[[9,21],[[23,[16,22]]]],[[10,21],[[23,[16,22]]]],[[10,21],[[23,[16,22]]]],[[11,21],[[23,[16,22]]]],[[11,21],[[23,[16,22]]]],[[12,21],[[23,[16,22]]]],[[12,21],[[23,[16,22]]]],[[13,21],[[23,[16,22]]]],[[13,21],[[23,[16,22]]]],[[14,21],[[23,[16,22]]]],[[14,21],[[23,[16,22]]]],[[15,21],[[23,[16,22]]]],[[15,21],[[23,[16,22]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,9],[-1,-1,[]],[-1,-1,[]],[25,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[-1,-2],26,[27,28],29],[[1,-1],16,30],[[2,-1],16,30],[[3,-1],16,30],[[4,-1],16,30],[[5,-1],16,30],[[6,-1],16,30],[[7,-1],16,30],[[8,-1],16,30],[[9,-1],16,30],[[10,-1],16,30],[[11,-1],16,30],[[12,-1],16,30],[[13,-1],16,30],[[14,-1],16,30],[[15,-1],16,30],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,0,[-1,9,[[34,[33]]]],0,0,0,0,[[1,1],[[35,[17]]]],[[2,2],[[35,[17]]]],[[3,3],[[35,[17]]]],[[4,4],[[35,[17]]]],[[5,5],[[35,[17]]]],[[6,6],[[35,[17]]]],[[7,7],[[35,[17]]]],[[8,8],[[35,[17]]]],[[9,9],[[35,[17]]]],[[10,10],[[35,[17]]]],[[11,11],[[35,[17]]]],[[12,12],[[35,[17]]]],[[13,13],[[35,[17]]]],[[14,14],[[35,[17]]]],[[15,15],[[35,[17]]]],[[-1,11],[[36,[16]]],[]],[[-1,11],[[36,[16]]],[]],[[-1,10],[[36,[16]]],[]],[[-1,10],[[36,[16]]],[]],[[-1,37],[[36,[16]]],[]],[[-1,37],[[36,[16]]],[]],[[-1,38],[[36,[16]]],[]],[[-1,38],[[36,[16]]],[]],[[-1,11],[[36,[16]]],[]],[[-1,11],[[36,[16]]],[]],[[-1,10],[[36,[16]]],[]],[[-1,10],[[36,[16]]],[]],[[-1,37],[[36,[16]]],[]],[[-1,37],[[36,[16]]],[]],[[-1,38],[[36,[16]]],[]],[[-1,38],[[36,[16]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],0,0,[8,[[23,[16,40]]]],[[-1,-2],[[36,[16]]],[],41],[[-1,-2],[[36,[16]]],[],42],[[1,-1],[[36,[16]]],42],[[1,-1],[[36,[16]]],41],[[2,-1],[[36,[16]]],41],[[2,-1],[[36,[16]]],42],[[3,-1],[[36,[16]]],41],[[3,-1],[[36,[16]]],42],[[4,-1],[[36,[16]]],42],[[4,-1],[[36,[16]]],41],[[5,-1],[[36,[16]]],42],[[5,-1],[[36,[16]]],41],[[6,-1],[[36,[16]]],42],[[6,-1],[[36,[16]]],41],[[7,-1],[[36,[16]]],41],[[7,-1],[[36,[16]]],42],[[8,-1],[[36,[16]]],41],[[8,-1],[[36,[16]]],42],[[9,-1],[[36,[16]]],41],[[9,-1],[[36,[16]]],42],[[10,-1],[[36,[16]]],41],[[10,-1],[[36,[16]]],42],[[11,-1],[[36,[16]]],42],[[11,-1],[[36,[16]]],41],[[12,-1],[[36,[16]]],42],[[12,-1],[[36,[16]]],41],[[13,-1],[[36,[16]]],41],[[13,-1],[[36,[16]]],42],[[14,-1],[[36,[16]]],41],[[14,-1],[[36,[16]]],42],[[15,-1],[[36,[16]]],42],[[15,-1],[[36,[16]]],41],[[-1,-2],[[36,[-3,16]]],43,44,[]],[[-1,-2],[[36,[-3,16]]],43,44,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[45,-1],9,[[34,[33]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[19,16],[[46,21],47],[[48,21],[[23,[16,22]]]],[[49,21],[[23,[16,22]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,50],[[35,[[23,[51,40]]]]],[]],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[52,20],[[46,45],20],[[-1,45],20,[]],[[48,45],20],[[-1,45],20,[]],[[46,45],20],[[48,45],20],[[49,45],20],[[-1,45],20,[]],[[46,45],20],[[48,45],20],[[49,45],20],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[-1,[54,[53]]],20,[]],[[-1,50,11,51],[[35,[[23,[11,40]]]]],[]],[[48,50,11,51],[[35,[[23,[11,40]]]]]],[[-1,50],[[35,[[23,[11,40]]]]],[]],[[-1,50],[[35,[[23,[37,40]]]]],[]],[[49,50],[[35,[[23,[37,40]]]]]],[46,20],[-1,20,[]],[49,20],[-1,20,[]],[49,20],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,56],[-1,57,[]],[55,[[35,[58]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1,-2]]],55,[[34,[33]]],[[34,[33]]]],[[[60,[-1,-2]]],55,[[34,[33]]],[[34,[11]]]],[61,55],[[[62,[-1]]],55,[[34,[33]]]],[[[63,[-1]]],55,[[34,[33]]]],[[[64,[-1,-2]]],55,[[34,[33]]],[[34,[33]]]],[[[65,[-1]]],55,[[34,[1]]]],[[[66,[-1]]],55,[[34,[33]]]],[[[67,[-1,-2,-3]]],55,[[34,[33]]],[[34,[68]]],[[34,[68]]]],[[[69,[-1]]],55,[[34,[33]]]],[[[70,[-1]]],55,[[34,[33]]]],[[[71,[-1]]],55,[[34,[33]]]],[[[72,[-1]]],55,[[34,[33]]]],[[[73,[-1,-2]]],55,[[34,[74]]],[[34,[75]]]],[[[76,[-1]]],55,[[34,[33]]]],[[[77,[-1,-2]]],55,[[34,[8]]],[[34,[68]]]],[[[78,[-1]]],55,[[34,[79]]]],[55,[[35,[57]]]],[[[59,[-1,-2]]],[[59,[-1,-2]]],80,80],[[[81,[-1,-2,-3]]],[[81,[-1,-2,-3]]],80,80,80],[[[60,[-1,-2]]],[[60,[-1,-2]]],80,80],[82,82],[61,61],[[[62,[-1]]],[[62,[-1]]],80],[[[63,[-1]]],[[63,[-1]]],80],[[[64,[-1,-2]]],[[64,[-1,-2]]],80,80],[[[65,[-1]]],[[65,[-1]]],80],[[[66,[-1]]],[[66,[-1]]],80],[[[67,[-1,-2,-3]]],[[67,[-1,-2,-3]]],80,80,80],[[[69,[-1]]],[[69,[-1]]],80],[[[70,[-1]]],[[70,[-1]]],80],[[[83,[-1]]],[[83,[-1]]],80],[[[84,[-1,-2]]],[[84,[-1,-2]]],80,80],[[[71,[-1]]],[[71,[-1]]],80],[85,85],[86,86],[[[72,[-1]]],[[72,[-1]]],80],[[[73,[-1,-2]]],[[73,[-1,-2]]],80,80],[[[76,[-1]]],[[76,[-1]]],80],[[[77,[-1,-2]]],[[77,[-1,-2]]],80,80],[[[78,[-1]]],[[78,[-1]]],80],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,0,[[55,19,[87,[33]]],16],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[55,24],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],[19,16],0,0,0,[[[59,[-1,-2]]],[[23,[-3,55]]],[[34,[33]]],[[34,[33]]],[]],[[[60,[-1,-2]]],[[23,[-3,55]]],[[34,[33]]],[[34,[11]]],[]],[61,[[23,[-1,55]]],[]],[[[62,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[63,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[64,[-1,-2]]],[[23,[-3,55]]],[[34,[33]]],[[34,[33]]],[]],[[[65,[-1]]],[[23,[-2,55]]],[[34,[1]]],[]],[[[66,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[67,[-1,-2,-3]]],[[23,[-4,55]]],[[34,[33]]],[[34,[68]]],[[34,[68]]],[]],[[[69,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[70,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[71,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[72,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[73,[-1,-2]]],[[23,[-3,55]]],[[34,[74]]],[[34,[75]]],[]],[[[76,[-1]]],[[23,[-2,55]]],[[34,[33]]],[]],[[[77,[-1,-2]]],[[23,[-3,55]]],[[34,[8]]],[[34,[68]]],[]],[[[78,[-1]]],[[23,[-2,55]]],[[34,[79]]],[]],[[[59,[-1,-2]],21],47,88,88],[[[81,[-1,-2,-3]],21],47,88,88,88],[[[60,[-1,-2]],21],47,88,88],[[82,21],47],[[61,21],47],[[[62,[-1]],21],47,88],[[[63,[-1]],21],47,88],[[[64,[-1,-2]],21],47,88,88],[[[65,[-1]],21],47,88],[[[66,[-1]],21],47,88],[[[67,[-1,-2,-3]],21],47,88,88,88],[[[69,[-1]],21],47,88],[[[70,[-1]],21],47,88],[[[83,[-1]],21],47,88],[[[84,[-1,-2]],21],47,88,88],[[[71,[-1]],21],47,88],[[85,21],47],[[86,21],47],[[[72,[-1]],21],47,88],[[[73,[-1,-2]],21],47,88,88],[[[76,[-1]],21],47,88],[[[77,[-1,-2]],21],47,88,88],[[[78,[-1]],21],47,88],[[55,21],47],[[55,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1,-2]]],55,[[34,[33]]],[[34,[33]]]],[[[81,[-1,-2,-3]]],55,[[34,[33]]],[[34,[33]]],[[34,[33]]]],[[[60,[-1,-2]]],55,[[34,[33]]],[[34,[11]]]],[82,55],[61,55],[[[62,[-1]]],55,[[34,[33]]]],[[[63,[-1]]],55,[[34,[33]]]],[[[64,[-1,-2]]],55,[[34,[33]]],[[34,[33]]]],[[[65,[-1]]],55,[[34,[1]]]],[[[66,[-1]]],55,[[34,[33]]]],[[[67,[-1,-2,-3]]],55,[[34,[33]]],[[34,[68]]],[[34,[68]]]],[[[69,[-1]]],55,[[34,[33]]]],[[[70,[-1]]],55,[[34,[33]]]],[[[83,[-1]]],55,[[34,[33]]]],[[[84,[-1,-2]]],55,[[34,[8]]],[[34,[68]]]],[[[71,[-1]]],55,[[34,[33]]]],[85,55],[86,55],[[[72,[-1]]],55,[[34,[33]]]],[[[73,[-1,-2]]],55,[[34,[74]]],[[34,[75]]]],[[[76,[-1]]],55,[[34,[33]]]],[[[77,[-1,-2]]],55,[[34,[8]]],[[34,[68]]]],[[[78,[-1]]],55,[[34,[79]]]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,0,0,0,0,0,0,[55,[[35,[89]]]],[55,[[35,[57]]]],0,0,0,0,[55,90],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[[91,24],20],[[24,52],[[93,[[87,[92]]]]]],[19,-1,[]],[19,-1,[]],[19,16],[[91,24,94],[[93,[-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[[91,95],20],[91,[[93,[92]]]],[91,[[23,[96,40]]]],[[91,[87,[4]],[87,[3]]],[[93,[16]]]],[91,[[23,[4,40]]]],[91,[[93,[[16,[[87,[4]],[87,[3]]]]]]]],[[91,-1],[[93,[[87,[-2]]]]],44,[]],[91,[[93,[92]]]],[91,[[93,[97]]]],[[91,10],[[93,[98]]]],[91,[[93,[[16,[[99,[33,33]],[99,[33,33]],33]]]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[[24,52],[[93,[11]]]],[91,[[93,[92]]]],[50,[[23,[[35,[6]],40]]]],[91,[[93,[[35,[3]]]]]],[91,[[93,[100]]]],[91,[[93,[[35,[101]]]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[91,[[93,[92]]]],[[91,20],[[93,[92]]]],[91,[[93,[92]]]],[[50,102],[[23,[33,40]]]],[[91,24],[[93,[33]]]],[91,[[93,[92]]]],[91,[[23,[92,40]]]],[91,[[23,[92,40]]]],[91,[[93,[92]]]],[[50,24,24],[[23,[33,40]]]],[91,[[93,[92]]]],[91,[[93,[8]]]],0,[91,[[93,[103]]]],[91,33],0,[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[91,33],[[93,[-1]]],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[104,[4]],101],[[93,[[87,[4]]]]]],[101,[[93,[16]]]],[[101,[87,[4]]],[[93,[16]]]],[[[87,[[87,[8]]]]],[[93,[16]]]],[[101,[87,[4]]],[[93,[[87,[[87,[8]]]]]]]],[1,1],[105,[[93,[16]]]],[[[104,[4]],101],[[93,[16]]]],[105,[[93,[16]]]],0,0,0,0,0,0,[[4,20],[[93,[106]]]],[68,[[93,[1]]]],0,0,0,0,0,0,[24,[[35,[1]]]],[4,20],0,0,0,[[24,68,[104,[5]]],[[93,[[35,[107]]]]]],[24,[[93,[79]]]],0,[24,[[93,[-1]]],[108,88]],[[24,33,68],[[93,[79]]]],0,0,[4,[[93,[109]]]],[1,[[93,[68]]]],[[[35,[110]]],[[35,[111]]]],[[68,24],[[93,[79]]]],[[24,68,8],[[93,[79]]]],0,0,0,[[[87,[92]]],[[93,[16]]]],0,[79,[[93,[8]]]],0,0,0,0,0,0,[96,112],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[112,112],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[[96,96],20],[[112,112],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[96,21],47],[[112,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[[10,112],96],[96,10],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[[96,-1],36,41],[[96,-1],36,42],[[112,-1],36,41],[[112,-1],36,42],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[97,97],[103,103],[98,98],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,0,0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[19,16],[19,16],[[113,113],20],[[97,97],20],[[103,103],20],[[98,98],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[113,21],47],[[97,21],47],[[103,21],47],[[98,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[113,-1],36,41],[[113,-1],36,42],[[97,-1],36,42],[[97,-1],36,41],[[103,-1],36,42],[[103,-1],36,41],[[98,-1],36,42],[[98,-1],36,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[101,101],[100,100],[114,114],[115,115],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[19,16],[19,16],[19,16],0,0,0,[[105,105],20],[[101,101],20],[[100,100],20],[[114,114],20],[[115,115],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[105,21],47],[[105,21],47],[[101,21],47],[[101,21],47],[[100,21],47],[[100,21],47],[[114,21],47],[[115,21],47],[105,33],[105,24],0,0,0,[105,33],[105,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[3,20],0,0,0,0,0,0,0,[[101,45],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],0,[[105,-1],36,41],[[105,-1],36,42],[[101,-1],36,42],[[101,-1],36,41],[[100,-1],36,42],[[100,-1],36,41],[[114,-1],36,41],[[114,-1],36,42],[[115,-1],36,42],[[115,-1],36,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[116,116],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[116,116],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[116,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],0,[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[116,-1],36,42],[[116,-1],36,41],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[117,117],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[117,117],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[117,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[117,10],0,[10,117],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[117,-1],36,42],[[117,-1],36,41],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[118,118],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[118,118],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[118,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[10,118],[118,10],0,[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[118,-1],36,42],[[118,-1],36,41],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[119,119],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[119,119],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[119,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],0,[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],[119,33],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[37,[[23,[119]]]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[119,-1],36,42],[[119,-1],36,41],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[120,20],[120,120],[[-1,-2],16,[],[]],[120,[[87,[33]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[120,120],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[120,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],0,[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],0,[120,[[93,[[35,[121]]]]]],[[[87,[[87,[11]]]]],[[93,[[87,[[87,[8]]]]]]]],[120,10],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[37,[[23,[120]]]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[120,[[93,[[87,[[87,[8]]]]]]]],[[120,-1],36,41],[[120,-1],36,42],[-1,-2,[],[]],0,[122,[[99,[33,33]]]],[122,[[99,[33,33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[122,122],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[122,21],47],[[[99,[33,33]]],122],[-1,-1,[]],[-1,122,123],[-1,-1,[]],[-1,-2,[],[]],[[122,24],[[35,[33]]]],[[],19],[[122,33,33],16],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],0,[[122,-1],36,42],[[122,-1],36,41],0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[121,121],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[121,121],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[121,21],47],[[121,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],0,[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[124,[[23,[121]]]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[121,-1],36,42],[[121,-1],36,41],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[125,125],[126,126],[127,127],[128,128],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[19,16],[19,16],[[125,125],20],[[126,126],20],[[127,127],20],[[128,128],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[125,21],47],[[125,21],47],[[126,21],47],[[127,21],47],[[128,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,[125,126],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[125,-1],36,42],[[125,-1],36,41],[[126,-1],36,42],[[126,-1],36,41],[[127,-1],36,41],[[127,-1],36,42],[[128,-1],36,42],[[128,-1],36,41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[129,129],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[[92,92],20],[[129,129],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],0,[[92,21],47],[[129,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[[92,-1],36,41],[[92,-1],36,42],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,130],[131,131],[132,132],[133,133],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,16],[19,16],[19,16],[19,16],0,0,0,[[130,130],20],[[131,131],20],[[132,132],20],[[133,133],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[130,21],47],[[131,21],47],[[132,21],47],[[133,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[130,-1],36,42],[[130,-1],36,41],[[131,-1],36,41],[[131,-1],36,42],[[132,-1],36,42],[[132,-1],36,41],[[133,-1],36,41],[[133,-1],36,42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[134,[[87,[[136,[135]]]]]],[19,-1,[]],[19,16],[-1,-1,[]],[-1,-2,[],[]],0,[[],19],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[[[87,[92]]],[[93,[16]]]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],0,[-1,39,[]],[[-1,11],[[36,[16]]],[]],[[-1,92],[[93,[16]]],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[-1,-1,[]],[-1,-2,[],[]],[24,[[35,[1]]]],[[],19],[-1,-2,[],[]],[-1,[[31,[-2]]],[],[]],[-1,[[32,[-2]]],[],[]],[-1,20,[]],[1,16],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[137,11],[[36,[16]]]],[[137,92],[[93,[16]]]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[138,138],[[-1,-2],16,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[19,-1,[]],[19,-1,[]],[19,16],[[138,138],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[138,21],47],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],19],[-1,-2,[],[]],[-1,[[32,[-2]]],[],[]],[-1,[[31,[-2]]],[],[]],[-1,20,[]],[10,138],[138,10],0,[-1,-2,[],[]],[-1,[[35,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,39,[]],[[138,-1],36,41],[[138,-1],36,42],[-1,-2,[],[]],0,[10,33],[8,[[35,[33]]]],[24,33],[[[104,[15]]],[[99,[33,33]]]]],"c":[],"p":[[4,"DataType",11],[4,"TimezoneInfo",11],[4,"TableConstraint",11],[3,"ColumnDef",11],[3,"ColumnOptionDef",11],[4,"ColumnOption",11],[4,"BinaryOperator",11],[4,"Value",11],[3,"Ident",11],[3,"ObjectName",11],[4,"Expr",11],[4,"FunctionArgExpr",11],[4,"FunctionArg",11],[3,"Function",11],[3,"SqlOption",11],[15,"tuple"],[4,"Ordering",3217],[3,"Compat",3218],[15,"usize"],[15,"bool"],[3,"Formatter",3219],[3,"Error",3219],[4,"Result",3220],[15,"str"],[4,"WildcardExpr",3221],[15,"u64"],[8,"Hash",3222],[8,"Sized",3223],[8,"BuildHasher",3222],[8,"Hasher",3222],[3,"Request",3224],[3,"Request",3224],[3,"String",3225],[8,"Into",3226],[4,"Option",3227],[4,"ControlFlow",3228],[4,"Statement",3229],[4,"TableFactor",3230],[3,"TypeId",3231],[4,"ParserError",3221],[8,"Visitor",11],[8,"VisitorMut",11],[8,"VisitMut",11],[8,"FnMut",3232],[15,"char"],[3,"GreptimeDbDialect",978],[6,"Result",3219],[3,"MySqlDialect",978],[3,"PostgreSqlDialect",978],[3,"Parser",3221],[15,"u8"],[8,"Dialect",978],[3,"Chars",3233],[3,"Peekable",3234],[4,"Error",1078],[8,"Any",3231],[8,"Error",3235],[3,"Backtrace",3236],[3,"UnsupportedSnafu",1078],[3,"UnsupportedDefaultValueSnafu",1078],[3,"MissingTimeIndexSnafu",1078],[3,"InvalidTimeIndexSnafu",1078],[3,"InvalidSqlSnafu",1078],[3,"InvalidColumnOptionSnafu",1078],[3,"SqlTypeNotSupportedSnafu",1078],[3,"ParseSqlValueSnafu",1078],[3,"ColumnTypeMismatchSnafu",1078],[4,"ConcreteDataType",3237],[3,"InvalidDatabaseNameSnafu",1078],[3,"InvalidTableNameSnafu",1078],[3,"InvalidTableOptionSnafu",1078],[3,"InvalidSqlValueSnafu",1078],[3,"TimestampOverflowSnafu",1078],[3,"Timestamp",3238],[4,"TimeUnit",3238],[3,"ConvertToDfStatementSnafu",1078],[3,"ConvertSqlValueSnafu",1078],[3,"ConvertValueSnafu",1078],[4,"Value",3239],[8,"Clone",3240],[3,"UnexpectedSnafu",1078],[3,"SyntaxSnafu",1078],[3,"InvalidDefaultSnafu",1078],[3,"InvalidCastSnafu",1078],[3,"SerializeColumnDefaultConstraintSnafu",1078],[3,"ConvertToGrpcDataTypeSnafu",1078],[3,"Vec",3241],[8,"Debug",3219],[8,"StackError",3242],[4,"StatusCode",3243],[3,"ParserContext",1889],[4,"Statement",2883],[6,"Result",1078],[3,"TokenWithLocation",3244],[4,"Keyword",3245],[3,"AlterTable",2028],[4,"CopyTable",2109],[3,"CopyTableArgument",2109],[3,"HashMap",3246],[3,"PartitionEntry",2257],[3,"Partitions",2257],[4,"Token",3244],[3,"CopyDatabaseArgument",2109],[15,"slice"],[3,"CreateTable",2257],[3,"ColumnSchema",3247],[4,"ColumnDefaultConstraint",3248],[8,"FromStr",3249],[3,"ColumnDef",3250],[4,"AddColumnLocation",3251],[3,"AddColumnLocation",3250],[4,"AlterTableOperation",2028],[4,"Copy",2109],[3,"CreateDatabase",2257],[3,"CreateExternalTable",2257],[3,"Delete",2466],[3,"DescribeTable",2501],[3,"DropTable",2538],[3,"Explain",2575],[3,"Insert",2612],[3,"Query",2698],[3,"OptionMap",2655],[8,"IntoIterator",3252],[3,"Query",3230],[4,"ShowKind",2736],[3,"ShowDatabases",2736],[3,"ShowTables",2736],[3,"ShowCreateTable",2736],[3,"Hint",2883],[4,"Tql",2968],[3,"TqlEval",2968],[3,"TqlExplain",2968],[3,"TqlAnalyze",2968],[3,"RULES",3119],[8,"TransformRule",3119],[3,"Arc",3253],[3,"TypeAliasTransformRule",3149],[3,"TruncateTable",3175],[8,"Visit",11],[13,"ForeignKey",860],[13,"Generated",860],[13,"Unique",860],[13,"InUnnest",868],[13,"Collate",868],[13,"MapAccess",868],[13,"MatchAgainst",868],[13,"AnyOp",868],[13,"AllOp",868],[13,"Case",868],[13,"Cast",868],[13,"TryCast",868],[13,"SafeCast",868],[13,"TypedString",868],[13,"Like",868],[13,"ILike",868],[13,"SimilarTo",868],[13,"CompositeAccess",868],[13,"InList",868],[13,"InSubquery",868],[13,"Between",868],[13,"UnaryOp",868],[13,"Extract",868],[13,"Ceil",868],[13,"Floor",868],[13,"Position",868],[13,"Substring",868],[13,"Trim",868],[13,"Overlay",868],[13,"AggregateExpressionWithFilter",868],[13,"ArrayIndex",868],[13,"IntroducedString",868],[13,"JsonAccess",868],[13,"BinaryOp",868],[13,"Exists",868],[13,"AtTimeZone",868],[13,"Named",957],[13,"Unique",959],[13,"ForeignKey",959],[13,"Index",959],[13,"FulltextOrSpatial",959],[13,"Check",959],[13,"Unexpected",1845],[13,"ColumnTypeMismatch",1845],[13,"InvalidDefault",1845],[13,"UnsupportedDefaultValue",1845],[13,"InvalidCast",1845],[13,"ConvertSqlValue",1845],[13,"Syntax",1845],[13,"InvalidTableOption",1845],[13,"Unsupported",1845],[13,"SerializeColumnDefaultConstraint",1845],[13,"ConvertToGrpcDataType",1845],[13,"ConvertToDfStatement",1845],[13,"ConvertValue",1845],[13,"InvalidTimeIndex",1845],[13,"InvalidSql",1845],[13,"InvalidColumnOption",1845],[13,"ParseSqlValue",1845],[13,"InvalidDatabaseName",1845],[13,"InvalidTableName",1845],[13,"SqlTypeNotSupported",1845],[13,"TimestampOverflow",1845],[13,"InvalidSqlValue",1845],[6,"With",1974],[6,"Connection",1974],[13,"AddColumn",2105],[13,"DropColumn",2105],[13,"RenameTable",2105]],"b":[[478,"impl-Display-for-DataType"],[479,"impl-Debug-for-DataType"],[480,"impl-Display-for-TimezoneInfo"],[481,"impl-Debug-for-TimezoneInfo"],[482,"impl-Display-for-TableConstraint"],[483,"impl-Debug-for-TableConstraint"],[484,"impl-Display-for-ColumnDef"],[485,"impl-Debug-for-ColumnDef"],[486,"impl-Debug-for-ColumnOptionDef"],[487,"impl-Display-for-ColumnOptionDef"],[488,"impl-Debug-for-ColumnOption"],[489,"impl-Display-for-ColumnOption"],[490,"impl-Display-for-BinaryOperator"],[491,"impl-Debug-for-BinaryOperator"],[492,"impl-Display-for-Value"],[493,"impl-Debug-for-Value"],[494,"impl-Display-for-Ident"],[495,"impl-Debug-for-Ident"],[496,"impl-Debug-for-ObjectName"],[497,"impl-Display-for-ObjectName"],[498,"impl-Display-for-Expr"],[499,"impl-Debug-for-Expr"],[500,"impl-Display-for-FunctionArgExpr"],[501,"impl-Debug-for-FunctionArgExpr"],[502,"impl-Display-for-FunctionArg"],[503,"impl-Debug-for-FunctionArg"],[504,"impl-Debug-for-Function"],[505,"impl-Display-for-Function"],[506,"impl-Debug-for-SqlOption"],[507,"impl-Display-for-SqlOption"],[812,"impl-VisitMut-for-DataType"],[813,"impl-Visit-for-DataType"],[814,"impl-Visit-for-TimezoneInfo"],[815,"impl-VisitMut-for-TimezoneInfo"],[816,"impl-Visit-for-TableConstraint"],[817,"impl-VisitMut-for-TableConstraint"],[818,"impl-VisitMut-for-ColumnDef"],[819,"impl-Visit-for-ColumnDef"],[820,"impl-VisitMut-for-ColumnOptionDef"],[821,"impl-Visit-for-ColumnOptionDef"],[822,"impl-VisitMut-for-ColumnOption"],[823,"impl-Visit-for-ColumnOption"],[824,"impl-Visit-for-BinaryOperator"],[825,"impl-VisitMut-for-BinaryOperator"],[826,"impl-Visit-for-Value"],[827,"impl-VisitMut-for-Value"],[828,"impl-Visit-for-Ident"],[829,"impl-VisitMut-for-Ident"],[830,"impl-Visit-for-ObjectName"],[831,"impl-VisitMut-for-ObjectName"],[832,"impl-VisitMut-for-Expr"],[833,"impl-Visit-for-Expr"],[834,"impl-VisitMut-for-FunctionArgExpr"],[835,"impl-Visit-for-FunctionArgExpr"],[836,"impl-Visit-for-FunctionArg"],[837,"impl-VisitMut-for-FunctionArg"],[838,"impl-Visit-for-Function"],[839,"impl-VisitMut-for-Function"],[840,"impl-VisitMut-for-SqlOption"],[841,"impl-Visit-for-SqlOption"],[1439,"impl-Debug-for-Error"],[1440,"impl-Display-for-Error"],[2099,"impl-Visit-for-AlterTable"],[2100,"impl-VisitMut-for-AlterTable"],[2101,"impl-Visit-for-AlterTableOperation"],[2102,"impl-VisitMut-for-AlterTableOperation"],[2243,"impl-Visit-for-Copy"],[2244,"impl-VisitMut-for-Copy"],[2245,"impl-VisitMut-for-CopyTable"],[2246,"impl-Visit-for-CopyTable"],[2247,"impl-VisitMut-for-CopyDatabaseArgument"],[2248,"impl-Visit-for-CopyDatabaseArgument"],[2249,"impl-VisitMut-for-CopyTableArgument"],[2250,"impl-Visit-for-CopyTableArgument"],[2349,"impl-Display-for-CreateTable"],[2350,"impl-Debug-for-CreateTable"],[2351,"impl-Debug-for-Partitions"],[2352,"impl-Display-for-Partitions"],[2353,"impl-Debug-for-PartitionEntry"],[2354,"impl-Display-for-PartitionEntry"],[2451,"impl-Visit-for-CreateTable"],[2452,"impl-VisitMut-for-CreateTable"],[2453,"impl-VisitMut-for-Partitions"],[2454,"impl-Visit-for-Partitions"],[2455,"impl-VisitMut-for-PartitionEntry"],[2456,"impl-Visit-for-PartitionEntry"],[2457,"impl-Visit-for-CreateDatabase"],[2458,"impl-VisitMut-for-CreateDatabase"],[2459,"impl-VisitMut-for-CreateExternalTable"],[2460,"impl-Visit-for-CreateExternalTable"],[2498,"impl-VisitMut-for-Delete"],[2499,"impl-Visit-for-Delete"],[2535,"impl-VisitMut-for-DescribeTable"],[2536,"impl-Visit-for-DescribeTable"],[2572,"impl-VisitMut-for-DropTable"],[2573,"impl-Visit-for-DropTable"],[2609,"impl-VisitMut-for-Explain"],[2610,"impl-Visit-for-Explain"],[2652,"impl-Visit-for-Insert"],[2653,"impl-VisitMut-for-Insert"],[2694,"impl-VisitMut-for-OptionMap"],[2695,"impl-Visit-for-OptionMap"],[2714,"impl-Debug-for-Query"],[2715,"impl-Display-for-Query"],[2733,"impl-VisitMut-for-Query"],[2734,"impl-Visit-for-Query"],[2804,"impl-Debug-for-ShowKind"],[2805,"impl-Display-for-ShowKind"],[2871,"impl-VisitMut-for-ShowKind"],[2872,"impl-Visit-for-ShowKind"],[2873,"impl-VisitMut-for-ShowDatabases"],[2874,"impl-Visit-for-ShowDatabases"],[2875,"impl-Visit-for-ShowTables"],[2876,"impl-VisitMut-for-ShowTables"],[2877,"impl-VisitMut-for-ShowCreateTable"],[2878,"impl-Visit-for-ShowCreateTable"],[2964,"impl-Visit-for-Statement"],[2965,"impl-VisitMut-for-Statement"],[3107,"impl-VisitMut-for-Tql"],[3108,"impl-Visit-for-Tql"],[3109,"impl-Visit-for-TqlEval"],[3110,"impl-VisitMut-for-TqlEval"],[3111,"impl-VisitMut-for-TqlExplain"],[3112,"impl-Visit-for-TqlExplain"],[3113,"impl-Visit-for-TqlAnalyze"],[3114,"impl-VisitMut-for-TqlAnalyze"],[3209,"impl-Visit-for-TruncateTable"],[3210,"impl-VisitMut-for-TruncateTable"]]},\
"sqlness_runner":{"doc":"","t":"DLLLLMLLLLLLLLAMMLLLLLLLLLLLFMMLLLLLLLALRDDDRDRLLLLLLLLLMLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLRDRLLFLLLMLLLLLFFFLLLLLLLMLLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","case_dir","command","command_for_update","compat","compat_mut","compat_ref","deref","deref_mut","drop","env","env_config_file","fail_fast","fmt","from","from_arg_matches","from_arg_matches_mut","from_subset","group_id","init","into","into_request","into_request","is_in_subset","main","server_addr","test_filter","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","util","vzip","DEFAULT_LOG_LEVEL","Env","GreptimeDB","GreptimeDBContext","METASRV_ADDR","ResultDisplayer","SERVER_ADDR","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_db","client","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","connect_db","ctx","data_home","datanode_id","datanode_id","datanode_start_args","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","env","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","frontend_process","generate_config_file","incr_datanode_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_standalone","metasrv_process","new","new","query","reset_datanode_id","restart_server","result","server_addr","server_processes","start","start_distributed","start_server","start_standalone","stop","stop","stop_server","time","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","NULL_DATA_PLACEHOLDER","NullableColumnIter","PORT_CHECK_INTERVAL","borrow","borrow_mut","check_port","compat","compat_mut","compat_ref","data_iter","deref","deref_mut","drop","from","from_subset","get_binary_dir","get_case_dir","get_workspace_root","init","into","into_iter","into_request","into_request","is_in_subset","next","null_iter","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"sqlness_runner"],[40,"sqlness_runner::env"],[168,"sqlness_runner::util"],[200,"clap_builder::builder::command"],[201,"async_compat"],[202,"core::fmt"],[203,"core::fmt"],[204,"clap_builder"],[205,"core::result"],[206,"clap_builder::util::id"],[207,"core::option"],[208,"tonic::request"],[209,"tonic::request"],[210,"alloc::string"],[211,"alloc::vec"],[212,"std::path"],[213,"sqlness::case"],[214,"core::future::future"],[215,"alloc::boxed"],[216,"core::pin"],[217,"std::path"],[218,"core::net::socket_addr"],[219,"core::time"],[220,"core::iter::traits::iterator"],[221,"core::convert"],[222,"core::fmt"]],"d":["SQL Harness for GrepTimeDB","","","","","Directory of test cases","","","","","","","","","","Environment Configuration File","Fail this run as soon as one case fails if true","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Address of the server","Name of test cases to run. Accept as a regexp.","","","","","","","","","","","","","","","","","","","","","","","","","Build the DB with <code>cargo build --bin greptime</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate config file to …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","stop and restart the server process","","","","","","","","","Stop one <code>Database</code>.","","Start time in millisecond","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper struct for iterate over column with null_mask","Check port every 0.1 second.","","","Spin-waiting a socket address is available, or timeout. …","","","","","","","","Returns the argument unchanged.","","","Get the dir of test cases. This function only works when …","Get the dir that contains workspace manifest (the …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,0,5,0,0,0,0,0,0,0,19,20,24,17,19,20,24,17,17,19,17,17,19,20,24,17,19,20,24,17,19,20,24,17,17,19,17,20,20,17,19,20,24,17,19,20,24,17,19,19,20,24,17,19,24,19,20,24,17,17,19,20,24,17,19,17,20,19,20,24,17,19,20,24,17,19,19,20,20,24,24,17,17,19,20,24,17,19,19,20,17,19,20,17,24,17,19,17,17,17,17,19,17,17,20,17,24,19,20,24,17,19,20,24,17,19,20,24,17,19,20,24,17,19,20,24,17,19,20,24,17,0,0,0,34,34,0,34,34,34,34,34,34,34,34,34,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],[[],1],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,4],0,0,0,[[5,6],7],[-1,-1,[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[-1,-2,[],[]],[[],[[12,[11]]]],[[],3],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[[],4],0,0,[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[[5,8],[[10,[4,9]]]],[[5,8],[[10,[4,9]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],4],0,[17,17],[[-1,-2],4,[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[[17,18],19],0,0,[20,21],0,[[17,20],[[4,[[23,[22]],22]]]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[19,4],[3,4],[3,4],[3,4],[3,4],0,[[24,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[17,18,20],22],[20,4],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,0,[[],20],[[25,[12,[22]]],17],[[19,26,22],[[29,[[28,[27]]]]]],[20,4],[[17,19],4],0,0,0,[[17,18,[12,[30]]],[[29,[[28,[27]]]]]],[17,19],[[17,18,20,15],31],[17,19],[19,4],[[17,18],[[29,[[28,[27]]]]]],[31,4],0,[-1,-2,[],[]],[-1,22,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[32,33],15],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],0,[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[18,22],[[[12,[25]]],22],[[],22],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[[[34,[-1,-2,-3,-4]]],12,35,[[36,[15]]],35,37],0,[-1,[[12,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Command",200],[3,"Compat",201],[15,"usize"],[15,"tuple"],[3,"Args",0],[3,"Formatter",202],[6,"Result",202],[3,"ArgMatches",203],[6,"Error",204],[4,"Result",205],[3,"Id",206],[4,"Option",207],[3,"Request",208],[3,"Request",208],[15,"bool"],[3,"TypeId",209],[3,"Env",40],[15,"str"],[3,"GreptimeDB",40],[3,"GreptimeDBContext",40],[15,"u32"],[3,"String",210],[3,"Vec",211],[3,"ResultDisplayer",40],[3,"PathBuf",212],[3,"QueryContext",213],[8,"Future",214],[3,"Box",215],[3,"Pin",216],[3,"Path",212],[3,"Child",217],[4,"SocketAddr",218],[3,"Duration",219],[3,"NullableColumnIter",168],[8,"Iterator",220],[8,"AsRef",221],[8,"Display",202]],"b":[]},\
"store_api":{"doc":"Storage related APIs","t":"AAAAAAAAAIGMKMMNDENDNDLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDQQIQKKLLKKAKMALLLLLLLKAKKKKLLLLLLIGQGQGKKKQIQGKGIKIQQQQQQQQIRRIIGIQQIQAKKKKKKKKKKKKKKKKKKKKKKKLLAKDGRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLFLLLLLLLLLLLLLLLQQQIIKKKKKKKKKKDNDNNDNDNDNDENDDGGNDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMLMMMMMMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMRRRFFFFNDNNIGEENMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLKLMMKMMKLKKKLLLLLLLLLLLLLLLLLLLLLLMDENNNENNNNNNNNNNDDDDDDDDDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDNEDNNDIDDEDDEDDEGGDDEEDNNNNNNDQQQQQNNDENDDNSNNNNNNRRNNQNDNNDQIQDDEGDIGGDDDEDDDDGGIQINGNNNDNNNNNNNNNNNNNDIQDLMKLMLLLLLLMLLLLLLLLLLLLLLMMALLLLLLLLKKLLLLLMMMMMMMMMKMMLALLLLLLLKMMMLLLLLMMLMMMLKMALLLLKMKKLLLLLALLLLLLLLLLLLLLLLLLLLMMMMLLKMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLMMMLLMLLMMALLMMLKLMMMMMMMMMLLKLLLLKMMMMLMKMMKMMAMAAMMKKKLLLAKLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLALLLLKLKLLMMMLLLLLMMLLLLKMMKMMDIQLLMLLLLLLLLKLLKLLLLLKLSRRHRRNRRDERNNNNRLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLDDEDDEGGRRRDDEGDGGDDEGNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMMLLLMMLLLLLMMLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLMMMMMMLLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDEDDQDQIRRRNDLLLLLLLLLLLLLLLLLLLLLLLLKKMMKLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLMMKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMIKKDDQDENNNQNNIDQDQKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKMKLLLLLKMLLLLLLMLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLKMMLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLMMKKDNEDNQDDILLLLLLLLLLLLLLLLLLLLKMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLQDQIMLLLLLLLLLKLLLLKKLLLLLLLRG","n":["data_source","error","logstore","manifest","metadata","path_utils","region_engine","region_request","storage","DataSource","DataSourceRef","alloc","get_stream","phantom","ptr","BuildColumnDescriptor","BuildColumnDescriptorSnafu","Error","InvalidDefaultConstraint","InvalidDefaultConstraintSnafu","InvalidRawRegionRequest","InvalidRawRegionRequestSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","constraint","debug_fmt","description","err","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","source","status_code","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","constraint","err","error","location","location","location","source","AppendResponse","Entry","Error","LogStore","Namespace","append","append_batch","borrow","borrow_mut","create_namespace","delete_namespace","entry","entry","entry_id","entry_stream","fmt","from","from_subset","into","into_request","into_request","is_in_subset","list_namespaces","namespace","namespace","obsolete","read","stop","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Entry","Epoch","Error","Id","Namespace","Offset","data","id","namespace","Entry","EntryStream","Error","SendableEntryStream","start_id","Id","Namespace","id","Checkpoint","Checkpoint","Error","Error","Error","Error","Error","Error","Iter","LogIterator","MAX_VERSION","MIN_VERSION","Manifest","ManifestLogStorage","ManifestVersion","MetaAction","MetaAction","MetaAction","MetaActionIterator","MetaActionIterator","action","decode","decode","delete","delete_all","delete_checkpoint","delete_until","do_checkpoint","encode","encode","last_checkpoint","last_version","last_version","load_checkpoint","load_last_checkpoint","next_action","next_log","save","save_checkpoint","scan","scan","set_prev_version","set_protocol","set_protocol","start","stop","storage","update","ProtocolAction","ProtocolVersion","READER_VERSION","VersionHeader","WRITER_VERSION","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_readable","is_writable","min_reader_version","min_writer_version","new","prev_version","serialize","serialize","supported_protocol_version","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","Error","Iter","LogIterator","ManifestLogStorage","delete","delete_all","delete_checkpoint","delete_until","load_checkpoint","load_last_checkpoint","next_log","save","save_checkpoint","scan","ColumnMetadata","ConvertDatatypes","ConvertDatatypesSnafu","Err","InvalidMeta","InvalidMetaSnafu","InvalidRawRegionRequest","InvalidRawRegionRequestSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidSchema","InvalidSchemaSnafu","MetadataError","Ok","RegionMetadata","RegionMetadataBuilder","RegionMetadataRef","Result","SerdeJson","SerdeJsonSnafu","SkippedFields","add_columns","alloc","alter","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","bump_version","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_by_id","column_by_name","column_id","column_index_by_id","column_metadatas","column_metadatas","column_schema","debug_fmt","description","deserialize","deserialize","drop_columns","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","err","fail","fail","fail","field_columns","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_existing","from_json","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id_to_index","id_to_index","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","next","phantom","primary_key","primary_key","primary_key","primary_key_columns","primary_key_index","ptr","push_column_metadata","reason","region_id","region_id","region_id","schema","schema","schema_version","schema_version","semantic_type","serialize","serialize","source","status_code","time_index","time_index","time_index_column","time_index_field","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_column_def","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate_column_metadata","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","err","error","location","location","location","location","location","location","reason","region_id","source","source","CLUSTER_DIR","DATA_DIR","WAL_DIR","region_dir","region_name","table_dir","table_dir_with_catalog_and_schema","Follower","GrantedRegion","Leader","NotFound","RegionEngine","RegionEngineRef","RegionRole","SetReadonlyResponse","Success","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get_metadata","handle_query","handle_request","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","name","new","phantom","ptr","region_disk_usage","region_id","region_role","role","serialize","set_readonly_gracefully","set_writable","stop","success","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","writable","last_entry_id","AddColumn","AddColumnLocation","AddColumns","After","Alter","AlterKind","Close","Compact","Create","Delete","Drop","DropColumns","First","Flush","Open","Put","RegionAlterRequest","RegionCloseRequest","RegionCompactRequest","RegionCreateRequest","RegionDeleteRequest","RegionDropRequest","RegionFlushRequest","RegionOpenRequest","RegionPutRequest","RegionReadRequest","RegionRequest","RegionTruncateRequest","Truncate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","column_metadata","column_metadatas","default","engine","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","location","need_alter","need_alter","need_alter","options","options","primary_key","region_dir","region_dir","request","request_type","row_group_size","rows","rows","schema_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_request_body","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","validate","validate","validate","validate_column_to_drop","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","columns","names","AddColumn","AddColumns","AlterOperation","AlterRequest","Binary","Boolean","Chunk","ChunkReader","CloseContext","CloseOptions","ColumnDefaultConstraint","ColumnDescriptor","ColumnDescriptorBuilder","ColumnDescriptorBuilderError","ColumnFamilyDescriptor","ColumnFamilyDescriptorBuilder","ColumnFamilyDescriptorBuilderError","ColumnFamilyId","ColumnId","ColumnSchema","CompactContext","CompactionStrategy","ConcreteDataType","CreateOptions","Date","DateTime","Decimal128","Dictionary","DropColumns","Duration","EngineContext","Error","Error","Error","Error","Error","Float32","Float64","FlushContext","FlushReason","Function","GetRequest","GetResponse","GlobalBufferFull","INITIAL_VERSION","Int16","Int32","Int64","Int8","Interval","List","MAX_REGION_SEQ","MIN_OP_TYPE","Manually","MemtableFull","Meta","Null","OpenOptions","Others","Periodically","ReadContext","Reader","Region","Region","RegionDescriptor","RegionDescriptorBuilder","RegionDescriptorBuilderError","RegionGroup","RegionId","RegionMeta","RegionNumber","RegionSeq","RegionStat","RowKeyDescriptor","RowKeyDescriptorBuilder","RowKeyDescriptorBuilderError","ScanRequest","ScanResponse","Schema","SchemaBuilder","SchemaRef","SequenceNumber","Snapshot","Snapshot","StorageEngine","String","TableId","Time","Timestamp","Twcs","TwcsOptions","UInt16","UInt32","UInt64","UInt8","UninitializedField","UninitializedField","UninitializedField","UninitializedField","ValidationError","ValidationError","ValidationError","ValidationError","Value","WriteContext","WriteRequest","WriteRequest","WriteResponse","add_metadata","alloc","alter","arrow_schema","arrow_schema","as_arrow_type","as_decimal128","as_duration","as_list","as_time","as_timestamp","batch_size","binary_datatype","boolean_datatype","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","can_arrow_type_cast_to","cf_id","cf_id","chunk","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close_region","cmp","column_index_by_name","column_name_by_index","column_schema_by_name","column_schemas","column_schemas","column_schemas","columns","columns","columns","columns","columns","comment","comment","compact","compaction_strategy","compaction_strategy","compare","consts","contains_column","create_default","create_default","create_default_vector","create_default_vector","create_default_vector_for_padding","create_mutable_vector","create_region","data_type","data_type","data_type","date_datatype","datetime_datatype","decimal128_datatype","decimal128_default_datatype","default","default_cf","default_cf","default_constraint","default_constraint","default_constraint","default_constraint","default_value","delete","desc","descriptors","deserialize","deserialize","deserialize","dictionary_datatype","disk_usage_bytes","disk_usage_bytes","drop_region","drop_region","duration_datatype","duration_microsecond_datatype","duration_millisecond_datatype","duration_nanosecond_datatype","duration_second_datatype","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra_cfs","extra_cfs","fields","filters","float32_datatype","float64_datatype","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow_interval_unit","from_arrow_time_unit","from_arrow_type","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get","get_hash","get_region","hash","id","id","id","id","id","in_memory_metadata","int16_datatype","int32_datatype","int64_datatype","int8_datatype","interval_datatype","interval_day_time_datatype","interval_month_day_nano_datatype","interval_year_month_datatype","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_boolean","is_decimal","is_empty","is_float","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","is_null","is_nullable","is_nullable","is_nullable","is_nullable","is_numeric","is_signed","is_string","is_stringifiable","is_time_index","is_time_index","is_time_index","is_time_index","is_timestamp","is_unsigned","limit","list_datatype","logical_type_id","max_active_window_files","max_inactive_window_files","metadata","metadata","metadata","metadata","metadata","mut_metadata","name","name","name","name","name","name","name","name","name","name_to_index","name_to_index","new","new","next_chunk","null_datatype","null_value","num_columns","numerics","open_region","operation","output_ordering","parent_dir","parent_dir","partial_cmp","phantom","project_chunk","projection","ptr","put","reader","reason","region","region_id","requests","responses","row_key","row_key","scan","schema","schema","serialize","serialize","serialize","snapshot","snapshot","string_datatype","time_datatype","time_microsecond_datatype","time_millisecond_datatype","time_nanosecond_datatype","time_second_datatype","time_window_seconds","timestamp","timestamp","timestamp_column","timestamp_datatype","timestamp_index","timestamp_index","timestamp_index","timestamp_microsecond_datatype","timestamp_millisecond_datatype","timestamp_nanosecond_datatype","timestamp_second_datatype","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_project","ttl","ttl","type_id","type_id","type_id","type_id","type_id","types","uint16_datatype","uint32_datatype","uint64_datatype","uint8_datatype","user_schema","validate","version","version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","wait","wait","with_default_constraint","with_metadata","with_nullable_set","with_time_index","write","write_buffer_size","write_buffer_size","write_request","columns","names","Chunk","ChunkReader","Error","borrow","borrow_mut","columns","fmt","from","from_subset","into","into_request","into_request","is_in_subset","new","next_chunk","output_ordering","output_ordering","project_chunk","to_subset","to_subset_unchecked","try_from","try_into","type_id","user_schema","vzip","BASE","DEFAULT_CF_ID","DEFAULT_CF_NAME","INTERNAL_COLUMN_VEC","KEY_CF_ID","OP_TYPE_COLUMN_NAME","OpType","PRIMARY_KEY_COLUMN_NAME","READ_BATCH_SIZE","ReservedColumnId","ReservedColumnType","SEQUENCE_COLUMN_NAME","Sequence","TableId","Tsid","Version","WRITE_ROW_GROUP_SIZE","borrow","borrow","borrow_mut","borrow_mut","from","from","from_subset","from_subset","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_internal_column","is_reserved","op_type","sequence","table_id","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","tsid","type_id","type_id","version","vzip","vzip","ColumnDescriptor","ColumnDescriptorBuilder","ColumnDescriptorBuilderError","ColumnFamilyDescriptor","ColumnFamilyDescriptorBuilder","ColumnFamilyDescriptorBuilderError","ColumnFamilyId","ColumnId","MAX_REGION_SEQ","REGION_GROUP_MASK","REGION_SEQ_MASK","RegionDescriptor","RegionDescriptorBuilder","RegionDescriptorBuilderError","RegionGroup","RegionId","RegionNumber","RegionSeq","RowKeyDescriptor","RowKeyDescriptorBuilder","RowKeyDescriptorBuilderError","TableId","UninitializedField","UninitializedField","UninitializedField","UninitializedField","ValidationError","ValidationError","ValidationError","ValidationError","as_error_source","as_error_source","as_error_source","as_error_source","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cf_id","cf_id","cf_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","columns","columns","columns","columns","columns","columns_capacity","columns_capacity","comment","comment","comment","create_empty","create_empty","create_empty","create_empty","data_type","data_type","data_type","default","default","default","default","default","default_cf","default_cf","default_cf","default_constraint","default_constraint","default_constraint","default_constraint","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra_cfs","extra_cfs","extra_cfs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_u64","get_hash","hash","id","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nullable","is_nullable","is_nullable","is_nullable","is_time_index","is_time_index","is_time_index","is_time_index","name","name","name","name","name","name","name","name","name","new","new","new","push_column","push_column","push_extra_column_family","region_group","region_number","region_sequence","row_key","row_key","row_key","serialize","serialize","table_id","timestamp","timestamp","timestamp","to_column_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_group_and_seq","COMPACTION_STRATEGY_KEY","COMPACTION_STRATEGY_TWCS_VALUE","CloseOptions","CompactionStrategy","CreateOptions","EngineContext","Error","OpenOptions","Region","StorageEngine","TWCS_MAX_ACTIVE_WINDOW_FILES_KEY","TWCS_MAX_INACTIVE_WINDOW_FILES_KEY","TWCS_TIME_WINDOW_SECONDS_KEY","Twcs","TwcsOptions","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_region","compaction_strategy","compaction_strategy","create_region","default","default","default","default","default","default","drop_region","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_region","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_active_window_files","max_inactive_window_files","open_region","parent_dir","parent_dir","time_window_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_buffer_size","write_buffer_size","RegionMeta","schema","version","CloseContext","CompactContext","Error","FlushContext","FlushReason","GlobalBufferFull","Manually","MemtableFull","Meta","Others","Periodically","Region","RegionStat","Snapshot","WriteContext","WriteRequest","alter","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compact","default","default","default","default","default","disk_usage_bytes","disk_usage_bytes","drop_region","eq","equivalent","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","in_memory_metadata","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","reason","region_id","region_stat","region_stat","snapshot","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait","write","write_request","AddColumn","AddColumns","AlterOperation","AlterRequest","DropColumns","Error","GetRequest","ScanRequest","WriteRequest","apply","apply_add","apply_drop","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","delete","desc","eq","equivalent","equivalent","equivalent","equivalent","filters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","limit","operation","output_ordering","projection","put","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","columns","names","GetResponse","ScanResponse","WriteResponse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","reader","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Error","ReadContext","Reader","Snapshot","batch_size","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_ref","from_subset","get","into","into_request","into_request","is_in_subset","scan","schema","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MIN_OP_TYPE","SequenceNumber"],"q":[[0,"store_api"],[9,"store_api::data_source"],[15,"store_api::error"],[112,"store_api::error::Error"],[119,"store_api::logstore"],[153,"store_api::logstore::entry"],[162,"store_api::logstore::entry_stream"],[167,"store_api::logstore::namespace"],[170,"store_api::manifest"],[218,"store_api::manifest::action"],[285,"store_api::manifest::storage"],[300,"store_api::metadata"],[600,"store_api::metadata::MetadataError"],[613,"store_api::path_utils"],[620,"store_api::region_engine"],[718,"store_api::region_engine::SetReadonlyResponse"],[719,"store_api::region_request"],[1046,"store_api::region_request::AddColumnLocation"],[1047,"store_api::region_request::AlterKind"],[1049,"store_api::storage"],[1562,"store_api::storage::AlterOperation"],[1564,"store_api::storage::chunk"],[1589,"store_api::storage::consts"],[1641,"store_api::storage::descriptors"],[2021,"store_api::storage::engine"],[2175,"store_api::storage::metadata"],[2178,"store_api::storage::region"],[2337,"store_api::storage::requests"],[2454,"store_api::storage::requests::AlterOperation"],[2456,"store_api::storage::responses"],[2505,"store_api::storage::snapshot"],[2533,"store_api::storage::types"],[2535,"common_recordbatch"],[2536,"common_error::ext"],[2537,"core::result"],[2538,"core::any"],[2539,"core::error"],[2540,"snafu::backtrace_inert"],[2541,"core::option"],[2542,"alloc::string"],[2543,"core::convert"],[2544,"core::clone"],[2545,"alloc::vec"],[2546,"core::fmt"],[2547,"core::fmt"],[2548,"tonic::request"],[2549,"core::any"],[2550,"alloc::boxed"],[2551,"core::pin"],[2552,"core::convert"],[2553,"serde::ser"],[2554,"core::iter::traits::iterator"],[2555,"arrow_schema::field"],[2556,"greptime_proto::v1::region"],[2557,"greptime_proto::v1::meta"],[2558,"greptime_proto::v1::meta"],[2559,"greptime_proto::v1::region"],[2560,"greptime_proto::v1::region::region_request"],[2561,"arrow_schema::schema"],[2562,"alloc::alloc"],[2563,"alloc::sync"],[2564,"arrow_schema::datatype"],[2565,"datatypes::types::decimal_type"],[2566,"datatypes::types::duration_type"],[2567,"datatypes::types::list_type"],[2568,"datatypes::types::time_type"],[2569,"datatypes::types::timestamp_type"],[2570,"datatypes::error"],[2571,"core::cmp"],[2572,"datatypes::value"],[2573,"datatypes::vectors"],[2574,"datatypes::vectors"],[2575,"common_time::timestamp"],[2576,"core::fmt"],[2577,"datatypes::types::datetime_type"],[2578,"datatypes::types::primitive_type"],[2579,"datatypes::types::primitive_type"],[2580,"datatypes::types::primitive_type"],[2581,"api::helper"],[2582,"datatypes::types::primitive_type"],[2583,"datatypes::types::primitive_type"],[2584,"datatypes::types::primitive_type"],[2585,"datatypes::types::boolean_type"],[2586,"arrow_schema::datatype"],[2587,"core::marker"],[2588,"core::hash"],[2589,"datatypes::type_id"],[2590,"std::collections::hash::map"],[2591,"datafusion_common::dfschema"],[2592,"common_recordbatch"]],"d":["","","LogStore APIs.","metadata service","Metadata of region and column.","Path constants for table engines, cluster states and WAL","Region Engine’s definition","","Storage APIs.","This trait represents a common data source abstraction …","","","Retrieves a stream of record batches based on the provided …","","","","SNAFU context selector for the <code>Error::BuildColumnDescriptor</code>…","","","SNAFU context selector for the …","","SNAFU context selector for the …","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>LogStore</code> serves as a Write-Ahead-Log for storage engine.","","Append an <code>Entry</code> to WAL with given namespace and return …","Append a batch of entries atomically and return the offset …","","","Create a new <code>Namespace</code>.","Delete an existing <code>Namespace</code> with given ref.","","Create an entry of the associate Entry type","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","List all existing namespaces.","","Create a namespace of the associate Namespace type","Mark all entry ids <code>&lt;=id</code> of given <code>namespace</code> as obsolete so …","Create a new <code>EntryStream</code> to asynchronously generates <code>Entry</code> …","Stop components of logstore.","","","","","","","Entry is the minimal data storage unit in <code>LogStore</code>.","","","","","","Return contained data of entry.","Return entry id that monotonically increments.","","","","","","","","","","The checkpoint by checkpoint","","","","","","","","","","","","Manifest service","","","The action to alter metadata","","","","","Common actions for manifest","Decode self from byte slice with reader protocol version, …","Decode self from byte slice with reader protocol version, …","Delete logs in [start, end) and ignore checkpoints.","Delete all logs and checkpoints, and remove the manifest …","Delete the checkpoint by version","Delete logs and checkpoints which version is less than …","Do a checkpoint, it will create a checkpoint and compact …","Encode this action into a byte vector","Encode this checkpoint into a byte vector","Returns the last success checkpoint","The last compacted action’s version of checkpoint","Returns the last(or latest) manifest version.","Load the checkpoint by version","Load the latest checkpoint","","","Save a log","Save a checkpoint.","Scan the logs in [start, end)","Scan actions which version in range [start, end)","Set previous valid manifest version.","Set a protocol action into meta action","Set a protocol action into checkpoint","Start the service","Stop the service","","Update metadata by the action","Protocol action that used to block older clients from …","","Current reader and writer versions TODO(dennis): …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The maximum protocol version we are currently allowed to …","","","","","","","","","","","","","","","","","","","","","Delete logs in [start, end) and ignore checkpoints.","Delete all logs and checkpoints, and remove the manifest …","Delete the checkpoint by version","Delete logs and checkpoints which version is less than …","Load the checkpoint by version","Load the latest checkpoint","","Save a log","Save a checkpoint.","Scan the logs in [start, end)","Metadata of a column.","","SNAFU context selector for the …","Contains the error value","","SNAFU context selector for the <code>MetadataError::InvalidMeta</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>MetadataError::InvalidSchema</code>…","","Contains the success value","General static metadata of a region.","Builder to build RegionMetadata.","","","","SNAFU context selector for the <code>MetadataError::SerdeJson</code> …","Fields skipped in serialization.","Adds columns to the metadata if not exist.","","Applies the alter <code>kind</code> to the builder.","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and build a RegionMetadata.","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Increases the schema version by 1.","","","","","","","","","","","","","","","","","","Find column by id.","Finds a column by name.","Immutable and unique id of a region.","Find column index by id.","","Columns in the region. Has the same order as columns in …","Schema of this column. Is the same as <code>column_schema</code> in …","","","","","Drops columns from the metadata if exist.","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Returns all field columns.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a builder from existing RegionMetadata.","Decode the metadata from a JSON str.","","","","","","","","","","","","","","","","","","","","Map column id to column’s index in column_metadatas.","Map column id to column’s index in column_metadatas.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new builder.","Constructs skipped fields from <code>column_metadatas</code>.","","","Sets the primary key of the region.","","Maintains an ordered list of primary keys","Returns all primary key columns.","Returns a column’s index in primary key if it is a …","","Pushes a new column metadata to this region’s metadata.","","","Immutable and unique id of a region.","","Last schema.","Latest schema constructed from column_metadatas.","","Current version of the region schema.","Semantic type of this column (e.g. tag or timestamp).","","","","","Id of the time index column.","Id of the time index column.","Returns the time index column","Returns the arrow field of the time index column.","Encode the metadata to a JSON string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct <code>Self</code> from protobuf struct RegionColumnDef","","","","","","","","","","","","","","","","","","","","","","","Checks whether the metadata is valid.","Checks whether it is a valid column.","","","","","","","","","","","","","","","","","","","","","","","","","Cluster state dir","Data dir for table engines","All paths relative to data_home(file storage) or root …","","Generate region name in the form of “{TABLE_ID}_…","","","","","","","","","","The result of setting readonly for the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Retrieves region’s metadata.","Handles substrait query and return a stream of record …","Handles request to the region.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Name of this engine","","","","Retrieves region’s disk usage.","","","Indicates region role.","","Sets readonly for a region gracefully.","Sets writable mode for a region.","Stops the engine","Returns a SetReadonlyResponse::Success with the …","","","","","","","","","","","","","","","","","","","","","","Returns <code>last_entry_id</code> of the region if available(e.g., It…","Adds a column.","Location to add a column.","Add columns to the region.","Add the column after specific column.","","Kind of the alteration.","","","","","","Drop columns from the region, only fields are allowed to …","Add the column to the first position of columns.","","","","Alter metadata of a region.","Close region request.","","","Request to delete data from a region.","","","Open region request.","Request to put data into a region.","","","Truncate region request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata of the column to add.","Columns in this region.","","Region engine name","Region engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of alteration to do.","Location to add the column. If location is None, the …","Returns true if we need to apply the request to the region.","Returns true if we need to apply the alteration to the …","Returns true if no column to add to the region.","Options of the created region.","Options of the opened region.","Columns in the primary key.","Directory for region’s data home. Usually is composed by …","Data directory of the region.","","Returns the type name of the RegionRequest.","","Rows to put.","Keys to rows to delete.","The version of the schema before applying the alteration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert Body to a group of RegionRequest with region id. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of the request.","Checks whether the request is valid, returns an error if …","Returns an error if the the alter kind is invalid.","Returns an error if the column to add is invalid.","Returns an error if the column to drop is invalid.","","","","","","","","","","","","","","","","Add the column after this column.","Columns to add.","Name of columns to drop.","Operation to add a column.","Add columns to the region.","Operation to alter a region.","Alter region request.","","","A bunch of rows in columnar format.","<code>ChunkReader</code> is similar to async iterator of Chunk.","","Options to close a region.","Column’s default constraint.","A ColumnDescriptor contains information to create a column.","Builder for <code>ColumnDescriptor</code>.","Error type for ColumnDescriptorBuilder","A ColumnFamilyDescriptor contains information to create a …","Builder for <code>ColumnFamilyDescriptor</code>.","Error type for ColumnFamilyDescriptorBuilder","Id of column family. Unique in each region.","Id of column. Unique in each region.","Schema of a column, used as an immutable struct.","","Options for compactions","","Options to create a region.","","","","","Drop columns from the region, only value columns are …","","Storage engine context.","","","","","","","","Context for flush operations.","Reason of flush operation.","","","","Global write buffer is full.","Initial version of the schema.","","","","","","","The max valid region sequence number.","","Flush manually.","Memtable is full.","","","Options to open a region.","Other reasons.","Auto flush periodically.","Context for read.","","Chunks of rows in storage engine.","","A RegionDescriptor contains information to create a region.","Builder for <code>RegionDescriptor</code>.","Error type for RegionDescriptorBuilder","Group number of one region. Unique in each region.","Id of the region. It’s generated by concatenating table …","Metadata of a region.","Id of regions under the same table. Unique in each table. …","Sequence number of region inside one table. Unique in each …","","A RowKeyDescriptor contains information about row key.","Builder for <code>RowKeyDescriptor</code>.","Error type for RowKeyDescriptorBuilder","","","A common schema, should be immutable.","","","Represents a sequence number of data in storage. The …","A consistent read-only view of region.","","Storage engine provides primitive operations to store and …","","Id of table. Universal unique.","","","TWCS","TWCS compaction options.","","","","","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Custom validation error","Custom validation error","","Context for write operations.","Write request holds a collection of updates to apply to a …","","","Add key value pair to metadata.","","","","","Convert this type as arrow::datatypes::DataType.","","Try to cast data type as a <code>DurationType</code>.","Try to cast the type as a <code>ListType</code>.","Try to cast data type as a <code>TimeType</code>.","Try to cast data type as a <code>TimestampType</code>.","Suggested batch size of chunk.","","","","","","","","","","","","","","Checks if the data type can cast to another data type.","","","","","","","","","","","","Close the engine.","Closes given region.","","","Retrieve the column’s name by index","","","","","","","","Descriptors of columns in this column family.","Descriptors of columns in this column family.","","","","Compaction strategy","Compaction strategy","","Constants.","","Creates a default value for this column.","Create a default value for given <code>data_type</code>.","Creates a vector with default value for this column.","Create a vector that contains <code>num_rows</code> default values for …","Creates a vector for padding.","Creates a mutable vector with given <code>capacity</code> of this type.","Creates and returns the created region.","","","","","","","","","Default column family.","Default column family.","","Default constraint of column, default is None, which means …","Default constraint of column, default is None, which means …","","Returns the default value of this type.","Delete rows by <code>keys</code>.","Descriptor of the column to add.","","","","","","","","Drops given region.","","","Creates a [Duration(DurationMicrosecondType)] datatype.","Creates a [Duration(DurationMillisecondType)] datatype.","Creates a [Duration(DurationNanosecondType)] datatype.","Creates a [Duration(DurationSecondType)] datatype.","Storage Engine traits.","","","","","","","","","","","","","","","","","","","","","Extra column families defined by user.","Extra column families defined by user.","","Filters pushed down","","","Flush memtable of the region to disk.","Flush region","If true, flush the closing region.","","","","","","","If true, allows to flush a closed region","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts from arrow timestamp unit to","Convert arrow data type to ConcreteDataType.","","","","","","","","","","","","Returns the opened region with given name.","","","","","","","Returns the in memory metadata of this region.","","","","","","Creates a [Interval(IntervalDayTimeType)] datatype.","Creates a [Interval(IntervalMonthDayNanoType)] datatype.","Creates a [Interval(IntervalYearMonthType)] datatype.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Is the column a key column.","","","Is column nullable, default is true.","Is column nullable, default is true.","","","","","","","Is time index column, default is true.","Is time index column, default is true.","","","","limit can be used to reduce the amount scanned from the …","","Returns id of the Logical data type.","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","","","","","","","Returns name of the region.","Name of this data type.","","","","","Region name.","Region name.","","","","","Create a schema from a vector of ColumnSchema.","Fetch next chunk from the reader.","","Returns a default null constraint.","","","Opens an existing region. Returns <code>Ok(None)</code> if region does …","Operation to do.","Expected output ordering. This is only a hint and isn’t …","Region parent directory","Region parent directory","","","","Indices of columns to read, <code>None</code> to read all columns. This …","","Add put operation to the request.","Reader to read result chunks.","Flush reason.","Region holds chunks of rows stored in the storage engine, …","","","","Row key descriptor of this region.","Row key descriptor of this region.","","Returns the schema of the region.","","","","","","Create a snapshot for read.","","Returns the time data type with <code>TimeUnit</code>.","Creates a [Time(TimeMicrosecond)] datatype.","Creates a [Time(TimeMillisecondType)] datatype.","Creates a [Time(TimeNanosecond)] datatype.","Creates a [Time(TimeSecondType)] datatype.","Compaction time window defined when creating tables.","Timestamp key column.","Timestamp key column.","","","Returns index of the timestamp key column.","","","","","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to Create a schema from a vector of ColumnSchema.","Generate a new projected schema","Region SST files TTL","Region SST files TTL","","","","","","Common types.","","","","","Schema of the chunks returned by this reader. This schema …","Check whether the constraint is valid for columns with …","Returns the version of the region metadata.","","","The version of the schema before applying the alteration.","","","","","","","","If true, the flush will wait until the flush is done. …","Whether to wait the compaction result.","Set default constraint.","Creates a new <code>ColumnSchema</code> with given metadata.","Set the nullablity to <code>true</code> of the column.","","Write updates to region.","Region memtable max size in bytes","Region memtable max size in bytes","Create write request","Columns to add.","Name of columns to drop.","A bunch of rows in columnar format.","<code>ChunkReader</code> is similar to async iterator of Chunk.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Fetch next chunk from the reader.","","","","","","","","","Schema of the chunks returned by this reader. This schema …","","","Id for default column family.","Names for default column family.","Internal Column Name","Column family Id for row key columns.","Name for reserved column: op_type","","Name for reserved column: primary_key","","Column id reserved by the engine.","","Name for reserved column: sequence","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Test if the column id is reserved.","Id for <code>__op_type</code> column.","Id for <code>__sequence</code> column.","Id for storing logical table id column.","","","","","","","","","Id for storing TSID column.","","","Column id for version column. Version column is a special …","","","A ColumnDescriptor contains information to create a column.","Builder for <code>ColumnDescriptor</code>.","Error type for ColumnDescriptorBuilder","A ColumnFamilyDescriptor contains information to create a …","Builder for <code>ColumnFamilyDescriptor</code>.","Error type for ColumnFamilyDescriptorBuilder","Id of column family. Unique in each region.","Id of column. Unique in each region.","The max valid region sequence number.","","","A RegionDescriptor contains information to create a region.","Builder for <code>RegionDescriptor</code>.","Error type for RegionDescriptorBuilder","Group number of one region. Unique in each region.","Id of the region. It’s generated by concatenating table …","Id of regions under the same table. Unique in each table. …","Sequence number of region inside one table. Unique in each …","A RowKeyDescriptor contains information about row key.","Builder for <code>RowKeyDescriptor</code>.","Error type for RowKeyDescriptorBuilder","Id of table. Universal unique.","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Custom validation error","Custom validation error","","","","","Returns the region id as u64.","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>ColumnDescriptor</code>.","Builds a new <code>RowKeyDescriptor</code>.","Builds a new <code>ColumnFamilyDescriptor</code>.","Builds a new <code>RegionDescriptor</code>.","","","","","","","","","","","","","","","Descriptors of columns in this column family.","","","Descriptors of columns in this column family.","Descriptors of columns in this column family.","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","Default column family.","Default column family.","Default column family.","Default constraint of column, default is None, which means …","","Default constraint of column, default is None, which means …","Default constraint of column, default is None, which means …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra column families defined by user.","Extra column families defined by user.","Extra column families defined by user.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Construct a new RegionId from u64.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is column nullable, default is true.","","Is column nullable, default is true.","Is column nullable, default is true.","Is time index column, default is true.","","Is time index column, default is true.","Is time index column, default is true.","","","Region name.","","","","","Region name.","Region name.","Construct a new RegionId from table id and region number.","","","","Descriptors of columns in this column family.","Extra column families defined by user.","Returns the group number of the region","Returns the region number of the region.","Return the sequence number of the region","Row key descriptor of this region.","Row key descriptor of this region.","Row key descriptor of this region.","","","Returns the table id of the region.","Timestamp key column.","Timestamp key column.","Timestamp key column.","Convert ColumnDescriptor to ColumnSchema. Fields not in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new RegionId from table id, region group and …","","","Options to close a region.","Options for compactions","Options to create a region.","Storage engine context.","","Options to open a region.","","Storage engine provides primitive operations to store and …","","","","TWCS","TWCS compaction options.","","","","","","","","","","","","","","","","","","","","","","","","","Close the engine.","Closes given region.","Compaction strategy","Compaction strategy","Creates and returns the created region.","","","","","","","Drops given region.","Flush region","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the opened region with given name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","Opens an existing region. Returns <code>Ok(None)</code> if region does …","Region parent directory","Region parent directory","Compaction time window defined when creating tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Region SST files TTL","Region SST files TTL","","","","","","","","","","","","","Region memtable max size in bytes","Region memtable max size in bytes","Metadata of a region.","Returns the schema of the region.","Returns the version of the region metadata.","","","","Context for flush operations.","Reason of flush operation.","Global write buffer is full.","Flush manually.","Memtable is full.","","Other reasons.","Auto flush periodically.","Chunks of rows in storage engine.","","","Context for write operations.","","","Returns reason as <code>str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flush memtable of the region to disk.","If true, flush the closing region.","","","","","","","If true, allows to flush a closed region","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the in memory metadata of this region.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns name of the region.","Flush reason.","","","","Create a snapshot for read.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, the flush will wait until the flush is done. …","Whether to wait the compaction result.","Write updates to region.","Create write request","Operation to add a column.","Add columns to the region.","Operation to alter a region.","Alter region request.","Drop columns from the region, only value columns are …","","","","Write request holds a collection of updates to apply to a …","Apply the operation to the RegionDescriptor.","Add <code>columns</code> to the RegionDescriptor.","Drop columns from the RegionDescriptor by their <code>names</code>.","","","","","","","","","","","","","","","","","","Delete rows by <code>keys</code>.","Descriptor of the column to add.","","","","","","Filters pushed down","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Is the column a key column.","limit can be used to reduce the amount scanned from the …","Operation to do.","Expected output ordering. This is only a hint and isn’t …","Indices of columns to read, <code>None</code> to read all columns. This …","Add put operation to the request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the schema before applying the alteration.","","","","","","Columns to add.","Name of columns to drop.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Reader to read result chunks.","","","","","","","","","","","","","","","","","","","","Context for read.","","A consistent read-only view of region.","Suggested batch size of chunk.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Represents a sequence number of data in storage. The …"],"i":[0,0,0,0,0,0,0,0,0,0,0,184,185,184,184,5,0,0,5,0,5,0,5,5,5,10,14,15,5,10,14,15,5,10,5,10,14,15,10,14,15,14,5,5,10,10,10,14,15,5,5,10,14,15,5,10,14,15,10,14,15,5,10,14,15,5,10,14,15,10,10,14,14,15,15,5,5,10,14,15,5,5,5,5,10,14,15,5,10,14,15,5,10,14,15,5,10,14,15,5,10,14,15,5,10,14,15,5,10,14,15,5,186,187,188,187,186,188,186,0,189,189,0,189,189,189,36,36,189,189,0,189,36,0,36,36,36,36,36,36,36,189,0,189,189,189,189,36,36,36,36,36,36,0,0,190,0,190,0,190,190,190,191,0,191,0,191,0,0,192,0,193,194,195,196,197,198,193,197,0,0,0,0,0,0,0,198,193,0,193,0,194,195,197,197,197,197,193,194,195,193,195,193,197,197,198,196,197,197,197,193,194,194,195,193,193,0,193,0,0,0,0,0,40,42,40,42,40,42,40,42,40,40,42,40,42,40,40,40,40,42,42,42,42,40,40,42,40,42,40,42,40,42,40,42,40,40,42,42,40,42,40,40,40,40,40,42,40,42,0,40,42,40,40,42,40,42,40,42,40,42,40,42,40,42,196,197,197,0,0,197,197,197,197,197,197,196,197,197,197,0,49,0,47,49,0,49,0,49,0,49,0,0,47,0,0,0,0,49,0,0,45,199,45,49,49,49,45,61,55,50,56,51,57,58,52,53,49,45,61,55,50,56,51,57,58,52,53,49,45,51,52,53,45,49,55,50,56,51,57,58,52,53,55,50,56,51,57,58,52,53,50,50,55,50,45,50,55,49,49,55,50,45,55,50,55,55,55,55,50,50,50,50,52,53,51,52,53,50,55,50,56,51,57,58,52,53,49,49,45,61,55,50,56,51,57,58,52,53,49,45,50,55,50,56,51,57,58,52,53,45,61,55,50,56,51,57,58,52,53,49,61,50,45,61,55,50,56,51,57,58,52,53,49,56,51,57,58,52,53,45,45,61,61,55,55,50,50,56,56,51,51,57,57,58,58,52,52,53,53,49,49,45,61,55,50,56,51,57,58,52,53,49,45,61,49,199,45,45,50,50,50,199,45,51,45,50,53,61,50,45,50,55,55,50,49,49,61,50,50,50,50,55,50,56,51,57,58,52,53,49,45,61,55,50,56,51,57,58,52,53,49,45,61,55,50,56,51,57,58,52,53,49,45,61,55,50,56,51,57,58,52,53,49,55,45,61,55,50,56,51,57,58,52,53,49,45,61,55,50,56,51,57,58,52,53,49,50,50,45,61,55,50,56,51,57,58,52,53,49,200,201,202,203,204,202,205,200,201,204,201,203,205,0,0,0,0,0,0,0,67,0,67,68,0,0,0,0,68,206,68,66,67,68,66,67,66,67,66,67,67,68,66,67,68,68,68,68,66,66,66,66,67,67,67,67,68,66,67,68,66,66,67,67,66,67,68,66,67,207,207,207,68,66,67,68,68,66,66,67,67,68,66,67,207,66,206,206,207,66,66,207,67,207,207,207,68,66,67,68,66,67,68,66,67,68,66,67,68,66,67,68,66,67,68,66,67,67,208,0,0,48,74,71,0,71,71,71,71,71,48,74,71,71,71,0,0,0,0,0,0,0,0,0,0,0,0,71,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,72,73,48,46,74,72,73,48,46,74,46,72,75,72,80,73,48,46,74,73,73,73,73,48,48,48,48,46,46,46,46,74,74,74,74,71,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,72,73,48,46,74,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,71,76,76,77,77,78,78,72,72,79,79,80,80,81,81,73,73,48,48,46,46,74,74,75,75,82,82,83,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,73,46,73,48,46,72,80,72,72,80,77,71,75,76,78,73,72,73,48,46,74,71,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,73,48,48,46,46,74,74,75,82,83,71,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,71,73,48,46,48,71,76,77,78,72,79,80,81,73,48,46,74,75,82,83,209,210,211,0,179,0,0,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,179,95,0,212,213,214,215,216,95,95,0,0,104,0,0,176,91,95,95,95,95,95,95,0,0,176,176,215,95,0,176,176,0,216,0,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,215,0,95,0,95,95,174,0,95,95,95,95,161,164,167,169,161,164,167,169,104,0,0,215,0,89,152,215,91,91,95,95,95,95,95,95,141,95,95,95,103,104,91,89,95,103,104,91,89,89,95,165,166,0,95,103,104,91,95,103,104,91,214,214,95,91,91,91,91,91,89,151,162,163,165,166,159,160,215,113,150,95,0,91,103,104,103,104,103,95,214,159,160,103,95,95,95,95,89,168,112,103,159,160,103,95,212,180,0,95,103,104,95,215,178,214,215,95,95,95,95,95,0,95,103,104,91,95,95,95,95,103,103,103,103,104,104,104,104,91,91,91,91,168,112,89,1,95,95,215,106,177,95,95,103,104,104,91,118,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,103,104,91,89,95,95,95,95,103,104,91,95,103,104,91,89,216,95,214,95,215,159,160,168,112,215,95,95,95,95,95,95,95,95,95,103,104,91,89,95,95,103,103,104,104,91,91,89,89,95,95,91,95,95,103,104,91,89,180,95,103,159,160,103,95,95,95,95,103,159,160,103,95,95,1,95,95,175,175,0,103,91,103,89,103,215,95,159,160,165,166,168,112,103,91,89,103,91,213,95,104,91,95,214,90,1,113,150,95,152,213,1,152,212,182,118,0,178,0,0,168,112,216,217,216,95,103,104,0,215,95,95,95,95,95,95,175,162,163,91,95,91,91,89,95,95,95,95,95,103,104,91,95,104,95,103,104,91,89,95,103,104,91,89,215,95,95,95,103,103,104,104,91,91,91,91,91,89,89,89,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,103,104,91,89,91,91,113,150,95,103,104,91,89,0,95,95,95,95,213,104,217,91,89,90,91,89,95,103,104,91,89,118,108,103,103,103,103,215,113,150,215,218,219,0,0,213,151,151,151,151,151,151,151,151,151,151,151,213,213,213,213,151,151,151,151,151,213,151,220,0,0,0,0,0,221,0,0,0,0,0,221,221,221,221,0,221,220,221,220,221,220,221,220,221,220,221,221,220,220,221,220,0,220,220,220,220,221,220,221,220,221,220,221,220,220,221,220,220,221,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,161,164,167,169,161,164,167,169,161,164,167,169,54,54,159,161,160,162,164,163,165,167,166,168,169,112,54,159,161,160,162,164,163,165,167,166,168,169,112,159,162,165,168,165,165,166,54,160,163,166,112,54,160,163,166,112,162,165,162,163,165,166,162,165,159,159,160,159,162,165,168,159,159,160,54,159,162,165,168,168,168,112,159,160,159,160,54,160,54,54,160,163,166,112,54,54,54,54,160,160,160,160,163,163,163,163,166,166,166,166,112,112,112,112,168,168,112,54,54,161,161,160,164,164,163,167,167,166,169,169,112,54,54,159,161,161,161,160,162,164,164,164,163,165,167,167,167,166,168,169,169,169,112,54,160,163,166,112,54,159,161,160,162,164,163,165,167,166,168,169,112,54,54,54,159,168,159,160,168,112,54,159,161,160,162,164,163,165,167,166,168,169,112,54,54,159,159,161,161,160,160,162,162,164,164,163,163,165,165,167,167,166,166,168,168,169,169,112,112,54,159,161,160,162,164,163,165,167,166,168,169,112,159,160,159,160,159,160,159,160,159,165,168,159,160,165,166,168,112,54,159,162,162,165,168,54,54,54,168,168,112,54,160,54,162,162,163,160,54,160,163,166,112,54,161,164,167,169,54,159,161,160,162,164,163,165,167,166,168,169,112,54,159,161,160,162,164,163,165,167,166,168,169,112,54,159,161,160,162,164,163,165,167,166,168,169,112,54,159,161,160,162,164,163,165,167,166,168,169,112,54,159,161,160,162,164,163,165,167,166,168,169,112,159,54,159,161,160,162,164,163,165,167,166,168,169,112,54,0,0,0,0,0,0,214,0,214,0,0,0,0,174,0,105,113,150,106,174,175,105,113,150,106,174,175,105,113,150,106,174,175,105,113,150,106,174,175,214,214,113,150,214,105,113,150,106,174,175,214,106,105,113,150,106,174,175,105,113,150,106,174,174,175,105,113,150,106,174,175,105,113,150,106,174,175,214,105,113,150,106,174,175,105,105,113,113,150,150,106,106,174,174,175,175,105,113,150,106,174,175,175,175,214,113,150,175,105,113,150,106,174,175,105,113,150,106,174,175,105,113,150,106,174,175,105,113,150,106,174,175,105,113,150,106,174,175,113,150,105,113,150,106,174,175,105,113,150,106,174,175,113,150,0,217,217,0,0,215,0,0,176,176,176,215,176,176,0,0,215,0,215,215,176,178,157,177,118,108,176,178,157,177,118,108,176,157,177,118,108,176,157,177,118,108,176,215,178,157,177,118,108,215,178,215,176,176,176,176,176,215,177,178,157,177,118,108,176,118,178,157,157,177,118,108,176,157,177,118,108,176,178,157,177,118,108,176,215,215,178,157,177,118,108,176,178,178,157,157,177,177,118,118,108,108,176,176,178,157,177,118,108,176,215,118,178,215,215,215,157,177,118,108,176,178,157,177,118,108,176,178,157,177,118,108,176,215,178,157,177,118,108,176,178,157,177,118,108,176,178,157,177,118,108,176,178,157,177,118,108,176,118,108,215,215,0,179,0,0,179,212,0,0,0,179,179,179,1,142,180,179,90,1,142,180,179,90,1,180,179,1,180,179,1,212,180,1,1,1,1,1,1,1,142,180,179,90,1,142,180,179,90,1,180,179,1,142,180,179,90,1,142,180,179,90,1,1,142,142,180,180,179,179,90,90,1,142,180,179,90,180,1,90,1,1,212,1,180,179,1,142,180,179,90,1,142,180,179,90,1,142,180,180,179,179,90,1,142,180,179,90,1,142,180,179,90,90,1,142,180,179,90,218,219,0,0,0,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,181,182,182,183,183,181,182,183,182,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,216,0,216,0,141,141,141,141,141,141,141,141,141,141,216,141,141,141,141,216,216,141,141,141,141,141,141,141,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],[[4,[2,3]]],[]],0,0,0,0,0,0,0,0,0,[5,6],[-1,7,[]],[5,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],5,[[12,[11]]]],[5,[[9,[7]]]],[[[10,[-1]]],[[10,[-1]]],13],[[[14,[-1]]],[[14,[-1]]],13],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[[5,17,[18,[11]]],16],[5,19],0,[[[10,[-1]]],[[4,[-2,5]]],[[12,[11]]],[]],[[[10,[-1]],20],21,22],[[[14,[-1]],20],21,22],[[15,20],21],[[5,20],21],[[5,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],5,[[12,[11]]]],[[[14,[-1]]],5,[[12,[11]]]],[15,5],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[5,[[9,[26]]]],[5,[[9,[7]]]],[5,27],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[31,[[30,[29]]]]],[]],[[-1,18],[[31,[[30,[29]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],0,[[-1,-2,32],[],[],[[35,[[34,[33]]]]]],0,0,[[36,20],21],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,[[31,[[30,[29]]]]],[]],0,[[-1,37],[],[]],[[-1,32],[[31,[[30,[29]]]]],[]],[[-1,32],[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[34,[33]]],[]],[-1,32,[]],[-1,[],[]],0,0,0,0,[-1,38,[]],0,0,[-1,37,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[34,[33]],39],[[4,[[16,[-1,[9,[40]]]]]]],[]],[[[34,[33]],39],[[4,[-1]]],[]],[[-1,41,41],[[31,[[30,[29]]]]],[]],[[-1,41],[[31,[[30,[29]]]]],[]],[[-1,41],[[31,[[30,[29]]]]],[]],[[-1,41,25],[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[4,[[18,[33]]]]],[]],[-1,[[4,[[18,[33]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,41,[]],[-1,41,[]],[[-1,41],[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[[-1,41,[34,[33]]],[[31,[[30,[29]]]]],[]],[[-1,41,[34,[33]]],[[31,[[30,[29]]]]],[]],[[-1,41,41],[[31,[[30,[29]]]]],[]],[[-1,41,41],[[31,[[30,[29]]]]],[]],[[-1,41],16,[]],[[-1,40],16,[]],[[-1,40],16,[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],0,[-1,[[31,[[30,[29]]]]],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[42,42],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[],40],[-1,[[4,[40]]],43],[-1,[[4,[42]]],43],[[40,40],25],[[42,42],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[40,20],21],[[40,20],21],[[42,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[[40,39],25],[[40,39],25],0,0,[[],40],0,[[40,-1],4,44],[[42,-1],4,44],[[],[[16,[39,39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,41,41],[[31,[[30,[29]]]]],[]],[[-1,41],[[31,[[30,[29]]]]],[]],[[-1,41],[[31,[[30,[29]]]]],[]],[[-1,41,25],[[31,[[30,[29]]]]],[]],[[-1,41],[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[[-1,41,[34,[33]]],[[31,[[30,[29]]]]],[]],[[-1,41,[34,[33]]],[[31,[[30,[29]]]]],[]],[[-1,41,41],[[31,[[30,[29]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,[18,[46]]],[[47,[16]]]],0,[[45,48],[[47,[45]]]],[49,6],[-1,7,[]],[49,[[9,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,[[47,[50]]]],[[[51,[-1]]],49,[[12,[11]]]],[[[52,[-1]]],49,[[12,[11]]]],[[[53,[-1,-2]]],49,[[12,[54]]],[[12,[11]]]],[45,45],[49,[[9,[7]]]],[55,55],[50,50],[56,56],[[[51,[-1]]],[[51,[-1]]],13],[57,57],[58,58],[[[52,[-1]]],[[52,[-1]]],13],[[[53,[-1,-2]]],[[53,[-1,-2]]],13,13],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[50,59],[[9,[55]]]],[[50,19],[[9,[55]]]],0,[[50,59],[[9,[17]]]],0,0,0,[[49,17,[18,[11]]],16],[49,19],[-1,[[4,[55]]],43],[-1,[[4,[50]]],43],[[45,[34,[11]]],16],[[55,55],25],[[50,50],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,0,[[[51,[-1]]],[[4,[-2,49]]],[[12,[11]]],[]],[[[52,[-1]]],[[4,[-2,49]]],[[12,[11]]],[]],[[[53,[-1,-2]]],[[4,[-3,49]]],[[12,[54]]],[[12,[11]]],[]],[50,[[0,[60]]]],[[55,20],21],[[50,20],21],[[56,20],21],[[[51,[-1]],20],21,22],[[57,20],21],[[58,20],21],[[[52,[-1]],20],21,22],[[[53,[-1,-2]],20],21,22,22],[[49,20],21],[[49,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[50,45],[19,[[47,[50]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,49],[[[51,[-1]]],49,[[12,[11]]]],[57,49],[58,49],[[[52,[-1]]],49,[[12,[11]]]],[[[53,[-1,-2]]],49,[[12,[54]]],[[12,[11]]]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[54,45],[[[34,[55]]],[[47,[61]]]],[49,[[9,[26]]]],0,[[45,[18,[59]]],45],0,0,[50,[[0,[60]]]],[[50,59],[[9,[17]]]],0,[[45,55],45],0,0,0,0,0,0,0,0,0,[[55,-1],4,44],[[50,-1],4,44],[49,[[9,[7]]]],[49,27],0,0,[50,55],[50,62],[50,[[47,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[63,[[47,[55]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[50,[[47,[16]]]],[55,[[47,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,54],11],[[64,65],11],[[19,64],11],[[19,19,64],11],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,66],[67,67],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[-1,[[4,[67]]],43],[[68,68],25],[[66,66],25],[[67,67],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[68,20],21],[[66,20],21],[[67,20],21],[-1,-1,[]],[-1,-1,[]],[69,66],[70,67],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,54],[[31,[[30,[29]]]]],[]],[[-1,54,1],[[31,[[30,[29]]]]],[]],[[-1,54,71],[[31,[[30,[29]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,19,[]],[[54,67],66],0,0,[[-1,54],[[31,[[30,[29]]]]],[]],0,0,[[-1,54],[[9,[67]]],[]],[[67,-1],4,44],[[-1,54],[[31,[[30,[29]]]]],[]],[[-1,54,25],[[4,[16,3]]],[]],[-1,[[31,[[30,[29]]]]],[]],[[[9,[32]]],68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[73,73],[48,48],[46,46],[74,74],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,0,[[],75],0,0,[[73,73],25],[[48,48],25],[[46,46],25],[[74,74],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[71,20],21],[[71,20],21],[[76,20],21],[[77,20],21],[[78,20],21],[[72,20],21],[[79,20],21],[[80,20],21],[[81,20],21],[[73,20],21],[[48,20],21],[[46,20],21],[[74,20],21],[[75,20],21],[[82,20],21],[[83,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,[[73,50],25],[[48,50],25],[[46,50],25],0,0,0,0,0,0,[71,19],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[84,[[47,[73]]]],[-1,[[4,[-2]]],[],[]],[85,[[47,[48]]]],[86,[[47,[46]]]],[-1,[[4,[-2]]],[],[]],[87,[[47,[74]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[88,[[47,[[18,[[16,[54,71]]]]]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[71,19],[[73,50],[[47,[16]]]],[[48,50],[[47,[16]]]],[[46,50],[[47,[16]]]],[[19,50],[[47,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[89,-1,-2],89,[[12,[11]]],[[12,[11]]]],0,[[-1,90],[[31,[[30,[29]]]]],[]],[91,[[94,[92,93]]]],0,[95,96],[95,[[9,[97]]]],[95,[[9,[98]]]],[95,[[9,[99]]]],[95,[[9,[100]]]],[95,[[9,[101]]]],0,[[],95],[[],95],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[89,[[4,[91,102]]]],[[95,95],25],0,0,0,[95,95],[103,103],[104,104],[91,91],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,105],[[31,[[30,[29]]]]],[]],[[-1,105,19,106],[[31,[[30,[29]]]]],[]],[[95,95],107],[[91,19],[[9,[17]]]],[[91,17],19],[[91,19],[[9,[103]]]],[91,[[34,[103]]]],0,0,0,0,0,0,0,0,0,[[-1,108],[[31,[[30,[29]]]]],[]],0,0,[[-1,-2],107,[],[]],0,[[91,19],25],[103,[[4,[[9,[109]],102]]]],[[104,95,25],[[4,[109,102]]]],[[103,17],[[4,[[9,[[94,[110,93]]]],102]]]],[[104,95,25,17],[[4,[[94,[110,93]],102]]]],[[103,17],[[94,[110,93]]]],[[95,17],[[30,[111,93]]]],[[-1,105,112,113],[[31,[[30,[29]]]]],[]],0,0,0,[[],95],[[],95],[[33,114],95],[[],95],[[],89],0,0,[103,[[9,[104]]]],0,0,0,[95,109],[[-1,[116,[11,115]]],[[4,[16]]],[]],0,0,[-1,[[4,[95]]],43],[-1,[[4,[103]]],43],[-1,[[4,[104]]],43],[[95,95],95],[-1,38,[]],0,[[-1,105],[[31,[[30,[29]]]]],[]],[-1,[[31,[[30,[29]]]]],[]],[117,95],[[],95],[[],95],[[],95],[[],95],0,[[95,95],25],[[103,103],25],[[104,104],25],[[91,91],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,0,0,0,[[],95],[[],95],[[-1,118],[[31,[[30,[29]]]]],[]],0,0,[[95,20],[[4,[16,119]]]],[[95,20],[[4,[16,119]]]],[[103,20],[[4,[16,119]]]],[[104,20],[[4,[16,119]]]],[[104,20],[[4,[16,119]]]],[[91,20],[[4,[16,119]]]],0,[120,95],[121,95],[122,95],[123,95],[124,95],[100,95],[125,95],[-1,-1,[]],[99,95],[126,95],[127,95],[128,95],[129,95],[98,95],[130,95],[131,95],[95,95],[97,95],[132,95],[133,95],[134,95],[135,95],[136,95],[101,95],[137,95],[138,95],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[139,95],[140,95],[96,95],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,141,142],[[31,[[30,[29]]]]],[]],[[-1,-2],38,[143,144],145],[[-1,105,19],[[4,[9]]],[]],[[95,-1],16,146],[-1,54,[]],0,0,0,0,[-1,[],[]],[[],95],[[],95],[[],95],[[],95],[147,95],[[],95],[[],95],[[],95],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[95,25],[95,25],[91,25],[95,25],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,[95,25],[103,25],0,0,0,[95,25],[95,25],[95,25],[95,25],[103,25],0,0,0,[95,25],[95,25],0,[95,95],[95,148],0,0,0,[103,[[116,[11,11,149]]]],[91,[[116,[11,11,149]]]],0,0,[103,[[116,[11,11,149]]]],[-1,19,[]],[95,11],0,0,0,0,0,0,0,0,0,[[-1,95,25],103,[[12,[11]]]],[[[18,[103,93]]],91],[-1,[[31,[[30,[29]]]]],[]],[[],95],[[],104],[91,17],[[],[[18,[95,93]]]],[[-1,105,19,150],[[31,[[30,[29]]]]],[]],0,0,0,0,[[95,95],[[9,[107]]]],0,[[-1,151],151,[]],0,0,[[-1,[116,[11,115]]],[[4,[16]]],[]],0,0,0,0,0,0,0,0,[[-1,141,1],[[31,[[30,[29]]]]],[]],[-1,152,[]],[-1,152,[]],[[95,-1],4,44],[[103,-1],4,44],[[104,-1],4,44],0,[[-1,141],4,[]],[[],95],[117,95],[[],95],[[],95],[[],95],[[],95],0,0,0,[91,[[9,[103]]]],[117,95],[91,[[9,[17]]]],0,0,[[],95],[[],95],[[],95],[[],95],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[[30,[29]]]]],[]],[[95,109],[[9,[109]]]],[96,[[4,[95,102]]]],[-1,[[4,[-2]]],[],[]],[153,[[4,[103,102]]]],[-1,[[4,[-2]]],[],[]],[[[34,[33]]],[[4,[104,102]]]],[-1,[[4,[-2]]],[],[]],[[[94,[92,93]]],[[4,[91,102]]]],[92,[[4,[91,102]]]],[154,[[4,[91,102]]]],[[[94,[155,93]]],[[4,[91,102]]]],[-1,[[4,[-2]]],[],[]],[[[18,[103,93]]],[[4,[89,102]]]],[-1,[[4,[-2]]],[],[]],[[[18,[103,93]]],[[4,[89,102]]]],[95,[[4,[99]]]],[95,[[4,[134]]]],[95,[[4,[128]]]],[95,[[4,[120]]]],[95,[[4,[130]]]],[95,[[4,[133]]]],[95,[[4,[122]]]],[95,[[4,[98]]]],[-1,[[4,[-2]]],[],[]],[95,[[4,[127]]]],[95,[[4,[101]]]],[95,[[4,[100]]]],[95,[[4,[136]]]],[95,[[4,[121]]]],[95,[[4,[132]]]],[95,[[4,[138]]]],[95,[[4,[135]]]],[95,[[4,[125]]]],[95,[[4,[129]]]],[95,[[4,[124]]]],[95,[[4,[137]]]],[95,[[4,[123]]]],[95,[[4,[126]]]],[95,[[4,[97]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[18,[103,93]]],[[4,[91,102]]]],[[91,[34,[17]]],[[4,[91,102]]]],0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[[],95],[[],95],[[],95],[[],95],[-1,152,[]],[[104,95,25],[[4,[16,102]]]],[-1,156,[]],[91,156],[[89,156],89],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[103,[9,[104]]],[[4,[103,102]]]],[[103,[116,[11,11,149]]],103],[103,103],[[103,25],103],[[-1,157],[[31,[[30,[29]]]]],[]],0,0,[-1,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[151,20],21],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[[[18,[115]]],151],[-1,[[31,[[30,[29]]]]],[]],[-1,[[9,[[18,[158]]]]],[]],[-1,[[9,[[18,[158]]]]],[]],[[-1,151],151,[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,152,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[19,25],[59,25],[[],59],[[],59],[[],59],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[],59],[-1,28,[]],[-1,28,[]],[[],59],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[54,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[159,[[4,[160,161]]]],[162,[[4,[163,164]]]],[165,[[4,[166,167]]]],[168,[[4,[112,169]]]],[[165,170],165],0,0,[54,54],[160,160],[163,163],[166,166],[112,112],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[162,[18,[160]]],162],[[165,[18,[160]]],165],0,0,0,0,[[162,17],162],[[165,17],165],[[159,-1],159,[[12,[11]]]],0,0,[[],159],[[],162],[[],165],[[],168],[[159,95],159],0,0,[[],54],[[],159],[[],162],[[],165],[[],168],[[168,166],168],0,0,[[159,[9,[104]]],159],[160,[[9,[104]]]],0,0,[-1,[[4,[54]]],43],[-1,[[4,[160]]],43],[[54,54],25],[[54,38],25],[[160,160],25],[[163,163],25],[[166,166],25],[[112,112],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[168,[18,[166]]],168],0,0,[[54,20],21],[[54,20],21],[[161,20],21],[[161,20],21],[[160,20],21],[[164,20],21],[[164,20],21],[[163,20],21],[[167,20],21],[[167,20],21],[[166,20],21],[[169,20],21],[[169,20],21],[[112,20],21],[38,54],[-1,-1,[]],[-1,-1,[]],[11,161],[171,161],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[171,164],[-1,-1,[]],[11,164],[-1,-1,[]],[-1,-1,[]],[171,167],[11,167],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,169],[171,169],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,54],[[-1,-2],38,[143,144],145],[[54,-1],16,146],[[159,59],159],[[168,-1],168,[[12,[54]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[159,25],159],[160,25],0,0,[[159,25],159],[160,25],0,0,[[159,-1],159,[[12,[11]]]],[[165,-1],165,[[12,[11]]]],[[168,-1],168,[[12,[11]]]],0,0,0,0,0,0,[[64,65],54],[[59,-1,95],159,[[12,[11]]]],[160,162],[[162,-1],162,[]],[[165,-1],165,[]],[[168,-1],168,[]],[54,172],[54,65],[54,173],[[168,163],168],0,0,[[54,-1],4,44],[[160,-1],4,44],[54,64],[[162,160],162],0,0,[160,103],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,11,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[159,[[4,[16,11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[64,172,173],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[113,113],[150,150],[106,106],[174,174],[175,175],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,105],[[31,[[30,[29]]]]],[]],[[-1,105,19,106],[[31,[[30,[29]]]]],[]],0,0,[[-1,105,112,113],[[31,[[30,[29]]]]],[]],[[],105],[[],113],[[],150],[[],106],[[],174],[[],175],[[-1,105],[[31,[[30,[29]]]]],[]],0,[[105,20],21],[[113,20],21],[[150,20],21],[[106,20],21],[[174,20],21],[[175,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[116,[11,11]]],174],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,105,19],[[4,[9]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,[[-1,105,19,150],[[31,[[30,[29]]]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],0,0,[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,152,[]],[-1,156,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,90],[[31,[[30,[29]]]]],[]],[176,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[157,157],[177,177],[118,118],[108,108],[176,176],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,108],[[31,[[30,[29]]]]],[]],[[],178],[[],157],[[],177],[[],118],[[],108],[-1,38,[]],0,[-1,[[31,[[30,[29]]]]],[]],[[176,176],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,118],[[31,[[30,[29]]]]],[]],0,[[178,20],21],[[157,20],21],[[177,20],21],[[118,20],21],[[108,20],21],[[176,20],21],0,[-1,-1,[]],[-1,-1,[]],[150,157],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,54,[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,19,[]],0,0,[-1,178,[]],[-1,178,[]],[[-1,141],4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[31,[[30,[29]]]]],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,157],[[31,[[30,[29]]]]],[]],[-1,[],[]],0,0,0,0,0,0,0,0,0,[[179,112],16],[[[34,[180]],112],16],[[[34,[11]],112],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[180,180],[179,179],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[],1],[[-1,[116,[11,115]]],[[4,[16]]],[]],0,[[1,1],25],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],[[-1,-2],25,[],[]],0,[[1,20],21],[[142,20],21],[[180,20],21],[[179,20],21],[[90,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,[[-1,[116,[11,115]]],[[4,[16]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[86,[[4,[180]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[85,[[4,[179]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[181,20],21],[[[182,[-1]],20],21,22],[[183,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[141,141],[[-1,-2],16,[],[]],[[],141],[[141,20],21],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[-1,141,142],[[31,[[30,[29]]]]],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,25,[]],[[-1,141,1],[[31,[[30,[29]]]]],[]],[-1,152,[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,28,[]],[-1,-2,[],[]],0,0],"c":[],"p":[[3,"ScanRequest",2337],[6,"SendableRecordBatchStream",2535],[3,"BoxedError",2536],[4,"Result",2537],[4,"Error",15],[8,"Any",2538],[8,"Error",2539],[3,"Backtrace",2540],[4,"Option",2541],[3,"InvalidRawRegionRequestSnafu",15],[3,"String",2542],[8,"Into",2543],[8,"Clone",2544],[3,"InvalidDefaultConstraintSnafu",15],[3,"BuildColumnDescriptorSnafu",15],[15,"tuple"],[15,"usize"],[3,"Vec",2545],[15,"str"],[3,"Formatter",2546],[6,"Result",2546],[8,"Debug",2546],[3,"Request",2547],[3,"Request",2547],[15,"bool"],[8,"StackError",2536],[4,"StatusCode",2548],[3,"TypeId",2538],[8,"Future",2549],[3,"Box",2550],[3,"Pin",2551],[6,"Id",153],[15,"u8"],[15,"slice"],[8,"AsRef",2543],[3,"AppendResponse",119],[6,"Id",167],[15,"u64"],[6,"ProtocolVersion",218],[3,"ProtocolAction",218],[6,"ManifestVersion",170],[3,"VersionHeader",218],[8,"Deserializer",2552],[8,"Serializer",2553],[3,"RegionMetadataBuilder",300],[3,"AddColumn",719],[6,"Result",300],[4,"AlterKind",719],[4,"MetadataError",300],[3,"RegionMetadata",300],[3,"InvalidMetaSnafu",300],[3,"InvalidRawRegionRequestSnafu",300],[3,"InvalidRegionRequestSnafu",300],[3,"RegionId",1641],[3,"ColumnMetadata",300],[3,"InvalidSchemaSnafu",300],[3,"SerdeJsonSnafu",300],[3,"ConvertDatatypesSnafu",300],[6,"ColumnId",1641],[8,"Iterator",2554],[3,"SkippedFields",300],[6,"FieldRef",2555],[3,"RegionColumnDef",2556],[6,"TableId",1641],[6,"RegionNumber",1641],[3,"GrantedRegion",620],[4,"RegionRole",620],[4,"SetReadonlyResponse",620],[3,"GrantedRegion",2557],[4,"RegionRole",2557],[4,"RegionRequest",719],[3,"RegionCreateRequest",719],[3,"RegionAlterRequest",719],[4,"AddColumnLocation",719],[3,"RegionFlushRequest",719],[3,"RegionPutRequest",719],[3,"RegionReadRequest",719],[3,"RegionDeleteRequest",719],[3,"RegionDropRequest",719],[3,"RegionOpenRequest",719],[3,"RegionCloseRequest",719],[3,"RegionCompactRequest",719],[3,"RegionTruncateRequest",719],[3,"AlterRequest",2556],[4,"Kind",2558],[3,"AddColumn",2556],[3,"AddColumnLocation",2559],[4,"Body",2560],[3,"SchemaBuilder",1049],[3,"AlterRequest",2337],[3,"Schema",1049],[3,"Schema",2561],[3,"Global",2562],[3,"Arc",2563],[4,"ConcreteDataType",1049],[4,"DataType",2564],[3,"Decimal128Type",2565],[4,"DurationType",2566],[3,"ListType",2567],[4,"TimeType",2568],[4,"TimestampType",2569],[4,"Error",2570],[3,"ColumnSchema",1049],[4,"ColumnDefaultConstraint",1049],[3,"EngineContext",2021],[3,"CloseOptions",2021],[4,"Ordering",2571],[3,"CompactContext",2178],[4,"Value",2572],[8,"Vector",2573],[8,"MutableVector",2573],[3,"RegionDescriptor",1641],[3,"CreateOptions",2021],[15,"i8"],[6,"VectorRef",2573],[3,"HashMap",2574],[4,"TimeUnit",2575],[3,"FlushContext",2178],[3,"Error",2546],[3,"Int64Type",2576],[3,"DateTimeType",2577],[3,"UInt64Type",2576],[3,"Int8Type",2576],[3,"UInt16Type",2576],[3,"DateType",2578],[3,"Float32Type",2576],[3,"Int32Type",2576],[3,"DictionaryType",2579],[3,"UInt8Type",2576],[3,"StringType",2580],[3,"ColumnDataTypeWrapper",2581],[3,"UInt32Type",2576],[4,"IntervalType",2582],[3,"Float64Type",2576],[3,"NullType",2583],[3,"Int16Type",2576],[3,"BinaryType",2584],[3,"BooleanType",2585],[4,"IntervalUnit",2564],[4,"TimeUnit",2564],[3,"ReadContext",2505],[3,"GetRequest",2337],[8,"Hash",2586],[8,"Sized",2587],[8,"BuildHasher",2586],[8,"Hasher",2586],[4,"IntervalUnit",2588],[4,"LogicalTypeId",2589],[3,"RandomState",2574],[3,"OpenOptions",2021],[3,"Chunk",1564],[6,"SchemaRef",1049],[3,"Field",2555],[3,"RawSchema",2590],[3,"DFSchema",2591],[15,"u32"],[3,"WriteContext",2178],[3,"OrderOption",2535],[3,"ColumnDescriptorBuilder",1641],[3,"ColumnDescriptor",1641],[4,"ColumnDescriptorBuilderError",1641],[3,"RowKeyDescriptorBuilder",1641],[3,"RowKeyDescriptor",1641],[4,"RowKeyDescriptorBuilderError",1641],[3,"ColumnFamilyDescriptorBuilder",1641],[3,"ColumnFamilyDescriptor",1641],[4,"ColumnFamilyDescriptorBuilderError",1641],[3,"RegionDescriptorBuilder",1641],[4,"RegionDescriptorBuilderError",1641],[6,"ColumnFamilyId",1641],[3,"UninitializedFieldError",2592],[6,"RegionGroup",1641],[6,"RegionSeq",1641],[4,"CompactionStrategy",2021],[3,"TwcsOptions",2021],[4,"FlushReason",2178],[3,"CloseContext",2178],[3,"RegionStat",2178],[4,"AlterOperation",2337],[3,"AddColumn",2337],[3,"WriteResponse",2456],[3,"ScanResponse",2456],[3,"GetResponse",2456],[6,"DataSourceRef",9],[8,"DataSource",9],[13,"InvalidDefaultConstraint",112],[13,"InvalidRawRegionRequest",112],[13,"BuildColumnDescriptor",112],[8,"LogStore",119],[8,"Entry",153],[8,"EntryStream",162],[8,"Namespace",167],[8,"Manifest",170],[8,"MetaAction",170],[8,"Checkpoint",170],[8,"LogIterator",285],[8,"ManifestLogStorage",285],[8,"MetaActionIterator",170],[6,"RegionMetadataRef",300],[13,"InvalidRawRegionRequest",600],[13,"InvalidRegionRequest",600],[13,"SerdeJson",600],[13,"InvalidSchema",600],[13,"InvalidMeta",600],[13,"ConvertDatatypes",600],[6,"RegionEngineRef",620],[8,"RegionEngine",620],[13,"Success",718],[13,"After",1046],[13,"AddColumns",1047],[13,"DropColumns",1047],[8,"WriteRequest",2337],[8,"ChunkReader",1564],[8,"StorageEngine",2021],[8,"Region",2178],[8,"Snapshot",2505],[8,"RegionMeta",2175],[13,"AddColumns",2454],[13,"DropColumns",2454],[3,"ReservedColumnId",1589],[4,"ReservedColumnType",1589]],"b":[[49,"impl-Debug-for-Error"],[50,"impl-Display-for-Error"],[244,"impl-Debug-for-ProtocolAction"],[245,"impl-Display-for-ProtocolAction"],[407,"impl-Debug-for-MetadataError"],[408,"impl-Display-for-MetadataError"],[813,"impl-Display-for-RegionRequest"],[814,"impl-Debug-for-RegionRequest"],[1284,"impl-Debug-for-ConcreteDataType"],[1285,"impl-Display-for-ConcreteDataType"],[1287,"impl-Display-for-ColumnDefaultConstraint"],[1288,"impl-Debug-for-ColumnDefaultConstraint"],[1291,"impl-From%3CInt64Type%3E-for-ConcreteDataType"],[1292,"impl-From%3CDateTimeType%3E-for-ConcreteDataType"],[1293,"impl-From%3CUInt64Type%3E-for-ConcreteDataType"],[1294,"impl-From%3CInt8Type%3E-for-ConcreteDataType"],[1295,"impl-From%3CUInt16Type%3E-for-ConcreteDataType"],[1296,"impl-From%3CTimeType%3E-for-ConcreteDataType"],[1297,"impl-From%3CDateType%3E-for-ConcreteDataType"],[1299,"impl-From%3CListType%3E-for-ConcreteDataType"],[1300,"impl-From%3CFloat32Type%3E-for-ConcreteDataType"],[1301,"impl-From%3CInt32Type%3E-for-ConcreteDataType"],[1302,"impl-From%3CDictionaryType%3E-for-ConcreteDataType"],[1303,"impl-From%3CUInt8Type%3E-for-ConcreteDataType"],[1304,"impl-From%3CDurationType%3E-for-ConcreteDataType"],[1305,"impl-From%3CStringType%3E-for-ConcreteDataType"],[1306,"impl-From%3CColumnDataTypeWrapper%3E-for-ConcreteDataType"],[1307,"impl-From%3C%26ConcreteDataType%3E-for-ConcreteDataType"],[1308,"impl-From%3CDecimal128Type%3E-for-ConcreteDataType"],[1309,"impl-From%3CUInt32Type%3E-for-ConcreteDataType"],[1310,"impl-From%3CIntervalType%3E-for-ConcreteDataType"],[1311,"impl-From%3CFloat64Type%3E-for-ConcreteDataType"],[1312,"impl-From%3CNullType%3E-for-ConcreteDataType"],[1313,"impl-From%3CInt16Type%3E-for-ConcreteDataType"],[1314,"impl-From%3CTimestampType%3E-for-ConcreteDataType"],[1315,"impl-From%3CBinaryType%3E-for-ConcreteDataType"],[1316,"impl-From%3CBooleanType%3E-for-ConcreteDataType"],[1489,"impl-TryFrom%3CArc%3CSchema%3E%3E-for-Schema"],[1490,"impl-TryFrom%3CSchema%3E-for-Schema"],[1491,"impl-TryFrom%3CRawSchema%3E-for-Schema"],[1492,"impl-TryFrom%3CArc%3CDFSchema%3E%3E-for-Schema"],[1497,"impl-TryInto%3CListType%3E-for-ConcreteDataType"],[1498,"impl-TryInto%3CFloat64Type%3E-for-ConcreteDataType"],[1499,"impl-TryInto%3CDictionaryType%3E-for-ConcreteDataType"],[1500,"impl-TryInto%3CInt64Type%3E-for-ConcreteDataType"],[1501,"impl-TryInto%3CStringType%3E-for-ConcreteDataType"],[1502,"impl-TryInto%3CIntervalType%3E-for-ConcreteDataType"],[1503,"impl-TryInto%3CUInt64Type%3E-for-ConcreteDataType"],[1504,"impl-TryInto%3CDurationType%3E-for-ConcreteDataType"],[1506,"impl-TryInto%3CInt32Type%3E-for-ConcreteDataType"],[1507,"impl-TryInto%3CTimestampType%3E-for-ConcreteDataType"],[1508,"impl-TryInto%3CTimeType%3E-for-ConcreteDataType"],[1509,"impl-TryInto%3CInt16Type%3E-for-ConcreteDataType"],[1510,"impl-TryInto%3CDateTimeType%3E-for-ConcreteDataType"],[1511,"impl-TryInto%3CUInt32Type%3E-for-ConcreteDataType"],[1512,"impl-TryInto%3CBooleanType%3E-for-ConcreteDataType"],[1513,"impl-TryInto%3CNullType%3E-for-ConcreteDataType"],[1514,"impl-TryInto%3CDateType%3E-for-ConcreteDataType"],[1515,"impl-TryInto%3CUInt8Type%3E-for-ConcreteDataType"],[1516,"impl-TryInto%3CUInt16Type%3E-for-ConcreteDataType"],[1517,"impl-TryInto%3CBinaryType%3E-for-ConcreteDataType"],[1518,"impl-TryInto%3CInt8Type%3E-for-ConcreteDataType"],[1519,"impl-TryInto%3CFloat32Type%3E-for-ConcreteDataType"],[1520,"impl-TryInto%3CDecimal128Type%3E-for-ConcreteDataType"],[1751,"impl-PartialEq-for-RegionId"],[1752,"impl-PartialEq%3Cu64%3E-for-RegionId"],[1780,"impl-Debug-for-RegionId"],[1781,"impl-Display-for-RegionId"],[1782,"impl-Debug-for-ColumnDescriptorBuilderError"],[1783,"impl-Display-for-ColumnDescriptorBuilderError"],[1785,"impl-Debug-for-RowKeyDescriptorBuilderError"],[1786,"impl-Display-for-RowKeyDescriptorBuilderError"],[1788,"impl-Display-for-ColumnFamilyDescriptorBuilderError"],[1789,"impl-Debug-for-ColumnFamilyDescriptorBuilderError"],[1791,"impl-Display-for-RegionDescriptorBuilderError"],[1792,"impl-Debug-for-RegionDescriptorBuilderError"],[1797,"impl-From%3CString%3E-for-ColumnDescriptorBuilderError"],[1798,"impl-From%3CUninitializedFieldError%3E-for-ColumnDescriptorBuilderError"],[1802,"impl-From%3CUninitializedFieldError%3E-for-RowKeyDescriptorBuilderError"],[1804,"impl-From%3CString%3E-for-RowKeyDescriptorBuilderError"],[1807,"impl-From%3CUninitializedFieldError%3E-for-ColumnFamilyDescriptorBuilderError"],[1808,"impl-From%3CString%3E-for-ColumnFamilyDescriptorBuilderError"],[1812,"impl-From%3CString%3E-for-RegionDescriptorBuilderError"],[1813,"impl-From%3CUninitializedFieldError%3E-for-RegionDescriptorBuilderError"]]},\
"substrait":{"doc":"","t":"DQQIKAKAADLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNENDNDNDNNDGNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLL","n":["DFLogicalSubstraitConvertor","Error","Plan","SubstraitPlan","decode","df_substrait","encode","error","extension_serializer","DFLogicalSubstraitConvertor","borrow","borrow_mut","compat","compat_mut","compat_ref","decode","deref","deref_mut","drop","encode","from","from_subset","init","into","into_request","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ConvertDfSchema","ConvertDfSchemaSnafu","DFInternal","DFInternalSnafu","DecodeDfPlan","DecodeDfPlanSnafu","DecodeRel","DecodeRelSnafu","EmptyExpr","EmptyExprSnafu","EmptyPlan","EmptyPlanSnafu","EncodeDfPlan","EncodeDfPlanSnafu","EncodeRel","EncodeRelSnafu","Err","Error","Internal","InternalSnafu","InvalidParameters","InvalidParametersSnafu","MissingField","MissingFieldSnafu","Ok","ResolveTable","ResolveTableSnafu","Result","SchemaNotMatch","SchemaNotMatchSnafu","UnknownPlan","UnknownPlanSnafu","UnsupportedConcreteType","UnsupportedConcreteTypeSnafu","UnsupportedExpr","UnsupportedExprSnafu","UnsupportedPlan","UnsupportedPlanSnafu","UnsupportedSubstraitType","UnsupportedSubstraitTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","next","plan","reason","source","status_code","storage_schema","substrait_schema","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","field","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","name","plan","reason","source","source","source","storage_schema","substrait_schema","table_name","ty","ty","ExtensionSerializer","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize_logical_plan","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","serialize_logical_plan","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"substrait"],[9,"substrait::df_substrait"],[34,"substrait::error"],[642,"substrait::error::Error"],[678,"substrait::extension_serializer"],[703,"datafusion::catalog"],[704,"alloc::sync"],[705,"core::future::future"],[706,"alloc::boxed"],[707,"core::pin"],[708,"bytes::buf::buf_impl"],[709,"core::marker"],[710,"bytes::bytes"],[711,"core::result"],[712,"async_compat"],[713,"tonic::request"],[714,"tonic::request"],[715,"core::any"],[716,"core::any"],[717,"snafu::backtrace_inert"],[718,"alloc::string"],[719,"core::convert"],[720,"datatypes::data_type"],[721,"arrow_schema::schema"],[722,"core::clone"],[723,"alloc::vec"],[724,"core::fmt"],[725,"core::fmt"],[726,"common_error::status_code"],[727,"datafusion_expr::logical_plan::extension"],[728,"datafusion_common::error"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","SNAFU context selector for the <code>Error::ConvertDfSchema</code> …","","SNAFU context selector for the <code>Error::DFInternal</code> variant","","SNAFU context selector for the <code>Error::DecodeDfPlan</code> variant","","SNAFU context selector for the <code>Error::DecodeRel</code> variant","","SNAFU context selector for the <code>Error::EmptyExpr</code> variant","","SNAFU context selector for the <code>Error::EmptyPlan</code> variant","","SNAFU context selector for the <code>Error::EncodeDfPlan</code> variant","","SNAFU context selector for the <code>Error::EncodeRel</code> variant","Contains the error value","","","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the <code>Error::InvalidParameters</code> …","","SNAFU context selector for the <code>Error::MissingField</code> variant","Contains the success value","","SNAFU context selector for the <code>Error::ResolveTable</code> variant","","","SNAFU context selector for the <code>Error::SchemaNotMatch</code> …","","SNAFU context selector for the <code>Error::UnknownPlan</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the <code>Error::UnsupportedPlan</code> …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeserialize user defined logical plan node (…","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Serialize this node to a byte array. This serialization …","","","","","","",""],"i":[0,58,58,0,58,0,58,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,59,0,20,0,20,0,20,0,59,20,0,0,20,0,20,0,20,0,20,0,20,0,20,0,20,20,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,31,32,33,34,35,36,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,31,32,33,34,35,36,33,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,24,24,27,27,28,28,30,30,39,39,40,40,31,31,32,32,33,33,34,34,41,41,42,42,35,35,36,36,43,43,44,44,45,45,46,46,20,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,20,33,34,20,20,36,36,44,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,24,27,27,28,28,30,30,39,39,40,40,31,31,32,32,33,33,34,34,41,41,42,42,35,35,36,36,43,43,44,44,45,45,46,46,20,20,28,30,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,24,27,28,30,39,40,31,32,33,34,41,42,35,36,43,44,45,46,20,60,61,62,63,64,65,66,67,68,69,60,61,70,71,65,72,62,73,74,75,76,77,63,64,66,67,65,72,73,76,77,75,75,77,68,69,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53],"f":[0,0,0,0,[[-1,-2,[2,[1]],3,3],[[6,[[5,[4]]]]],[],[7,8]],0,[-1,[[10,[9]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[12,-1,[2,[1]],3,3],[[6,[[5,[4]]]]],[7,8]],[13,-1,[]],[13,-1,[]],[13,14],[12,[[10,[9]]]],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,21],[-1,22,[]],[20,[[18,[23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],20,[[26,[25]]]],[[[27,[-1]]],20,[[26,[25]]]],[[[28,[-1]]],20,[[26,[29]]]],[[[30,[-1]]],20,[[26,[25]]]],[31,20],[32,20],[[[33,[-1,-2]]],20,[[26,[25]]],[[26,[25]]]],[[[34,[-1]]],20,[[26,[25]]]],[35,20],[[[36,[-1,-2]]],20,[[26,[37]]],[[26,[37]]]],[20,[[18,[22]]]],[[[24,[-1]]],[[24,[-1]]],38],[[[27,[-1]]],[[27,[-1]]],38],[[[28,[-1]]],[[28,[-1]]],38],[[[30,[-1]]],[[30,[-1]]],38],[39,39],[40,40],[31,31],[32,32],[[[33,[-1,-2]]],[[33,[-1,-2]]],38,38],[[[34,[-1]]],[[34,[-1]]],38],[41,41],[42,42],[35,35],[[[36,[-1,-2]]],[[36,[-1,-2]]],38,38],[43,43],[[[44,[-1]]],[[44,[-1]]],38],[45,45],[46,46],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[[20,13,[47,[25]]],14],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[20,3],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[13,14],[[[24,[-1]]],[[10,[-2,20]]],[[26,[25]]],[]],[[[27,[-1]]],[[10,[-2,20]]],[[26,[25]]],[]],[[[28,[-1]]],[[10,[-2,20]]],[[26,[29]]],[]],[[[30,[-1]]],[[10,[-2,20]]],[[26,[25]]],[]],[31,[[10,[-1,20]]],[]],[32,[[10,[-1,20]]],[]],[[[33,[-1,-2]]],[[10,[-3,20]]],[[26,[25]]],[[26,[25]]],[]],[[[34,[-1]]],[[10,[-2,20]]],[[26,[25]]],[]],[35,[[10,[-1,20]]],[]],[[[36,[-1,-2]]],[[10,[-3,20]]],[[26,[37]]],[[26,[37]]],[]],0,[[[24,[-1]],48],49,50],[[[27,[-1]],48],49,50],[[[28,[-1]],48],49,50],[[[30,[-1]],48],49,50],[[39,48],49],[[40,48],49],[[31,48],49],[[32,48],49],[[[33,[-1,-2]],48],49,50,50],[[[34,[-1]],48],49,50],[[41,48],49],[[42,48],49],[[35,48],49],[[[36,[-1,-2]],48],49,50,50],[[43,48],49],[[[44,[-1]],48],49,50],[[45,48],49],[[46,48],49],[[20,48],49],[[20,48],49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1]]],20,[[26,[25]]]],[[[27,[-1]]],20,[[26,[25]]]],[[[28,[-1]]],20,[[26,[29]]]],[[[30,[-1]]],20,[[26,[25]]]],[39,20],[40,20],[31,20],[32,20],[[[33,[-1,-2]]],20,[[26,[25]]],[[26,[25]]]],[[[34,[-1]]],20,[[26,[25]]]],[41,20],[42,20],[35,20],[[[36,[-1,-2]]],20,[[26,[37]]],[[26,[37]]]],[43,20],[[[44,[-1]]],20,[[26,[25]]]],[45,20],[46,20],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,0,[20,[[18,[51]]]],0,0,[20,[[18,[22]]]],[20,52],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,25,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],0,0,[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[13,-1,[]],[13,-1,[]],[[53,3,[55,[54]]],[[57,[[2,[56]]]]]],[13,14],[-1,-1,[]],[-1,-2,[],[]],[[],13],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,17,[]],[[53,56],[[57,[[47,[54]]]]]],[-1,[[18,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CatalogList",703],[3,"Arc",704],[15,"str"],[8,"Future",705],[3,"Box",706],[3,"Pin",707],[8,"Buf",708],[8,"Send",709],[3,"Bytes",710],[4,"Result",711],[3,"Compat",712],[3,"DFLogicalSubstraitConvertor",9],[15,"usize"],[15,"tuple"],[3,"Request",713],[3,"Request",713],[15,"bool"],[4,"Option",714],[3,"TypeId",715],[4,"Error",34],[8,"Any",715],[8,"Error",716],[3,"Backtrace",717],[3,"UnsupportedPlanSnafu",34],[3,"String",718],[8,"Into",719],[3,"UnsupportedExprSnafu",34],[3,"UnsupportedConcreteTypeSnafu",34],[4,"ConcreteDataType",720],[3,"UnsupportedSubstraitTypeSnafu",34],[3,"EmptyPlanSnafu",34],[3,"EmptyExprSnafu",34],[3,"MissingFieldSnafu",34],[3,"InvalidParametersSnafu",34],[3,"UnknownPlanSnafu",34],[3,"SchemaNotMatchSnafu",34],[6,"SchemaRef",721],[8,"Clone",722],[3,"DecodeRelSnafu",34],[3,"EncodeRelSnafu",34],[3,"DFInternalSnafu",34],[3,"InternalSnafu",34],[3,"ConvertDfSchemaSnafu",34],[3,"ResolveTableSnafu",34],[3,"EncodeDfPlanSnafu",34],[3,"DecodeDfPlanSnafu",34],[3,"Vec",723],[3,"Formatter",724],[6,"Result",724],[8,"Debug",724],[8,"StackError",725],[4,"StatusCode",726],[3,"ExtensionSerializer",678],[15,"u8"],[15,"slice"],[8,"UserDefinedLogicalNode",727],[6,"Result",728],[8,"SubstraitPlan",0],[6,"Result",34],[13,"DecodeRel",642],[13,"EncodeRel",642],[13,"DFInternal",642],[13,"EncodeDfPlan",642],[13,"DecodeDfPlan",642],[13,"MissingField",642],[13,"UnsupportedPlan",642],[13,"UnsupportedExpr",642],[13,"UnsupportedConcreteType",642],[13,"UnsupportedSubstraitType",642],[13,"EmptyPlan",642],[13,"EmptyExpr",642],[13,"InvalidParameters",642],[13,"Internal",642],[13,"UnknownPlan",642],[13,"SchemaNotMatch",642],[13,"ConvertDfSchema",642],[13,"ResolveTable",642]],"b":[[307,"impl-Debug-for-Error"],[308,"impl-Display-for-Error"]]},\
"table":{"doc":"","t":"CCDCCCCLLLLLLLLMALAALLLLLLLLAOAMAAAAALLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNGNNIIGGDMMKKLLLLLLLMMLLLLKLLLLLLLLLLKKLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKKMMMMMMMMKLLLLLLLLLKKLLLLLLLLLLLLNDNDNDNDNDNDNDNENDNDNDNNDNDNDGNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNEGNNNNNNENNNNNNNNDDNDGDDDEGDDEEGNNNNNNNNNNNNNNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMLLLLLLMMMLMMMLMMMMLMMMMLLMMMLLLMMMLMMMLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLMMLLLLDLLLLLLLLLLLOLLLLLLMLLLLMLLLLLLDNEDDDDEDDDDNDNRRRRDNDDRNRDDRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMMMMMMMMDDLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLMLLLLLLLLIIGGAMMKAKAMMMMAKKLKKDLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLDLLLLLLLLLLLMLLLLLLLLLMLMLLLLLLLLLLRRDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLMMMLLLLLLLLLLLLLLLDDDAAAAMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFDDLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLL","n":["ColumnStatistics","Error","RegionStat","Result","Table","TableRef","TableStatistics","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","disk_usage_bytes","dist_table","drop","engine","error","fmt","from","from_subset","init","into","into_request","into_request","is_in_subset","metadata","meter_insert_request","predicate","region_id","requests","stats","table","test_util","thin_table","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DistTable","DummyDataSource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","get_stream","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","table","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CloseTableResult","EngineContext","NotFound","OwnedTableReference","PartialClosed","Released","TableEngine","TableEngineProcedure","TableEngineProcedureRef","TableEngineRef","TableReference","alloc","alloc","alter_table","alter_table_procedure","bare","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","clone","clone","clone_into","clone_into","close","close_table","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_table","create_table_procedure","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_table","drop_table_procedure","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","full","get_hash","get_table","hash","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","name","open_table","phantom","phantom","ptr","ptr","schema","schema","table","table","table_exists","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate_table","truncate_table_procedure","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BuildColumnDescriptor","BuildColumnDescriptorSnafu","ColumnExists","ColumnExistsSnafu","ColumnNotExists","ColumnNotExistsSnafu","Datafusion","DatafusionSnafu","DuplicatedExecuteCall","DuplicatedExecuteCallSnafu","EngineExist","EngineExistSnafu","EngineNotFound","EngineNotFoundSnafu","Err","Error","InvalidAlterRequest","InvalidAlterRequestSnafu","InvalidTable","InvalidTableSnafu","MissingTimeIndexColumn","MissingTimeIndexColumnSnafu","Ok","ParseTableOption","ParseTableOptionSnafu","RegionSchemaMismatch","RegionSchemaMismatchSnafu","RemoveColumnInIndex","RemoveColumnInIndexSnafu","Result","SchemaBuild","SchemaBuildSnafu","SchemaConversion","SchemaConversionSnafu","TableOperation","TableOperationSnafu","TableProjection","TableProjectionSnafu","TablesRecordBatch","TablesRecordBatchSnafu","Unsupported","UnsupportedSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","column_name","column_name","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","err","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","msg","next","operation","source","status_code","table","table","table","table_id","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","column_name","column_name","column_name","engine","engine","err","error","error","error","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","operation","source","source","source","source","table","table","table","table_id","table_name","table_name","table_name","table_name","table_name","value","ArrowCompute","BadArrayAccess","Base","CastTimeType","CastType","Conversion","ConvertError","ConvertResult","DefaultValueType","Deserialize","DuplicateColumn","DuplicateMeta","Err","Exact","FilterPushDownType","Inexact","InvalidPrecisionOrScale","InvalidTimestampIndex","InvalidTimestampPrecision","NullDefault","Ok","ParseSchemaVersion","ProjectArrowSchema","RawTableInfo","RawTableMeta","Serialize","SplitResult","TableId","TableIdent","TableInfo","TableInfoBuilder","TableInfoBuilderError","TableInfoRef","TableMeta","TableMetaBuilder","TableMetaBuilderError","TableType","TableVersion","Temporary","ToScalarValue","TryFromValue","UninitializedField","UninitializedField","UnknownVector","Unsupported","UnsupportedArrowType","UnsupportedDefaultExpr","UnsupportedOperation","ValidationError","ValidationError","ValueExceedsPrecision","View","add_columns","alloc","alloc_new_column","as_any","as_error_source","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder_with_alter_kind","catalog_name","catalog_name","catalog_name","catalog_name","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_names","columns_at_after","columns_at_first","columns_at_last","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","create_empty","created_on","created_on","created_on","created_on","debug_fmt","default","default","default","default_value_indices","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","desc","desc","desc","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","engine","engine","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field_column_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","full_table_name","ident","ident","ident","ident","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","meta","meta","meta","meta","name","name","name","name","new","new","new_external_table","new_meta_builder","next","next_column_id","next_column_id","next_column_id","next_column_id","options","options","options","options","partition_key_indices","partition_key_indices","partition_key_indices","partition_key_indices","phantom","primary_key_indices","primary_key_indices","primary_key_indices","primary_key_indices","ptr","region_ids","region_numbers","region_numbers","region_numbers","region_numbers","remove_columns","row_key_column_names","schema","schema","schema","schema","schema_name","schema_name","schema_name","schema_name","serialize","serialize","serialize","serialize","serialize","source","split_requests_by_column_location","status_code","table_id","table_id","table_id","table_type","table_type","table_type","table_type","table_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_indices","value_indices","value_indices","value_indices","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","arrow_type","column","error","error","error","error","error","error","error","error","expr","from","index","index","json","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","precision","precision","precision","reason","reason","reason","scale","size","value","vector_type","Predicate","TimeRangePredicateBuilder","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","empty","exprs","extract_from_between_expr","extract_from_binary_expr","extract_from_in_list_expr","extract_time_range_from_expr","filters","fmt","from","from","from_ref","from_subset","from_subset","get_timestamp_filter","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","prune_primary_key","prune_row_groups","prune_with_stats","stats","to_owned","to_physical_exprs","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","ts_col_name","ts_col_unit","type_id","type_id","vzip","vzip","RowGroupPruningStatistics","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","field_by_name","from","from_subset","impl_min_max_values","init","into","into_request","into_request","is_in_subset","max_values","meta_data","min_values","new","null_counts","num_containers","schema","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","AddColumnRequest","AddColumns","AlterKind","AlterTableRequest","CloseTableRequest","CompactTableRequest","CopyDatabaseRequest","CopyDirection","CopyTableRequest","CreateDatabaseRequest","CreateTableRequest","DeleteRequest","DropColumns","DropTableRequest","Export","FILE_TABLE_FORMAT_KEY","FILE_TABLE_LOCATION_KEY","FILE_TABLE_META_KEY","FILE_TABLE_PATTERN_KEY","FlushTableRequest","Import","InsertRequest","OpenTableRequest","REGIONS_KEY","RenameTable","TTL_KEY","TableOptions","TruncateTableRequest","WRITE_BUFFER_SIZE_KEY","alter_kind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_schema","columns_values","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","connection","connection","create_if_not_exists","create_if_not_exists","db_name","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","eq","equivalent","equivalent","equivalent","equivalent","extra_options","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","is_rename_table","key_column_values","location","location","location","pattern","primary_key_indices","region_number","region_number","region_numbers","region_numbers","region_numbers","schema","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","table_id","table_id","table_id","table_id","table_id","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_options","table_ref","table_ref","table_ref","table_ref","table_ref","table_version","time_range","timestamp_range","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_table_option","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait","with","with","write_buffer_size","columns","names","new_table_name","ColumnStatistics","TableStatistics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","column_statistics","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","distinct_count","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_exact","is_in_subset","is_in_subset","max_value","min_value","null_count","num_rows","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","total_byte_size","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Table","TableIdProvider","TableIdProviderRef","TableRef","adapter","alloc","alloc","as_any","metrics","next_table_id","numbers","phantom","phantom","ptr","ptr","scan","scan_to_stream","schema","supports_filters_pushdown","table_info","table_type","DfTableProviderAdapter","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","into_request","is_in_subset","new","scan","scan_req","schema","supports_filters_pushdown","table","table","table_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_ordering_hint","MemoryUsageMetrics","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","drop","end_time","fmt","from","from_ref","from_subset","init","into","into_request","into_request","is_in_subset","mem_used","new","output_rows","record_mem_usage","record_output","to_owned","to_subset","to_subset_unchecked","try_done","try_from","try_into","type_id","vzip","NUMBERS_TABLE_NAME","NUMBER_COLUMN","NumbersDataSource","NumbersStream","NumbersTable","already_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get_stream","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","limit","new","poll_next","schema","schema","schema","schema","table","table_info","table_with_name","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","StreamScanAdapter","StreamWithMetricWrapper","as_any","borrow","borrow","borrow_mut","borrow_mut","children","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","execute","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","metric","metric","metrics","new","output_ordering","output_ordering","output_partitioning","poll_next","schema","schema","schema","stream","stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","with_new_children","with_output_ordering","EmptyTable","MemTable","MockTableEngine","empty_table","memtable","mock_engine","table_info","tables","EmptyDataSource","EmptyTable","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","from_table_info","get_stream","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","schema","table","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MemTable","MemtableDataSource","MemtableStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default_numbers_table","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","get_stream","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","new_with_catalog","new_with_region","poll_next","recordbatch","recordbatch","schema","schema","table","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","MockTableEngine","alter_table","alter_table_procedure","borrow","borrow_mut","close","compat","compat_mut","compat_ref","create_table","create_table_procedure","default","deref","deref_mut","drop","drop_table","drop_table_procedure","from","from_subset","get_table","init","into","into_request","into_request","is_in_subset","name","new","open_table","table_exists","tables","to_subset","to_subset_unchecked","truncate_table","truncate_table_procedure","try_from","try_into","type_id","vzip","test_table_info","ThinTable","ThinTableAdapter","as_any","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_source","data_source","deref","deref","deref_mut","deref_mut","drop","drop","filter_pushdown","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","new","new","scan_to_stream","schema","supports_filters_pushdown","table","table_info","table_info","table_type","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"table"],[43,"table::dist_table"],[93,"table::engine"],[216,"table::error"],[848,"table::error::Error"],[892,"table::metadata"],[1430,"table::metadata::ConvertError"],[1482,"table::predicate"],[1549,"table::predicate::stats"],[1580,"table::requests"],[2147,"table::requests::AlterKind"],[2150,"table::stats"],[2224,"table::table"],[2245,"table::table::adapter"],[2277,"table::table::metrics"],[2312,"table::table::numbers"],[2400,"table::table::scan"],[2466,"table::test_util"],[2474,"table::test_util::empty_table"],[2522,"table::test_util::memtable"],[2601,"table::test_util::mock_engine"],[2639,"table::test_util::table_info"],[2640,"table::thin_table"],[2697,"async_compat"],[2698,"core::fmt"],[2699,"core::fmt"],[2700,"tonic::request"],[2701,"tonic::request"],[2702,"core::any"],[2703,"store_api::storage::requests"],[2704,"common_recordbatch"],[2705,"common_error::ext"],[2706,"core::future::future"],[2707,"alloc::boxed"],[2708,"core::pin"],[2709,"common_procedure::procedure"],[2710,"core::fmt"],[2711,"core::marker"],[2712,"core::hash"],[2713,"core::any"],[2714,"snafu::backtrace_inert"],[2715,"core::convert"],[2716,"core::clone"],[2717,"alloc::vec"],[2718,"core::fmt"],[2719,"datatypes::schema::column_schema"],[2720,"store_api::storage::descriptors"],[2721,"chrono::offset::utc"],[2722,"chrono::datetime"],[2723,"alloc::alloc"],[2724,"serde::de"],[2725,"core::iter::traits::iterator"],[2726,"datafusion_expr::table_source"],[2727,"derive_builder::error"],[2728,"store_api::storage::descriptors"],[2729,"serde::ser"],[2730,"common_time::range"],[2731,"datafusion_expr::expr"],[2732,"datafusion_expr::operator"],[2733,"common_time::timestamp"],[2734,"common_time::timestamp"],[2735,"arrow_array::record_batch"],[2736,"parquet::file::metadata"],[2737,"arrow_schema::schema"],[2738,"datafusion::physical_optimizer::pruning"],[2739,"datafusion_physical_expr::physical_expr"],[2740,"alloc::sync"],[2741,"arrow_schema::datatype"],[2742,"datafusion_common::column"],[2743,"arrow_array::array"],[2744,"std::collections::hash::map"],[2745,"datafusion::execution::context"],[2746,"datafusion_common::error"],[2747,"datafusion_expr::table_source"],[2748,"core::task::wake"],[2749,"core::task::poll"],[2750,"common_query::physical_plan"],[2751,"datafusion_execution::task"],[2752,"common_query::error"],[2753,"datafusion_physical_plan::metrics"],[2754,"datafusion_physical_expr::partitioning"],[2755,"common_recordbatch::recordbatch"],[2756,"store_api::storage::descriptors"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Table and TableEngine requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","CloseTableResult","Table engine context.","","","","","Table engine abstraction.","Procedures for table engine.","","","Represents a resolved path to a table of the form …","","","Alter table schema, options etc. by given request,","Returns a procedure that alters a table by specific <code>request</code>…","","","","","","","","","","","","","","Close the engine.","Closes the (partial) given table.","","","","","","","","","","Create a table by given request.","Returns a procedure that creates a table by specific …","","","","","","","","","","","Drops the given table. Return true if the table is …","Returns a procedure that drops a table by specific <code>request</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the table by it’s name.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Return engine name","Open an existing table by given <code>request</code>, returns the …","","","","","","","","","Returns true when the given table is exists.","","","","","","","","","","","Returns a procedure that truncates a table by specific …","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildColumnDescriptor</code>…","","SNAFU context selector for the <code>Error::ColumnExists</code> variant","","SNAFU context selector for the <code>Error::ColumnNotExists</code> …","","SNAFU context selector for the <code>Error::Datafusion</code> variant","","SNAFU context selector for the <code>Error::DuplicatedExecuteCall</code>…","","SNAFU context selector for the <code>Error::EngineExist</code> variant","","SNAFU context selector for the <code>Error::EngineNotFound</code> …","Contains the error value","Default error implementation of table.","","SNAFU context selector for the <code>Error::InvalidAlterRequest</code> …","","SNAFU context selector for the <code>Error::InvalidTable</code> variant","","SNAFU context selector for the …","Contains the success value","","SNAFU context selector for the <code>Error::ParseTableOption</code> …","","SNAFU context selector for the <code>Error::RegionSchemaMismatch</code> …","","SNAFU context selector for the <code>Error::RemoveColumnInIndex</code> …","","","SNAFU context selector for the <code>Error::SchemaBuild</code> variant","","SNAFU context selector for the <code>Error::SchemaConversion</code> …","","SNAFU context selector for the <code>Error::TableOperation</code> …","","SNAFU context selector for the <code>Error::TableProjection</code> …","","SNAFU context selector for the <code>Error::TablesRecordBatch</code> …","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coden ordinary physical table.","","","","","","","","","","Contains the error value","The provider guarantees that all returned data satisfies …","Indicates whether and how a filter expression can be …","The expression can be used to help minimise the data …","","","","","Contains the success value","","","Struct used to serialize and deserialize <code>TableInfo</code>.","Struct used to serialize and deserialize <code>TableMeta</code>.","","The result after splitting requests by column location …","","Identifier of the table.","","Builder for <code>TableInfo</code>.","Error type for TableInfoBuilder","","The table metadata Note: if you add new fields to this …","Builder for <code>TableMeta</code>.","Error type for TableMetaBuilder","Indicates the type of this table for metadata/catalog …","","A transient table.","","","Uninitialized field","Uninitialized field","","The expression cannot be used by the provider.","","","","Custom validation error","Custom validation error","","A non-materialised table that itself uses a query …","","","Allocate a new column for the table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>TableMeta</code>.","Builds a new <code>TableInfo</code>.","Returns the new TableMetaBuilder after applying given …","","","","","","","","","","","","","","","","","","","","","","all column names should be added.","column requests should be added after already exist …","column requests should be added at first place.","column requests should be added at last place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comment of the table.","Comment of the table.","Comment of the table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the full table name in the form of …","Id and version of the table.","Id and version of the table.","Id and version of the table.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of the table.","Name of the table.","Name of the table.","","","","","","","","","","","Table options.","Table options.","Table options.","","","","","","","The indices of columns in primary key. Note that the index …","The indices of columns in primary key. Note that the index …","The indices of columns in primary key. Note that the index …","","","","","","","","","","","","","","","","","","","","","","","","Split requests into different groups using column location …","","","","Unique id of this table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the table, bumped when metadata (such as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>TimeRangePredicateBuilder</code> extracts time range from logical …","","","","","","","","","","","","","","","","","","","","Builds an empty predicate from given schema.","logical exprs","","","Extract time range filter from <code>IN (...)</code> expr.","Extract time range filter from <code>WHERE</code>/<code>IN (...)</code>/<code>BETWEEN</code> …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Creates a new <code>Predicate</code> by converting logical exprs to …","Prunes primary keys","Evaluates the predicate against row group metadata. …","Evaluates the predicate against the <code>stats</code>. Returns a …","","","Builds physical exprs according to provided schema.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Add column request","","","Alter table request","Close table request","","","","Copy table request","","Create table request","Delete (by primary key) request","","Drop table request","","","","","","","","","Open table request","","","","","Truncate table requestxtra options that may not applicable to all table engines.","flush regions","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Values of each column in this table’s primary key and …","","","","","","","","","","Do nothing if region_numbers is empty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time-to-live of table. Expired data will be automatically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait until the flush is done.","Wait until the compaction is done.","","","Memtable size of memtable.","","","","Statistics for a column within a relation","Statistics for a relation Fields are optional and can be …","","","","","","","","","Statistics on a column level","","","","","","","","","","","","","Number of distinct values","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","If true, any field that is <code>Some(..)</code> is the actual value in …","","","Maximum value of column","Minimum value of column","Number of null values on column","The number of table rows","","","","","","","total bytes of the table rows","","","","","","","","","Table abstraction.","","","","","","","Returns the table as <code>Any</code> so that it can be downcast to a …","","","","","","","","","","Get a reference to the schema for this table","Tests whether the table provider can make use of any or …","Get a reference to the table info.","Get the type of this table for metadata/catalog purposes.","Adapt greptime’s TableRef to DataFusion’s TableProvider…","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","This metrics struct is used to record and hold memory usage","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Create a new MemoryUsageMetrics structure, and set …","","","","","","","Record the end time of the query","","","","","","","","","numbers table for test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt greptime’s SendableRecordBatchStream to GreptimeDB…","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 1 column 100 rows table, with table name “…","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The <code>ThinTable</code> struct will replace the <code>Table</code> trait. …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,2,0,0,2,2,2,2,2,2,2,2,0,0,0,2,0,0,0,0,0,2,2,2,2,2,2,0,0,14,13,14,13,13,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,13,14,13,14,14,13,14,13,14,14,13,13,14,13,13,13,14,13,14,13,14,13,14,13,14,13,14,13,0,0,33,0,33,33,0,0,0,0,0,163,164,165,166,28,28,33,20,28,33,20,167,28,28,20,28,20,165,165,28,33,20,28,33,20,28,33,20,165,166,20,28,33,20,28,33,20,28,33,20,165,166,28,28,28,28,28,28,28,33,20,28,33,20,28,20,28,33,20,28,28,165,28,28,33,20,28,33,20,28,28,33,33,20,20,28,33,20,165,165,163,164,163,164,167,28,167,28,165,28,20,28,28,33,20,28,33,20,165,166,28,33,20,28,33,20,28,33,20,28,33,20,43,0,43,0,43,0,43,0,43,0,43,0,43,0,26,0,43,0,43,0,43,0,26,43,0,43,0,43,0,0,43,0,43,0,43,0,43,0,43,0,43,0,43,43,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,47,49,50,51,52,53,54,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,50,51,53,66,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,47,49,57,47,49,50,51,52,53,54,55,56,57,58,59,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,60,60,61,61,47,47,49,49,63,63,64,64,50,50,65,65,51,51,52,52,53,53,66,66,54,54,67,67,55,55,56,56,57,57,58,58,59,59,43,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,56,65,43,55,43,43,52,54,57,58,50,51,53,66,59,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,56,60,61,47,49,63,64,50,65,51,52,53,66,54,67,55,56,57,58,59,43,168,169,170,171,172,173,174,175,176,171,177,175,178,172,173,176,179,168,180,169,181,170,171,182,177,174,183,184,180,185,178,179,180,186,181,182,174,183,168,169,170,171,184,177,78,78,85,78,78,78,0,0,78,78,78,78,104,84,0,84,78,78,78,78,104,78,78,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,85,78,78,79,82,78,84,78,78,78,79,82,78,85,72,18,72,78,79,82,78,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,75,80,72,80,80,81,88,78,84,85,86,75,72,81,87,88,84,85,86,75,72,81,87,88,102,102,102,102,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,75,80,75,75,72,87,78,86,75,80,75,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,80,80,81,88,78,84,85,86,87,88,102,84,85,86,75,79,72,80,82,81,87,88,78,75,75,72,87,84,85,86,72,81,87,88,84,84,84,84,85,85,85,85,86,86,86,86,72,72,72,72,81,81,81,81,87,87,87,87,88,88,88,88,72,84,85,85,86,79,79,72,82,82,81,87,88,78,78,102,84,84,85,86,86,75,79,79,79,72,80,82,82,82,81,87,87,88,88,78,84,85,86,75,72,81,87,88,102,84,85,86,75,79,72,80,82,81,87,88,78,81,80,80,81,88,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,102,84,84,85,85,86,86,75,75,79,79,72,72,80,80,82,82,81,81,87,87,88,88,78,78,102,84,85,86,75,79,72,80,82,81,87,88,78,80,80,81,88,80,80,81,88,86,80,75,72,78,75,75,72,87,75,75,72,87,75,75,72,87,18,75,75,72,87,18,81,75,75,72,87,72,72,75,75,72,87,80,80,81,88,84,85,86,87,88,78,72,78,80,81,86,80,80,81,88,80,84,85,86,75,72,81,87,88,85,79,82,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,72,80,82,81,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,102,84,85,86,75,79,72,80,82,81,87,88,78,75,75,72,87,86,102,84,85,86,75,79,72,80,82,81,87,88,78,187,188,189,190,191,192,193,194,195,196,197,198,199,200,190,201,189,190,198,199,202,187,203,191,200,204,192,193,194,197,205,206,201,207,208,188,209,195,196,202,204,203,208,195,196,206,207,209,195,199,191,203,0,0,105,107,105,107,105,107,107,105,107,105,107,105,107,105,107,105,107,105,107,107,107,105,105,105,105,105,107,105,107,107,105,107,105,105,107,105,107,105,105,107,107,105,107,105,107,107,107,107,0,107,107,105,107,105,107,105,107,105,107,105,105,105,107,105,107,0,119,119,119,119,119,119,119,119,119,119,119,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,83,0,0,0,0,0,0,0,0,0,0,83,0,129,0,0,0,0,0,129,0,0,0,83,0,0,0,0,21,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,30,40,21,31,29,127,128,130,124,125,42,126,123,30,97,40,21,73,83,31,29,124,125,42,126,123,30,97,40,21,73,83,31,29,124,125,42,126,73,127,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,130,126,123,30,123,97,124,125,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,30,30,97,21,73,83,31,29,42,126,130,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,30,97,97,97,97,97,97,29,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,30,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,123,30,30,97,97,40,40,21,21,73,73,83,83,31,31,29,29,127,127,128,128,129,129,130,130,124,124,125,125,42,42,126,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,73,21,128,73,130,126,130,30,124,125,30,40,29,30,30,40,21,31,29,127,128,130,124,125,42,126,30,97,21,73,83,31,29,42,126,40,21,31,29,42,30,40,21,31,29,127,128,130,124,125,42,30,30,21,31,29,42,21,126,130,123,30,97,40,21,73,83,31,29,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,97,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,0,123,30,97,40,21,73,83,31,29,127,128,129,130,124,125,42,126,124,125,130,126,97,210,211,212,0,0,132,133,132,133,132,133,132,133,132,132,133,132,133,132,133,132,133,132,133,132,133,133,132,133,132,133,132,132,132,132,133,133,133,133,132,133,132,133,132,133,132,133,132,133,132,133,132,132,133,133,132,132,133,133,133,133,132,132,133,132,133,132,133,132,132,133,132,133,132,133,132,133,0,0,0,0,0,19,213,214,0,215,0,19,213,19,213,0,214,214,214,214,214,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,0,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,0,0,0,0,0,143,142,143,141,142,143,141,141,141,142,143,141,142,143,141,142,143,141,142,143,141,142,143,141,142,143,141,141,142,143,141,141,142,143,141,142,142,143,141,142,143,141,142,142,143,143,141,141,143,143,142,143,141,143,142,143,143,141,142,143,141,141,141,141,142,143,141,142,143,141,142,143,141,142,143,141,143,142,143,141,142,143,141,0,0,146,146,153,146,153,146,146,153,146,153,146,153,146,153,146,153,146,153,146,146,146,153,146,153,146,153,146,153,146,146,153,153,153,153,146,153,146,153,146,146,146,146,146,153,146,153,146,146,153,146,153,146,153,146,153,146,153,153,146,153,146,153,146,146,0,0,0,0,0,0,0,159,0,0,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,154,216,216,154,154,216,154,154,216,216,154,216,154,216,154,216,154,216,154,216,154,0,0,0,217,155,158,217,155,158,217,155,158,217,155,158,217,155,158,217,217,155,158,217,155,158,217,155,158,217,155,158,217,155,158,155,217,155,158,217,155,158,217,217,155,155,158,158,158,158,217,155,158,217,217,158,155,158,158,158,217,217,155,158,217,155,158,217,155,158,217,155,158,158,217,155,158,217,155,158,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,0,0,0,160,162,160,162,160,162,160,162,160,162,160,160,160,162,160,162,160,162,160,162,162,160,162,160,162,160,162,160,162,162,160,160,162,160,162,160,160,160,160,160,160,162,160,162,160,162,160,162,160,162,160,162,160,162,160],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],2],[3,-1,[]],[3,-1,[]],0,0,[3,4],0,0,[[2,5],[[7,[4,6]]]],[-1,-1,[]],[-1,-2,[],[]],[[],3],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[14,15],[[7,[16,17]]]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[18,19],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,20,21],[[24,[[23,[22]]]]],[]],[[-1,20,21],[[26,[25]]],[]],[27,28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[28,28],[20,20],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[-1,[[24,[[23,[22]]]]],[]],[[-1,20,29],[[24,[[23,[22]]]]],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[-1,20,30],[[24,[[23,[22]]]]],[]],[[-1,20,30],[[26,[25]]],[]],[[],20],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[[-1,20,31],[[24,[[23,[22]]]]],[]],[[-1,20,31],[[26,[25]]],[]],[[28,28],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[28,5],32],[[28,5],32],[[33,5],32],[[20,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[27,27,27],28],[[-1,-2],34,[35,36],37],[[-1,20,38],[[26,[[11,[19]]]]],[]],[[28,-1],4,39],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,27,[]],[[-1,20,40],[[24,[[23,[22]]]]],[]],0,0,0,0,0,0,0,0,[[-1,20,38],10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,20,42],[[24,[[23,[22]]]]],[]],[[-1,20,42],[[26,[25]]],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,44],[-1,45,[]],[43,[[11,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[47,[-1]]],43,[[48,[41]]]],[[[49,[-1]]],43,[[48,[41]]]],[[[50,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[51,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[52,[-1]]],43,[[48,[41]]]],[[[53,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[54,[-1]]],43,[[48,[41]]]],[[[55,[-1]]],43,[[48,[41]]]],[[[56,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[57,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[58,[-1]]],43,[[48,[38]]]],[[[59,[-1]]],43,[[48,[41]]]],[43,[[11,[45]]]],[60,60],[61,61],[[[47,[-1]]],[[47,[-1]]],62],[[[49,[-1]]],[[49,[-1]]],62],[63,63],[64,64],[[[50,[-1,-2]]],[[50,[-1,-2]]],62,62],[[[65,[-1]]],[[65,[-1]]],62],[[[51,[-1,-2]]],[[51,[-1,-2]]],62,62],[[[52,[-1]]],[[52,[-1]]],62],[[[53,[-1,-2]]],[[53,[-1,-2]]],62,62],[[[66,[-1,-2]]],[[66,[-1,-2]]],62,62],[[[54,[-1]]],[[54,[-1]]],62],[67,67],[[[55,[-1]]],[[55,[-1]]],62],[[[56,[-1,-2]]],[[56,[-1,-2]]],62,62],[[[57,[-1,-2]]],[[57,[-1,-2]]],62,62],[[[58,[-1]]],[[58,[-1]]],62],[[[59,[-1]]],[[59,[-1]]],62],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[43,3,[68,[41]]],4],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[43,27],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,0,0,[[[47,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[[49,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[[50,[-1,-2]]],[[7,[-3,43]]],[[48,[41]]],[[48,[41]]],[]],[[[51,[-1,-2]]],[[7,[-3,43]]],[[48,[41]]],[[48,[41]]],[]],[[[52,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[[53,[-1,-2]]],[[7,[-3,43]]],[[48,[41]]],[[48,[41]]],[]],[[[54,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[[55,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[[56,[-1,-2]]],[[7,[-3,43]]],[[48,[41]]],[[48,[41]]],[]],[[[57,[-1,-2]]],[[7,[-3,43]]],[[48,[41]]],[[48,[41]]],[]],[[[58,[-1]]],[[7,[-2,43]]],[[48,[38]]],[]],[[[59,[-1]]],[[7,[-2,43]]],[[48,[41]]],[]],[[60,5],32],[[61,5],32],[[[47,[-1]],5],32,69],[[[49,[-1]],5],32,69],[[63,5],32],[[64,5],32],[[[50,[-1,-2]],5],32,69,69],[[[65,[-1]],5],32,69],[[[51,[-1,-2]],5],32,69,69],[[[52,[-1]],5],32,69],[[[53,[-1,-2]],5],32,69,69],[[[66,[-1,-2]],5],32,69,69],[[[54,[-1]],5],32,69],[[67,5],32],[[[55,[-1]],5],32,69],[[[56,[-1,-2]],5],32,69,69],[[[57,[-1,-2]],5],32,69,69],[[[58,[-1]],5],32,69],[[[59,[-1]],5],32,69],[[43,5],32],[[43,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,43],[61,43],[[[47,[-1]]],43,[[48,[41]]]],[[[49,[-1]]],43,[[48,[41]]]],[63,43],[64,43],[[[50,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[65,[-1]]],43,[[48,[41]]]],[[[51,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[52,[-1]]],43,[[48,[41]]]],[[[53,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[66,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[54,[-1]]],43,[[48,[41]]]],[67,43],[[[55,[-1]]],43,[[48,[41]]]],[[[56,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[57,[-1,-2]]],43,[[48,[41]]],[[48,[41]]]],[[[58,[-1]]],43,[[48,[38]]]],[[[59,[-1]]],43,[[48,[41]]]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,[43,[[11,[70]]]],0,[43,[[11,[45]]]],[43,71],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[72,27,[74,[73]]],[[26,[75]]]],0,[[72,27,76],[[26,[77]]]],[78,44],[-1,45,[]],[-1,45,[]],[-1,45,[]],[78,[[11,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,[[7,[72,79]]]],[80,[[7,[81,82]]]],[[72,27,83],[[26,[75]]]],[[80,-1],80,[[48,[41]]]],0,0,0,[78,[[11,[45]]]],[84,84],[85,85],[86,86],[75,75],[72,72],[81,81],[87,87],[88,88],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],75],[[],80],[[75,[90,[89]]],75],0,0,0,[[78,3,[68,[41,91]]],4],[[],86],[[],75],[[],80],[75,[[7,[[68,[3]],41]]]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[[80,-1],80,[[48,[[11,[41]]]]]],0,0,0,[78,27],[-1,[[7,[84]]],92],[-1,[[7,[85]]],92],[-1,[[7,[86]]],92],[-1,[[7,[87]]],92],[-1,[[7,[88]]],92],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[[75,-1],75,[[48,[41]]]],0,0,0,[[84,84],10],[[85,85],10],[[86,86],10],[[72,72],10],[[81,81],10],[[87,87],10],[[88,88],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[72,[[0,[93]]]],[[84,5],32],[[85,5],32],[[85,5],32],[[86,5],32],[[79,5],32],[[79,5],32],[[72,5],32],[[82,5],32],[[82,5],32],[[81,5],32],[[87,5],32],[[88,5],32],[[78,5],[[7,[4,6]]]],[[78,5],[[7,[4,6]]]],[-1,-1,[]],[94,84],[-1,-1,[]],[-1,-1,[]],[38,86],[-1,-1,[]],[-1,-1,[]],[41,79],[-1,-1,[]],[95,79],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,82],[95,82],[-1,-1,[]],[72,87],[-1,-1,[]],[-1,-1,[]],[81,88],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,41],[[80,-1],80,[[48,[86]]]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[80,72],80],0,0,0,[[80,-1],80,[[48,[41]]]],0,0,0,[38,86],[[-1,72],80,[[48,[41]]]],[[],75],[72,75],[78,[[11,[70]]]],[[75,96],75],0,0,0,[[75,97],75],0,0,0,[[75,[68,[3]]],75],0,0,0,0,[[75,[68,[3]]],75],0,0,0,0,[81,[[68,[98]]]],[[75,-1],75,[[48,[[68,[99]]]]]],0,0,0,[[72,27,[74,[41]]],[[26,[75]]]],[72,[[0,[93]]]],[[75,100],75],0,0,0,[[80,-1],80,[[48,[41]]]],0,0,0,[[84,-1],7,101],[[85,-1],7,101],[[86,-1],7,101],[[87,-1],7,101],[[88,-1],7,101],[78,[[11,[45]]]],[[72,27,[74,[73]]],[[26,[102]]]],[78,71],[[80,38],80],[81,38],0,[[80,85],80],0,0,0,[[80,103],80],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[87,[[104,[72]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[88,[[104,[81]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[75,[68,[3]]],75],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,106],[107,107],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[[],107],0,[[105,108,10,108,108],[[11,[106]]]],[[105,108,109,108],[[11,[106]]]],[[105,108,10,[74,[108]]],[[11,[106]]]],[[105,108],[[11,[106]]]],0,[[107,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[105,108,108],[[11,[[4,[110,10]]]]]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[27,111,[74,[112]]],105],[[[68,[112]]],107],[[107,113],[[26,[10]]]],[[107,[74,[114]],100],[[68,[10]]]],[[107,-1,115],[[68,[10]]],116],0,[-1,-2,[],[]],[[107,115],[[26,[[68,[[118,[117]]]]]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,0,[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,4],[[119,27],[[11,[[4,[3,120]]]]]],[-1,-1,[]],[-1,-2,[],[]],0,[[],3],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[119,121],[[11,[122]]]],0,[[119,121],[[11,[122]]]],[[[74,[114]],100],119],[[119,121],[[11,[122]]]],[119,3],0,[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[123,123],[30,30],[97,97],[40,40],[21,21],[73,73],[83,83],[31,31],[29,29],[124,124],[125,125],[42,42],[126,126],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,0,0,0,[[],97],[[],124],[[],125],[[],126],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],0,[-1,[[7,[30]]],92],[-1,[[7,[97]]],92],[-1,[[7,[21]]],92],[-1,[[7,[73]]],92],[-1,[[7,[83]]],92],[-1,[[7,[31]]],92],[-1,[[7,[29]]],92],[-1,[[7,[42]]],92],[-1,[[7,[126]]],92],0,[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],0,[[97,97],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,0,[[123,5],32],[[30,5],32],[[97,5],32],[[40,5],32],[[21,5],32],[[73,5],32],[[83,5],32],[[31,5],32],[[29,5],32],[[127,5],32],[[128,5],32],[[129,5],32],[[130,5],32],[[124,5],32],[[125,5],32],[[42,5],32],[[126,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[21,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[30,-1],7,101],[[97,-1],7,101],[[21,-1],7,101],[[73,-1],7,101],[[83,-1],7,101],[[31,-1],7,101],[[29,-1],7,101],[[42,-1],7,101],[[126,-1],7,101],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,28],[21,28],[31,28],[29,28],[42,28],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[131,[41,41]]],[[7,[97]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[27,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[132,132],[133,133],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],132],[[],133],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],0,[3,4],[3,4],[[132,132],10],[[133,133],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[132,5],32],[[133,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,10,[]],[-1,10,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,44,[]],0,[-1,[[24,[[23,[22]]]]],[]],0,0,0,0,0,0,[[-1,15],[[24,[[23,[22]]]]],[]],[-1,100,[]],[[-1,[74,[112]]],[[26,[[68,[84]]]]],[]],[-1,18,[]],[-1,85,[]],0,[134,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,4],[-1,-1,[]],[-1,-2,[],[]],[[],3],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[19,134],[[134,135,[11,[[68,[3]]]],[74,[108]],[11,[3]]],[[24,[[23,[22]]]]]],0,[134,115],[[134,[74,[108]]],[[136,[[68,[94]]]]]],[134,19],0,[134,137],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[[134,[74,[138]]],4],0,[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,4],[139,4],0,[[139,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[],3],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],0,[[140,3],139],0,[[139,3],4],[[139,3],4],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[139,4],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,141],[[-1,-2],4,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[[141,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[142,15],[[7,[16,17]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,[100,142],[[[24,[143]],144],[[145,[11]]]],[143,100],[[],100],0,0,[38,19],[[38,41,41],18],[[38,41],19],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[-1]],144],[[145,[[11,[7]]]]],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[146,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,[[68,[147]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[[146,3,[118,[148]]],[[149,[16]]]],[[146,5],32],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,[146,[[11,[150]]]],[16,146],[146,[[11,[[74,[151]]]]]],0,[146,152],[[[24,[153]],144],[[145,[11]]]],[146,100],[153,100],0,0,0,[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[-1]],144],[[145,[[11,[7]]]]],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[146,[68,[147]]],[[149,[147]]]],[[146,[68,[151]]],146],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,19],[[154,15],[[7,[16,17]]]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,[30,19],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],19],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],[3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[155,15],[[7,[16,17]]]],[[],3],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[[-1,156,38,41,41,[68,[157]]],19,[[48,[41]]]],[[-1,156,[68,[157]]],19,[[48,[41]]]],[[[24,[158]],144],[[145,[11]]]],0,0,[158,100],0,[[-1,156],19,[[48,[41]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[[24,[-1]],144],[[145,[[11,[7]]]]],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[159,20,21],[[24,[[23,[22]]]]]],[[159,20,21],[[26,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[159,[[24,[[23,[22]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[159,20,30],[[24,[[23,[22]]]]]],[[159,20,30],[[26,[25]]]],[[],159],[3,-1,[]],[3,-1,[]],[3,4],[[159,20,31],[[24,[[23,[22]]]]]],[[159,20,31],[[26,[25]]]],[-1,-1,[]],[-1,-2,[],[]],[[159,20,38],[[26,[[11,[19]]]]]],[[],3],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[159,27],[[],159],[[159,20,40],[[24,[[23,[22]]]]]],[[159,20,38],10],0,[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[[159,20,42],[[24,[[23,[22]]]]]],[[159,20,42],[[26,[25]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,-2,[],[]],[[99,27,27,27,100],81],0,0,[160,44],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[160,161],0,[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,-1,[]],[3,4],[3,4],0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],3],[[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[18,84],162],[[162,161],160],[[160,15],[[24,[[23,[22]]]]]],[160,100],[[160,[74,[112]]],[[26,[[68,[84]]]]]],0,[160,18],0,[160,85],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Compat",2697],[3,"RegionStat",0],[15,"usize"],[15,"tuple"],[3,"Formatter",2698],[3,"Error",2698],[4,"Result",2699],[3,"Request",2700],[3,"Request",2700],[15,"bool"],[4,"Option",2701],[3,"TypeId",2702],[3,"DistTable",43],[3,"DummyDataSource",43],[3,"ScanRequest",2703],[6,"SendableRecordBatchStream",2704],[3,"BoxedError",2705],[6,"TableInfoRef",892],[6,"TableRef",2224],[3,"EngineContext",93],[3,"AlterTableRequest",1580],[8,"Future",2706],[3,"Box",2707],[3,"Pin",2708],[6,"BoxedProcedure",2709],[6,"Result",216],[15,"str"],[3,"TableReference",93],[3,"CloseTableRequest",1580],[3,"CreateTableRequest",1580],[3,"DropTableRequest",1580],[6,"Result",2698],[4,"CloseTableResult",93],[15,"u64"],[8,"Hash",2710],[8,"Sized",2711],[8,"BuildHasher",2710],[6,"TableId",892],[8,"Hasher",2710],[3,"OpenTableRequest",1580],[3,"String",2712],[3,"TruncateTableRequest",1580],[4,"Error",216],[8,"Any",2702],[8,"Error",2713],[3,"Backtrace",2714],[3,"EngineNotFoundSnafu",216],[8,"Into",2715],[3,"EngineExistSnafu",216],[3,"ColumnExistsSnafu",216],[3,"ColumnNotExistsSnafu",216],[3,"DuplicatedExecuteCallSnafu",216],[3,"RemoveColumnInIndexSnafu",216],[3,"RegionSchemaMismatchSnafu",216],[3,"UnsupportedSnafu",216],[3,"ParseTableOptionSnafu",216],[3,"InvalidAlterRequestSnafu",216],[3,"InvalidTableSnafu",216],[3,"MissingTimeIndexColumnSnafu",216],[3,"DatafusionSnafu",216],[3,"SchemaConversionSnafu",216],[8,"Clone",2716],[3,"TableProjectionSnafu",216],[3,"TablesRecordBatchSnafu",216],[3,"SchemaBuildSnafu",216],[3,"BuildColumnDescriptorSnafu",216],[3,"TableOperationSnafu",216],[3,"Vec",2717],[8,"Debug",2698],[8,"StackError",2705],[4,"StatusCode",2718],[3,"TableMeta",892],[3,"AddColumnRequest",1580],[15,"slice"],[3,"TableMetaBuilder",892],[3,"ColumnSchema",2719],[3,"ColumnDescriptor",2720],[4,"ConvertError",892],[4,"TableMetaBuilderError",892],[3,"TableInfoBuilder",892],[3,"TableInfo",892],[4,"TableInfoBuilderError",892],[4,"AlterKind",1580],[4,"FilterPushDownType",892],[4,"TableType",892],[3,"TableIdent",892],[3,"RawTableMeta",892],[3,"RawTableInfo",892],[3,"Utc",2721],[3,"DateTime",2722],[3,"Global",2723],[8,"Deserializer",2724],[8,"Iterator",2725],[4,"TableProviderFilterPushDown",2726],[3,"UninitializedFieldError",2727],[6,"ColumnId",2720],[3,"TableOptions",1580],[3,"RegionId",2720],[15,"u32"],[6,"SchemaRef",2728],[8,"Serializer",2729],[3,"SplitResult",892],[6,"TableVersion",892],[6,"ConvertResult",892],[3,"TimeRangePredicateBuilder",1482],[6,"TimestampRange",2730],[3,"Predicate",1482],[4,"Expr",2731],[4,"Operator",2732],[3,"Timestamp",2733],[4,"TimeUnit",2733],[3,"Expr",2734],[3,"RecordBatch",2735],[3,"RowGroupMetaData",2736],[6,"SchemaRef",2737],[8,"PruningStatistics",2738],[8,"PhysicalExpr",2739],[3,"Arc",2740],[3,"RowGroupPruningStatistics",1549],[4,"DataType",2741],[3,"Column",2742],[6,"ArrayRef",2743],[3,"CreateDatabaseRequest",1580],[3,"FlushTableRequest",1580],[3,"CompactTableRequest",1580],[3,"CopyDatabaseRequest",1580],[3,"InsertRequest",1580],[3,"DeleteRequest",1580],[4,"CopyDirection",1580],[3,"CopyTableRequest",1580],[3,"HashMap",2744],[3,"TableStatistics",2150],[3,"ColumnStatistics",2150],[3,"DfTableProviderAdapter",2245],[3,"SessionState",2745],[6,"Result",2746],[4,"TableType",2726],[3,"OrderOption",2704],[3,"MemoryUsageMetrics",2277],[3,"ExecutionPlanMetricsSet",2747],[3,"NumbersTable",2312],[3,"NumbersDataSource",2312],[3,"NumbersStream",2312],[3,"Context",2748],[4,"Poll",2749],[3,"StreamScanAdapter",2400],[6,"PhysicalPlanRef",2750],[3,"TaskContext",2751],[6,"Result",2752],[3,"MetricsSet",2747],[3,"PhysicalSortExpr",2753],[4,"Partitioning",2754],[3,"StreamWithMetricWrapper",2400],[3,"EmptyDataSource",2474],[3,"MemtableDataSource",2522],[3,"RecordBatch",2755],[6,"RegionNumber",2720],[3,"MemtableStream",2522],[3,"MockTableEngine",2601],[3,"ThinTableAdapter",2640],[6,"DataSourceRef",2756],[3,"ThinTable",2640],[6,"TableEngineRef",93],[6,"TableEngineProcedureRef",93],[8,"TableEngine",93],[8,"TableEngineProcedure",93],[6,"OwnedTableReference",93],[13,"ColumnExists",848],[13,"ColumnNotExists",848],[13,"RemoveColumnInIndex",848],[13,"BuildColumnDescriptor",848],[13,"EngineNotFound",848],[13,"EngineExist",848],[13,"InvalidAlterRequest",848],[13,"Datafusion",848],[13,"TableProjection",848],[13,"ParseTableOption",848],[13,"SchemaConversion",848],[13,"TablesRecordBatch",848],[13,"SchemaBuild",848],[13,"DuplicatedExecuteCall",848],[13,"RegionSchemaMismatch",848],[13,"InvalidTable",848],[13,"MissingTimeIndexColumn",848],[13,"Unsupported",848],[13,"TableOperation",848],[13,"UnsupportedArrowType",1430],[13,"DuplicateColumn",1430],[13,"Serialize",1430],[13,"Deserialize",1430],[13,"ParseSchemaVersion",1430],[13,"CastTimeType",1430],[13,"ArrowCompute",1430],[13,"ProjectArrowSchema",1430],[13,"InvalidPrecisionOrScale",1430],[13,"ValueExceedsPrecision",1430],[13,"UnsupportedDefaultExpr",1430],[13,"Conversion",1430],[13,"BadArrayAccess",1430],[13,"InvalidTimestampIndex",1430],[13,"DuplicateMeta",1430],[13,"UnknownVector",1430],[13,"UnsupportedOperation",1430],[13,"CastType",1430],[13,"NullDefault",1430],[13,"DefaultValueType",1430],[13,"ToScalarValue",1430],[13,"InvalidTimestampPrecision",1430],[13,"TryFromValue",1430],[13,"AddColumns",2147],[13,"DropColumns",2147],[13,"RenameTable",2147],[6,"TableIdProviderRef",2224],[8,"Table",2224],[8,"TableIdProvider",2224],[3,"EmptyTable",2474],[3,"MemTable",2522]],"b":[[151,"impl-Display-for-TableReference%3C\'a%3E"],[152,"impl-Debug-for-TableReference%3C\'a%3E"],[512,"impl-Debug-for-Error"],[513,"impl-Display-for-Error"],[1146,"impl-Display-for-TableType"],[1147,"impl-Debug-for-TableType"],[1149,"impl-Debug-for-TableMetaBuilderError"],[1150,"impl-Display-for-TableMetaBuilderError"],[1152,"impl-Display-for-TableInfoBuilderError"],[1153,"impl-Debug-for-TableInfoBuilderError"],[1157,"impl-Display-for-Error"],[1158,"impl-Debug-for-Error"],[1166,"impl-From%3CString%3E-for-TableMetaBuilderError"],[1168,"impl-From%3CUninitializedFieldError%3E-for-TableMetaBuilderError"],[1172,"impl-From%3CString%3E-for-TableInfoBuilderError"],[1173,"impl-From%3CUninitializedFieldError%3E-for-TableInfoBuilderError"]]},\
"tests_integration":{"doc":"","t":"AAAAAAAAADDMLLLLLLLFLLLMLLLLLLLFMMLLLLLLLLLLMLLLLLLLLLLMMLLMLLLLLMMLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLMLLLLLLLLLLMLLMMLLLLLLLLLLMLLLMLLMLLLLLLLLLLLLLLLLLNNNDNNNNNNNNDEEDLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLFFFFFFFFFFFFMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["cluster","grpc","influxdb","instance","opentsdb","otlp","prom_store","standalone","test_util","GreptimeDbCluster","GreptimeDbClusterBuilder","_dir_guards","and","and","borrow","borrow","borrow_mut","borrow_mut","build","build_datanode_clients","build_datanodes","build_frontend","build_metasrv","cluster_name","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_datanode","create_datanode_client","datanode_instances","datanodes","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","frontend","init","init","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","kv_backend","kv_backend","lift_into","lift_into","meta_srv","new","or","or","sculpt","sculpt","storage_guards","store_config","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","wait_datanodes_alive","with_datanodes","with_store_config","GreptimeDbStandalone","GreptimeDbStandaloneBuilder","and","and","borrow","borrow","borrow_mut","borrow_mut","build","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","datanode_opts","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","guard","init","init","instance","instance_name","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","mix_options","new","or","or","plugin","sculpt","sculpt","store_type","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","with_store_type","Azblob","Azblob","File","FileDirGuard","Gcs","Gcs","None","Oss","Oss","S3","S3","S3WithCache","StorageGuard","StorageType","TempDirGuard","TestGuard","__clone_box","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_output_stream","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_datanode_opts","create_test_table","create_tmp_dir_and_datanode_opts","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_test_store_config","home_guard","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","new","or","or","or","or","or","prepare_another_catalog_and_schema","remove_all","s3_test_config","sculpt","sculpt","sculpt","sculpt","sculpt","setup_grpc_server","setup_grpc_server_with","setup_grpc_server_with_user_provider","setup_mysql_server","setup_mysql_server_with_user_provider","setup_pg_server","setup_pg_server_with_user_provider","setup_standalone_instance","setup_test_http_app","setup_test_http_app_with_frontend","setup_test_http_app_with_frontend_and_user_provider","setup_test_prom_app_with_frontend","storage_guard","subset","subset","subset","subset","subset","temp_dir","test_on","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"tests_integration"],[9,"tests_integration::cluster"],[86,"tests_integration::standalone"],[152,"tests_integration::test_util"],[341,"tower_http::follow_redirect::policy::and"],[342,"tower_http::follow_redirect::policy"],[343,"client::client_manager"],[344,"alloc::sync"],[345,"common_meta"],[346,"datanode::datanode"],[347,"std::collections::hash::map"],[348,"meta_srv::mocks"],[349,"alloc::vec"],[350,"frontend::instance"],[351,"async_compat"],[352,"datanode::config"],[353,"alloc::string"],[354,"client::client"],[355,"tonic::request"],[356,"tonic::request"],[357,"frunk_core::hlist"],[358,"frunk_core::coproduct"],[359,"core::result"],[360,"core::option"],[361,"core::any"],[362,"meta_srv::cluster"],[363,"datanode::config"],[364,"common_query"],[365,"core::fmt"],[366,"core::fmt"],[367,"datanode::config"],[368,"auth"],[369,"servers::grpc"],[370,"alloc::boxed"],[371,"axum::routing"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,4,4,3,4,3,4,3,3,0,3,3,3,3,4,3,4,3,4,3,3,0,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,4,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,3,4,3,4,3,3,3,3,0,0,35,34,35,34,35,34,34,35,34,35,34,35,34,35,35,34,35,34,35,34,35,34,35,34,35,35,34,35,34,35,34,35,35,34,34,35,34,35,34,35,34,35,34,34,35,34,34,35,34,35,34,35,34,35,34,35,35,34,34,35,34,35,34,34,42,36,36,0,42,36,42,42,36,42,36,36,0,0,0,0,36,42,39,15,13,36,42,39,15,13,36,42,39,15,13,36,0,36,36,42,39,15,13,36,42,39,15,13,36,42,39,15,13,36,0,0,0,42,39,15,13,36,42,39,15,13,36,42,39,15,13,36,36,36,36,36,36,36,36,42,39,15,13,36,36,42,39,15,13,36,0,39,42,39,15,13,36,42,39,15,13,36,42,42,39,39,15,15,13,13,36,36,42,39,15,13,36,42,39,15,13,36,15,42,39,15,13,36,0,39,0,42,39,15,13,36,0,0,0,0,0,0,0,0,0,0,0,0,39,42,39,15,13,36,15,36,36,36,42,39,15,13,36,42,39,15,13,36,42,39,15,13,36,42,42,39,39,15,15,13,13,36,36,42,39,15,13,36,42,39,15,13,36],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,4],[[[6,[5]],[9,[7,8]],10],11],[[3,12,10],[[11,[[9,[7,8]],[14,[13]],[14,[15]]]]]],[[3,12,[6,[5]]],[[6,[16]]]],[[3,[6,[5]]],12],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[3,18,12],8],[8,[[11,[19,20]]]],0,0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,11],[21,11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[25,3],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],0,0,[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,32,10],11],[[3,10],3],[[3,33],3],0,0,[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,35],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,11],[21,11],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],21],[[],21],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,34],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],0,[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],0,[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[34,36],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,37],11,[]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[1,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[38,25],11],[36,36],[[-1,-2],11,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[33,19],18],[[16,25],11],[[36,25],[[11,[18,39]]]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,11],[21,11],[21,11],[21,11],[21,11],[[36,36],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[36,40],41],[[36,40],41],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,[[11,[33,42]]]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,15],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[[-1,-4],[[26,[-5,-4]]],[],[],[],[[2,[-2,-3]]],[[2,[-2,-3]]]],[16,11],[39,11],[[],44],[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],[-1,[[11,[27]]],[]],[[36,25],[[11,[19,39,[6,[45]]]]]],[[36,25,[30,[46]],[30,[47]]],[[11,[19,39,[6,[45]]]]]],[[36,25,[30,[46]]],[[11,[19,39,[6,[45]]]]]],[[36,25],[[11,[19,39,[6,[[49,[48]]]]]]]],[[36,25,[30,[46]]],[[11,[19,39,[6,[[49,[48]]]]]]]],[[36,25],[[11,[19,39,[6,[[49,[48]]]]]]]],[[36,25,[30,[46]]],[[11,[19,39,[6,[[49,[48]]]]]]]],[[25,36],35],[[36,25],[[11,[50,39]]]],[[36,25],[[11,[50,39]]]],[[36,25,[30,[46]]],[[11,[50,39]]]],[[36,25],[[11,[50,39]]]],0,[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],[-1,[[29,[28]]],[]],0,[36,24],[-1,-2,[],[]],[-1,19,[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,[[29,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"And",341],[8,"Policy",342],[3,"GreptimeDbClusterBuilder",9],[3,"GreptimeDbCluster",9],[3,"DatanodeClients",343],[3,"Arc",344],[6,"DatanodeId",345],[3,"Datanode",346],[3,"HashMap",347],[15,"u32"],[15,"tuple"],[3,"MockInfo",348],[3,"StorageGuard",152],[3,"Vec",349],[3,"FileDirGuard",152],[3,"Instance",350],[3,"Compat",351],[3,"DatanodeOptions",352],[3,"String",353],[3,"Client",354],[15,"usize"],[3,"Request",355],[3,"Request",355],[15,"bool"],[15,"str"],[3,"Or",356],[3,"HNil",357],[4,"CNil",358],[4,"Result",359],[4,"Option",360],[3,"TypeId",361],[6,"MetaPeerClientRef",362],[4,"ObjectStoreConfig",352],[3,"GreptimeDbStandaloneBuilder",86],[3,"GreptimeDbStandalone",86],[4,"StorageType",152],[3,"Private",363],[4,"Output",364],[3,"TestGuard",152],[3,"Formatter",365],[6,"Result",365],[4,"TempDirGuard",152],[3,"TempDir",366],[3,"S3Config",352],[3,"GrpcServer",367],[6,"UserProviderRef",368],[3,"GrpcServerConfig",367],[8,"Server",369],[3,"Box",370],[3,"Router",371]],"b":[[225,"impl-Display-for-StorageType"],[226,"impl-Debug-for-StorageType"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
